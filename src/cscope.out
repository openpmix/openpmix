cscope 15 $HOME/WORKSPACE/pmix/master/src               0001643630
	@buffer_ops/buffer_ops.h

31 #i‚de‡
PMIX_BFROP_H_


32 
	#PMIX_BFROP_H_


	)

34 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

36 
	~<§c/ö˛ude/ty≥s.h
>

38 
	~"§c/ö˛ude/pmix_globÆs.h
"

39 
	~"§c/buf„r_›s/ty≥s.h
"

41 
BEGIN_C_DECLS


47 
pmix_°©us_t
 
pmix_vÆue_x„r
(
pmix_vÆue_t
 *
kv
,Ömix_vÆue_à*
§c
);

48 
pmix_vÆue_lﬂd
(
pmix_vÆue_t
 *
v
, *
d©a
,

49 
pmix_d©a_ty≥_t
 
ty≥
);

50 
pmix_°©us_t
 
pmix_vÆue_u∆ﬂd
(
pmix_vÆue_t
 *
kv
, **
d©a
,

51 
size_t
 *
sz
, 
pmix_d©a_ty≥_t
 
ty≥
);

52 
boﬁ
 
pmix_vÆue_cmp
(
pmix_vÆue_t
 *
p
,Ömix_vÆue_à*
p1
);

55 
	#PMIX_LOAD_BUFFER
(
b
, 
d
, 
s
) \

57 (
b
)->
ba£_±r
 = (*)(
d
); \

58 (
b
)->
byãs_u£d
 = (
s
); \

59 (
b
)->
byãs_Æloˇãd
 = (
s
); \

60 (
b
)->
∑ck_±r
 = ((*)(b)->
ba£_±r
Ë+ (
s
); \

61 (
b
)->
u≈ack_±r
 = (b)->
ba£_±r
; \

62 (
d
Ë
NULL
; \

63 (
s
) = 0; \

64 } 0)

	)

66 
	#PMIX_UNLOAD_BUFFER
(
b
, 
d
, 
s
) \

68 (
d
Ë(*)(
b
)->
u≈ack_±r
; \

69 (
s
Ë(
b
)->
byãs_u£d
; \

70 (
b
)->
ba£_±r
 = 
NULL
; \

71 (
b
)->
byãs_u£d
 = 0; \

72 (
b
)->
byãs_Æloˇãd
 = 0; \

73 (
b
)->
∑ck_±r
 = 
NULL
; \

74 (
b
)->
u≈ack_±r
 = 
NULL
; \

75 } 0)

	)

128 
	$pmix_°©us_t
 (*
	tpmix_b‰›_∑ck_‚_t
)(
	tpmix_buf„r_t
 *
	tbuf„r
, c⁄° *
	t§c
,

129 
	töt32_t
 
	tnum_vÆues
,

130 
	tpmix_d©a_ty≥_t
 
	tty≥
);

225 
	$pmix_°©us_t
 (*
	tpmix_b‰›_u≈ack_‚_t
)(
	tpmix_buf„r_t
 *
	tbuf„r
, *
	tde°
,

226 
	töt32_t
 *
	tmax_num_vÆues
,

227 
	tpmix_d©a_ty≥_t
 
	tty≥
);

239 
	$pmix_°©us_t
 (*
	tpmix_b‰›_c›y_∑ylﬂd_‚_t
)(
	tpmix_buf„r_t
 *
	tde°
,

240 
	tpmix_buf„r_t
 *
	t§c
);

250 
pmix_°©us_t
 
	`pmix_b‰›_›í
();

255 
pmix_°©us_t
 
	`pmix_b‰›_˛o£
();

281 
	$pmix_°©us_t
 (*
	tpmix_b‰›_c›y_‚_t
)(**
	tde°
, *
	t§c
, 
	tpmix_d©a_ty≥_t
 
	tty≥
);

294 
	$pmix_°©us_t
 (*
	tpmix_b‰›_¥öt_‚_t
)(**
	touçut
, *
	t¥efix
, *
	t§c
, 
	tpmix_d©a_ty≥_t
 
	tty≥
);

302 
	spmix_b‰›_t
 {

303 
pmix_b‰›_∑ck_‚_t
 
∑ck
;

304 
pmix_b‰›_u≈ack_‚_t
 
u≈ack
;

305 
pmix_b‰›_c›y_‚_t
 
c›y
;

306 
pmix_b‰›_¥öt_‚_t
 
¥öt
;

307 
pmix_b‰›_c›y_∑ylﬂd_‚_t
 
c›y_∑ylﬂd
;

309 
pmix_b‰›_t
 
	tpmix_b‰›_t
;

311 
pmix_b‰›_t
 
pmix_b‰›
;

313 
END_C_DECLS


	@buffer_ops/copy.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~"§c/utû/¨gv.h
"

27 
	~"§c/utû/îr‹.h
"

28 
	~"§c/utû/ouçut.h
"

29 
	~"§c/buf„r_›s/buf„r_›s.h
"

30 
	~"§c/buf„r_›s/öã∫Æ.h
"

32 
pmix_°©us_t
 
	$pmix_b‰›_c›y
(**
de°
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

34 
pmix_b‰›_ty≥_öfo_t
 *
öfo
;

37 i‡(
NULL
 =
de°
) {

38 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

39  
PMIX_ERR_BAD_PARAM
;

41 i‡(
NULL
 =
§c
) {

42 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

43  
PMIX_ERR_BAD_PARAM
;

48 i‡(
NULL
 =(
öfo
 = (
pmix_b‰›_ty≥_öfo_t
*)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_b‰›_ty≥s
, 
ty≥
))) {

49 
	`PMIX_ERROR_LOG
(
PMIX_ERR_UNKNOWN_DATA_TYPE
);

50  
PMIX_ERR_UNKNOWN_DATA_TYPE
;

53  
öfo
->
	`odti_c›y_‚
(
de°
, 
§c
, 
ty≥
);

54 
	}
}

56 
pmix_°©us_t
 
	$pmix_b‰›_c›y_∑ylﬂd
(
pmix_buf„r_t
 *
de°
,Ömix_buf„r_à*
§c
)

58 
size_t
 
to_c›y
 = 0;

59 *
±r
;

61 if–
NULL
 =
de°
->
ba£_±r
 ){

63 
de°
->
ty≥
 = 
§c
->type;

64 } if–
de°
->
ty≥
 !
§c
->type ){

66 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

67  
PMIX_ERR_BAD_PARAM
;

70 
to_c›y
 = 
§c
->
∑ck_±r
 - src->
u≈ack_±r
;

71 if–
NULL
 =(
±r
 = 
	`pmix_b‰›_buf„r_exãnd
(
de°
, 
to_c›y
)) ){

72 
	`PMIX_ERROR_LOG
(
PMIX_ERR_OUT_OF_RESOURCE
);

73  
PMIX_ERR_OUT_OF_RESOURCE
;

75 
	`mem˝y
(
±r
,
§c
->
u≈ack_±r
, 
to_c›y
);

76 
de°
->
byãs_u£d
 +
to_c›y
;

77 
de°
->
∑ck_±r
 +
to_c›y
;

78  
PMIX_SUCCESS
;

79 
	}
}

85 
pmix_°©us_t
 
	$pmix_b‰›_°d_c›y
(**
de°
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

87 
size_t
 
d©asize
;

88 
uöt8_t
 *
vÆ
 = 
NULL
;

90 
ty≥
) {

91 
PMIX_BOOL
:

92 
d©asize
 = (
boﬁ
);

95 
PMIX_INT
:

96 
PMIX_UINT
:

97 
d©asize
 = ();

100 
PMIX_SIZE
:

101 
d©asize
 = (
size_t
);

104 
PMIX_PID
:

105 
d©asize
 = (
pid_t
);

108 
PMIX_BYTE
:

109 
PMIX_INT8
:

110 
PMIX_UINT8
:

111 
d©asize
 = 1;

114 
PMIX_INT16
:

115 
PMIX_UINT16
:

116 
d©asize
 = 2;

119 
PMIX_INT32
:

120 
PMIX_UINT32
:

121 
d©asize
 = 4;

124 
PMIX_INT64
:

125 
PMIX_UINT64
:

126 
d©asize
 = 8;

129 
PMIX_FLOAT
:

130 
d©asize
 = ();

133 
PMIX_TIMEVAL
:

134 
d©asize
 = (
timevÆ
);

137 
PMIX_TIME
:

138 
d©asize
 = (
time_t
);

141 
PMIX_STATUS
:

142 
d©asize
 = (
pmix_°©us_t
);

145 
PMIX_PROC_RANK
:

146 
d©asize
 = (
pmix_ønk_t
);

149 
PMIX_PERSIST
:

150 
d©asize
 = (
pmix_≥rsi°í˚_t
);

153 
PMIX_POINTER
:

154 
d©asize
 = (*);

157 
PMIX_SCOPE
:

158 
d©asize
 = (
pmix_sc›e_t
);

161 
PMIX_DATA_RANGE
:

162 
d©asize
 = (
pmix_d©a_ønge_t
);

165 
PMIX_COMMAND
:

166 
d©asize
 = (
pmix_cmd_t
);

169 
PMIX_INFO_DIRECTIVES
:

170 
d©asize
 = (
pmix_öfo_dúe˘ives_t
);

173 
PMIX_PROC_STATE
:

174 
d©asize
 = (
pmix_¥oc_°©e_t
);

178  
PMIX_ERR_UNKNOWN_DATA_TYPE
;

181 
vÆ
 = (
uöt8_t
*)
	`mÆloc
(
d©asize
);

182 i‡(
NULL
 =
vÆ
) {

183  
PMIX_ERR_OUT_OF_RESOURCE
;

186 
	`mem˝y
(
vÆ
, 
§c
, 
d©asize
);

187 *
de°
 = 
vÆ
;

189  
PMIX_SUCCESS
;

190 
	}
}

197 
pmix_°©us_t
 
	$pmix_b‰›_c›y_°rög
(**
de°
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

199 i‡(
NULL
 =
§c
) {

200 *
de°
 = 
NULL
;

202 *
de°
 = 
	`°rdup
(
§c
);

205  
PMIX_SUCCESS
;

206 
	}
}

208 
boﬁ
 
	$pmix_vÆue_cmp
(
pmix_vÆue_t
 *
p
,Ömix_vÆue_à*
p1
)

210 
boﬁ
 
rc
 = 
Ál£
;

212 i‡(
p
->
ty≥
 !
p1
->type) {

213  
rc
;

216 
p
->
ty≥
) {

217 
PMIX_UNDEF
:

218 
rc
 = 
åue
;

220 
PMIX_BOOL
:

221 
rc
 = (
p
->
d©a
.
Êag
 =
p1
->data.flag);

223 
PMIX_BYTE
:

224 
rc
 = (
p
->
d©a
.
byã
 =
p1
->data.byte);

226 
PMIX_SIZE
:

227 
rc
 = (
p
->
d©a
.
size
 =
p1
->data.size);

229 
PMIX_INT
:

230 
rc
 = (
p
->
d©a
.
öãgî
 =
p1
->data.integer);

232 
PMIX_INT8
:

233 
rc
 = (
p
->
d©a
.
öt8
 =
p1
->data.int8);

235 
PMIX_INT16
:

236 
rc
 = (
p
->
d©a
.
öt16
 =
p1
->data.int16);

238 
PMIX_INT32
:

239 
rc
 = (
p
->
d©a
.
öt32
 =
p1
->data.int32);

241 
PMIX_INT64
:

242 
rc
 = (
p
->
d©a
.
öt64
 =
p1
->data.int64);

244 
PMIX_UINT
:

245 
rc
 = (
p
->
d©a
.
uöt
 =
p1
->data.uint);

247 
PMIX_UINT8
:

248 
rc
 = (
p
->
d©a
.
uöt8
 =
p1
->d©a.
öt8
);

250 
PMIX_UINT16
:

251 
rc
 = (
p
->
d©a
.
uöt16
 =
p1
->data.uint16);

253 
PMIX_UINT32
:

254 
rc
 = (
p
->
d©a
.
uöt32
 =
p1
->data.uint32);

256 
PMIX_UINT64
:

257 
rc
 = (
p
->
d©a
.
uöt64
 =
p1
->data.uint64);

259 
PMIX_STRING
:

260 
rc
 = 
	`°rcmp
(
p
->
d©a
.
°rög
, 
p1
->data.string);

262 
PMIX_STATUS
:

263 
rc
 = (
p
->
d©a
.
°©us
 =
p1
->data.status);

266 
	`pmix_ouçut
(0, "COMPARE-PMIX-VALUE: UNSUPPORTED TYPE %d", ()
p
->
ty≥
);

268  
rc
;

269 
	}
}

273 
pmix_°©us_t
 
	$pmix_vÆue_x„r
(
pmix_vÆue_t
 *
p
,Ömix_vÆue_à*
§c
)

275 
size_t
 
n
, 
m
;

276 
pmix_°©us_t
 
rc
;

277 **
¥¨øy
, **
°øºay
;

278 
pmix_vÆue_t
 *
pv
, *
sv
;

279 
pmix_öfo_t
 *
p1
, *
s1
;

280 
pmix_≠p_t
 *
∑
, *
ß
;

281 
pmix_pd©a_t
 *
pd
, *
sd
;

282 
pmix_buf„r_t
 *
pb
, *
sb
;

283 
pmix_byã_obje˘_t
 *
pbo
, *
sbo
;

284 
pmix_kvÆ_t
 *
pk
, *
sk
;

285 
pmix_modex_d©a_t
 *
pm
, *
sm
;

286 
pmix_¥oc_öfo_t
 *
pi
, *
si
;

287 
pmix_quîy_t
 *
pq
, *
sq
;

290 
p
->
ty≥
 = 
§c
->type;

291 
§c
->
ty≥
) {

292 
PMIX_UNDEF
:

294 
PMIX_BOOL
:

295 
p
->
d©a
.
Êag
 = 
§c
->data.flag;

297 
PMIX_BYTE
:

298 
p
->
d©a
.
byã
 = 
§c
->data.byte;

300 
PMIX_STRING
:

301 i‡(
NULL
 !
§c
->
d©a
.
°rög
) {

302 
p
->
d©a
.
°rög
 = 
	`°rdup
(
§c
->data.string);

304 
p
->
d©a
.
°rög
 = 
NULL
;

307 
PMIX_SIZE
:

308 
p
->
d©a
.
size
 = 
§c
->data.size;

310 
PMIX_PID
:

311 
p
->
d©a
.
pid
 = 
§c
->data.pid;

313 
PMIX_INT
:

315 
	`mem˝y
(&
p
->
d©a
.
öãgî
, &
§c
->data.integer, ());

317 
PMIX_INT8
:

318 
p
->
d©a
.
öt8
 = 
§c
->data.int8;

320 
PMIX_INT16
:

322 
	`mem˝y
(&
p
->
d©a
.
öt16
, &
§c
->data.int16, 2);

324 
PMIX_INT32
:

326 
	`mem˝y
(&
p
->
d©a
.
öt32
, &
§c
->data.int32, 4);

328 
PMIX_INT64
:

330 
	`mem˝y
(&
p
->
d©a
.
öt64
, &
§c
->data.int64, 8);

332 
PMIX_UINT
:

334 
	`mem˝y
(&
p
->
d©a
.
uöt
, &
§c
->data.uint, ());

336 
PMIX_UINT8
:

337 
p
->
d©a
.
uöt8
 = 
§c
->data.uint8;

339 
PMIX_UINT16
:

341 
	`mem˝y
(&
p
->
d©a
.
uöt16
, &
§c
->data.uint16, 2);

343 
PMIX_UINT32
:

345 
	`mem˝y
(&
p
->
d©a
.
uöt32
, &
§c
->data.uint32, 4);

347 
PMIX_UINT64
:

349 
	`mem˝y
(&
p
->
d©a
.
uöt64
, &
§c
->data.uint64, 8);

351 
PMIX_FLOAT
:

352 
p
->
d©a
.
fvÆ
 = 
§c
->data.fval;

354 
PMIX_DOUBLE
:

355 
p
->
d©a
.
dvÆ
 = 
§c
->data.dval;

357 
PMIX_TIMEVAL
:

358 
	`mem˝y
(&
p
->
d©a
.
tv
, &
§c
->d©a.tv, (
timevÆ
));

360 
PMIX_TIME
:

361 
	`mem˝y
(&
p
->
d©a
.
time
, &
§c
->d©a.time, (
time_t
));

363 
PMIX_STATUS
:

364 
	`mem˝y
(&
p
->
d©a
.
°©us
, &
§c
->d©a.°©us, (
pmix_°©us_t
));

366 
PMIX_PROC
:

367 
	`mem˝y
(&
p
->
d©a
.
¥oc
, &
§c
->d©a.¥oc, (
pmix_¥oc_t
));

369 
PMIX_PROC_RANK
:

370 
	`mem˝y
(&
p
->
d©a
.
¥oc
, &
§c
->d©a.
ønk
, (
pmix_ønk_t
));

372 
PMIX_BYTE_OBJECT
:

373 
	`mem£t
(&
p
->
d©a
.
bo
, 0, (
pmix_byã_obje˘_t
));

374 i‡(
NULL
 !
§c
->
d©a
.
bo
.
byãs
 && 0 < src->d©a.bo.
size
) {

375 
p
->
d©a
.
bo
.
byãs
 = 
	`mÆloc
(
§c
->d©a.bo.
size
);

376 
	`mem˝y
(
p
->
d©a
.
bo
.
byãs
, 
§c
->d©a.bo.byãs, src->d©a.bo.
size
);

377 
p
->
d©a
.
bo
.
size
 = 
§c
->data.bo.size;

379 
p
->
d©a
.
bo
.
byãs
 = 
NULL
;

380 
p
->
d©a
.
bo
.
size
 = 0;

383 
PMIX_PERSIST
:

384 
	`mem˝y
(&
p
->
d©a
.
≥rsi°
, &
§c
->d©a.≥rsi°, (
pmix_≥rsi°í˚_t
));

386 
PMIX_SCOPE
:

387 
	`mem˝y
(&
p
->
d©a
.
sc›e
, &
§c
->d©a.sc›e, (
pmix_sc›e_t
));

389 
PMIX_DATA_RANGE
:

390 
	`mem˝y
(&
p
->
d©a
.
ønge
, &
§c
->d©a.ønge, (
pmix_d©a_ønge_t
));

392 
PMIX_PROC_STATE
:

393 
	`mem˝y
(&
p
->
d©a
.
°©e
, &
§c
->d©a.°©e, (
pmix_¥oc_°©e_t
));

395 
PMIX_PROC_INFO
:

396 
	`PMIX_PROC_INFO_CREATE
(
p
->
d©a
.
pöfo
, 1);

397 i‡(
NULL
 !
§c
->
d©a
.
pöfo
->
ho°«me
) {

398 
p
->
d©a
.
pöfo
->
ho°«me
 = 
	`°rdup
(
§c
->data.pinfo->hostname);

400 i‡(
NULL
 !
§c
->
d©a
.
pöfo
->
execuèbÀ_«me
) {

401 
p
->
d©a
.
pöfo
->
execuèbÀ_«me
 = 
	`°rdup
(
§c
->data.pinfo->executable_name);

403 
	`mem˝y
(&
p
->
d©a
.
pöfo
->
pid
, &
§c
->d©a.pöfo->pid, (
pid_t
));

404 
	`mem˝y
(&
p
->
d©a
.
pöfo
->
exô_code
, &
§c
->data.pinfo->exit_code, ());

405 
	`mem˝y
(&
p
->
d©a
.
pöfo
->
°©e
, &
§c
->d©a.pöfo->°©e, (
pmix_¥oc_°©e_t
));

407 
PMIX_DATA_ARRAY
:

408 
p
->
d©a
.
d¨øy
 = (
pmix_d©a_¨øy_t
*)
	`ˇŒoc
(1, (pmix_data_array_t));

409 
p
->
d©a
.
d¨øy
->
ty≥
 = 
§c
->data.darray->type;

410 
p
->
d©a
.
d¨øy
->
size
 = 
§c
->data.darray->size;

411 i‡(0 =
p
->
d©a
.
d¨øy
->
size
 || 
NULL
 =
§c
->d©a.d¨øy->
¨øy
) {

412 
p
->
d©a
.
d¨øy
->
¨øy
 = 
NULL
;

413 
p
->
d©a
.
d¨øy
->
size
 = 0;

417 
§c
->
ty≥
) {

418 
PMIX_UINT8
:

419 
PMIX_INT8
:

420 
PMIX_BYTE
:

421 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
);

422 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

423  
PMIX_ERR_NOMEM
;

425 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
);

427 
PMIX_UINT16
:

428 
PMIX_INT16
:

429 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (
uöt16_t
));

430 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

431  
PMIX_ERR_NOMEM
;

433 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
uöt16_t
));

435 
PMIX_UINT32
:

436 
PMIX_INT32
:

437 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (
uöt32_t
));

438 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

439  
PMIX_ERR_NOMEM
;

441 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
uöt32_t
));

443 
PMIX_UINT64
:

444 
PMIX_INT64
:

445 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (
uöt64_t
));

446 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

447  
PMIX_ERR_NOMEM
;

449 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
uöt64_t
));

451 
PMIX_BOOL
:

452 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (
boﬁ
));

453 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

454  
PMIX_ERR_NOMEM
;

456 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
boﬁ
));

458 
PMIX_SIZE
:

459 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (
size_t
));

460 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

461  
PMIX_ERR_NOMEM
;

463 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
size_t
));

465 
PMIX_PID
:

466 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (
pid_t
));

467 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

468  
PMIX_ERR_NOMEM
;

470 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pid_t
));

472 
PMIX_STRING
:

473 
p
->
d©a
.
d¨øy
->
¨øy
 = (**)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (*));

474 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

475  
PMIX_ERR_NOMEM
;

477 
¥¨øy
 = (**)
p
->
d©a
.
d¨øy
->
¨øy
;

478 
°øºay
 = (**)
§c
->
d©a
.
d¨øy
->
¨øy
;

479 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

480 i‡(
NULL
 !
°øºay
[
n
]) {

481 
¥¨øy
[
n
] = 
	`°rdup
(
°øºay
[n]);

485 
PMIX_INT
:

486 
PMIX_UINT
:

487 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * ());

488 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

489  
PMIX_ERR_NOMEM
;

491 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * ());

493 
PMIX_FLOAT
:

494 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * ());

495 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

496  
PMIX_ERR_NOMEM
;

498 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * ());

500 
PMIX_DOUBLE
:

501 
p
->
d©a
.
d¨øy
->
¨øy
 = (*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * ());

502 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

503  
PMIX_ERR_NOMEM
;

505 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * ());

507 
PMIX_TIMEVAL
:

508 
p
->
d©a
.
d¨øy
->
¨øy
 = (
timevÆ
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (timeval));

509 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

510  
PMIX_ERR_NOMEM
;

512 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
timevÆ
));

514 
PMIX_TIME
:

515 
p
->
d©a
.
d¨øy
->
¨øy
 = (
time_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (time_t));

516 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

517  
PMIX_ERR_NOMEM
;

519 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
time_t
));

521 
PMIX_STATUS
:

522 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_°©us_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_status_t));

523 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

524  
PMIX_ERR_NOMEM
;

526 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pmix_°©us_t
));

528 
PMIX_VALUE
:

529 
	`PMIX_VALUE_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

530 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

531  
PMIX_ERR_NOMEM
;

533 
pv
 = (
pmix_vÆue_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

534 
sv
 = (
pmix_vÆue_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

535 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

536 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_vÆue_x„r
(&
pv
[
n
], &
sv
[n]))) {

537 
	`PMIX_VALUE_FREE
(
pv
, 
§c
->
d©a
.
d¨øy
->
size
);

538  
rc
;

542 
PMIX_PROC
:

543 
	`PMIX_PROC_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

544 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

545  
PMIX_ERR_NOMEM
;

547 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pmix_¥oc_t
));

549 
PMIX_APP
:

550 
	`PMIX_APP_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

551 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

552  
PMIX_ERR_NOMEM
;

554 
∑
 = (
pmix_≠p_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

555 
ß
 = (
pmix_≠p_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

556 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

557 i‡(
NULL
 !
ß
[
n
].
cmd
) {

558 
∑
[
n
].
cmd
 = 
	`°rdup
(
ß
[n].cmd);

560 
∑
[
n
].
¨gc
 = 
ß
[n].argc;

561 i‡(
NULL
 !
ß
[
n
].
¨gv
) {

562 
∑
[
n
].
¨gv
 = 
	`pmix_¨gv_c›y
(
ß
[n].argv);

564 i‡(
NULL
 !
ß
[
n
].
ív
) {

565 
∑
[
n
].
ív
 = 
	`pmix_¨gv_c›y
(
ß
[n].env);

567 
∑
[
n
].
max¥ocs
 = 
ß
[n].maxprocs;

568 i‡(0 < 
ß
[
n
].
nöfo
 && 
NULL
 !ß[n].
öfo
) {

569 
	`PMIX_INFO_CREATE
(
∑
[
n
].
öfo
, 
ß
[n].
nöfo
);

570 i‡(
NULL
 =
∑
[
n
].
öfo
) {

571 
	`PMIX_APP_FREE
(
∑
, 
§c
->
d©a
.
d¨øy
->
size
);

572  
PMIX_ERR_NOMEM
;

574 
∑
[
n
].
nöfo
 = 
ß
[n].ninfo;

575 
m
=0; m < 
∑
[
n
].
nöfo
; m++) {

576 
	`PMIX_INFO_XFER
(&
∑
[
n
].
öfo
[
m
], &
ß
[n].info[m]);

581 
PMIX_INFO
:

582 
	`PMIX_INFO_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

583 
p1
 = (
pmix_öfo_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

584 
s1
 = (
pmix_öfo_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

585 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

586 
	`PMIX_INFO_LOAD
(&
p1
[
n
], 
s1
[n].
key
, &s1[n].
vÆue
.
d©a
.
Êag
, s1[n].vÆue.
ty≥
);

589 
PMIX_PDATA
:

590 
	`PMIX_PDATA_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

591 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

592  
PMIX_ERR_NOMEM
;

594 
pd
 = (
pmix_pd©a_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

595 
sd
 = (
pmix_pd©a_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

596 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

597 
	`PMIX_PDATA_LOAD
(&
pd
[
n
], &
sd
[n].
¥oc
, sd[n].
key
, &sd[n].
vÆue
.
d©a
.
Êag
, sd[n].vÆue.
ty≥
);

600 
PMIX_BUFFER
:

601 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_buf„r_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_buffer_t));

602 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

603  
PMIX_ERR_NOMEM
;

605 
pb
 = (
pmix_buf„r_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

606 
sb
 = (
pmix_buf„r_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

607 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

608 
	`PMIX_CONSTRUCT
(&
pb
[
n
], 
pmix_buf„r_t
);

609 
pmix_b‰›
.
	`c›y_∑ylﬂd
(&
pb
[
n
], &
sb
[n]);

612 
PMIX_BYTE_OBJECT
:

613 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_byã_obje˘_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_byte_object_t));

614 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

615  
PMIX_ERR_NOMEM
;

617 
pbo
 = (
pmix_byã_obje˘_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

618 
sbo
 = (
pmix_byã_obje˘_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

619 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

620 i‡(
NULL
 !
sbo
[
n
].
byãs
 && 0 < sbo[n].
size
) {

621 
pbo
[
n
].
size
 = 
sbo
[n].size;

622 
pbo
[
n
].
byãs
 = (*)
	`mÆloc
’bo[n].
size
);

623 
	`mem˝y
(
pbo
[
n
].
byãs
, 
sbo
[n].byãs,Öbo[n].
size
);

625 
pbo
[
n
].
byãs
 = 
NULL
;

626 
pbo
[
n
].
size
 = 0;

630 
PMIX_KVAL
:

631 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_kvÆ_t
*)
	`ˇŒoc
(
§c
->d©a.d¨øy->
size
 , (pmix_kval_t));

632 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

633  
PMIX_ERR_NOMEM
;

635 
pk
 = (
pmix_kvÆ_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

636 
sk
 = (
pmix_kvÆ_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

637 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

638 i‡(
NULL
 !
sk
[
n
].
key
) {

639 
pk
[
n
].
key
 = 
	`°rdup
(
sk
[n].key);

641 i‡(
NULL
 !
sk
[
n
].
vÆue
) {

642 
	`PMIX_VALUE_CREATE
(
pk
[
n
].
vÆue
, 1);

643 i‡(
NULL
 =
pk
[
n
].
vÆue
) {

644 
	`‰ì
(
p
->
d©a
.
d¨øy
->
¨øy
);

645  
PMIX_ERR_NOMEM
;

647 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_vÆue_x„r
(
pk
[
n
].
vÆue
, 
sk
[n].value))) {

648  
rc
;

653 
PMIX_MODEX
:

654 
	`PMIX_MODEX_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

655 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

656  
PMIX_ERR_NOMEM
;

658 
pm
 = (
pmix_modex_d©a_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

659 
sm
 = (
pmix_modex_d©a_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

660 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

661 
	`mem˝y
(&
pm
[
n
], &
sm
[n], (
pmix_modex_d©a_t
));

662 i‡(
NULL
 !
sm
[
n
].
blob
 && 0 < sm[n].
size
) {

663 
pm
[
n
].
blob
 = (
uöt8_t
*)
	`mÆloc
(
sm
[n].
size
);

664 i‡(
NULL
 =
pm
[
n
].
blob
) {

665  
PMIX_ERR_NOMEM
;

667 
	`mem˝y
(
pm
[
n
].
blob
, 
sm
[n].blob, sm[n].
size
);

668 
pm
[
n
].
size
 = 
sm
[n].size;

670 
pm
[
n
].
blob
 = 
NULL
;

671 
pm
[
n
].
size
 = 0;

675 
PMIX_PERSIST
:

676 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_≥rsi°í˚_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_persistence_t));

677 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

678  
PMIX_ERR_NOMEM
;

680 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pmix_≥rsi°í˚_t
));

682 
PMIX_POINTER
:

683 
p
->
d©a
.
d¨øy
->
¨øy
 = (**)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (*));

684 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

685  
PMIX_ERR_NOMEM
;

687 
¥¨øy
 = (**)
p
->
d©a
.
d¨øy
->
¨øy
;

688 
°øºay
 = (**)
§c
->
d©a
.
d¨øy
->
¨øy
;

689 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

690 
¥¨øy
[
n
] = 
°øºay
[n];

693 
PMIX_SCOPE
:

694 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_sc›e_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_scope_t));

695 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

696  
PMIX_ERR_NOMEM
;

698 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pmix_sc›e_t
));

700 
PMIX_DATA_RANGE
:

701 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_d©a_ønge_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_data_range_t));

702 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

703  
PMIX_ERR_NOMEM
;

705 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pmix_d©a_ønge_t
));

707 
PMIX_COMMAND
:

708 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_cmd_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_cmd_t));

709 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

710  
PMIX_ERR_NOMEM
;

712 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pmix_cmd_t
));

714 
PMIX_INFO_DIRECTIVES
:

715 
p
->
d©a
.
d¨øy
->
¨øy
 = (
pmix_öfo_dúe˘ives_t
*)
	`mÆloc
(
§c
->d©a.d¨øy->
size
 * (pmix_info_directives_t));

716 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

717  
PMIX_ERR_NOMEM
;

719 
	`mem˝y
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->¨øy, src->d©a.d¨øy->
size
 * (
pmix_öfo_dúe˘ives_t
));

721 
PMIX_PROC_INFO
:

722 
	`PMIX_PROC_INFO_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

723 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

724  
PMIX_ERR_NOMEM
;

726 
pi
 = (
pmix_¥oc_öfo_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

727 
si
 = (
pmix_¥oc_öfo_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

728 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

729 
	`mem˝y
(&
pi
[
n
].
¥oc
, &
si
[n].¥oc, (
pmix_¥oc_t
));

730 i‡(
NULL
 !
si
[
n
].
ho°«me
) {

731 
pi
[
n
].
ho°«me
 = 
	`°rdup
(
si
[n].hostname);

733 
pi
[
n
].
ho°«me
 = 
NULL
;

735 i‡(
NULL
 !
si
[
n
].
execuèbÀ_«me
) {

736 
pi
[
n
].
execuèbÀ_«me
 = 
	`°rdup
(
si
[n].executable_name);

738 
pi
[
n
].
execuèbÀ_«me
 = 
NULL
;

740 
pi
[
n
].
pid
 = 
si
[n].pid;

741 
pi
[
n
].
exô_code
 = 
si
[n].exit_code;

742 
pi
[
n
].
°©e
 = 
si
[n].state;

745 
PMIX_DATA_ARRAY
:

746  
PMIX_ERR_NOT_SUPPORTED
;

747 
PMIX_QUERY
:

748 
	`PMIX_QUERY_CREATE
(
p
->
d©a
.
d¨øy
->
¨øy
, 
§c
->d©a.d¨øy->
size
);

749 i‡(
NULL
 =
p
->
d©a
.
d¨øy
->
¨øy
) {

750  
PMIX_ERR_NOMEM
;

752 
pq
 = (
pmix_quîy_t
*)
p
->
d©a
.
d¨øy
->
¨øy
;

753 
sq
 = (
pmix_quîy_t
*)
§c
->
d©a
.
d¨øy
->
¨øy
;

754 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

755 i‡(
NULL
 !
sq
[
n
].
keys
) {

756 
pq
[
n
].
keys
 = 
	`pmix_¨gv_c›y
(
sq
[n].keys);

758 i‡(
NULL
 !
sq
[
n
].
quÆifõrs
 && 0 < sq[n].
nquÆ
) {

759 
	`PMIX_INFO_CREATE
(
pq
[
n
].
quÆifõrs
, 
sq
[n].
nquÆ
);

760 i‡(
NULL
 =
pq
[
n
].
quÆifõrs
) {

761 
	`PMIX_QUERY_FREE
(
pq
, 
§c
->
d©a
.
d¨øy
->
size
);

762  
PMIX_ERR_NOMEM
;

764 
m
=0; m < 
sq
[
n
].
nquÆ
; m++) {

765 
	`PMIX_INFO_XFER
(&
pq
[
n
].
quÆifõrs
[
m
], &
sq
[n].qualifiers[m]);

767 
pq
[
n
].
nquÆ
 = 
sq
[n].nqual;

769 
pq
[
n
].
quÆifõrs
 = 
NULL
;

770 
pq
[
n
].
nquÆ
 = 0;

775  
PMIX_ERR_UNKNOWN_DATA_TYPE
;

778 
PMIX_POINTER
:

779 
	`mem˝y
(&
p
->
d©a
.
±r
, &
§c
->data.ptr, (*));

782 
PMIX_INFO_ARRAY
:

783 
p
->
d©a
.
¨øy
->
size
 = 
§c
->data.array->size;

784 i‡(0 < 
§c
->
d©a
.
¨øy
->
size
) {

785 
p
->
d©a
.
¨øy
->¨øy = (
pmix_öfo_t
*)
	`mÆloc
(
§c
->d©a.¨øy->
size
 * (pmix_info_t));

786 i‡(
NULL
 =
p
->
d©a
.
¨øy
->array) {

787  
PMIX_ERR_NOMEM
;

789 
p1
 = (
pmix_öfo_t
*)
p
->
d©a
.
¨øy
->array;

790 
s1
 = (
pmix_öfo_t
*)
§c
->
d©a
.
¨øy
->array;

791 
n
=0;Ç < 
§c
->
d©a
.
d¨øy
->
size
;Ç++) {

792 
	`PMIX_INFO_LOAD
(&
p1
[
n
], 
s1
[n].
key
, &s1[n].
vÆue
.
d©a
.
Êag
, s1[n].vÆue.
ty≥
);

798 
	`pmix_ouçut
(0, "COPY-PMIX-VALUE: UNSUPPORTED TYPE %d", ()
§c
->
ty≥
);

799  
PMIX_ERROR
;

801  
PMIX_SUCCESS
;

802 
	}
}

805 
pmix_°©us_t
 
	$pmix_b‰›_c›y_vÆue
(
pmix_vÆue_t
 **
de°
,Ömix_vÆue_à*
§c
,

806 
pmix_d©a_ty≥_t
 
ty≥
)

808 
pmix_vÆue_t
 *
p
;

811 *
de°
 = (
pmix_vÆue_t
*)
	`mÆloc
((pmix_value_t));

812 i‡(
NULL
 =*
de°
) {

813  
PMIX_ERR_OUT_OF_RESOURCE
;

815 
p
 = *
de°
;

818 
p
->
ty≥
 = 
§c
->type;

820  
	`pmix_vÆue_x„r
(
p
, 
§c
);

821 
	}
}

823 
pmix_°©us_t
 
	$pmix_b‰›_c›y_öfo
(
pmix_öfo_t
 **
de°
,Ömix_öfo_à*
§c
,

824 
pmix_d©a_ty≥_t
 
ty≥
)

826 *
de°
 = (
pmix_öfo_t
*)
	`mÆloc
((pmix_info_t));

827 ()
	`°∫˝y
((*
de°
)->
key
, 
§c
->key, 
PMIX_MAX_KEYLEN
);

828 (*
de°
)->
Êags
 = 
§c
->flags;

829  
	`pmix_vÆue_x„r
(&(*
de°
)->
vÆue
, &
§c
->value);

830 
	}
}

832 
pmix_°©us_t
 
	$pmix_b‰›_c›y_buf
(
pmix_buf„r_t
 **
de°
,Ömix_buf„r_à*
§c
,

833 
pmix_d©a_ty≥_t
 
ty≥
)

835 *
de°
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

836 
pmix_b‰›
.
	`c›y_∑ylﬂd
(*
de°
, 
§c
);

837  
PMIX_SUCCESS
;

838 
	}
}

840 
pmix_°©us_t
 
	$pmix_b‰›_c›y_≠p
(
pmix_≠p_t
 **
de°
,Ömix_≠p_à*
§c
,

841 
pmix_d©a_ty≥_t
 
ty≥
)

843 
size_t
 
j
;

845 *
de°
 = (
pmix_≠p_t
*)
	`mÆloc
((pmix_app_t));

846 (*
de°
)->
cmd
 = 
	`°rdup
(
§c
->cmd);

847 (*
de°
)->
¨gc
 = 
§c
->argc;

848 (*
de°
)->
¨gv
 = 
	`pmix_¨gv_c›y
(
§c
->argv);

849 (*
de°
)->
ív
 = 
	`pmix_¨gv_c›y
(
§c
->env);

850 (*
de°
)->
max¥ocs
 = 
§c
->maxprocs;

851 (*
de°
)->
nöfo
 = 
§c
->ninfo;

852 (*
de°
)->
öfo
 = (
pmix_öfo_t
*)
	`mÆloc
(
§c
->
nöfo
 * (pmix_info_t));

853 
j
=0; j < 
§c
->
nöfo
; j++) {

854 ()
	`°∫˝y
((*
de°
)->
öfo
[
j
].
key
, 
§c
->öfo[j].key, 
PMIX_MAX_KEYLEN
);

855 
	`pmix_vÆue_x„r
(&(*
de°
)->
öfo
[
j
].
vÆue
, &
§c
->info[j].value);

857  
PMIX_SUCCESS
;

858 
	}
}

860 
pmix_°©us_t
 
	$pmix_b‰›_c›y_kvÆ
(
pmix_kvÆ_t
 **
de°
,Ömix_kvÆ_à*
§c
,

861 
pmix_d©a_ty≥_t
 
ty≥
)

863 
pmix_kvÆ_t
 *
p
;

866 *
de°
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

867 i‡(
NULL
 =*
de°
) {

868  
PMIX_ERR_OUT_OF_RESOURCE
;

870 
p
 = *
de°
;

873 
p
->
vÆue
->
ty≥
 = 
§c
->value->type;

875  
	`pmix_vÆue_x„r
(
p
->
vÆue
, 
§c
->value);

876 
	}
}

878 
pmix_°©us_t
 
	$pmix_b‰›_c›y_¥oc
(
pmix_¥oc_t
 **
de°
,Ömix_¥oc_à*
§c
,

879 
pmix_d©a_ty≥_t
 
ty≥
)

881 *
de°
 = (
pmix_¥oc_t
*)
	`mÆloc
((pmix_proc_t));

882 i‡(
NULL
 =*
de°
) {

883  
PMIX_ERR_OUT_OF_RESOURCE
;

885 ()
	`°∫˝y
((*
de°
)->
n•a˚
, 
§c
->n•a˚, 
PMIX_MAX_NSLEN
);

886 (*
de°
)->
ønk
 = 
§c
->rank;

887  
PMIX_SUCCESS
;

888 
	}
}

890 #i‡
PMIX_HAVE_HWLOC


891 
pmix_°©us_t
 
	$pmix_b‰›_c›y_t›o
(
hwloc_t›ﬁogy_t
 *
de°
,

892 
hwloc_t›ﬁogy_t
 
§c
,

893 
pmix_d©a_ty≥_t
 
ty≥
)

896  
	`hwloc_t›ﬁogy_dup
(
de°
, 
§c
);

897 
	}
}

900 
pmix_°©us_t
 
	$pmix_b‰›_c›y_modex
(
pmix_modex_d©a_t
 **
de°
,Ömix_modex_d©a_à*
§c
,

901 
pmix_d©a_ty≥_t
 
ty≥
)

903 *
de°
 = (
pmix_modex_d©a_t
*)
	`mÆloc
((pmix_modex_data_t));

904 i‡(
NULL
 =*
de°
) {

905  
PMIX_ERR_OUT_OF_RESOURCE
;

907 (*
de°
)->
blob
 = 
NULL
;

908 (*
de°
)->
size
 = 0;

909 i‡(
NULL
 !
§c
->
blob
) {

910 (*
de°
)->
blob
 = (
uöt8_t
*)
	`mÆloc
(
§c
->
size
 * (uint8_t));

911 i‡(
NULL
 =(*
de°
)->
blob
) {

912  
PMIX_ERR_OUT_OF_RESOURCE
;

914 
	`mem˝y
((*
de°
)->
blob
, 
§c
->blob, src->
size
 * (
uöt8_t
));

915 (*
de°
)->
size
 = 
§c
->size;

917  
PMIX_SUCCESS
;

918 
	}
}

920 
pmix_°©us_t
 
	$pmix_b‰›_c›y_≥rsi°
(
pmix_≥rsi°í˚_t
 **
de°
,Ömix_≥rsi°í˚_à*
§c
,

921 
pmix_d©a_ty≥_t
 
ty≥
)

923 *
de°
 = (
pmix_≥rsi°í˚_t
*)
	`mÆloc
((pmix_persistence_t));

924 i‡(
NULL
 =*
de°
) {

925  
PMIX_ERR_OUT_OF_RESOURCE
;

927 
	`mem˝y
(*
de°
, 
§c
, (
pmix_≥rsi°í˚_t
));

928  
PMIX_SUCCESS
;

929 
	}
}

931 
pmix_°©us_t
 
	$pmix_b‰›_c›y_bo
(
pmix_byã_obje˘_t
 **
de°
,Ömix_byã_obje˘_à*
§c
,

932 
pmix_d©a_ty≥_t
 
ty≥
)

934 *
de°
 = (
pmix_byã_obje˘_t
*)
	`mÆloc
((pmix_byte_object_t));

935 i‡(
NULL
 =*
de°
) {

936  
PMIX_ERR_OUT_OF_RESOURCE
;

938 (*
de°
)->
byãs
 = (*)
	`mÆloc
(
§c
->
size
);

939 
	`mem˝y
((*
de°
)->
byãs
, 
§c
->byãs, src->
size
);

940 (*
de°
)->
size
 = 
§c
->size;

941  
PMIX_SUCCESS
;

942 
	}
}

944 
pmix_°©us_t
 
	$pmix_b‰›_c›y_pd©a
(
pmix_pd©a_t
 **
de°
,Ömix_pd©a_à*
§c
,

945 
pmix_d©a_ty≥_t
 
ty≥
)

947 *
de°
 = (
pmix_pd©a_t
*)
	`mÆloc
((pmix_pdata_t));

948 ()
	`°∫˝y
((*
de°
)->
¥oc
.
n•a˚
, 
§c
->¥oc.n•a˚, 
PMIX_MAX_NSLEN
);

949 (*
de°
)->
¥oc
.
ønk
 = 
§c
->proc.rank;

950 ()
	`°∫˝y
((*
de°
)->
key
, 
§c
->key, 
PMIX_MAX_KEYLEN
);

951  
	`pmix_vÆue_x„r
(&(*
de°
)->
vÆue
, &
§c
->value);

952 
	}
}

954 
pmix_°©us_t
 
	$pmix_b‰›_c›y_pöfo
(
pmix_¥oc_öfo_t
 **
de°
,Ömix_¥oc_öfo_à*
§c
,

955 
pmix_d©a_ty≥_t
 
ty≥
)

957 *
de°
 = (
pmix_¥oc_öfo_t
*)
	`mÆloc
((pmix_proc_info_t));

958 ()
	`°∫˝y
((*
de°
)->
¥oc
.
n•a˚
, 
§c
->¥oc.n•a˚, 
PMIX_MAX_NSLEN
);

959 (*
de°
)->
¥oc
.
ønk
 = 
§c
->proc.rank;

960 i‡(
NULL
 !
§c
->
ho°«me
) {

961 (*
de°
)->
ho°«me
 = 
	`°rdup
(
§c
->hostname);

963 i‡(
NULL
 !
§c
->
execuèbÀ_«me
) {

964 (*
de°
)->
execuèbÀ_«me
 = 
	`°rdup
(
§c
->executable_name);

966 (*
de°
)->
pid
 = 
§c
->pid;

967 (*
de°
)->
exô_code
 = 
§c
->exit_code;

968 (*
de°
)->
°©e
 = 
§c
->state;

969  
PMIX_SUCCESS
;

970 
	}
}

975 
pmix_°©us_t
 
	$pmix_b‰›_c›y_d¨øy
(
pmix_d©a_¨øy_t
 **
de°
,

976 
pmix_d©a_¨øy_t
 *
§c
,

977 
pmix_d©a_ty≥_t
 
ty≥
)

979 
pmix_d©a_¨øy_t
 *
p
;

980 
size_t
 
n
, 
m
;

981 
pmix_°©us_t
 
rc
;

982 **
¥¨øy
, **
°øºay
;

983 
pmix_vÆue_t
 *
pv
, *
sv
;

984 
pmix_≠p_t
 *
∑
, *
ß
;

985 
pmix_öfo_t
 *
p1
, *
s1
;

986 
pmix_pd©a_t
 *
pd
, *
sd
;

987 
pmix_buf„r_t
 *
pb
, *
sb
;

988 
pmix_byã_obje˘_t
 *
pbo
, *
sbo
;

989 
pmix_kvÆ_t
 *
pk
, *
sk
;

990 
pmix_modex_d©a_t
 *
pm
, *
sm
;

991 
pmix_¥oc_öfo_t
 *
pi
, *
si
;

992 
pmix_quîy_t
 *
pq
, *
sq
;

994 
p
 = (
pmix_d©a_¨øy_t
*)
	`ˇŒoc
(1, (pmix_data_array_t));

995 i‡(
NULL
 =
p
) {

996  
PMIX_ERR_NOMEM
;

998 
p
->
ty≥
 = 
§c
->type;

999 
p
->
size
 = 
§c
->size;

1001 
§c
->
ty≥
) {

1002 
p
->
ty≥
 = 
§c
->type;

1003 
p
->
size
 = 
§c
->size;

1004 i‡(0 =
p
->
size
 || 
NULL
 =
§c
->
¨øy
) {

1005 
p
->
¨øy
 = 
NULL
;

1006 
p
->
size
 = 0;

1009 
PMIX_UINT8
:

1010 
PMIX_INT8
:

1011 
PMIX_BYTE
:

1012 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
);

1013 i‡(
NULL
 =
p
->
¨øy
) {

1014 
	`‰ì
(
p
);

1015  
PMIX_ERR_NOMEM
;

1017 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
);

1019 
PMIX_UINT16
:

1020 
PMIX_INT16
:

1021 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * (
uöt16_t
));

1022 i‡(
NULL
 =
p
->
¨øy
) {

1023 
	`‰ì
(
p
);

1024  
PMIX_ERR_NOMEM
;

1026 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
uöt16_t
));

1028 
PMIX_UINT32
:

1029 
PMIX_INT32
:

1030 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * (
uöt32_t
));

1031 i‡(
NULL
 =
p
->
¨øy
) {

1032 
	`‰ì
(
p
);

1033  
PMIX_ERR_NOMEM
;

1035 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
uöt32_t
));

1037 
PMIX_UINT64
:

1038 
PMIX_INT64
:

1039 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * (
uöt64_t
));

1040 i‡(
NULL
 =
p
->
¨øy
) {

1041 
	`‰ì
(
p
);

1042  
PMIX_ERR_NOMEM
;

1044 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
uöt64_t
));

1046 
PMIX_BOOL
:

1047 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * (
boﬁ
));

1048 i‡(
NULL
 =
p
->
¨øy
) {

1049 
	`‰ì
(
p
);

1050  
PMIX_ERR_NOMEM
;

1052 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
boﬁ
));

1054 
PMIX_SIZE
:

1055 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * (
size_t
));

1056 i‡(
NULL
 =
p
->
¨øy
) {

1057 
	`‰ì
(
p
);

1058  
PMIX_ERR_NOMEM
;

1060 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
size_t
));

1062 
PMIX_PID
:

1063 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * (
pid_t
));

1064 i‡(
NULL
 =
p
->
¨øy
) {

1065 
	`‰ì
(
p
);

1066  
PMIX_ERR_NOMEM
;

1068 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pid_t
));

1070 
PMIX_STRING
:

1071 
p
->
¨øy
 = (**)
	`mÆloc
(
§c
->
size
 * (*));

1072 i‡(
NULL
 =
p
->
¨øy
) {

1073 
	`‰ì
(
p
);

1074  
PMIX_ERR_NOMEM
;

1076 
¥¨øy
 = (**)
p
->
¨øy
;

1077 
°øºay
 = (**)
§c
->
¨øy
;

1078 
n
=0;Ç < 
§c
->
size
;Ç++) {

1079 i‡(
NULL
 !
°øºay
[
n
]) {

1080 
¥¨øy
[
n
] = 
	`°rdup
(
°øºay
[n]);

1084 
PMIX_INT
:

1085 
PMIX_UINT
:

1086 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * ());

1087 i‡(
NULL
 =
p
->
¨øy
) {

1088 
	`‰ì
(
p
);

1089  
PMIX_ERR_NOMEM
;

1091 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * ());

1093 
PMIX_FLOAT
:

1094 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * ());

1095 i‡(
NULL
 =
p
->
¨øy
) {

1096 
	`‰ì
(
p
);

1097  
PMIX_ERR_NOMEM
;

1099 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * ());

1101 
PMIX_DOUBLE
:

1102 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * ());

1103 i‡(
NULL
 =
p
->
¨øy
) {

1104 
	`‰ì
(
p
);

1105  
PMIX_ERR_NOMEM
;

1107 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * ());

1109 
PMIX_TIMEVAL
:

1110 
p
->
¨øy
 = (
timevÆ
*)
	`mÆloc
(
§c
->
size
 * (timeval));

1111 i‡(
NULL
 =
p
->
¨øy
) {

1112 
	`‰ì
(
p
);

1113  
PMIX_ERR_NOMEM
;

1115 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
timevÆ
));

1117 
PMIX_TIME
:

1118 
p
->
¨øy
 = (
time_t
*)
	`mÆloc
(
§c
->
size
 * (time_t));

1119 i‡(
NULL
 =
p
->
¨øy
) {

1120 
	`‰ì
(
p
);

1121  
PMIX_ERR_NOMEM
;

1123 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
time_t
));

1125 
PMIX_STATUS
:

1126 
p
->
¨øy
 = (
pmix_°©us_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_status_t));

1127 i‡(
NULL
 =
p
->
¨øy
) {

1128 
	`‰ì
(
p
);

1129  
PMIX_ERR_NOMEM
;

1131 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_°©us_t
));

1133 
PMIX_VALUE
:

1134 
	`PMIX_VALUE_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1135 i‡(
NULL
 =
p
->
¨øy
) {

1136 
	`‰ì
(
p
);

1137  
PMIX_ERR_NOMEM
;

1139 
pv
 = (
pmix_vÆue_t
*)
p
->
¨øy
;

1140 
sv
 = (
pmix_vÆue_t
*)
§c
->
¨øy
;

1141 
n
=0;Ç < 
§c
->
size
;Ç++) {

1142 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_vÆue_x„r
(&
pv
[
n
], &
sv
[n]))) {

1143 
	`PMIX_VALUE_FREE
(
pv
, 
§c
->
size
);

1144 
	`‰ì
(
p
);

1145  
rc
;

1149 
PMIX_PROC
:

1150 
	`PMIX_PROC_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1151 i‡(
NULL
 =
p
->
¨øy
) {

1152 
	`‰ì
(
p
);

1153  
PMIX_ERR_NOMEM
;

1155 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_¥oc_t
));

1157 
PMIX_PROC_RANK
:

1158 
p
->
¨øy
 = (*)
	`mÆloc
(
§c
->
size
 * (
pmix_ønk_t
));

1159 i‡(
NULL
 =
p
->
¨øy
) {

1160 
	`‰ì
(
p
);

1161  
PMIX_ERR_NOMEM
;

1163 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_¥oc_t
));

1165 
PMIX_APP
:

1166 
	`PMIX_APP_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1167 i‡(
NULL
 =
p
->
¨øy
) {

1168 
	`‰ì
(
p
);

1169  
PMIX_ERR_NOMEM
;

1171 
∑
 = (
pmix_≠p_t
*)
p
->
¨øy
;

1172 
ß
 = (
pmix_≠p_t
*)
§c
->
¨øy
;

1173 
n
=0;Ç < 
§c
->
size
;Ç++) {

1174 i‡(
NULL
 !
ß
[
n
].
cmd
) {

1175 
∑
[
n
].
cmd
 = 
	`°rdup
(
ß
[n].cmd);

1177 
∑
[
n
].
¨gc
 = 
ß
[n].argc;

1178 i‡(
NULL
 !
ß
[
n
].
¨gv
) {

1179 
∑
[
n
].
¨gv
 = 
	`pmix_¨gv_c›y
(
ß
[n].argv);

1181 i‡(
NULL
 !
ß
[
n
].
ív
) {

1182 
∑
[
n
].
ív
 = 
	`pmix_¨gv_c›y
(
ß
[n].env);

1184 
∑
[
n
].
max¥ocs
 = 
ß
[n].maxprocs;

1185 i‡(0 < 
ß
[
n
].
nöfo
 && 
NULL
 !ß[n].
öfo
) {

1186 
	`PMIX_INFO_CREATE
(
∑
[
n
].
öfo
, 
ß
[n].
nöfo
);

1187 i‡(
NULL
 =
∑
[
n
].
öfo
) {

1188 
	`PMIX_APP_FREE
(
∑
, 
p
->
size
);

1189 
	`‰ì
(
p
);

1190  
PMIX_ERR_NOMEM
;

1192 
∑
[
n
].
nöfo
 = 
ß
[n].ninfo;

1193 
m
=0; m < 
∑
[
n
].
nöfo
; m++) {

1194 
	`PMIX_INFO_XFER
(&
∑
[
n
].
öfo
[
m
], &
ß
[n].info[m]);

1199 
PMIX_INFO
:

1200 
	`PMIX_INFO_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1201 i‡(
NULL
 =
p
->
¨øy
) {

1202 
	`‰ì
(
p
);

1203  
PMIX_ERR_NOMEM
;

1205 
p1
 = (
pmix_öfo_t
*)
p
->
¨øy
;

1206 
s1
 = (
pmix_öfo_t
*)
§c
->
¨øy
;

1207 
n
=0;Ç < 
§c
->
size
;Ç++) {

1208 
	`PMIX_INFO_LOAD
(&
p1
[
n
], 
s1
[n].
key
, &s1[n].
vÆue
.
d©a
.
Êag
, s1[n].vÆue.
ty≥
);

1211 
PMIX_PDATA
:

1212 
	`PMIX_PDATA_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1213 i‡(
NULL
 =
p
->
¨øy
) {

1214 
	`‰ì
(
p
);

1215  
PMIX_ERR_NOMEM
;

1217 
pd
 = (
pmix_pd©a_t
*)
p
->
¨øy
;

1218 
sd
 = (
pmix_pd©a_t
*)
§c
->
¨øy
;

1219 
n
=0;Ç < 
§c
->
size
;Ç++) {

1220 
	`PMIX_PDATA_LOAD
(&
pd
[
n
], &
sd
[n].
¥oc
, sd[n].
key
, &sd[n].
vÆue
, sd[n].vÆue.
ty≥
);

1223 
PMIX_BUFFER
:

1224 
p
->
¨øy
 = (
pmix_buf„r_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_buffer_t));

1225 i‡(
NULL
 =
p
->
¨øy
) {

1226 
	`‰ì
(
p
);

1227  
PMIX_ERR_NOMEM
;

1229 
pb
 = (
pmix_buf„r_t
*)
p
->
¨øy
;

1230 
sb
 = (
pmix_buf„r_t
*)
§c
->
¨øy
;

1231 
n
=0;Ç < 
§c
->
size
;Ç++) {

1232 
	`PMIX_CONSTRUCT
(&
pb
[
n
], 
pmix_buf„r_t
);

1233 
pmix_b‰›
.
	`c›y_∑ylﬂd
(&
pb
[
n
], &
sb
[n]);

1236 
PMIX_BYTE_OBJECT
:

1237 
p
->
¨øy
 = (
pmix_byã_obje˘_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_byte_object_t));

1238 i‡(
NULL
 =
p
->
¨øy
) {

1239 
	`‰ì
(
p
);

1240  
PMIX_ERR_NOMEM
;

1242 
pbo
 = (
pmix_byã_obje˘_t
*)
p
->
¨øy
;

1243 
sbo
 = (
pmix_byã_obje˘_t
*)
§c
->
¨øy
;

1244 
n
=0;Ç < 
§c
->
size
;Ç++) {

1245 i‡(
NULL
 !
sbo
[
n
].
byãs
 && 0 < sbo[n].
size
) {

1246 
pbo
[
n
].
size
 = 
sbo
[n].size;

1247 
pbo
[
n
].
byãs
 = (*)
	`mÆloc
’bo[n].
size
);

1248 
	`mem˝y
(
pbo
[
n
].
byãs
, 
sbo
[n].byãs,Öbo[n].
size
);

1250 
pbo
[
n
].
byãs
 = 
NULL
;

1251 
pbo
[
n
].
size
 = 0;

1255 
PMIX_KVAL
:

1256 
p
->
¨øy
 = (
pmix_kvÆ_t
*)
	`ˇŒoc
(
§c
->
size
 , (pmix_kval_t));

1257 i‡(
NULL
 =
p
->
¨øy
) {

1258 
	`‰ì
(
p
);

1259  
PMIX_ERR_NOMEM
;

1261 
pk
 = (
pmix_kvÆ_t
*)
p
->
¨øy
;

1262 
sk
 = (
pmix_kvÆ_t
*)
§c
->
¨øy
;

1263 
n
=0;Ç < 
§c
->
size
;Ç++) {

1264 i‡(
NULL
 !
sk
[
n
].
key
) {

1265 
pk
[
n
].
key
 = 
	`°rdup
(
sk
[n].key);

1267 i‡(
NULL
 !
sk
[
n
].
vÆue
) {

1268 
	`PMIX_VALUE_CREATE
(
pk
[
n
].
vÆue
, 1);

1269 i‡(
NULL
 =
pk
[
n
].
vÆue
) {

1270 
	`PMIX_VALUE_FREE
(
pk
[
n
].
vÆue
, 1);

1271 
	`‰ì
(
p
);

1272  
PMIX_ERR_NOMEM
;

1274 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_vÆue_x„r
(
pk
[
n
].
vÆue
, 
sk
[n].value))) {

1275 
	`PMIX_VALUE_FREE
(
pk
[
n
].
vÆue
, 1);

1276 
	`‰ì
(
p
);

1277  
rc
;

1282 
PMIX_MODEX
:

1283 
	`PMIX_MODEX_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1284 i‡(
NULL
 =
p
->
¨øy
) {

1285 
	`‰ì
(
p
);

1286  
PMIX_ERR_NOMEM
;

1288 
pm
 = (
pmix_modex_d©a_t
*)
p
->
¨øy
;

1289 
sm
 = (
pmix_modex_d©a_t
*)
§c
->
¨øy
;

1290 
n
=0;Ç < 
§c
->
size
;Ç++) {

1291 
	`mem˝y
(&
pm
[
n
], &
sm
[n], (
pmix_modex_d©a_t
));

1292 i‡(
NULL
 !
sm
[
n
].
blob
 && 0 < sm[n].
size
) {

1293 
pm
[
n
].
blob
 = (
uöt8_t
*)
	`mÆloc
(
sm
[n].
size
);

1294 i‡(
NULL
 =
pm
[
n
].
blob
) {

1295 
	`PMIX_MODEX_FREE
(
pm
, 
§c
->
size
);

1296 
	`‰ì
(
p
);

1297  
PMIX_ERR_NOMEM
;

1299 
	`mem˝y
(
pm
[
n
].
blob
, 
sm
[n].blob, sm[n].
size
);

1300 
pm
[
n
].
size
 = 
sm
[n].size;

1302 
pm
[
n
].
blob
 = 
NULL
;

1303 
pm
[
n
].
size
 = 0;

1307 
PMIX_PERSIST
:

1308 
p
->
¨øy
 = (
pmix_≥rsi°í˚_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_persistence_t));

1309 i‡(
NULL
 =
p
->
¨øy
) {

1310 
	`‰ì
(
p
);

1311  
PMIX_ERR_NOMEM
;

1313 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_≥rsi°í˚_t
));

1315 
PMIX_POINTER
:

1316 
p
->
¨øy
 = (**)
	`mÆloc
(
§c
->
size
 * (*));

1317 
¥¨øy
 = (**)
p
->
¨øy
;

1318 
°øºay
 = (**)
§c
->
¨øy
;

1319 
n
=0;Ç < 
§c
->
size
;Ç++) {

1320 
¥¨øy
[
n
] = 
°øºay
[n];

1323 
PMIX_SCOPE
:

1324 
p
->
¨øy
 = (
pmix_sc›e_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_scope_t));

1325 i‡(
NULL
 =
p
->
¨øy
) {

1326 
	`‰ì
(
p
);

1327  
PMIX_ERR_NOMEM
;

1329 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_sc›e_t
));

1331 
PMIX_DATA_RANGE
:

1332 
p
->
¨øy
 = (
pmix_d©a_ønge_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_data_range_t));

1333 i‡(
NULL
 =
p
->
¨øy
) {

1334 
	`‰ì
(
p
);

1335  
PMIX_ERR_NOMEM
;

1337 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_d©a_ønge_t
));

1339 
PMIX_COMMAND
:

1340 
p
->
¨øy
 = (
pmix_cmd_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_cmd_t));

1341 i‡(
NULL
 =
p
->
¨øy
) {

1342 
	`‰ì
(
p
);

1343  
PMIX_ERR_NOMEM
;

1345 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_cmd_t
));

1347 
PMIX_INFO_DIRECTIVES
:

1348 
p
->
¨øy
 = (
pmix_öfo_dúe˘ives_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_info_directives_t));

1349 i‡(
NULL
 =
p
->
¨øy
) {

1350 
	`‰ì
(
p
);

1351  
PMIX_ERR_NOMEM
;

1353 
	`mem˝y
(
p
->
¨øy
, 
§c
->¨øy, src->
size
 * (
pmix_öfo_dúe˘ives_t
));

1355 
PMIX_PROC_INFO
:

1356 
	`PMIX_PROC_INFO_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1357 i‡(
NULL
 =
p
->
¨øy
) {

1358 
	`‰ì
(
p
);

1359  
PMIX_ERR_NOMEM
;

1361 
pi
 = (
pmix_¥oc_öfo_t
*)
p
->
¨øy
;

1362 
si
 = (
pmix_¥oc_öfo_t
*)
§c
->
¨øy
;

1363 
n
=0;Ç < 
§c
->
size
;Ç++) {

1364 
	`mem˝y
(&
pi
[
n
].
¥oc
, &
si
[n].¥oc, (
pmix_¥oc_t
));

1365 i‡(
NULL
 !
si
[
n
].
ho°«me
) {

1366 
pi
[
n
].
ho°«me
 = 
	`°rdup
(
si
[n].hostname);

1368 
pi
[
n
].
ho°«me
 = 
NULL
;

1370 i‡(
NULL
 !
si
[
n
].
execuèbÀ_«me
) {

1371 
pi
[
n
].
execuèbÀ_«me
 = 
	`°rdup
(
si
[n].executable_name);

1373 
pi
[
n
].
execuèbÀ_«me
 = 
NULL
;

1375 
pi
[
n
].
pid
 = 
si
[n].pid;

1376 
pi
[
n
].
exô_code
 = 
si
[n].exit_code;

1377 
pi
[
n
].
°©e
 = 
si
[n].state;

1380 
PMIX_DATA_ARRAY
:

1381 
	`‰ì
(
p
);

1382  
PMIX_ERR_NOT_SUPPORTED
;

1383 
PMIX_QUERY
:

1384 
	`PMIX_QUERY_CREATE
(
p
->
¨øy
, 
§c
->
size
);

1385 i‡(
NULL
 =
p
->
¨øy
) {

1386 
	`‰ì
(
p
);

1387  
PMIX_ERR_NOMEM
;

1389 
pq
 = (
pmix_quîy_t
*)
p
->
¨øy
;

1390 
sq
 = (
pmix_quîy_t
*)
§c
->
¨øy
;

1391 
n
=0;Ç < 
§c
->
size
;Ç++) {

1392 i‡(
NULL
 !
sq
[
n
].
keys
) {

1393 
pq
[
n
].
keys
 = 
	`pmix_¨gv_c›y
(
sq
[n].keys);

1395 i‡(
NULL
 !
sq
[
n
].
quÆifõrs
 && 0 < sq[n].
nquÆ
) {

1396 
	`PMIX_INFO_CREATE
(
pq
[
n
].
quÆifõrs
, 
sq
[n].
nquÆ
);

1397 i‡(
NULL
 =
pq
[
n
].
quÆifõrs
) {

1398 
	`PMIX_INFO_FREE
(
pq
[
n
].
quÆifõrs
, 
sq
[n].
nquÆ
);

1399 
	`‰ì
(
p
);

1400  
PMIX_ERR_NOMEM
;

1402 
m
=0; m < 
sq
[
n
].
nquÆ
; m++) {

1403 
	`PMIX_INFO_XFER
(&
pq
[
n
].
quÆifõrs
[
m
], &
sq
[n].qualifiers[m]);

1405 
pq
[
n
].
nquÆ
 = 
sq
[n].nqual;

1407 
pq
[
n
].
quÆifõrs
 = 
NULL
;

1408 
pq
[
n
].
nquÆ
 = 0;

1413 
	`‰ì
(
p
);

1414  
PMIX_ERR_UNKNOWN_DATA_TYPE
;

1417 (*
de°
Ë
p
;

1418  
PMIX_SUCCESS
;

1419 
	}
}

1421 
pmix_°©us_t
 
	$pmix_b‰›_c›y_quîy
(
pmix_quîy_t
 **
de°
,

1422 
pmix_quîy_t
 *
§c
,

1423 
pmix_d©a_ty≥_t
 
ty≥
)

1425 
pmix_°©us_t
 
rc
;

1427 *
de°
 = (
pmix_quîy_t
*)
	`mÆloc
((pmix_query_t));

1428 i‡(
NULL
 !
§c
->
keys
) {

1429 (*
de°
)->
keys
 = 
	`pmix_¨gv_c›y
(
§c
->keys);

1431 (*
de°
)->
nquÆ
 = 
§c
->nqual;

1432 i‡(
NULL
 !
§c
->
quÆifõrs
) {

1433 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_c›y_öfo
(&((*
de°
)->
quÆifõrs
), 
§c
->quÆifõrs, 
PMIX_INFO
))) {

1434 
	`‰ì
(*
de°
);

1435  
rc
;

1438  
PMIX_SUCCESS
;

1439 
	}
}

1442 
pmix_°©us_t
 
	$pmix_b‰›_c›y_¨øy
(
pmix_öfo_¨øy_t
 **
de°
,

1443 
pmix_öfo_¨øy_t
 *
§c
,

1444 
pmix_d©a_ty≥_t
 
ty≥
)

1446 
pmix_öfo_t
 *
d1
, *
s1
;

1448 *
de°
 = (
pmix_öfo_¨øy_t
*)
	`mÆloc
((pmix_info_array_t));

1449 (*
de°
)->
size
 = 
§c
->size;

1450 (*
de°
)->
¨øy
 = (
pmix_öfo_t
*)
	`mÆloc
(
§c
->
size
 * (pmix_info_t));

1451 
d1
 = (
pmix_öfo_t
*)(*
de°
)->
¨øy
;

1452 
s1
 = (
pmix_öfo_t
*)
§c
->
¨øy
;

1453 
	`mem˝y
(
d1
, 
s1
, 
§c
->
size
 * (
pmix_öfo_t
));

1454  
PMIX_SUCCESS
;

1455 
	}
}

	@buffer_ops/internal.h

25 #i‚de‡
PMIX_BFROP_INTERNAL_H_


26 
	#PMIX_BFROP_INTERNAL_H_


	)

28 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

31 #ifde‡
HAVE_SYS_TIME_H


32 
	~<sys/time.h
>

35 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

37 
	~"buf„r_›s.h
"

39 #ifde‡
HAVE_STRING_H


40 
	~<°rög.h
>

42 #i‡
PMIX_HAVE_HWLOC


43 #ö˛udê
PMIX_HWLOC_HEADER


46 
	gBEGIN_C_DECLS


51 
	#PMIX_BFROP_DEFAULT_INITIAL_SIZE
 128

	)

56 
	#PMIX_BFROP_DEFAULT_THRESHOLD_SIZE
 1024

	)

62 #i‡
SIZEOF_SIZE_T
 == 1

63 
	#BFROP_TYPE_SIZE_T
 
PMIX_UINT8


	)

64 #ñi‡
SIZEOF_SIZE_T
 == 2

65 
	#BFROP_TYPE_SIZE_T
 
PMIX_UINT16


	)

66 #ñi‡
SIZEOF_SIZE_T
 == 4

67 
	#BFROP_TYPE_SIZE_T
 
PMIX_UINT32


	)

68 #ñi‡
SIZEOF_SIZE_T
 == 8

69 
	#BFROP_TYPE_SIZE_T
 
PMIX_UINT64


	)

71 #îr‹ 
Unsuµ‹ãd
 
size_t
 
size
!

78 #i‡
SIZEOF__BOOL
 == 1

79 
	#BFROP_TYPE_BOOL
 
PMIX_UINT8


	)

80 #ñi‡
SIZEOF__BOOL
 == 2

81 
	#BFROP_TYPE_BOOL
 
PMIX_UINT16


	)

82 #ñi‡
SIZEOF__BOOL
 == 4

83 
	#BFROP_TYPE_BOOL
 
PMIX_UINT32


	)

84 #ñi‡
SIZEOF__BOOL
 == 8

85 
	#BFROP_TYPE_BOOL
 
PMIX_UINT64


	)

87 #îr‹ 
Unsuµ‹ãd
 
boﬁ
 
size
!

94 #i‡
SIZEOF_INT
 == 1

95 
	#BFROP_TYPE_INT
 
PMIX_INT8


	)

96 
	#BFROP_TYPE_UINT
 
PMIX_UINT8


	)

97 #ñi‡
SIZEOF_INT
 == 2

98 
	#BFROP_TYPE_INT
 
PMIX_INT16


	)

99 
	#BFROP_TYPE_UINT
 
PMIX_UINT16


	)

100 #ñi‡
SIZEOF_INT
 == 4

101 
	#BFROP_TYPE_INT
 
PMIX_INT32


	)

102 
	#BFROP_TYPE_UINT
 
PMIX_UINT32


	)

103 #ñi‡
SIZEOF_INT
 == 8

104 
	#BFROP_TYPE_INT
 
PMIX_INT64


	)

105 
	#BFROP_TYPE_UINT
 
PMIX_UINT64


	)

107 #îr‹ 
Unsuµ‹ãd
 
size
!

114 #i‡
SIZEOF_PID_T
 == 1

115 
	#BFROP_TYPE_PID_T
 
PMIX_UINT8


	)

116 #ñi‡
SIZEOF_PID_T
 == 2

117 
	#BFROP_TYPE_PID_T
 
PMIX_UINT16


	)

118 #ñi‡
SIZEOF_PID_T
 == 4

119 
	#BFROP_TYPE_PID_T
 
PMIX_UINT32


	)

120 #ñi‡
SIZEOF_PID_T
 == 8

121 
	#BFROP_TYPE_PID_T
 
PMIX_UINT64


	)

123 #îr‹ 
Unsuµ‹ãd
 
pid_t
 
size
!

127 
	#UNPACK_SIZE_MISMATCH
(
u≈ack_ty≥
, 
ªmŸe_ty≥
, 
ªt
) \

129 
ªmŸe_ty≥
) { \

130 
PMIX_UINT8
: \

131 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
uöt8_t
, 
ªmŸe_ty≥
); \

133 
PMIX_INT8
: \

134 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
öt8_t
, 
ªmŸe_ty≥
); \

136 
PMIX_UINT16
: \

137 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
uöt16_t
, 
ªmŸe_ty≥
); \

139 
PMIX_INT16
: \

140 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
öt16_t
, 
ªmŸe_ty≥
); \

142 
PMIX_UINT32
: \

143 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
uöt32_t
, 
ªmŸe_ty≥
); \

145 
PMIX_INT32
: \

146 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
öt32_t
, 
ªmŸe_ty≥
); \

148 
PMIX_UINT64
: \

149 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
uöt64_t
, 
ªmŸe_ty≥
); \

151 
PMIX_INT64
: \

152 
	`UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
öt64_t
, 
ªmŸe_ty≥
); \

155 
ªt
 = 
PMIX_ERR_NOT_FOUND
; \

157 } 0)

	)

162 
	#UNPACK_SIZE_MISMATCH_FOUND
(
u≈ack_ty≥
, 
tm±y≥
, 
tmpb‰›ty≥
) \

164 
öt32_t
 
i
; \

165 
tm±y≥
 *
tmpbuf
 = (tm±y≥*)
	`mÆloc
(—m±y≥Ë* (*
num_vÆs
)); \

166 
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
tmpbuf
, 
num_vÆs
, 
tmpb‰›ty≥
); \

167 
i
 = 0 ; i < *
num_vÆs
 ; ++i) { \

168 ((
u≈ack_ty≥
*Ë
de°
)[
i
] = (u≈ack_ty≥)(
tmpbuf
[i]); \

170 
	`‰ì
(
tmpbuf
); \

171 } 0)

	)

178 
pmix_obje˘_t
 
	msu≥r
;

180 
pmix_d©a_ty≥_t
 
	modti_ty≥
;

182 *
	modti_«me
;

184 
pmix_b‰›_∑ck_‚_t
 
	modti_∑ck_‚
;

186 
pmix_b‰›_u≈ack_‚_t
 
	modti_u≈ack_‚
;

188 
pmix_b‰›_c›y_‚_t
 
	modti_c›y_‚
;

190 
pmix_b‰›_¥öt_‚_t
 
	modti_¥öt_‚
;

191 } 
	tpmix_b‰›_ty≥_öfo_t
;

192 
PMIX_CLASS_DECLARATION
(
pmix_b‰›_ty≥_öfo_t
);

197 
boﬁ
 
pmix_b‰›_öôülized
;

198 
size_t
 
pmix_b‰›_öôül_size
;

199 
size_t
 
pmix_b‰›_thªshﬁd_size
;

200 
pmix_poöãr_¨øy_t
 
pmix_b‰›_ty≥s
;

201 
pmix_d©a_ty≥_t
 
pmix_b‰›_num_ªg_ty≥s
;

204 
	#PMIX_REGISTER_TYPE
(
n
, 
t
, 
p
, 
u
, 
c
, 
¥
) \

206 
pmix_b‰›_ty≥_öfo_t
 *
_öfo
; \

207 
_öfo
 = 
	`PMIX_NEW
(
pmix_b‰›_ty≥_öfo_t
); \

208 
_öfo
->
odti_«me
 = 
	`°rdup
((
n
)); \

209 
_öfo
->
odti_ty≥
 = (
t
); \

210 
_öfo
->
odti_∑ck_‚
 = (
pmix_b‰›_∑ck_‚_t
)(
p
); \

211 
_öfo
->
odti_u≈ack_‚
 = (
pmix_b‰›_u≈ack_‚_t
)(
u
); \

212 
_öfo
->
odti_c›y_‚
 = (
pmix_b‰›_c›y_‚_t
)(
c
) ; \

213 
_öfo
->
odti_¥öt_‚
 = (
pmix_b‰›_¥öt_‚_t
)(
¥
) ; \

214 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_b‰›_ty≥s
, (
t
), 
_öfo
); \

215 ++
pmix_b‰›_num_ªg_ty≥s
; \

216 } 0)

	)

222 
pmix_°©us_t
 
pmix_b‰›_∑ck
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

223 
öt32_t
 
num_vÆs
,

224 
pmix_d©a_ty≥_t
 
ty≥
);

225 
pmix_°©us_t
 
pmix_b‰›_u≈ack
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

226 
öt32_t
 *
max_num_vÆs
,

227 
pmix_d©a_ty≥_t
 
ty≥
);

229 
pmix_°©us_t
 
pmix_b‰›_c›y
(**
de°
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

231 
pmix_°©us_t
 
pmix_b‰›_¥öt
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

233 
pmix_°©us_t
 
pmix_b‰›_c›y_∑ylﬂd
(
pmix_buf„r_t
 *
de°
,Ömix_buf„r_à*
§c
);

238 
pmix_°©us_t
 
pmix_b‰›_∑ck_buf„r
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

239 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

241 
pmix_°©us_t
 
pmix_b‰›_u≈ack_buf„r
(
pmix_buf„r_t
 *
buf„r
, *
d°
,

242 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

248 
pmix_°©us_t
 
pmix_b‰›_∑ck_boﬁ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

249 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

250 
pmix_°©us_t
 
pmix_b‰›_∑ck_byã
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

251 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

252 
pmix_°©us_t
 
pmix_b‰›_∑ck_°rög
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

253 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

254 
pmix_°©us_t
 
pmix_b‰›_∑ck_sizë
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

255 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

256 
pmix_°©us_t
 
pmix_b‰›_∑ck_pid
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

257 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

259 
pmix_°©us_t
 
pmix_b‰›_∑ck_öt
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

260 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

261 
pmix_°©us_t
 
pmix_b‰›_∑ck_öt16
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

262 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

263 
pmix_°©us_t
 
pmix_b‰›_∑ck_öt32
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

264 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

265 
pmix_°©us_t
 
pmix_b‰›_∑ck_d©©y≥
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

266 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

267 
pmix_°©us_t
 
pmix_b‰›_∑ck_öt64
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

268 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

270 
pmix_°©us_t
 
pmix_b‰›_∑ck_Êﬂt
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

271 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

272 
pmix_°©us_t
 
pmix_b‰›_∑ck_doubÀ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

273 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

274 
pmix_°©us_t
 
pmix_b‰›_∑ck_time
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

275 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

276 
pmix_°©us_t
 
pmix_b‰›_∑ck_timevÆ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

277 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

278 
pmix_°©us_t
 
pmix_b‰›_∑ck_time
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

279 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

280 
pmix_°©us_t
 
pmix_b‰›_∑ck_°©us
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

281 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

283 #i‡
PMIX_HAVE_HWLOC


284 
pmix_°©us_t
 
pmix_b‰›_∑ck_t›o
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

285 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

287 
pmix_°©us_t
 
pmix_b‰›_∑ck_vÆue
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

288 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

289 
pmix_°©us_t
 
pmix_b‰›_∑ck_¥oc
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

290 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

291 
pmix_°©us_t
 
pmix_b‰›_∑ck_≠p
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

292 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

293 
pmix_°©us_t
 
pmix_b‰›_∑ck_öfo
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

294 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

295 
pmix_°©us_t
 
pmix_b‰›_∑ck_buf
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

296 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

297 
pmix_°©us_t
 
pmix_b‰›_∑ck_kvÆ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

298 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

299 
pmix_°©us_t
 
pmix_b‰›_∑ck_modex
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

300 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

301 
pmix_°©us_t
 
pmix_b‰›_∑ck_≥rsi°
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

302 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

303 
pmix_°©us_t
 
pmix_b‰›_∑ck_sc›e
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

304 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

305 
pmix_°©us_t
 
pmix_b‰›_∑ck_ønge
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

306 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

307 
pmix_°©us_t
 
pmix_b‰›_∑ck_cmd
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

308 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

309 
pmix_°©us_t
 
pmix_b‰›_∑ck_öfodús
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

310 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

311 
pmix_°©us_t
 
pmix_b‰›_∑ck_bo
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

312 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

313 
pmix_°©us_t
 
pmix_b‰›_∑ck_pd©a
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

314 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

315 
pmix_°©us_t
 
pmix_b‰›_∑ck_±r
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

316 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

317 
pmix_°©us_t
 
pmix_b‰›_∑ck_p°©e
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

318 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

319 
pmix_°©us_t
 
pmix_b‰›_∑ck_pöfo
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

320 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

321 
pmix_°©us_t
 
pmix_b‰›_∑ck_d¨øy
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

322 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

323 
pmix_°©us_t
 
pmix_b‰›_∑ck_quîy
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

324 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

325 
pmix_°©us_t
 
pmix_b‰›_∑ck_ønk
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

326 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

328 
pmix_°©us_t
 
pmix_b‰›_∑ck_¨øy
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

329 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

335 
pmix_°©us_t
 
pmix_b‰›_u≈ack_boﬁ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

336 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

337 
pmix_°©us_t
 
pmix_b‰›_u≈ack_byã
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

338 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

339 
pmix_°©us_t
 
pmix_b‰›_u≈ack_°rög
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

340 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

341 
pmix_°©us_t
 
pmix_b‰›_u≈ack_sizë
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

342 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

343 
pmix_°©us_t
 
pmix_b‰›_u≈ack_pid
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

344 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

346 
pmix_°©us_t
 
pmix_b‰›_u≈ack_öt
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

347 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

348 
pmix_°©us_t
 
pmix_b‰›_u≈ack_öt16
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

349 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

350 
pmix_°©us_t
 
pmix_b‰›_u≈ack_öt32
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

351 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

352 
pmix_°©us_t
 
pmix_b‰›_u≈ack_d©©y≥
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

353 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

354 
pmix_°©us_t
 
pmix_b‰›_u≈ack_öt64
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

355 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

357 
pmix_°©us_t
 
pmix_b‰›_u≈ack_Êﬂt
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

358 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

359 
pmix_°©us_t
 
pmix_b‰›_u≈ack_doubÀ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

360 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

361 
pmix_°©us_t
 
pmix_b‰›_u≈ack_timevÆ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

362 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

363 
pmix_°©us_t
 
pmix_b‰›_u≈ack_time
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

364 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

365 
pmix_°©us_t
 
pmix_b‰›_u≈ack_°©us
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

366 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

368 #i‡
PMIX_HAVE_HWLOC


369 
pmix_°©us_t
 
pmix_b‰›_u≈ack_t›o
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

370 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

372 
pmix_°©us_t
 
pmix_b‰›_u≈ack_vÆue
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

373 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

374 
pmix_°©us_t
 
pmix_b‰›_u≈ack_¥oc
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

375 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

376 
pmix_°©us_t
 
pmix_b‰›_u≈ack_≠p
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

377 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

378 
pmix_°©us_t
 
pmix_b‰›_u≈ack_öfo
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

379 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

380 
pmix_°©us_t
 
pmix_b‰›_u≈ack_buf
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

381 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

382 
pmix_°©us_t
 
pmix_b‰›_u≈ack_kvÆ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

383 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

384 
pmix_°©us_t
 
pmix_b‰›_u≈ack_modex
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

385 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

386 
pmix_°©us_t
 
pmix_b‰›_u≈ack_≥rsi°
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

387 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

388 
pmix_°©us_t
 
pmix_b‰›_u≈ack_sc›e
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

389 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

390 
pmix_°©us_t
 
pmix_b‰›_u≈ack_ønge
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

391 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

392 
pmix_°©us_t
 
pmix_b‰›_u≈ack_cmd
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

393 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

394 
pmix_°©us_t
 
pmix_b‰›_u≈ack_öfodús
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

395 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

396 
pmix_°©us_t
 
pmix_b‰›_u≈ack_bo
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

397 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

398 
pmix_°©us_t
 
pmix_b‰›_u≈ack_pd©a
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

399 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

400 
pmix_°©us_t
 
pmix_b‰›_u≈ack_±r
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

401 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

402 
pmix_°©us_t
 
pmix_b‰›_u≈ack_p°©e
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

403 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

404 
pmix_°©us_t
 
pmix_b‰›_u≈ack_pöfo
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

405 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

406 
pmix_°©us_t
 
pmix_b‰›_u≈ack_d¨øy
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

407 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

408 
pmix_°©us_t
 
pmix_b‰›_u≈ack_quîy
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

409 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

410 
pmix_°©us_t
 
pmix_b‰›_u≈ack_ønk
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

411 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

413 
pmix_°©us_t
 
pmix_b‰›_u≈ack_¨øy
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

414 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
);

421 
pmix_°©us_t
 
pmix_b‰›_°d_c›y
(**
de°
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

423 
pmix_°©us_t
 
pmix_b‰›_c›y_°rög
(**
de°
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

425 #i‡
PMIX_HAVE_HWLOC


426 
pmix_°©us_t
 
pmix_b‰›_c›y_t›o
(
hwloc_t›ﬁogy_t
 *
de°
,

427 
hwloc_t›ﬁogy_t
 
§c
,

428 
pmix_d©a_ty≥_t
 
ty≥
);

430 
pmix_°©us_t
 
pmix_b‰›_c›y_vÆue
(
pmix_vÆue_t
 **
de°
,Ömix_vÆue_à*
§c
,

431 
pmix_d©a_ty≥_t
 
ty≥
);

432 
pmix_°©us_t
 
pmix_b‰›_c›y_¥oc
(
pmix_¥oc_t
 **
de°
,Ömix_¥oc_à*
§c
,

433 
pmix_d©a_ty≥_t
 
ty≥
);

434 
pmix_°©us_t
 
pmix_b‰›_c›y_≠p
(
pmix_≠p_t
 **
de°
,Ömix_≠p_à*
§c
,

435 
pmix_d©a_ty≥_t
 
ty≥
);

436 
pmix_°©us_t
 
pmix_b‰›_c›y_öfo
(
pmix_öfo_t
 **
de°
,Ömix_öfo_à*
§c
,

437 
pmix_d©a_ty≥_t
 
ty≥
);

438 
pmix_°©us_t
 
pmix_b‰›_c›y_buf
(
pmix_buf„r_t
 **
de°
,Ömix_buf„r_à*
§c
,

439 
pmix_d©a_ty≥_t
 
ty≥
);

440 
pmix_°©us_t
 
pmix_b‰›_c›y_kvÆ
(
pmix_kvÆ_t
 **
de°
,Ömix_kvÆ_à*
§c
,

441 
pmix_d©a_ty≥_t
 
ty≥
);

442 
pmix_°©us_t
 
pmix_b‰›_c›y_modex
(
pmix_modex_d©a_t
 **
de°
,Ömix_modex_d©a_à*
§c
,

443 
pmix_d©a_ty≥_t
 
ty≥
);

444 
pmix_°©us_t
 
pmix_b‰›_c›y_≥rsi°
(
pmix_≥rsi°í˚_t
 **
de°
,Ömix_≥rsi°í˚_à*
§c
,

445 
pmix_d©a_ty≥_t
 
ty≥
);

446 
pmix_°©us_t
 
pmix_b‰›_c›y_bo
(
pmix_byã_obje˘_t
 **
de°
,Ömix_byã_obje˘_à*
§c
,

447 
pmix_d©a_ty≥_t
 
ty≥
);

448 
pmix_°©us_t
 
pmix_b‰›_c›y_pd©a
(
pmix_pd©a_t
 **
de°
,Ömix_pd©a_à*
§c
,

449 
pmix_d©a_ty≥_t
 
ty≥
);

450 
pmix_°©us_t
 
pmix_b‰›_c›y_pöfo
(
pmix_¥oc_öfo_t
 **
de°
,Ömix_¥oc_öfo_à*
§c
,

451 
pmix_d©a_ty≥_t
 
ty≥
);

452 
pmix_°©us_t
 
pmix_b‰›_c›y_d¨øy
(
pmix_d©a_¨øy_t
 **
de°
,Ömix_d©a_¨øy_à*
§c
,

453 
pmix_d©a_ty≥_t
 
ty≥
);

454 
pmix_°©us_t
 
pmix_b‰›_c›y_quîy
(
pmix_quîy_t
 **
de°
,Ömix_quîy_à*
§c
,

455 
pmix_d©a_ty≥_t
 
ty≥
);

457 
pmix_°©us_t
 
pmix_b‰›_c›y_¨øy
(
pmix_öfo_¨øy_t
 **
de°
,

458 
pmix_öfo_¨øy_t
 *
§c
,

459 
pmix_d©a_ty≥_t
 
ty≥
);

466 
pmix_°©us_t
 
pmix_b‰›_¥öt_boﬁ
(**
ouçut
, *
¥efix
, 
boﬁ
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

467 
pmix_°©us_t
 
pmix_b‰›_¥öt_byã
(**
ouçut
, *
¥efix
, 
uöt8_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

468 
pmix_°©us_t
 
pmix_b‰›_¥öt_°rög
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

469 
pmix_°©us_t
 
pmix_b‰›_¥öt_size
(**
ouçut
, *
¥efix
, 
size_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

470 
pmix_°©us_t
 
pmix_b‰›_¥öt_pid
(**
ouçut
, *
¥efix
, 
pid_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

472 
pmix_°©us_t
 
pmix_b‰›_¥öt_öt
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

473 
pmix_°©us_t
 
pmix_b‰›_¥öt_öt8
(**
ouçut
, *
¥efix
, 
öt8_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

474 
pmix_°©us_t
 
pmix_b‰›_¥öt_öt16
(**
ouçut
, *
¥efix
, 
öt16_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

475 
pmix_°©us_t
 
pmix_b‰›_¥öt_öt32
(**
ouçut
, *
¥efix
, 
öt32_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

476 
pmix_°©us_t
 
pmix_b‰›_¥öt_öt64
(**
ouçut
, *
¥efix
, 
öt64_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

478 
pmix_°©us_t
 
pmix_b‰›_¥öt_uöt
(**
ouçut
, *
¥efix
, 
uöt
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

479 
pmix_°©us_t
 
pmix_b‰›_¥öt_uöt8
(**
ouçut
, *
¥efix
, 
uöt8_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

480 
pmix_°©us_t
 
pmix_b‰›_¥öt_uöt16
(**
ouçut
, *
¥efix
, 
uöt16_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

481 
pmix_°©us_t
 
pmix_b‰›_¥öt_uöt32
(**
ouçut
, *
¥efix
, 
uöt32_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

482 
pmix_°©us_t
 
pmix_b‰›_¥öt_uöt64
(**
ouçut
, *
¥efix
, 
uöt64_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

484 
pmix_°©us_t
 
pmix_b‰›_¥öt_Êﬂt
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

485 
pmix_°©us_t
 
pmix_b‰›_¥öt_doubÀ
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

487 
pmix_°©us_t
 
pmix_b‰›_¥öt_timevÆ
(**
ouçut
, *
¥efix
, 
timevÆ
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

488 
pmix_°©us_t
 
pmix_b‰›_¥öt_time
(**
ouçut
, *
¥efix
, 
time_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

489 
pmix_°©us_t
 
pmix_b‰›_¥öt_°©us
(**
ouçut
, *
¥efix
,Ömix_°©us_à*
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

491 #i‡
PMIX_HAVE_HWLOC


492 
pmix_°©us_t
 
pmix_b‰›_¥öt_t›o
(**
ouçut
, *
¥efix
,

493 
hwloc_t›ﬁogy_t
 
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

495 
pmix_°©us_t
 
pmix_b‰›_¥öt_vÆue
(**
ouçut
, *
¥efix
, 
pmix_vÆue_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

496 
pmix_°©us_t
 
pmix_b‰›_¥öt_¥oc
(**
ouçut
, *
¥efix
,

497 
pmix_¥oc_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

498 
pmix_°©us_t
 
pmix_b‰›_¥öt_≠p
(**
ouçut
, *
¥efix
,

499 
pmix_≠p_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

500 
pmix_°©us_t
 
pmix_b‰›_¥öt_öfo
(**
ouçut
, *
¥efix
,

501 
pmix_öfo_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

502 
pmix_°©us_t
 
pmix_b‰›_¥öt_buf
(**
ouçut
, *
¥efix
,

503 
pmix_buf„r_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

504 
pmix_°©us_t
 
pmix_b‰›_¥öt_kvÆ
(**
ouçut
, *
¥efix
,

505 
pmix_kvÆ_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

506 
pmix_°©us_t
 
pmix_b‰›_¥öt_modex
(**
ouçut
, *
¥efix
,

507 
pmix_modex_d©a_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

508 
pmix_°©us_t
 
pmix_b‰›_¥öt_≥rsi°
(**
ouçut
, *
¥efix
,

509 
pmix_≥rsi°í˚_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

510 
pmix_°©us_t
 
pmix_b‰›_¥öt_sc›e
(**
ouçut
, *
¥efix
,

511 
pmix_sc›e_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

512 
pmix_°©us_t
 
pmix_b‰›_¥öt_ønge
(**
ouçut
, *
¥efix
,

513 
pmix_d©a_ønge_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

514 
pmix_°©us_t
 
pmix_b‰›_¥öt_cmd
(**
ouçut
, *
¥efix
,

515 
pmix_cmd_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

516 
pmix_°©us_t
 
pmix_b‰›_¥öt_öfodús
(**
ouçut
, *
¥efix
,

517 
pmix_öfo_dúe˘ives_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

518 
pmix_°©us_t
 
pmix_b‰›_¥öt_bo
(**
ouçut
, *
¥efix
,

519 
pmix_byã_obje˘_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

520 
pmix_°©us_t
 
pmix_b‰›_¥öt_pd©a
(**
ouçut
, *
¥efix
,

521 
pmix_pd©a_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

522 
pmix_°©us_t
 
pmix_b‰›_¥öt_±r
(**
ouçut
, *
¥efix
,

523 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

524 
pmix_°©us_t
 
pmix_b‰›_¥öt_p°©e
(**
ouçut
, *
¥efix
,

525 
pmix_¥oc_°©e_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

526 
pmix_°©us_t
 
pmix_b‰›_¥öt_pöfo
(**
ouçut
, *
¥efix
,

527 
pmix_¥oc_öfo_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

528 
pmix_°©us_t
 
pmix_b‰›_¥öt_d¨øy
(**
ouçut
, *
¥efix
,

529 
pmix_d©a_¨øy_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

530 
pmix_°©us_t
 
pmix_b‰›_¥öt_quîy
(**
ouçut
, *
¥efix
,

531 
pmix_quîy_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

532 
pmix_°©us_t
 
pmix_b‰›_¥öt_ønk
(**
ouçut
, *
¥efix
,

533 
pmix_ønk_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
);

535 
pmix_°©us_t
 
pmix_b‰›_¥öt_¨øy
(**
ouçut
, *
¥efix
,

536 
pmix_öfo_¨øy_t
 *
§c
,

537 
pmix_d©a_ty≥_t
 
ty≥
);

544 * 
pmix_b‰›_buf„r_exãnd
(
pmix_buf„r_t
 *
b±r
, 
size_t
 
byãs_to_add
);

546 
boﬁ
 
pmix_b‰›_too_smÆl
(
pmix_buf„r_t
 *
buf„r
, 
size_t
 
byãs_ªqd
);

548 
pmix_b‰›_ty≥_öfo_t
* 
pmix_b‰›_föd_ty≥
(
pmix_d©a_ty≥_t
 
ty≥
);

550 
pmix_°©us_t
 
pmix_b‰›_°‹e_d©a_ty≥
(
pmix_buf„r_t
 *
buf„r
, 
pmix_d©a_ty≥_t
 
ty≥
);

552 
pmix_°©us_t
 
pmix_b‰›_gë_d©a_ty≥
(
pmix_buf„r_t
 *
buf„r
, 
pmix_d©a_ty≥_t
 *
ty≥
);

554 
	gEND_C_DECLS


	@buffer_ops/internal_functions.c

21 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

24 
	~<°dio.h
>

25 #ifde‡
HAVE_UNISTD_H


26 
	~<uni°d.h
>

29 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

31 
	~"§c/buf„r_›s/öã∫Æ.h
"

37 * 
	$pmix_b‰›_buf„r_exãnd
(
pmix_buf„r_t
 *
buf„r
, 
size_t
 
byãs_to_add
)

39 
size_t
 
ªquúed
, 
to_Æloc
;

40 
size_t
 
∑ck_off£t
, 
u≈ack_off£t
;

44 i‡((
buf„r
->
byãs_Æloˇãd
 - buf„r->
byãs_u£d
Ë>
byãs_to_add
) {

45  
buf„r
->
∑ck_±r
;

48 
ªquúed
 = 
buf„r
->
byãs_u£d
 + 
byãs_to_add
;

49 i‡(
ªquúed
 >
pmix_b‰›_thªshﬁd_size
) {

50 
to_Æloc
 = ((
ªquúed
 + 
pmix_b‰›_thªshﬁd_size
 - 1)

51 / 
pmix_b‰›_thªshﬁd_size
) *Ömix_bfrop_threshold_size;

53 
to_Æloc
 = 
buf„r
->
byãs_Æloˇãd
;

54 if(0 =
to_Æloc
) {

55 
to_Æloc
 = 
pmix_b‰›_öôül_size
;

57 
to_Æloc
 < 
ªquúed
) {

58 
to_Æloc
 <<= 1;

62 i‡(
NULL
 !
buf„r
->
ba£_±r
) {

63 
∑ck_off£t
 = ((*Ë
buf„r
->
∑ck_±r
Ë- ((*Ëbuf„r->
ba£_±r
);

64 
u≈ack_off£t
 = ((*Ë
buf„r
->
u≈ack_±r
) -

65 ((*Ë
buf„r
->
ba£_±r
);

66 
buf„r
->
ba£_±r
 = (*)
	`ªÆloc
(buf„r->ba£_±r, 
to_Æloc
);

67 
	`mem£t
(
buf„r
->
ba£_±r
 + 
∑ck_off£t
, 0, 
to_Æloc
 - buf„r->
byãs_Æloˇãd
);

69 
∑ck_off£t
 = 0;

70 
u≈ack_off£t
 = 0;

71 
buf„r
->
byãs_u£d
 = 0;

72 
buf„r
->
ba£_±r
 = (*)
	`mÆloc
(
to_Æloc
);

73 
	`mem£t
(
buf„r
->
ba£_±r
, 0, 
to_Æloc
);

76 i‡(
NULL
 =
buf„r
->
ba£_±r
) {

77  
NULL
;

79 
buf„r
->
∑ck_±r
 = ((*Ëbuf„r->
ba£_±r
Ë+ 
∑ck_off£t
;

80 
buf„r
->
u≈ack_±r
 = ((*Ëbuf„r->
ba£_±r
Ë+ 
u≈ack_off£t
;

81 
buf„r
->
byãs_Æloˇãd
 = 
to_Æloc
;

85  
buf„r
->
∑ck_±r
;

86 
	}
}

92 
boﬁ
 
	$pmix_b‰›_too_smÆl
(
pmix_buf„r_t
 *
buf„r
, 
size_t
 
byãs_ªqd
)

94 
size_t
 
byãs_ªmaöög_∑cked
;

96 i‡(
buf„r
->
∑ck_±r
 < buf„r->
u≈ack_±r
) {

97  
åue
;

100 
byãs_ªmaöög_∑cked
 = 
buf„r
->
∑ck_±r
 - buf„r->
u≈ack_±r
;

102 i‡(
byãs_ªmaöög_∑cked
 < 
byãs_ªqd
) {

106  
åue
;

109  
Ál£
;

110 
	}
}

112 
pmix_°©us_t
 
	$pmix_b‰›_°‹e_d©a_ty≥
(
pmix_buf„r_t
 *
buf„r
, 
pmix_d©a_ty≥_t
 
ty≥
)

115  
	`pmix_b‰›_∑ck_d©©y≥
(
buf„r
, &
ty≥
, 1, 
PMIX_DATA_TYPE
);

116 
	}
}

118 
pmix_°©us_t
 
	$pmix_b‰›_gë_d©a_ty≥
(
pmix_buf„r_t
 *
buf„r
, 
pmix_d©a_ty≥_t
 *
ty≥
)

120 
öt32_t
 
n
=1;

121  
	`pmix_b‰›_u≈ack_d©©y≥
(
buf„r
, 
ty≥
, &
n
, 
PMIX_DATA_TYPE
);

122 
	}
}

	@buffer_ops/open_close.c

27 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

29 
	~<pmix_comm⁄.h
>

31 #ifde‡
HAVE_STRING_H


32 
	~<°rög.h
>

35 
	~"§c/utû/¨gv.h
"

36 
	~"§c/utû/îr‹.h
"

37 
	~"§c/buf„r_›s/öã∫Æ.h
"

42 
boﬁ
 
	gpmix_b‰›_öôülized
 = 
Ál£
;

43 
size_t
 
	gpmix_b‰›_öôül_size
 = 0;

44 
size_t
 
	gpmix_b‰›_thªshﬁd_size
 = 0;

45 
pmix_poöãr_¨øy_t
 
	gpmix_b‰›_ty≥s
 = {{0}};

46 
pmix_d©a_ty≥_t
 
	gpmix_b‰›_num_ªg_ty≥s
 = 
PMIX_UNDEF
;

47 
pmix_b‰›_buf„r_ty≥_t
 
	gpmix_deÁu…_buf_ty≥
 = 
PMIX_BFROP_BUFFER_NON_DESC
;

50 
PMIX_EXPORT


51 
pmix_b‰›_t
 
	gpmix_b‰›
 = {

52 
pmix_b‰›_∑ck
,

53 
pmix_b‰›_u≈ack
,

54 
pmix_b‰›_c›y
,

55 
pmix_b‰›_¥öt
,

56 
pmix_b‰›_c›y_∑ylﬂd
,

63 
	$pmix_buf„r_c⁄°ru˘
 (
pmix_buf„r_t
* 
buf„r
)

66 
buf„r
->
ty≥
 = 
pmix_deÁu…_buf_ty≥
;

69 
buf„r
->
ba£_±r
 = buf„r->
∑ck_±r
 = buf„r->
u≈ack_±r
 = 
NULL
;

70 
buf„r
->
byãs_Æloˇãd
 = buf„r->
byãs_u£d
 = 0;

71 
	}
}

73 
	$pmix_buf„r_de°ru˘
 (
pmix_buf„r_t
* 
buf„r
)

75 i‡(
NULL
 !
buf„r
->
ba£_±r
) {

76 
	`‰ì
 (
buf„r
->
ba£_±r
);

78 
	}
}

80 
PMIX_CLASS_INSTANCE
(
pmix_buf„r_t
,

81 
pmix_obje˘_t
,

82 
pmix_buf„r_c⁄°ru˘
,

83 
pmix_buf„r_de°ru˘
);

86 
	$pmix_b‰›_ty≥_öfo_c⁄°ru˘
(
pmix_b‰›_ty≥_öfo_t
 *
obj
)

88 
obj
->
odti_«me
 = 
NULL
;

89 
obj
->
odti_∑ck_‚
 = 
NULL
;

90 
obj
->
odti_u≈ack_‚
 = 
NULL
;

91 
obj
->
odti_c›y_‚
 = 
NULL
;

92 
obj
->
odti_¥öt_‚
 = 
NULL
;

93 
	}
}

95 
	$pmix_b‰›_ty≥_öfo_de°ru˘
(
pmix_b‰›_ty≥_öfo_t
 *
obj
)

97 i‡(
NULL
 !
obj
->
odti_«me
) {

98 
	`‰ì
(
obj
->
odti_«me
);

100 
	}
}

102 
PMIX_CLASS_INSTANCE
(
pmix_b‰›_ty≥_öfo_t
, 
pmix_obje˘_t
,

103 
pmix_b‰›_ty≥_öfo_c⁄°ru˘
,

104 
pmix_b‰›_ty≥_öfo_de°ru˘
);

106 
	$kvc⁄
(
pmix_kvÆ_t
 *
k
)

108 
k
->
key
 = 
NULL
;

109 
k
->
vÆue
 = 
NULL
;

110 
	}
}

111 
	$kvdes
(
pmix_kvÆ_t
 *
k
)

113 i‡(
NULL
 !
k
->
key
) {

114 
	`‰ì
(
k
->
key
);

116 i‡(
NULL
 !
k
->
vÆue
) {

117 
	`PMIX_VALUE_RELEASE
(
k
->
vÆue
);

119 
	}
}

120 
PMIX_CLASS_INSTANCE
(
pmix_kvÆ_t
,

121 
pmix_li°_ôem_t
,

122 
kvc⁄
, 
kvdes
);

124 
	$rc⁄
(
pmix_ªgex_ønge_t
 *
p
)

126 
p
->
°¨t
 = 0;

127 
p
->
˙t
 = 0;

128 
	}
}

129 
PMIX_CLASS_INSTANCE
(
pmix_ªgex_ønge_t
,

130 
pmix_li°_ôem_t
,

131 
rc⁄
, 
NULL
);

133 
	$rvc⁄
(
pmix_ªgex_vÆue_t
 *
p
)

135 
p
->
¥efix
 = 
NULL
;

136 
p
->
suffix
 = 
NULL
;

137 
p
->
num_digôs
 = 0;

138 
	`PMIX_CONSTRUCT
(&
p
->
ønges
, 
pmix_li°_t
);

139 
	}
}

140 
	$rvdes
(
pmix_ªgex_vÆue_t
 *
p
)

142 i‡(
NULL
 !
p
->
¥efix
) {

143 
	`‰ì
(
p
->
¥efix
);

145 i‡(
NULL
 !
p
->
suffix
) {

146 
	`‰ì
(
p
->
suffix
);

148 
	`PMIX_LIST_DESTRUCT
(&
p
->
ønges
);

149 
	}
}

150 
PMIX_CLASS_INSTANCE
(
pmix_ªgex_vÆue_t
,

151 
pmix_li°_ôem_t
,

152 
rvc⁄
, 
rvdes
);

154 
PMIX_EXPORT


155 
pmix_°©us_t
 
	$pmix_b‰›_›í
()

157 
pmix_°©us_t
 
rc
;

159 i‡(
pmix_b‰›_öôülized
) {

160  
PMIX_SUCCESS
;

167 #i‡
PMIX_ENABLE_DEBUG


168 
pmix_deÁu…_buf_ty≥
 = 
PMIX_BFROP_BUFFER_FULLY_DESC
;

170 
pmix_deÁu…_buf_ty≥
 = 
PMIX_BFROP_BUFFER_NON_DESC
;

174 
	`PMIX_CONSTRUCT
(&
pmix_b‰›_ty≥s
, 
pmix_poöãr_¨øy_t
);

175 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_poöãr_¨øy_öô
(&
pmix_b‰›_ty≥s
, 64, 255, 64))) {

176  
rc
;

178 
pmix_b‰›_num_ªg_ty≥s
 = 
PMIX_UNDEF
;

179 
pmix_b‰›_thªshﬁd_size
 = 
PMIX_BFROP_DEFAULT_THRESHOLD_SIZE
;

180 
pmix_b‰›_öôül_size
 = 1;

183 
	`PMIX_REGISTER_TYPE
("PMIX_BOOL", 
PMIX_BOOL
,

184 
pmix_b‰›_∑ck_boﬁ
,

185 
pmix_b‰›_u≈ack_boﬁ
,

186 
pmix_b‰›_°d_c›y
,

187 
pmix_b‰›_¥öt_boﬁ
);

189 
	`PMIX_REGISTER_TYPE
("PMIX_BYTE", 
PMIX_BYTE
,

190 
pmix_b‰›_∑ck_byã
,

191 
pmix_b‰›_u≈ack_byã
,

192 
pmix_b‰›_°d_c›y
,

193 
pmix_b‰›_¥öt_byã
);

195 
	`PMIX_REGISTER_TYPE
("PMIX_STRING", 
PMIX_STRING
,

196 
pmix_b‰›_∑ck_°rög
,

197 
pmix_b‰›_u≈ack_°rög
,

198 
pmix_b‰›_c›y_°rög
,

199 
pmix_b‰›_¥öt_°rög
);

201 
	`PMIX_REGISTER_TYPE
("PMIX_SIZE", 
PMIX_SIZE
,

202 
pmix_b‰›_∑ck_sizë
,

203 
pmix_b‰›_u≈ack_sizë
,

204 
pmix_b‰›_°d_c›y
,

205 
pmix_b‰›_¥öt_size
);

207 
	`PMIX_REGISTER_TYPE
("PMIX_PID", 
PMIX_PID
,

208 
pmix_b‰›_∑ck_pid
,

209 
pmix_b‰›_u≈ack_pid
,

210 
pmix_b‰›_°d_c›y
,

211 
pmix_b‰›_¥öt_pid
);

213 
	`PMIX_REGISTER_TYPE
("PMIX_INT", 
PMIX_INT
,

214 
pmix_b‰›_∑ck_öt
,

215 
pmix_b‰›_u≈ack_öt
,

216 
pmix_b‰›_°d_c›y
,

217 
pmix_b‰›_¥öt_öt
);

219 
	`PMIX_REGISTER_TYPE
("PMIX_INT8", 
PMIX_INT8
,

220 
pmix_b‰›_∑ck_byã
,

221 
pmix_b‰›_u≈ack_byã
,

222 
pmix_b‰›_°d_c›y
,

223 
pmix_b‰›_¥öt_öt8
);

225 
	`PMIX_REGISTER_TYPE
("PMIX_INT16", 
PMIX_INT16
,

226 
pmix_b‰›_∑ck_öt16
,

227 
pmix_b‰›_u≈ack_öt16
,

228 
pmix_b‰›_°d_c›y
,

229 
pmix_b‰›_¥öt_öt16
);

231 
	`PMIX_REGISTER_TYPE
("PMIX_INT32", 
PMIX_INT32
,

232 
pmix_b‰›_∑ck_öt32
,

233 
pmix_b‰›_u≈ack_öt32
,

234 
pmix_b‰›_°d_c›y
,

235 
pmix_b‰›_¥öt_öt32
);

237 
	`PMIX_REGISTER_TYPE
("PMIX_INT64", 
PMIX_INT64
,

238 
pmix_b‰›_∑ck_öt64
,

239 
pmix_b‰›_u≈ack_öt64
,

240 
pmix_b‰›_°d_c›y
,

241 
pmix_b‰›_¥öt_öt64
);

243 
	`PMIX_REGISTER_TYPE
("PMIX_UINT", 
PMIX_UINT
,

244 
pmix_b‰›_∑ck_öt
,

245 
pmix_b‰›_u≈ack_öt
,

246 
pmix_b‰›_°d_c›y
,

247 
pmix_b‰›_¥öt_uöt
);

249 
	`PMIX_REGISTER_TYPE
("PMIX_UINT8", 
PMIX_UINT8
,

250 
pmix_b‰›_∑ck_byã
,

251 
pmix_b‰›_u≈ack_byã
,

252 
pmix_b‰›_°d_c›y
,

253 
pmix_b‰›_¥öt_uöt8
);

255 
	`PMIX_REGISTER_TYPE
("PMIX_UINT16", 
PMIX_UINT16
,

256 
pmix_b‰›_∑ck_öt16
,

257 
pmix_b‰›_u≈ack_öt16
,

258 
pmix_b‰›_°d_c›y
,

259 
pmix_b‰›_¥öt_uöt16
);

261 
	`PMIX_REGISTER_TYPE
("PMIX_UINT32", 
PMIX_UINT32
,

262 
pmix_b‰›_∑ck_öt32
,

263 
pmix_b‰›_u≈ack_öt32
,

264 
pmix_b‰›_°d_c›y
,

265 
pmix_b‰›_¥öt_uöt32
);

267 
	`PMIX_REGISTER_TYPE
("PMIX_UINT64", 
PMIX_UINT64
,

268 
pmix_b‰›_∑ck_öt64
,

269 
pmix_b‰›_u≈ack_öt64
,

270 
pmix_b‰›_°d_c›y
,

271 
pmix_b‰›_¥öt_uöt64
);

273 
	`PMIX_REGISTER_TYPE
("PMIX_FLOAT", 
PMIX_FLOAT
,

274 
pmix_b‰›_∑ck_Êﬂt
,

275 
pmix_b‰›_u≈ack_Êﬂt
,

276 
pmix_b‰›_°d_c›y
,

277 
pmix_b‰›_¥öt_Êﬂt
);

279 
	`PMIX_REGISTER_TYPE
("PMIX_DOUBLE", 
PMIX_DOUBLE
,

280 
pmix_b‰›_∑ck_doubÀ
,

281 
pmix_b‰›_u≈ack_doubÀ
,

282 
pmix_b‰›_°d_c›y
,

283 
pmix_b‰›_¥öt_doubÀ
);

285 
	`PMIX_REGISTER_TYPE
("PMIX_TIMEVAL", 
PMIX_TIMEVAL
,

286 
pmix_b‰›_∑ck_timevÆ
,

287 
pmix_b‰›_u≈ack_timevÆ
,

288 
pmix_b‰›_°d_c›y
,

289 
pmix_b‰›_¥öt_timevÆ
);

291 
	`PMIX_REGISTER_TYPE
("PMIX_TIME", 
PMIX_TIME
,

292 
pmix_b‰›_∑ck_time
,

293 
pmix_b‰›_u≈ack_time
,

294 
pmix_b‰›_°d_c›y
,

295 
pmix_b‰›_¥öt_time
);

297 
	`PMIX_REGISTER_TYPE
("PMIX_STATUS", 
PMIX_STATUS
,

298 
pmix_b‰›_∑ck_°©us
,

299 
pmix_b‰›_u≈ack_°©us
,

300 
pmix_b‰›_°d_c›y
,

301 
pmix_b‰›_¥öt_°©us
);

303 #i‡
PMIX_HAVE_HWLOC


304 
	`PMIX_REGISTER_TYPE
("PMIX_HWLOC_TOPO", 
PMIX_HWLOC_TOPO
,

305 
pmix_b‰›_∑ck_t›o
,

306 
pmix_b‰›_u≈ack_t›o
,

307 
pmix_b‰›_c›y_t›o
,

308 
pmix_b‰›_¥öt_t›o
);

311 
	`PMIX_REGISTER_TYPE
("PMIX_VALUE", 
PMIX_VALUE
,

312 
pmix_b‰›_∑ck_vÆue
,

313 
pmix_b‰›_u≈ack_vÆue
,

314 
pmix_b‰›_c›y_vÆue
,

315 
pmix_b‰›_¥öt_vÆue
);

317 
	`PMIX_REGISTER_TYPE
("PMIX_PROC", 
PMIX_PROC
,

318 
pmix_b‰›_∑ck_¥oc
,

319 
pmix_b‰›_u≈ack_¥oc
,

320 
pmix_b‰›_c›y_¥oc
,

321 
pmix_b‰›_¥öt_¥oc
);

323 
	`PMIX_REGISTER_TYPE
("PMIX_APP", 
PMIX_APP
,

324 
pmix_b‰›_∑ck_≠p
,

325 
pmix_b‰›_u≈ack_≠p
,

326 
pmix_b‰›_c›y_≠p
,

327 
pmix_b‰›_¥öt_≠p
);

329 
	`PMIX_REGISTER_TYPE
("PMIX_INFO", 
PMIX_INFO
,

330 
pmix_b‰›_∑ck_öfo
,

331 
pmix_b‰›_u≈ack_öfo
,

332 
pmix_b‰›_c›y_öfo
,

333 
pmix_b‰›_¥öt_öfo
);

335 
	`PMIX_REGISTER_TYPE
("PMIX_PDATA", 
PMIX_PDATA
,

336 
pmix_b‰›_∑ck_pd©a
,

337 
pmix_b‰›_u≈ack_pd©a
,

338 
pmix_b‰›_c›y_pd©a
,

339 
pmix_b‰›_¥öt_pd©a
);

341 
	`PMIX_REGISTER_TYPE
("PMIX_BUFFER", 
PMIX_BUFFER
,

342 
pmix_b‰›_∑ck_buf
,

343 
pmix_b‰›_u≈ack_buf
,

344 
pmix_b‰›_c›y_buf
,

345 
pmix_b‰›_¥öt_buf
);

347 
	`PMIX_REGISTER_TYPE
("PMIX_BYTE_OBJECT", 
PMIX_BYTE_OBJECT
,

348 
pmix_b‰›_∑ck_bo
,

349 
pmix_b‰›_u≈ack_bo
,

350 
pmix_b‰›_c›y_bo
,

351 
pmix_b‰›_¥öt_bo
);

353 
	`PMIX_REGISTER_TYPE
("PMIX_KVAL", 
PMIX_KVAL
,

354 
pmix_b‰›_∑ck_kvÆ
,

355 
pmix_b‰›_u≈ack_kvÆ
,

356 
pmix_b‰›_c›y_kvÆ
,

357 
pmix_b‰›_¥öt_kvÆ
);

359 
	`PMIX_REGISTER_TYPE
("PMIX_MODEX", 
PMIX_MODEX
,

360 
pmix_b‰›_∑ck_modex
,

361 
pmix_b‰›_u≈ack_modex
,

362 
pmix_b‰›_c›y_modex
,

363 
pmix_b‰›_¥öt_modex
);

365 
	`PMIX_REGISTER_TYPE
("PMIX_PERSIST", 
PMIX_PERSIST
,

366 
pmix_b‰›_∑ck_≥rsi°
,

367 
pmix_b‰›_u≈ack_≥rsi°
,

368 
pmix_b‰›_°d_c›y
,

369 
pmix_b‰›_¥öt_≥rsi°
);

371 
	`PMIX_REGISTER_TYPE
("PMIX_POINTER", 
PMIX_POINTER
,

372 
pmix_b‰›_∑ck_±r
,

373 
pmix_b‰›_u≈ack_±r
,

374 
pmix_b‰›_°d_c›y
,

375 
pmix_b‰›_¥öt_±r
);

377 
	`PMIX_REGISTER_TYPE
("PMIX_SCOPE", 
PMIX_SCOPE
,

378 
pmix_b‰›_∑ck_sc›e
,

379 
pmix_b‰›_u≈ack_sc›e
,

380 
pmix_b‰›_°d_c›y
,

381 
pmix_b‰›_¥öt_sc›e
);

383 
	`PMIX_REGISTER_TYPE
("PMIX_DATA_RANGE", 
PMIX_DATA_RANGE
,

384 
pmix_b‰›_∑ck_ønge
,

385 
pmix_b‰›_u≈ack_ønge
,

386 
pmix_b‰›_°d_c›y
,

387 
pmix_b‰›_¥öt_ønge
);

389 
	`PMIX_REGISTER_TYPE
("PMIX_COMMAND", 
PMIX_COMMAND
,

390 
pmix_b‰›_∑ck_cmd
,

391 
pmix_b‰›_u≈ack_cmd
,

392 
pmix_b‰›_°d_c›y
,

393 
pmix_b‰›_¥öt_cmd
);

395 
	`PMIX_REGISTER_TYPE
("PMIX_INFO_DIRECTIVES", 
PMIX_INFO_DIRECTIVES
,

396 
pmix_b‰›_∑ck_öfodús
,

397 
pmix_b‰›_u≈ack_öfodús
,

398 
pmix_b‰›_°d_c›y
,

399 
pmix_b‰›_¥öt_öfodús
);

401 
	`PMIX_REGISTER_TYPE
("PMIX_PROC_STATE", 
PMIX_PROC_STATE
,

402 
pmix_b‰›_∑ck_p°©e
,

403 
pmix_b‰›_u≈ack_p°©e
,

404 
pmix_b‰›_°d_c›y
,

405 
pmix_b‰›_¥öt_p°©e
);

407 
	`PMIX_REGISTER_TYPE
("PMIX_PROC_INFO", 
PMIX_PROC_INFO
,

408 
pmix_b‰›_∑ck_pöfo
,

409 
pmix_b‰›_u≈ack_pöfo
,

410 
pmix_b‰›_c›y_pöfo
,

411 
pmix_b‰›_¥öt_pöfo
);

413 
	`PMIX_REGISTER_TYPE
("PMIX_DATA_ARRAY", 
PMIX_DATA_ARRAY
,

414 
pmix_b‰›_∑ck_d¨øy
,

415 
pmix_b‰›_u≈ack_d¨øy
,

416 
pmix_b‰›_c›y_d¨øy
,

417 
pmix_b‰›_¥öt_d¨øy
);

419 
	`PMIX_REGISTER_TYPE
("PMIX_PROC_RANK", 
PMIX_PROC_RANK
,

420 
pmix_b‰›_∑ck_ønk
,

421 
pmix_b‰›_u≈ack_ønk
,

422 
pmix_b‰›_°d_c›y
,

423 
pmix_b‰›_¥öt_ønk
);

425 
	`PMIX_REGISTER_TYPE
("PMIX_QUERY", 
PMIX_QUERY
,

426 
pmix_b‰›_∑ck_quîy
,

427 
pmix_b‰›_u≈ack_quîy
,

428 
pmix_b‰›_c›y_quîy
,

429 
pmix_b‰›_¥öt_quîy
);

432 
	`PMIX_REGISTER_TYPE
("PMIX_INFO_ARRAY", 
PMIX_INFO_ARRAY
,

433 
pmix_b‰›_∑ck_¨øy
,

434 
pmix_b‰›_u≈ack_¨øy
,

435 
pmix_b‰›_c›y_¨øy
,

436 
pmix_b‰›_¥öt_¨øy
);

440 
pmix_b‰›_öôülized
 = 
åue
;

441  
PMIX_SUCCESS
;

442 
	}
}

445 
pmix_°©us_t
 
	$pmix_b‰›_˛o£
()

447 
öt32_t
 
i
;

449 i‡(!
pmix_b‰›_öôülized
) {

450  
PMIX_SUCCESS
;

452 
pmix_b‰›_öôülized
 = 
Ál£
;

454 
i
 = 0 ; i < 
	`pmix_poöãr_¨øy_gë_size
(&
pmix_b‰›_ty≥s
) ; ++i) {

455 
pmix_b‰›_ty≥_öfo_t
 *
öfo
 = (pmix_b‰›_ty≥_öfo_t*)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_b‰›_ty≥s
, 
i
);

456 i‡(
NULL
 !
öfo
) {

457 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_b‰›_ty≥s
, 
i
, 
NULL
);

458 
	`PMIX_RELEASE
(
öfo
);

462 
	`PMIX_DESTRUCT
(&
pmix_b‰›_ty≥s
);

464  
PMIX_SUCCESS
;

465 
	}
}

468 
PMIX_EXPORT
 
	$pmix_vÆue_lﬂd
(
pmix_vÆue_t
 *
v
, *
d©a
,

469 
pmix_d©a_ty≥_t
 
ty≥
)

471 
pmix_byã_obje˘_t
 *
bo
;

473 
v
->
ty≥
 =Åype;

474 i‡(
NULL
 =
d©a
) {

476 
	`mem£t
(&
v
->
d©a
, 0, (v->data));

478 
ty≥
) {

479 
PMIX_UNDEF
:

481 
PMIX_BOOL
:

482 
	`mem˝y
(&(
v
->
d©a
.
Êag
), data, 1);

484 
PMIX_BYTE
:

485 
	`mem˝y
(&(
v
->
d©a
.
byã
), data, 1);

487 
PMIX_STRING
:

488 
v
->
d©a
.
°rög
 = 
	`°rdup
(data);

490 
PMIX_SIZE
:

491 
	`mem˝y
(&(
v
->
d©a
.
size
), d©a, (
size_t
));

493 
PMIX_PID
:

494 
	`mem˝y
(&(
v
->
d©a
.
pid
), d©a, (
pid_t
));

496 
PMIX_INT
:

497 
	`mem˝y
(&(
v
->
d©a
.
öãgî
), data, ());

499 
PMIX_INT8
:

500 
	`mem˝y
(&(
v
->
d©a
.
öt8
), data, 1);

502 
PMIX_INT16
:

503 
	`mem˝y
(&(
v
->
d©a
.
öt16
), data, 2);

505 
PMIX_INT32
:

506 
	`mem˝y
(&(
v
->
d©a
.
öt32
), data, 4);

508 
PMIX_INT64
:

509 
	`mem˝y
(&(
v
->
d©a
.
öt64
), data, 8);

511 
PMIX_UINT
:

512 
	`mem˝y
(&(
v
->
d©a
.
uöt
), data, ());

514 
PMIX_UINT8
:

515 
	`mem˝y
(&(
v
->
d©a
.
uöt8
), data, 1);

517 
PMIX_UINT16
:

518 
	`mem˝y
(&(
v
->
d©a
.
uöt16
), data, 2);

520 
PMIX_UINT32
:

521 
	`mem˝y
(&(
v
->
d©a
.
uöt32
), data, 4);

523 
PMIX_UINT64
:

524 
	`mem˝y
(&(
v
->
d©a
.
uöt64
), data, 8);

526 
PMIX_FLOAT
:

527 
	`mem˝y
(&(
v
->
d©a
.
fvÆ
), data, ());

529 
PMIX_DOUBLE
:

530 
	`mem˝y
(&(
v
->
d©a
.
dvÆ
), data, ());

532 
PMIX_TIMEVAL
:

533 
	`mem˝y
(&(
v
->
d©a
.
tv
), d©a, (
timevÆ
));

535 
PMIX_STATUS
:

536 
	`mem˝y
(&(
v
->
d©a
.
°©us
), d©a, (
pmix_°©us_t
));

538 
PMIX_BYTE_OBJECT
:

539 
bo
 = (
pmix_byã_obje˘_t
*)
d©a
;

540 
v
->
d©a
.
bo
.
byãs
 = bo->bytes;

541 
	`mem˝y
(&(
v
->
d©a
.
bo
.
size
), &bo->size, (
size_t
));

543 
PMIX_POINTER
:

544 
	`mem˝y
(&(
v
->
d©a
.
±r
), data, (*));

551 
	}
}

553 
pmix_°©us_t
 
	$pmix_vÆue_u∆ﬂd
(
pmix_vÆue_t
 *
kv
, **
d©a
,

554 
size_t
 *
sz
, 
pmix_d©a_ty≥_t
 
ty≥
)

556 
pmix_°©us_t
 
rc
;

558 
rc
 = 
PMIX_SUCCESS
;

559 i‡(
ty≥
 !
kv
->type) {

560 
rc
 = 
PMIX_ERR_TYPE_MISMATCH
;

561 } i‡(
NULL
 =
d©a
 ||

562 (
NULL
 =*
d©a
 && 
PMIX_STRING
 !
ty≥
 && 
PMIX_BYTE_OBJECT
 !=Åype)) {

563 
rc
 = 
PMIX_ERR_BAD_PARAM
;

565 
ty≥
) {

566 
PMIX_UNDEF
:

567 
rc
 = 
PMIX_ERR_UNKNOWN_DATA_TYPE
;

569 
PMIX_BOOL
:

570 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
Êag
), 1);

571 *
sz
 = 1;

573 
PMIX_BYTE
:

574 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
byã
), 1);

575 *
sz
 = 1;

577 
PMIX_STRING
:

578 i‡(
NULL
 !
kv
->
d©a
.
°rög
) {

579 *
d©a
 = 
	`°rdup
(
kv
->d©a.
°rög
);

580 *
sz
 = 
	`°æí
(
kv
->
d©a
.
°rög
);

583 
PMIX_SIZE
:

584 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
size
), (
size_t
));

585 *
sz
 = (
size_t
);

587 
PMIX_PID
:

588 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
pid
), (
pid_t
));

589 *
sz
 = (
pid_t
);

591 
PMIX_INT
:

592 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
öãgî
), ());

593 *
sz
 = ();

595 
PMIX_INT8
:

596 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
öt8
), 1);

597 *
sz
 = 1;

599 
PMIX_INT16
:

600 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
öt16
), 2);

601 *
sz
 = 2;

603 
PMIX_INT32
:

604 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
öt32
), 4);

605 *
sz
 = 4;

607 
PMIX_INT64
:

608 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
öt64
), 8);

609 *
sz
 = 8;

611 
PMIX_UINT
:

612 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
uöt
), ());

613 *
sz
 = ();

615 
PMIX_UINT8
:

616 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
uöt8
), 1);

617 *
sz
 = 1;

619 
PMIX_UINT16
:

620 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
uöt16
), 2);

621 *
sz
 = 2;

623 
PMIX_UINT32
:

624 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
uöt32
), 4);

625 *
sz
 = 4;

627 
PMIX_UINT64
:

628 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
uöt64
), 8);

629 *
sz
 = 8;

631 
PMIX_FLOAT
:

632 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
fvÆ
), ());

633 *
sz
 = ();

635 
PMIX_DOUBLE
:

636 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
dvÆ
), ());

637 *
sz
 = ();

639 
PMIX_TIMEVAL
:

640 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
tv
), (
timevÆ
));

641 *
sz
 = (
timevÆ
);

643 
PMIX_STATUS
:

644 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
°©us
), (
pmix_°©us_t
));

645 *
sz
 = (
pmix_°©us_t
);

647 
PMIX_BYTE_OBJECT
:

648 i‡(
NULL
 !
kv
->
d©a
.
bo
.
byãs
 && 0 < kv->d©a.bo.
size
) {

649 *
d©a
 = 
kv
->d©a.
bo
.
byãs
;

650 *
sz
 = 
kv
->
d©a
.
bo
.
size
;

652 *
d©a
 = 
NULL
;

653 *
sz
 = 0;

656 
PMIX_POINTER
:

657 
	`mem˝y
(*
d©a
, &(
kv
->d©a.
±r
), (*));

658 *
sz
 = (*);

662 
rc
 = 
PMIX_ERROR
;

666  
rc
;

667 
	}
}

	@buffer_ops/pack.c

26 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 
	~<§c/ö˛ude/ty≥s.h
>

30 #ifde‡
HAVE_ARPA_INET_H


31 
	~<¨∑/öë.h
>

34 
	~"§c/utû/¨gv.h
"

35 
	~"§c/utû/îr‹.h
"

36 
	~"§c/utû/ouçut.h
"

37 
	~"§c/buf„r_›s/öã∫Æ.h
"

39 
pmix_°©us_t
 
	$pmix_b‰›_∑ck
(
pmix_buf„r_t
 *
buf„r
,

40 c⁄° *
§c
, 
öt32_t
 
num_vÆs
,

41 
pmix_d©a_ty≥_t
 
ty≥
)

43 
pmix_°©us_t
 
rc
;

46 i‡(
NULL
 =
buf„r
) {

47  
PMIX_ERR_BAD_PARAM
;

51 i‡(
PMIX_BFROP_BUFFER_FULLY_DESC
 =
buf„r
->
ty≥
) {

52 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_°‹e_d©a_ty≥
(
buf„r
, 
PMIX_INT32
))) {

53  
rc
;

56 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_∑ck_öt32
(
buf„r
, &
num_vÆs
, 1, 
PMIX_INT32
))) {

57  
rc
;

61  
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
§c
, 
num_vÆs
, 
ty≥
);

62 
	}
}

64 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_buf„r
(
pmix_buf„r_t
 *
buf„r
,

65 c⁄° *
§c
, 
öt32_t
 
num_vÆs
,

66 
pmix_d©a_ty≥_t
 
ty≥
)

68 
pmix_°©us_t
 
rc
;

69 
pmix_b‰›_ty≥_öfo_t
 *
öfo
;

71 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_bfrop_pack_buffer( %p, %p, %lu, %d )\n",

72 (*)
buf„r
, 
§c
, ()
num_vÆs
, ()
ty≥
);

75 i‡(
PMIX_BFROP_BUFFER_FULLY_DESC
 =
buf„r
->
ty≥
) {

76 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_°‹e_d©a_ty≥
(
buf„r
, 
ty≥
))) {

77  
rc
;

83 i‡(
NULL
 =(
öfo
 = (
pmix_b‰›_ty≥_öfo_t
*)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_b‰›_ty≥s
, 
ty≥
))) {

84  
PMIX_ERR_PACK_FAILURE
;

87  
öfo
->
	`odti_∑ck_‚
(
buf„r
, 
§c
, 
num_vÆs
, 
ty≥
);

88 
	}
}

96 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_boﬁ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

97 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

99 
uöt8_t
 *
d°
;

100 
öt32_t
 
i
;

101 
boﬁ
 *
s
 = (boﬁ*)
§c
;

103 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_∑ck_boﬁ * %d\n", 
num_vÆs
);

105 i‡(
NULL
 =(
d°
 = (
uöt8_t
*)
	`pmix_b‰›_buf„r_exãnd
(
buf„r
, 
num_vÆs
))) {

106  
PMIX_ERR_OUT_OF_RESOURCE
;

110 
i
=0; i < 
num_vÆs
; i++) {

111 i‡(
s
[
i
]) {

112 
d°
[
i
] = 1;

114 
d°
[
i
] = 0;

119 
buf„r
->
∑ck_±r
 +
num_vÆs
;

120 
buf„r
->
byãs_u£d
 +
num_vÆs
;

122  
PMIX_SUCCESS
;

123 
	}
}

128 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_öt
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

129 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

131 
pmix_°©us_t
 
ªt
;

135 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_°‹e_d©a_ty≥
(
buf„r
, 
BFROP_TYPE_INT
))) {

136  
ªt
;

140  
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
§c
, 
num_vÆs
, 
BFROP_TYPE_INT
);

141 
	}
}

146 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_sizë
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

147 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

149 
pmix_°©us_t
 
ªt
;

153 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_°‹e_d©a_ty≥
(
buf„r
, 
BFROP_TYPE_SIZE_T
))) {

154  
ªt
;

157  
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
§c
, 
num_vÆs
, 
BFROP_TYPE_SIZE_T
);

158 
	}
}

163 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_pid
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

164 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

166 
pmix_°©us_t
 
ªt
;

170 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_°‹e_d©a_ty≥
(
buf„r
, 
BFROP_TYPE_PID_T
))) {

171  
ªt
;

175  
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
§c
, 
num_vÆs
, 
BFROP_TYPE_PID_T
);

176 
	}
}

184 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_byã
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

185 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

187 *
d°
;

189 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_∑ck_byã * %d\n", 
num_vÆs
);

191 i‡(
NULL
 =(
d°
 = 
	`pmix_b‰›_buf„r_exãnd
(
buf„r
, 
num_vÆs
))) {

192  
PMIX_ERR_OUT_OF_RESOURCE
;

196 
	`mem˝y
(
d°
, 
§c
, 
num_vÆs
);

199 
buf„r
->
∑ck_±r
 +
num_vÆs
;

200 
buf„r
->
byãs_u£d
 +
num_vÆs
;

202  
PMIX_SUCCESS
;

203 
	}
}

208 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_öt16
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

209 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

211 
öt32_t
 
i
;

212 
uöt16_t
 
tmp
, *
§˘mp
 = (uöt16_t*Ë
§c
;

213 *
d°
;

215 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_∑ck_öt16 * %d\n", 
num_vÆs
);

217 i‡(
NULL
 =(
d°
 = 
	`pmix_b‰›_buf„r_exãnd
(
buf„r
, 
num_vÆs
*(
tmp
)))) {

218  
PMIX_ERR_OUT_OF_RESOURCE
;

221 
i
 = 0; i < 
num_vÆs
; ++i) {

222 
tmp
 = 
	`pmix_ht⁄s
(
§˘mp
[
i
]);

223 
	`mem˝y
(
d°
, &
tmp
, (tmp));

224 
d°
 +(
tmp
);

226 
buf„r
->
∑ck_±r
 +
num_vÆs
 * (
tmp
);

227 
buf„r
->
byãs_u£d
 +
num_vÆs
 * (
tmp
);

229  
PMIX_SUCCESS
;

230 
	}
}

235 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_öt32
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

236 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

238 
öt32_t
 
i
;

239 
uöt32_t
 
tmp
, *
§˘mp
 = (uöt32_t*Ë
§c
;

240 *
d°
;

242 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_∑ck_öt32 * %d\n", 
num_vÆs
);

244 i‡(
NULL
 =(
d°
 = 
	`pmix_b‰›_buf„r_exãnd
(
buf„r
, 
num_vÆs
*(
tmp
)))) {

245  
PMIX_ERR_OUT_OF_RESOURCE
;

248 
i
 = 0; i < 
num_vÆs
; ++i) {

249 
tmp
 = 
	`ht⁄l
(
§˘mp
[
i
]);

250 
	`mem˝y
(
d°
, &
tmp
, (tmp));

251 
d°
 +(
tmp
);

253 
buf„r
->
∑ck_±r
 +
num_vÆs
 * (
tmp
);

254 
buf„r
->
byãs_u£d
 +
num_vÆs
 * (
tmp
);

256  
PMIX_SUCCESS
;

257 
	}
}

259 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_d©©y≥
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

260 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

262  
	`pmix_b‰›_∑ck_öt16
(
buf„r
, 
§c
, 
num_vÆs
, 
ty≥
);

263 
	}
}

268 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_öt64
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

269 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

271 
öt32_t
 
i
;

272 
uöt64_t
 
tmp
, 
tmp2
;

273 *
d°
;

274 
size_t
 
byãs_∑cked
 = 
num_vÆs
 * (
tmp
);

276 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_∑ck_öt64 * %d\n", 
num_vÆs
);

278 i‡(
NULL
 =(
d°
 = 
	`pmix_b‰›_buf„r_exãnd
(
buf„r
, 
byãs_∑cked
))) {

279  
PMIX_ERR_OUT_OF_RESOURCE
;

282 
i
 = 0; i < 
num_vÆs
; ++i) {

283 
	`mem˝y
(&
tmp2
, (*)
§c
+
i
*(
uöt64_t
), (uint64_t));

284 
tmp
 = 
	`pmix_ht⁄64
(
tmp2
);

285 
	`mem˝y
(
d°
, &
tmp
, (tmp));

286 
d°
 +(
tmp
);

288 
buf„r
->
∑ck_±r
 +
byãs_∑cked
;

289 
buf„r
->
byãs_u£d
 +
byãs_∑cked
;

291  
PMIX_SUCCESS
;

292 
	}
}

297 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_°rög
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

298 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

300 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

301 
öt32_t
 
i
, 
Àn
;

302 **
s§c
 = (**Ë
§c
;

304 
i
 = 0; i < 
num_vÆs
; ++i) {

305 i‡(
NULL
 =
s§c
[
i
]) {

306 
Àn
 = 0;

307 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt32
(
buf„r
, &
Àn
, 1, 
PMIX_INT32
))) {

308  
ªt
;

311 
Àn
 = (
öt32_t
)
	`°æí
(
s§c
[
i
]) + 1;

312 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt32
(
buf„r
, &
Àn
, 1, 
PMIX_INT32
))) {

313  
ªt
;

315 i‡(
PMIX_SUCCESS
 !(
ªt
 =

316 
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
s§c
[
i
], 
Àn
, 
PMIX_BYTE
))) {

317  
ªt
;

322  
PMIX_SUCCESS
;

323 
	}
}

326 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_Êﬂt
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

327 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

329 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

330 
öt32_t
 
i
;

331 *
s§c
 = (*)
§c
;

332 *
c⁄vît
;

334 
i
 = 0; i < 
num_vÆs
; ++i) {

335 i‡(0 > 
	`a•rötf
(&
c⁄vît
, "%f", 
s§c
[
i
])) {

336  
PMIX_ERR_NOMEM
;

338 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
c⁄vît
, 1, 
PMIX_STRING
))) {

339 
	`‰ì
(
c⁄vît
);

340  
ªt
;

342 
	`‰ì
(
c⁄vît
);

345  
PMIX_SUCCESS
;

346 
	}
}

349 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_doubÀ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

350 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

352 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

353 
öt32_t
 
i
;

354 *
s§c
 = (*)
§c
;

355 *
c⁄vît
;

357 
i
 = 0; i < 
num_vÆs
; ++i) {

358 i‡(0 > 
	`a•rötf
(&
c⁄vît
, "%f", 
s§c
[
i
])) {

359  
PMIX_ERR_NOMEM
;

361 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
c⁄vît
, 1, 
PMIX_STRING
))) {

362 
	`‰ì
(
c⁄vît
);

363  
ªt
;

365 
	`‰ì
(
c⁄vît
);

368  
PMIX_SUCCESS
;

369 
	}
}

372 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_timevÆ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

373 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

375 
öt64_t
 
tmp
[2];

376 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

377 
öt32_t
 
i
;

378 
timevÆ
 *
s§c
 = (timevÆ *)
§c
;

380 
i
 = 0; i < 
num_vÆs
; ++i) {

381 
tmp
[0] = (
öt64_t
)
s§c
[
i
].
tv_£c
;

382 
tmp
[1] = (
öt64_t
)
s§c
[
i
].
tv_u£c
;

383 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt64
(
buf„r
, 
tmp
, 2, 
PMIX_INT64
))) {

384  
ªt
;

388  
PMIX_SUCCESS
;

389 
	}
}

392 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_time
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

393 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

395 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

396 
öt32_t
 
i
;

397 
time_t
 *
s§c
 = (time_à*)
§c
;

398 
uöt64_t
 
ui64
;

403 
i
 = 0; i < 
num_vÆs
; ++i) {

404 
ui64
 = (
uöt64_t
)
s§c
[
i
];

405 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt64
(
buf„r
, &
ui64
, 1, 
PMIX_UINT64
))) {

406  
ªt
;

410  
PMIX_SUCCESS
;

411 
	}
}

414 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_°©us
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

415 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

417 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

418 
öt32_t
 
i
;

419 
pmix_°©us_t
 *
s§c
 = (pmix_°©us_à*)
§c
;

420 
öt32_t
 
°©us
;

422 
i
 = 0; i < 
num_vÆs
; ++i) {

423 
°©us
 = (
öt32_t
)
s§c
[
i
];

424 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt32
(
buf„r
, &
°©us
, 1, 
PMIX_INT32
))) {

425  
ªt
;

429  
PMIX_SUCCESS
;

430 
	}
}

434 
pmix_°©us_t
 
	$∑ck_vÆ
(
pmix_buf„r_t
 *
buf„r
,

435 
pmix_vÆue_t
 *
p
)

437 
pmix_°©us_t
 
ªt
;

439 
p
->
ty≥
) {

440 
PMIX_UNDEF
:

442 
PMIX_BOOL
:

443 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
Êag
, 1, 
PMIX_BOOL
))) {

444  
ªt
;

447 
PMIX_BYTE
:

448 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
byã
, 1, 
PMIX_BYTE
))) {

449  
ªt
;

452 
PMIX_STRING
:

453 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
°rög
, 1, 
PMIX_STRING
))) {

454  
ªt
;

457 
PMIX_SIZE
:

458 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
size
, 1, 
PMIX_SIZE
))) {

459  
ªt
;

462 
PMIX_PID
:

463 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
pid
, 1, 
PMIX_PID
))) {

464  
ªt
;

467 
PMIX_INT
:

468 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
öãgî
, 1, 
PMIX_INT
))) {

469  
ªt
;

472 
PMIX_INT8
:

473 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
öt8
, 1, 
PMIX_INT8
))) {

474  
ªt
;

477 
PMIX_INT16
:

478 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
öt16
, 1, 
PMIX_INT16
))) {

479  
ªt
;

482 
PMIX_INT32
:

483 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
öt32
, 1, 
PMIX_INT32
))) {

484  
ªt
;

487 
PMIX_INT64
:

488 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
öt64
, 1, 
PMIX_INT64
))) {

489  
ªt
;

492 
PMIX_UINT
:

493 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
uöt
, 1, 
PMIX_UINT
))) {

494  
ªt
;

497 
PMIX_UINT8
:

498 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
uöt8
, 1, 
PMIX_UINT8
))) {

499  
ªt
;

502 
PMIX_UINT16
:

503 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
uöt16
, 1, 
PMIX_UINT16
))) {

504  
ªt
;

507 
PMIX_UINT32
:

508 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
uöt32
, 1, 
PMIX_UINT32
))) {

509  
ªt
;

512 
PMIX_UINT64
:

513 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
uöt64
, 1, 
PMIX_UINT64
))) {

514  
ªt
;

517 
PMIX_FLOAT
:

518 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
fvÆ
, 1, 
PMIX_FLOAT
))) {

519  
ªt
;

522 
PMIX_DOUBLE
:

523 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
dvÆ
, 1, 
PMIX_DOUBLE
))) {

524  
ªt
;

527 
PMIX_TIMEVAL
:

528 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
tv
, 1, 
PMIX_TIMEVAL
))) {

529  
ªt
;

532 
PMIX_TIME
:

533 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
time
, 1, 
PMIX_TIME
))) {

534  
ªt
;

537 
PMIX_STATUS
:

538 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
°©us
, 1, 
PMIX_STATUS
))) {

539  
ªt
;

542 
PMIX_PROC
:

543 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
p
->
d©a
.
¥oc
, 1, 
PMIX_PROC
))) {

544  
ªt
;

547 
PMIX_PROC_RANK
:

548 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
ønk
, 1, 
PMIX_PROC_RANK
))) {

549  
ªt
;

552 
PMIX_BYTE_OBJECT
:

553 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
bo
, 1, 
PMIX_BYTE_OBJECT
))) {

554  
ªt
;

557 
PMIX_PERSIST
:

558 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
≥rsi°
, 1, 
PMIX_PERSIST
))) {

559  
ªt
;

562 
PMIX_SCOPE
:

563 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
sc›e
, 1, 
PMIX_SCOPE
))) {

564  
ªt
;

567 
PMIX_DATA_RANGE
:

568 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
ønge
, 1, 
PMIX_DATA_RANGE
))) {

569  
ªt
;

572 
PMIX_PROC_STATE
:

573 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, &
p
->
d©a
.
°©e
, 1, 
PMIX_PROC_STATE
))) {

574  
ªt
;

577 
PMIX_PROC_INFO
:

578 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
p
->
d©a
.
pöfo
, 1, 
PMIX_PROC_INFO
))) {

579  
ªt
;

582 
PMIX_DATA_ARRAY
:

583 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
p
->
d©a
.
d¨øy
, 1, 
PMIX_DATA_ARRAY
))) {

584  
ªt
;

587 
PMIX_QUERY
:

588 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
p
->
d©a
.
d¨øy
, 1, 
PMIX_QUERY
))) {

589  
ªt
;

593 
PMIX_INFO_ARRAY
:

594 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
p
->
d©a
.
¨øy
, 1, 
PMIX_INFO_ARRAY
))) {

595  
ªt
;

600 
	`pmix_ouçut
(0, "PACK-PMIX-VALUE: UNSUPPORTED TYPE %d", ()
p
->
ty≥
);

601  
PMIX_ERROR
;

603  
PMIX_SUCCESS
;

604 
	}
}

609 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_vÆue
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

610 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

612 
pmix_vÆue_t
 *
±r
;

613 
öt32_t
 
i
;

614 
pmix_°©us_t
 
ªt
;

616 
±r
 = (
pmix_vÆue_t
 *Ë
§c
;

618 
i
 = 0; i < 
num_vÆs
; ++i) {

620 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_°‹e_d©a_ty≥
(
buf„r
, 
±r
[
i
].
ty≥
))) {

621  
ªt
;

624 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`∑ck_vÆ
(
buf„r
, &
±r
[
i
]))) {

625  
ªt
;

629  
PMIX_SUCCESS
;

630 
	}
}

633 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_öfo
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

634 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

636 
pmix_öfo_t
 *
öfo
;

637 
öt32_t
 
i
;

638 
pmix_°©us_t
 
ªt
;

639 *
foo
;

641 
öfo
 = (
pmix_öfo_t
 *Ë
§c
;

643 
i
 = 0; i < 
num_vÆs
; ++i) {

645 
foo
 = 
öfo
[
i
].
key
;

646 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
foo
, 1, 
PMIX_STRING
))) {

647  
ªt
;

650 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öfodús
(
buf„r
, &
öfo
[
i
].
Êags
, 1, 
PMIX_INFO_DIRECTIVES
))) {

651  
ªt
;

654 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt
(
buf„r
, &
öfo
[
i
].
vÆue
.
ty≥
, 1, 
PMIX_INT
))) {

655  
ªt
;

658 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`∑ck_vÆ
(
buf„r
, &
öfo
[
i
].
vÆue
))) {

659  
ªt
;

662  
PMIX_SUCCESS
;

663 
	}
}

665 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_pd©a
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

666 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

668 
pmix_pd©a_t
 *
pd©a
;

669 
öt32_t
 
i
;

670 
pmix_°©us_t
 
ªt
;

671 *
foo
;

673 
pd©a
 = (
pmix_pd©a_t
 *Ë
§c
;

675 
i
 = 0; i < 
num_vÆs
; ++i) {

677 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_¥oc
(
buf„r
, &
pd©a
[
i
].
¥oc
, 1, 
PMIX_PROC
))) {

678  
ªt
;

681 
foo
 = 
pd©a
[
i
].
key
;

682 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
foo
, 1, 
PMIX_STRING
))) {

683  
ªt
;

686 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt
(
buf„r
, &
pd©a
[
i
].
vÆue
.
ty≥
, 1, 
PMIX_INT
))) {

687  
ªt
;

690 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`∑ck_vÆ
(
buf„r
, &
pd©a
[
i
].
vÆue
))) {

691  
ªt
;

694  
PMIX_SUCCESS
;

695 
	}
}

697 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_buf
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

698 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

700 
pmix_buf„r_t
 **
±r
;

701 
öt32_t
 
i
;

702 
pmix_°©us_t
 
ªt
;

704 
±r
 = (
pmix_buf„r_t
 **Ë
§c
;

706 
i
 = 0; i < 
num_vÆs
; ++i) {

708 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_sizë
(
buf„r
, &
±r
[
i
]->
byãs_u£d
, 1, 
PMIX_SIZE
))) {

709  
ªt
;

712 i‡(0 < 
±r
[
i
]->
byãs_u£d
) {

713 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
±r
[
i
]->
ba£_±r
,Öå[i]->
byãs_u£d
, 
PMIX_BYTE
))) {

714  
ªt
;

718  
PMIX_SUCCESS
;

719 
	}
}

721 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_¥oc
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

722 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

724 
pmix_¥oc_t
 *
¥oc
;

725 
öt32_t
 
i
;

726 
pmix_°©us_t
 
ªt
;

728 
¥oc
 = (
pmix_¥oc_t
 *Ë
§c
;

730 
i
 = 0; i < 
num_vÆs
; ++i) {

731 *
±r
 = 
¥oc
[
i
].
n•a˚
;

732 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
±r
, 1, 
PMIX_STRING
))) {

733  
ªt
;

735 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_ønk
(
buf„r
, &
¥oc
[
i
].
ønk
, 1, 
PMIX_PROC_RANK
))) {

736  
ªt
;

739  
PMIX_SUCCESS
;

740 
	}
}

742 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_≠p
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

743 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

745 
pmix_≠p_t
 *
≠p
;

746 
öt32_t
 
i
, 
j
, 
nvÆs
;

747 
pmix_°©us_t
 
ªt
;

749 
≠p
 = (
pmix_≠p_t
 *Ë
§c
;

751 
i
 = 0; i < 
num_vÆs
; ++i) {

752 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
≠p
[
i
].
cmd
, 1, 
PMIX_STRING
))) {

753  
ªt
;

756 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt
(
buf„r
, &
≠p
[
i
].
¨gc
, 1, 
PMIX_INT
))) {

757  
ªt
;

759 
j
=0; j < 
≠p
[
i
].
¨gc
; j++) {

760 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
≠p
[
i
].
¨gv
[
j
], 1, 
PMIX_STRING
))) {

761  
ªt
;

765 
nvÆs
 = 
	`pmix_¨gv_cou¡
(
≠p
[
i
].
ív
);

766 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt32
(
buf„r
, &
nvÆs
, 1, 
PMIX_INT32
))) {

767  
ªt
;

769 
j
=0; j < 
nvÆs
; j++) {

770 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
≠p
[
i
].
ív
[
j
], 1, 
PMIX_STRING
))) {

771  
ªt
;

775 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt
(
buf„r
, &
≠p
[
i
].
max¥ocs
, 1, 
PMIX_INT
))) {

776  
ªt
;

779 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_sizë
(
buf„r
, &
≠p
[
i
].
nöfo
, 1, 
PMIX_SIZE
))) {

780  
ªt
;

782 i‡(0 < 
≠p
[
i
].
nöfo
) {

783 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öfo
(
buf„r
, 
≠p
[
i
].
öfo
,áµ[i].
nöfo
, 
PMIX_INFO
))) {

784  
ªt
;

788  
PMIX_SUCCESS
;

789 
	}
}

792 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_kvÆ
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

793 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

795 
pmix_kvÆ_t
 *
±r
;

796 
öt32_t
 
i
;

797 
pmix_°©us_t
 
ªt
;

798 *
°
;

800 
±r
 = (
pmix_kvÆ_t
 *Ë
§c
;

802 
i
 = 0; i < 
num_vÆs
; ++i) {

804 
°
 = 
±r
[
i
].
key
;

805 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
°
, 1, 
PMIX_STRING
))) {

806  
ªt
;

809 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_vÆue
(
buf„r
, 
±r
[
i
].
vÆue
, 1, 
PMIX_VALUE
))) {

810  
ªt
;

814  
PMIX_SUCCESS
;

815 
	}
}

817 #i‡
PMIX_HAVE_HWLOC


818 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_t›o
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

819 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

822 
hwloc_t›ﬁogy_t
 
t
, *
èºay
 = (hwloc_t›ﬁogy_t*)
§c
;

823 
pmix_°©us_t
 
rc
;

824 
i
;

825 *
xmlbuf„r
=
NULL
;

826 
Àn
;

827 
hwloc_t›ﬁogy_suµ‹t
 *
suµ‹t
;

829 
i
=0; i < 
num_vÆs
; i++) {

830 
t
 = 
èºay
[
i
];

833 i‡(0 !
	`hwloc_t›ﬁogy_exp‹t_xmlbuf„r
(
t
, &
xmlbuf„r
, &
Àn
)) {

834  
PMIX_ERROR
;

838 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
xmlbuf„r
, 1, 
PMIX_STRING
))) {

839 
	`‰ì
(
xmlbuf„r
);

840  
rc
;

844 i‡(
NULL
 !
xmlbuf„r
) {

845 
	`‰ì
(
xmlbuf„r
);

851 
suµ‹t
 = (
hwloc_t›ﬁogy_suµ‹t
*)
	`hwloc_t›ﬁogy_gë_suµ‹t
(
t
);

853 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
suµ‹t
->
discovîy
,

854 (
hwloc_t›ﬁogy_discovîy_suµ‹t
),

855 
PMIX_BYTE
))) {

856  
rc
;

859 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
suµ‹t
->
˝uböd
,

860 (
hwloc_t›ﬁogy_˝uböd_suµ‹t
),

861 
PMIX_BYTE
))) {

862  
rc
;

865 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
suµ‹t
->
memböd
,

866 (
hwloc_t›ﬁogy_memböd_suµ‹t
),

867 
PMIX_BYTE
))) {

868  
rc
;

872  
PMIX_SUCCESS
;

873 
	}
}

876 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_modex
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

877 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

879 
pmix_modex_d©a_t
 *
±r
;

880 
öt32_t
 
i
;

881 
pmix_°©us_t
 
ªt
;

883 
±r
 = (
pmix_modex_d©a_t
 *Ë
§c
;

885 
i
 = 0; i < 
num_vÆs
; ++i) {

886 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_sizë
(
buf„r
, &
±r
[
i
].
size
, 1, 
PMIX_SIZE
))) {

887  
ªt
;

889 if–0 < 
±r
[
i
].
size
){

890 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
±r
[
i
].
blob
,Öå[i].
size
, 
PMIX_UINT8
))) {

891  
ªt
;

895  
PMIX_SUCCESS
;

896 
	}
}

898 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_≥rsi°
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

899 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

901  
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
§c
, 
num_vÆs
, 
PMIX_UINT8
);

902 
	}
}

904 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_sc›e
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

905 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

907  
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
§c
, 
num_vÆs
, 
PMIX_UINT8
);

908 
	}
}

910 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_ønge
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

911 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

913  
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
§c
, 
num_vÆs
, 
PMIX_UINT8
);

914 
	}
}

916 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_cmd
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

917 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

919  
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
§c
, 
num_vÆs
, 
PMIX_UINT8
);

920 
	}
}

922 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_öfodús
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

923 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

925  
	`pmix_b‰›_∑ck_öt32
(
buf„r
, 
§c
, 
num_vÆs
, 
PMIX_UINT32
);

926 
	}
}

928 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_bo
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

929 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

931 
pmix_°©us_t
 
ªt
;

932 
i
;

933 
pmix_byã_obje˘_t
 *
bo
;

935 
bo
 = (
pmix_byã_obje˘_t
*)
§c
;

936 
i
=0; i < 
num_vÆs
; i++) {

937 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_sizë
(
buf„r
, &
bo
[
i
].
size
, 1, 
PMIX_SIZE
))) {

938  
ªt
;

940 i‡(0 < 
bo
[
i
].
size
) {

941 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
bo
[
i
].
byãs
, bo[i].
size
, 
PMIX_BYTE
))) {

942  
ªt
;

946  
PMIX_SUCCESS
;

947 
	}
}

949 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_±r
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

950 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

952 
uöt8_t
 
foo
=1;

955  
	`pmix_b‰›_∑ck_byã
(
buf„r
, &
foo
, 1, 
PMIX_UINT8
);

956 
	}
}

958 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_p°©e
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

959 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

961  
	`pmix_b‰›_∑ck_byã
(
buf„r
, 
§c
, 
num_vÆs
, 
PMIX_UINT8
);

962 
	}
}

964 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_pöfo
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

965 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

967 
pmix_¥oc_öfo_t
 *
pöfo
 = (pmix_¥oc_öfo_t*)
§c
;

968 
pmix_°©us_t
 
ªt
;

969 
öt32_t
 
i
;

971 
i
=0; i < 
num_vÆs
; i++) {

973 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_¥oc
(
buf„r
, &
pöfo
[
i
].
¥oc
, 1, 
PMIX_PROC
))) {

974  
ªt
;

977 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
pöfo
[
i
].
ho°«me
, 1, 
PMIX_STRING
))) {

978  
ªt
;

980 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, &
pöfo
[
i
].
execuèbÀ_«me
, 1, 
PMIX_STRING
))) {

981  
ªt
;

984 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_pid
(
buf„r
, &
pöfo
[
i
].
pid
, 1, 
PMIX_PID
))) {

985  
ªt
;

987 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_p°©e
(
buf„r
, &
pöfo
[
i
].
°©e
, 1, 
PMIX_PROC_STATE
))) {

988  
ªt
;

991  
PMIX_SUCCESS
;

992 
	}
}

994 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_d¨øy
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

995 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

997 
pmix_d©a_¨øy_t
 *
p
 = (pmix_d©a_¨øy_t*)
§c
;

998 
pmix_°©us_t
 
ªt
;

999 
öt32_t
 
i
;

1001 
i
=0; i < 
num_vÆs
; i++) {

1003 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_d©©y≥
(
buf„r
, &
p
[
i
].
ty≥
, 1, 
PMIX_DATA_TYPE
))) {

1004  
ªt
;

1007 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_sizë
(
buf„r
, &
p
[
i
].
size
, 1, 
PMIX_SIZE
))) {

1008  
ªt
;

1010 i‡(0 =
p
[
i
].
size
 || 
PMIX_UNDEF
 =p[i].
ty≥
) {

1015 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_buf„r
(
buf„r
, 
p
[
i
].
¨øy
,Ö[i].
size
,Ö[i].
ty≥
))) {

1016  
ªt
;

1019  
PMIX_SUCCESS
;

1020 
	}
}

1022 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_ønk
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

1023 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1025  
	`pmix_b‰›_∑ck_öt32
(
buf„r
, 
§c
, 
num_vÆs
, 
PMIX_UINT32
);

1026 
	}
}

1028 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_quîy
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

1029 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1031 
pmix_quîy_t
 *
pq
 = (pmix_quîy_t*)
§c
;

1032 
pmix_°©us_t
 
ªt
;

1033 
öt32_t
 
i
;

1034 
öt32_t
 
nkeys
;

1036 
i
=0; i < 
num_vÆs
; i++) {

1038 
nkeys
 = 
	`pmix_¨gv_cou¡
(
pq
[
i
].
keys
);

1039 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öt32
(
buf„r
, &
nkeys
, 1, 
PMIX_INT32
))) {

1040  
ªt
;

1042 i‡(0 < 
nkeys
) {

1044 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_°rög
(
buf„r
, 
pq
[
i
].
keys
, 
nkeys
, 
PMIX_STRING
))) {

1045  
ªt
;

1049 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_sizë
(
buf„r
, &
pq
[
i
].
nquÆ
, 1, 
PMIX_SIZE
))) {

1050  
ªt
;

1052 i‡(0 < 
pq
[
i
].
nquÆ
) {

1054 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öfo
(
buf„r
, 
pq
[
i
].
quÆifõrs
,Öq[i].
nquÆ
, 
PMIX_INFO
))) {

1055  
ªt
;

1059  
PMIX_SUCCESS
;

1060 
	}
}

1064 
pmix_°©us_t
 
	$pmix_b‰›_∑ck_¨øy
(
pmix_buf„r_t
 *
buf„r
, c⁄° *
§c
,

1065 
öt32_t
 
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1067 
pmix_öfo_¨øy_t
 *
±r
;

1068 
öt32_t
 
i
;

1069 
pmix_°©us_t
 
ªt
;

1071 
±r
 = (
pmix_öfo_¨øy_t
 *Ë
§c
;

1073 
i
 = 0; i < 
num_vÆs
; ++i) {

1075 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_sizë
(
buf„r
, &
±r
[
i
].
size
, 1, 
PMIX_SIZE
))) {

1076  
ªt
;

1078 i‡(0 < 
±r
[
i
].
size
) {

1080 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_∑ck_öfo
(
buf„r
, 
±r
[
i
].
¨øy
,Öå[i].
size
, 
PMIX_INFO
))) {

1081  
ªt
;

1086  
PMIX_SUCCESS
;

1087 
	}
}

	@buffer_ops/print.c

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<§c/ö˛ude/pmix_°döt.h
>

28 
	~<°dio.h
>

29 #ifde‡
HAVE_TIME_H


30 
	~<time.h
>

33 
	~"§c/utû/îr‹.h
"

34 
	~"§c/ö˛ude/pmix_globÆs.h
"

35 
	~"§c/buf„r_›s/öã∫Æ.h
"

37 
pmix_°©us_t
 
	$pmix_b‰›_¥öt
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

39 
pmix_b‰›_ty≥_öfo_t
 *
öfo
;

42 i‡(
NULL
 =
ouçut
) {

43  
PMIX_ERR_BAD_PARAM
;

48 if(
NULL
 =(
öfo
 = (
pmix_b‰›_ty≥_öfo_t
*)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_b‰›_ty≥s
, 
ty≥
))) {

49  
PMIX_ERR_UNKNOWN_DATA_TYPE
;

52  
öfo
->
	`odti_¥öt_‚
(
ouçut
, 
¥efix
, 
§c
, 
ty≥
);

53 
	}
}

58 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_boﬁ
(**
ouçut
, *
¥efix
, 
boﬁ
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

60 *
¥efx
;

63 i‡(
NULL
 =
¥efix
) {

64 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

65  
PMIX_ERR_NOMEM
;

69 
¥efx
 = 
¥efix
;

73 i‡(
NULL
 =
§c
) {

74 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_BOOL\tVÆue: NULLÖoöãr", 
¥efx
)) {

75  
PMIX_ERR_NOMEM
;

77 i‡(
¥efx
 !
¥efix
) {

78 
	`‰ì
(
¥efx
);

80  
PMIX_SUCCESS
;

83 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_BOOL\tVÆue: %s", 
¥efix
,

84 (*
§c
) ? "TRUE" : "FALSE")) {

85  
PMIX_ERR_NOMEM
;

87 i‡(
¥efx
 !
¥efix
) {

88 
	`‰ì
(
¥efx
);

91  
PMIX_SUCCESS
;

92 
	}
}

94 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_byã
(**
ouçut
, *
¥efix
, 
uöt8_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

96 *
¥efx
;

99 i‡(
NULL
 =
¥efix
) {

100 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

101  
PMIX_ERR_NOMEM
;

104 
¥efx
 = 
¥efix
;

108 i‡(
NULL
 =
§c
) {

109 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_BYTE\tVÆue: NULLÖoöãr", 
¥efx
)) {

110  
PMIX_ERR_NOMEM
;

112 i‡(
¥efx
 !
¥efix
) {

113 
	`‰ì
(
¥efx
);

115  
PMIX_SUCCESS
;

118 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_BYTE\tVÆue: %x", 
¥efix
, *
§c
)) {

119  
PMIX_ERR_NOMEM
;

121 i‡(
¥efx
 !
¥efix
) {

122 
	`‰ì
(
¥efx
);

125  
PMIX_SUCCESS
;

126 
	}
}

128 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_°rög
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

130 *
¥efx
;

133 i‡(
NULL
 =
¥efix
) {

134 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

135  
PMIX_ERR_NOMEM
;

138 
¥efx
 = 
¥efix
;

142 i‡(
NULL
 =
§c
) {

143 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_STRING\tVÆue: NULLÖoöãr", 
¥efx
)) {

144  
PMIX_ERR_NOMEM
;

146 i‡(
¥efx
 !
¥efix
) {

147 
	`‰ì
(
¥efx
);

149  
PMIX_SUCCESS
;

152 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_STRING\tVÆue: %s", 
¥efx
, 
§c
)) {

153  
PMIX_ERR_NOMEM
;

155 i‡(
¥efx
 !
¥efix
) {

156 
	`‰ì
(
¥efx
);

159  
PMIX_SUCCESS
;

160 
	}
}

162 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_size
(**
ouçut
, *
¥efix
, 
size_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

164 *
¥efx
;

167 i‡(
NULL
 =
¥efix
) {

168 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

169  
PMIX_ERR_NOMEM
;

172 
¥efx
 = 
¥efix
;

176 i‡(
NULL
 =
§c
) {

177 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_SIZE\tVÆue: NULLÖoöãr", 
¥efx
)) {

178  
PMIX_ERR_NOMEM
;

180 i‡(
¥efx
 !
¥efix
) {

181 
	`‰ì
(
¥efx
);

183  
PMIX_SUCCESS
;

186 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_SIZE\tVÆue: %lu", 
¥efx
, (Ë*
§c
)) {

187  
PMIX_ERR_NOMEM
;

189 i‡(
¥efx
 !
¥efix
) {

190 
	`‰ì
(
¥efx
);

193  
PMIX_SUCCESS
;

194 
	}
}

196 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_pid
(**
ouçut
, *
¥efix
, 
pid_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

198 *
¥efx
;

201 i‡(
NULL
 =
¥efix
) {

202 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

203  
PMIX_ERR_NOMEM
;

206 
¥efx
 = 
¥efix
;

210 i‡(
NULL
 =
§c
) {

211 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_PID\tVÆue: NULLÖoöãr", 
¥efx
)) {

212  
PMIX_ERR_NOMEM
;

214 i‡(
¥efx
 !
¥efix
) {

215 
	`‰ì
(
¥efx
);

217  
PMIX_SUCCESS
;

220 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_PID\tVÆue: %lu", 
¥efx
, (Ë*
§c
)) {

221  
PMIX_ERR_NOMEM
;

223 i‡(
¥efx
 !
¥efix
) {

224 
	`‰ì
(
¥efx
);

226  
PMIX_SUCCESS
;

227 
	}
}

229 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_öt
(**
ouçut
, *
¥efix
, *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

231 *
¥efx
;

234 i‡(
NULL
 =
¥efix
) {

235 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

236  
PMIX_ERR_NOMEM
;

239 
¥efx
 = 
¥efix
;

243 i‡(
NULL
 =
§c
) {

244 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT\tVÆue: NULLÖoöãr", 
¥efx
)) {

245  
PMIX_ERR_NOMEM
;

247 i‡(
¥efx
 !
¥efix
) {

248 
	`‰ì
(
¥efx
);

250  
PMIX_SUCCESS
;

253 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT\tVÆue: %ld", 
¥efx
, (Ë*
§c
)) {

254  
PMIX_ERR_NOMEM
;

256 i‡(
¥efx
 !
¥efix
) {

257 
	`‰ì
(
¥efx
);

260  
PMIX_SUCCESS
;

261 
	}
}

263 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_uöt
(**
ouçut
, *
¥efix
, 
uöt
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

265 *
¥efx
;

268 i‡(
NULL
 =
¥efix
) {

269 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

270  
PMIX_ERR_NOMEM
;

273 
¥efx
 = 
¥efix
;

277 i‡(
NULL
 =
§c
) {

278 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT\tVÆue: NULLÖoöãr", 
¥efx
)) {

279  
PMIX_ERR_NOMEM
;

281 i‡(
¥efx
 !
¥efix
) {

282 
	`‰ì
(
¥efx
);

284  
PMIX_SUCCESS
;

287 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT\tVÆue: %lu", 
¥efx
, (Ë*
§c
)) {

288  
PMIX_ERR_NOMEM
;

290 i‡(
¥efx
 !
¥efix
) {

291 
	`‰ì
(
¥efx
);

294  
PMIX_SUCCESS
;

295 
	}
}

297 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_uöt8
(**
ouçut
, *
¥efix
, 
uöt8_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

299 *
¥efx
;

302 i‡(
NULL
 =
¥efix
) {

303 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

304  
PMIX_ERR_NOMEM
;

307 
¥efx
 = 
¥efix
;

311 i‡(
NULL
 =
§c
) {

312 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT8\tVÆue: NULLÖoöãr", 
¥efx
)) {

313  
PMIX_ERR_NOMEM
;

315 i‡(
¥efx
 !
¥efix
) {

316 
	`‰ì
(
¥efx
);

318  
PMIX_SUCCESS
;

321 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT8\tVÆue: %u", 
¥efx
, (Ë*
§c
)) {

322  
PMIX_ERR_NOMEM
;

324 i‡(
¥efx
 !
¥efix
) {

325 
	`‰ì
(
¥efx
);

328  
PMIX_SUCCESS
;

329 
	}
}

331 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_uöt16
(**
ouçut
, *
¥efix
, 
uöt16_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

333 *
¥efx
;

336 i‡(
NULL
 =
¥efix
) {

337 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

338  
PMIX_ERR_NOMEM
;

341 
¥efx
 = 
¥efix
;

345 i‡(
NULL
 =
§c
) {

346 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT16\tVÆue: NULLÖoöãr", 
¥efx
)) {

347  
PMIX_ERR_NOMEM
;

349 i‡(
¥efx
 !
¥efix
) {

350 
	`‰ì
(
¥efx
);

352  
PMIX_SUCCESS
;

355 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT16\tVÆue: %u", 
¥efx
, (Ë*
§c
)) {

356  
PMIX_ERR_NOMEM
;

358 i‡(
¥efx
 !
¥efix
) {

359 
	`‰ì
(
¥efx
);

362  
PMIX_SUCCESS
;

363 
	}
}

365 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_uöt32
(**
ouçut
, *
¥efix
,

366 
uöt32_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

368 *
¥efx
;

371 i‡(
NULL
 =
¥efix
) {

372 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

373  
PMIX_ERR_NOMEM
;

376 
¥efx
 = 
¥efix
;

380 i‡(
NULL
 =
§c
) {

381 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT32\tVÆue: NULLÖoöãr", 
¥efx
)) {

382  
PMIX_ERR_NOMEM
;

384 i‡(
¥efx
 !
¥efix
) {

385 
	`‰ì
(
¥efx
);

387  
PMIX_SUCCESS
;

390 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT32\tVÆue: %u", 
¥efx
, (Ë*
§c
)) {

391  
PMIX_ERR_NOMEM
;

393 i‡(
¥efx
 !
¥efix
) {

394 
	`‰ì
(
¥efx
);

397  
PMIX_SUCCESS
;

398 
	}
}

400 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_öt8
(**
ouçut
, *
¥efix
,

401 
öt8_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

403 *
¥efx
;

406 i‡(
NULL
 =
¥efix
) {

407 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

408  
PMIX_ERR_NOMEM
;

411 
¥efx
 = 
¥efix
;

415 i‡(
NULL
 =
§c
) {

416 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT8\tVÆue: NULLÖoöãr", 
¥efx
)) {

417  
PMIX_ERR_NOMEM
;

419 i‡(
¥efx
 !
¥efix
) {

420 
	`‰ì
(
¥efx
);

422  
PMIX_SUCCESS
;

425 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT8\tVÆue: %d", 
¥efx
, (Ë*
§c
)) {

426  
PMIX_ERR_NOMEM
;

428 i‡(
¥efx
 !
¥efix
) {

429 
	`‰ì
(
¥efx
);

432  
PMIX_SUCCESS
;

433 
	}
}

435 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_öt16
(**
ouçut
, *
¥efix
,

436 
öt16_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

438 *
¥efx
;

441 i‡(
NULL
 =
¥efix
) {

442 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

443  
PMIX_ERR_NOMEM
;

446 
¥efx
 = 
¥efix
;

450 i‡(
NULL
 =
§c
) {

451 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT16\tVÆue: NULLÖoöãr", 
¥efx
)) {

452  
PMIX_ERR_NOMEM
;

454 i‡(
¥efx
 !
¥efix
) {

455 
	`‰ì
(
¥efx
);

457  
PMIX_SUCCESS
;

460 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT16\tVÆue: %d", 
¥efx
, (Ë*
§c
)) {

461  
PMIX_ERR_NOMEM
;

463 i‡(
¥efx
 !
¥efix
) {

464 
	`‰ì
(
¥efx
);

467  
PMIX_SUCCESS
;

468 
	}
}

470 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_öt32
(**
ouçut
, *
¥efix
, 
öt32_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

472 *
¥efx
;

475 i‡(
NULL
 =
¥efix
) {

476 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

477  
PMIX_ERR_NOMEM
;

480 
¥efx
 = 
¥efix
;

484 i‡(
NULL
 =
§c
) {

485 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT32\tVÆue: NULLÖoöãr", 
¥efx
)) {

486  
PMIX_ERR_NOMEM
;

488 i‡(
¥efx
 !
¥efix
) {

489 
	`‰ì
(
¥efx
);

491  
PMIX_SUCCESS
;

494 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT32\tVÆue: %d", 
¥efx
, (Ë*
§c
)) {

495  
PMIX_ERR_NOMEM
;

497 i‡(
¥efx
 !
¥efix
) {

498 
	`‰ì
(
¥efx
);

501  
PMIX_SUCCESS
;

502 
	}
}

503 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_uöt64
(**
ouçut
, *
¥efix
,

504 
uöt64_t
 *
§c
,

505 
pmix_d©a_ty≥_t
 
ty≥
)

507 *
¥efx
;

510 i‡(
NULL
 =
¥efix
) {

511 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

512  
PMIX_ERR_NOMEM
;

515 
¥efx
 = 
¥efix
;

519 i‡(
NULL
 =
§c
) {

520 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT64\tVÆue: NULLÖoöãr", 
¥efx
)) {

521  
PMIX_ERR_NOMEM
;

523 i‡(
¥efx
 !
¥efix
) {

524 
	`‰ì
(
¥efx
);

526  
PMIX_SUCCESS
;

529 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_UINT64\tVÆue: %lu", 
¥efx
, (Ë*
§c
)) {

530  
PMIX_ERR_NOMEM
;

532 i‡(
¥efx
 !
¥efix
) {

533 
	`‰ì
(
¥efx
);

536  
PMIX_SUCCESS
;

537 
	}
}

539 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_öt64
(**
ouçut
, *
¥efix
,

540 
öt64_t
 *
§c
,

541 
pmix_d©a_ty≥_t
 
ty≥
)

543 *
¥efx
;

546 i‡(
NULL
 =
¥efix
) {

547 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

548  
PMIX_ERR_NOMEM
;

551 
¥efx
 = 
¥efix
;

555 i‡(
NULL
 =
§c
) {

556 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT64\tVÆue: NULLÖoöãr", 
¥efx
)) {

557  
PMIX_ERR_NOMEM
;

559 i‡(
¥efx
 !
¥efix
) {

560 
	`‰ì
(
¥efx
);

562  
PMIX_SUCCESS
;

565 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_INT64\tVÆue: %ld", 
¥efx
, (Ë*
§c
)) {

566  
PMIX_ERR_NOMEM
;

568 i‡(
¥efx
 !
¥efix
) {

569 
	`‰ì
(
¥efx
);

572  
PMIX_SUCCESS
;

573 
	}
}

575 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_Êﬂt
(**
ouçut
, *
¥efix
,

576 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

578 *
¥efx
;

581 i‡(
NULL
 =
¥efix
) {

582 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

583  
PMIX_ERR_NOMEM
;

586 
¥efx
 = 
¥efix
;

590 i‡(
NULL
 =
§c
) {

591 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_FLOAT\tVÆue: NULLÖoöãr", 
¥efx
)) {

592  
PMIX_ERR_NOMEM
;

594 i‡(
¥efx
 !
¥efix
) {

595 
	`‰ì
(
¥efx
);

597  
PMIX_SUCCESS
;

600 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_FLOAT\tVÆue: %f", 
¥efx
, *
§c
)) {

601  
PMIX_ERR_NOMEM
;

603 i‡(
¥efx
 !
¥efix
) {

604 
	`‰ì
(
¥efx
);

607  
PMIX_SUCCESS
;

608 
	}
}

610 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_doubÀ
(**
ouçut
, *
¥efix
,

611 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

613 *
¥efx
;

616 i‡(
NULL
 =
¥efix
) {

617 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

618  
PMIX_ERR_NOMEM
;

621 
¥efx
 = 
¥efix
;

625 i‡(
NULL
 =
§c
) {

626 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_DOUBLE\tVÆue: NULLÖoöãr", 
¥efx
)) {

627  
PMIX_ERR_NOMEM
;

629 i‡(
¥efx
 !
¥efix
) {

630 
	`‰ì
(
¥efx
);

632  
PMIX_SUCCESS
;

635 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_DOUBLE\tVÆue: %f", 
¥efx
, *
§c
)) {

636  
PMIX_ERR_NOMEM
;

638 i‡(
¥efx
 !
¥efix
) {

639 
	`‰ì
(
¥efx
);

642  
PMIX_SUCCESS
;

643 
	}
}

645 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_time
(**
ouçut
, *
¥efix
,

646 
time_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

648 *
¥efx
;

649 *
t
;

652 i‡(
NULL
 =
¥efix
) {

653 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

654  
PMIX_ERR_NOMEM
;

657 
¥efx
 = 
¥efix
;

661 i‡(
NULL
 =
§c
) {

662 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_TIME\tVÆue: NULLÖoöãr", 
¥efx
)) {

663  
PMIX_ERR_NOMEM
;

665 i‡(
¥efx
 !
¥efix
) {

666 
	`‰ì
(
¥efx
);

668  
PMIX_SUCCESS
;

671 
t
 = 
	`˘ime
(
§c
);

672 
t
[
	`°æí
(t)-1] = '\0';

674 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_TIME\tVÆue: %s", 
¥efx
, 
t
)) {

675  
PMIX_ERR_NOMEM
;

677 i‡(
¥efx
 !
¥efix
) {

678 
	`‰ì
(
¥efx
);

681  
PMIX_SUCCESS
;

682 
	}
}

684 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_timevÆ
(**
ouçut
, *
¥efix
,

685 
timevÆ
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

687 *
¥efx
;

690 i‡(
NULL
 =
¥efix
) {

691 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

692  
PMIX_ERR_NOMEM
;

695 
¥efx
 = 
¥efix
;

699 i‡(
NULL
 =
§c
) {

700 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_TIMEVAL\tVÆue: NULLÖoöãr", 
¥efx
)) {

701  
PMIX_ERR_NOMEM
;

703 i‡(
¥efx
 !
¥efix
) {

704 
	`‰ì
(
¥efx
);

706  
PMIX_SUCCESS
;

709 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_TIMEVAL\tVÆue: %ld.%06ld", 
¥efx
,

710 ()
§c
->
tv_£c
, ()§c->
tv_u£c
)) {

711  
PMIX_ERR_NOMEM
;

713 i‡(
¥efx
 !
¥efix
) {

714 
	`‰ì
(
¥efx
);

717  
PMIX_SUCCESS
;

718 
	}
}

720 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_°©us
(**
ouçut
, *
¥efix
,

721 
pmix_°©us_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

723 *
¥efx
;

726 i‡(
NULL
 =
¥efix
) {

727 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

728  
PMIX_ERR_NOMEM
;

731 
¥efx
 = 
¥efix
;

735 i‡(
NULL
 =
§c
) {

736 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_STATUS\tVÆue: NULLÖoöãr", 
¥efx
)) {

737  
PMIX_ERR_NOMEM
;

739 i‡(
¥efx
 !
¥efix
) {

740 
	`‰ì
(
¥efx
);

742  
PMIX_SUCCESS
;

745 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_STATUS\tVÆue: %s", 
¥efx
, 
	`PMIx_Eº‹_°rög
(*
§c
))) {

746  
PMIX_ERR_NOMEM
;

748 i‡(
¥efx
 !
¥efix
) {

749 
	`‰ì
(
¥efx
);

752  
PMIX_SUCCESS
;

753 
	}
}

761 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_vÆue
(**
ouçut
, *
¥efix
,

762 
pmix_vÆue_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

764 *
¥efx
;

765 
rc
;

768 i‡(
NULL
 =
¥efix
) {

769 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

770  
PMIX_ERR_NOMEM
;

773 
¥efx
 = 
¥efix
;

777 i‡(
NULL
 =
§c
) {

778 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_VALUE\tVÆue: NULLÖoöãr", 
¥efx
)) {

779  
PMIX_ERR_NOMEM
;

781 i‡(
¥efx
 !
¥efix
) {

782 
	`‰ì
(
¥efx
);

784  
PMIX_SUCCESS
;

787 
§c
->
ty≥
) {

788 
PMIX_UNDEF
:

789 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: D©®ty≥: PMIX_UNDEF", 
¥efx
);

791 
PMIX_BYTE
:

792 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_BYTE\tValue: %x",

793 
¥efx
, 
§c
->
d©a
.
byã
);

795 
PMIX_STRING
:

796 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_STRING\tValue: %s",

797 
¥efx
, 
§c
->
d©a
.
°rög
);

799 
PMIX_SIZE
:

800 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_SIZE\tValue: %lu",

801 
¥efx
, ()
§c
->
d©a
.
size
);

803 
PMIX_PID
:

804 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_PID\tValue: %lu",

805 
¥efx
, ()
§c
->
d©a
.
pid
);

807 
PMIX_INT
:

808 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_INT\tValue: %d",

809 
¥efx
, 
§c
->
d©a
.
öãgî
);

811 
PMIX_INT8
:

812 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_INT8\tValue: %d",

813 
¥efx
, ()
§c
->
d©a
.
öt8
);

815 
PMIX_INT16
:

816 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_INT16\tValue: %d",

817 
¥efx
, ()
§c
->
d©a
.
öt16
);

819 
PMIX_INT32
:

820 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_INT32\tValue: %d",

821 
¥efx
, 
§c
->
d©a
.
öt32
);

823 
PMIX_INT64
:

824 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_INT64\tValue: %ld",

825 
¥efx
, ()
§c
->
d©a
.
öt64
);

827 
PMIX_UINT
:

828 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_UINT\tValue: %u",

829 
¥efx
, 
§c
->
d©a
.
uöt
);

831 
PMIX_UINT8
:

832 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_UINT8\tValue: %u",

833 
¥efx
, ()
§c
->
d©a
.
uöt8
);

835 
PMIX_UINT16
:

836 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_UINT16\tValue: %u",

837 
¥efx
, ()
§c
->
d©a
.
uöt16
);

839 
PMIX_UINT32
:

840 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_UINT32\tValue: %u",

841 
¥efx
, 
§c
->
d©a
.
uöt32
);

843 
PMIX_UINT64
:

844 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_UINT64\tValue: %lu",

845 
¥efx
, ()
§c
->
d©a
.
uöt64
);

847 
PMIX_FLOAT
:

848 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_FLOAT\tValue: %f",

849 
¥efx
, 
§c
->
d©a
.
fvÆ
);

851 
PMIX_DOUBLE
:

852 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_DOUBLE\tValue: %f",

853 
¥efx
, 
§c
->
d©a
.
dvÆ
);

855 
PMIX_TIMEVAL
:

856 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: D©®ty≥: PMIX_TIMEVAL\tVÆue: %ld.%06ld", 
¥efx
,

857 ()
§c
->
d©a
.
tv
.
tv_£c
, ()§c->d©a.tv.
tv_u£c
);

859 
PMIX_TIME
:

860 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: D©®ty≥: PMIX_TIME\tVÆue: %s", 
¥efx
,

861 
	`˘ime
(&
§c
->
d©a
.
time
));

863 
PMIX_STATUS
:

864 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: D©®ty≥: PMIX_STATUS\tVÆue: %s", 
¥efx
,

865 
	`PMIx_Eº‹_°rög
(
§c
->
d©a
.
°©us
));

867 
PMIX_PROC
:

868 i‡(
NULL
 =
§c
->
d©a
.
¥oc
) {

869 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: D©®ty≥: PMIX_PROC\tNULL", 
¥efx
);

871 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_PROC\t%s:%lu",

872 
¥efx
, 
§c
->
d©a
.
¥oc
->
n•a˚
, ()§c->d©a.¥oc->
ønk
);

875 
PMIX_BYTE_OBJECT
:

876 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: BYTE_OBJECT\tSIZE: %ld",

877 
¥efx
, ()
§c
->
d©a
.
bo
.
size
);

879 
PMIX_PERSIST
:

880 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_PERSIST\tValue: %s",

881 
¥efx
, 
	`PMIx_Pîsi°í˚_°rög
(
§c
->
d©a
.
≥rsi°
));

883 
PMIX_SCOPE
:

884 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_SCOPE\tValue: %s",

885 
¥efx
, 
	`PMIx_Sc›e_°rög
(
§c
->
d©a
.
sc›e
));

887 
PMIX_DATA_RANGE
:

888 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_DATA_RANGE\tValue: %s",

889 
¥efx
, 
	`PMIx_D©a_ønge_°rög
(
§c
->
d©a
.
ønge
));

891 
PMIX_PROC_STATE
:

892 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_STATE\tValue: %s",

893 
¥efx
, 
	`PMIx_Proc_°©e_°rög
(
§c
->
d©a
.
°©e
));

895 
PMIX_PROC_INFO
:

896 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: PMIX_PROC_INFO\tProc: %s:%lu\n%s\tHost: %s\tExecutable: %s\tPid: %lu",

897 
¥efx
, 
§c
->
d©a
.
pöfo
->
¥oc
.
n•a˚
, ()§c->d©a.pöfo->¥oc.
ønk
,

898 
¥efx
, 
§c
->
d©a
.
pöfo
->
ho°«me
, src->d©a.pöfo->
execuèbÀ_«me
,

899 ()
§c
->
d©a
.
pöfo
->
pid
);

901 
PMIX_DATA_ARRAY
:

902 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: DATA_ARRAY\tARRAY SIZE: %ld",

903 
¥efx
, ()
§c
->
d©a
.
d¨øy
->
size
);

906 
PMIX_INFO_ARRAY
:

907 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: DataÅype: INFO_ARRAY\tARRAY SIZE: %ld",

908 
¥efx
, ()
§c
->
d©a
.
¨øy
->
size
);

912 
rc
 = 
	`a•rötf
(
ouçut
, "%sPMIX_VALUE: D©®ty≥: UNKNOWN\tVÆue: UNPRINTABLE", 
¥efx
);

915 i‡(
¥efx
 !
¥efix
) {

916 
	`‰ì
(
¥efx
);

918 i‡(0 > 
rc
) {

919  
PMIX_ERR_NOMEM
;

921  
PMIX_SUCCESS
;

922 
	}
}

924 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_öfo
(**
ouçut
, *
¥efix
,

925 
pmix_öfo_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

927 *
tmp
;

928 
rc
;

930 
	`pmix_b‰›_¥öt_vÆue
(&
tmp
, 
NULL
, &
§c
->
vÆue
, 
PMIX_VALUE
);

931 
rc
 = 
	`a•rötf
(
ouçut
, "%sKEY: %†DIRECTIVES: %0x %s", 
¥efix
, 
§c
->
key
,

932 
§c
->
Êags
, (
NULL
 =
tmp
) ? "PMIX_VALUE: NULL" :Åmp);

933 i‡(
NULL
 !
tmp
) {

934 
	`‰ì
(
tmp
);

936 i‡(0 > 
rc
) {

937  
PMIX_ERR_NOMEM
;

939  
PMIX_SUCCESS
;

940 
	}
}

942 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_pd©a
(**
ouçut
, *
¥efix
,

943 
pmix_pd©a_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

945 *
tmp1
, *
tmp2
;

946 
rc
;

948 
	`pmix_b‰›_¥öt_¥oc
(&
tmp1
, 
NULL
, &
§c
->
¥oc
, 
PMIX_PROC
);

949 
	`pmix_b‰›_¥öt_vÆue
(&
tmp2
, 
NULL
, &
§c
->
vÆue
, 
PMIX_VALUE
);

950 
rc
 = 
	`a•rötf
(
ouçut
, "%† %† KEY: %†%s", 
¥efix
, 
tmp1
, 
§c
->
key
,

951 (
NULL
 =
tmp2
) ? "NULL" :Åmp2);

952 i‡(
NULL
 !
tmp1
) {

953 
	`‰ì
(
tmp1
);

955 i‡(
NULL
 !
tmp2
) {

956 
	`‰ì
(
tmp2
);

958 i‡(0 > 
rc
) {

959  
PMIX_ERR_NOMEM
;

961  
PMIX_SUCCESS
;

962 
	}
}

964 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_buf
(**
ouçut
, *
¥efix
,

965 
pmix_buf„r_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

967  
PMIX_SUCCESS
;

968 
	}
}

970 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_≠p
(**
ouçut
, *
¥efix
,

971 
pmix_≠p_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

973  
PMIX_SUCCESS
;

974 
	}
}

976 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_¥oc
(**
ouçut
, *
¥efix
,

977 
pmix_¥oc_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

979 *
¥efx
;

980 
rc
;

983 i‡(
NULL
 =
¥efix
) {

984 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

985  
PMIX_ERR_NOMEM
;

988 
¥efx
 = 
¥efix
;

991 
§c
->
ønk
) {

992 
PMIX_RANK_UNDEF
:

993 
rc
 = 
	`a•rötf
(
ouçut
,

994 "%sPROC: %s:PMIX_RANK_UNDEF", 
¥efx
, 
§c
->
n•a˚
);

996 
PMIX_RANK_WILDCARD
:

997 
rc
 = 
	`a•rötf
(
ouçut
,

998 "%sPROC: %s:PMIX_RANK_WILDCARD", 
¥efx
, 
§c
->
n•a˚
);

1000 
PMIX_RANK_LOCAL_NODE
:

1001 
rc
 = 
	`a•rötf
(
ouçut
,

1002 "%sPROC: %s:PMIX_RANK_LOCAL_NODE", 
¥efx
, 
§c
->
n•a˚
);

1005 
rc
 = 
	`a•rötf
(
ouçut
,

1006 "%sPROC: %s:%lu", 
¥efx
, 
§c
->
n•a˚
,

1007 ()(
§c
->
ønk
));

1009 i‡(
¥efx
 !
¥efix
) {

1010 
	`‰ì
(
¥efx
);

1012 i‡(0 > 
rc
) {

1013  
PMIX_ERR_NOMEM
;

1015  
PMIX_SUCCESS
;

1016 
	}
}

1018 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_kvÆ
(**
ouçut
, *
¥efix
,

1019 
pmix_kvÆ_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1021  
PMIX_SUCCESS
;

1022 
	}
}

1024 #i‡
PMIX_HAVE_HWLOC


1025 
	#PMIX_HWLOC_MAX_STRING
 2048

	)

1027 
	$¥öt_hwloc_obj
(**
ouçut
, *
¥efix
,

1028 
hwloc_t›ﬁogy_t
 
t›o
, 
hwloc_obj_t
 
obj
)

1030 
hwloc_obj_t
 
obj2
;

1031 
°rög
[1024], *
tmp
, *
tmp2
, *
pfx
;

1032 
i
;

1033 
hwloc_t›ﬁogy_suµ‹t
 *
suµ‹t
;

1036 
	`hwloc_obj_ty≥_¢¥ötf
(
°rög
, 1024, 
obj
, 1);

1037 i‡(0 > 
	`a•rötf
(&
pfx
, "\n%s\t", (
NULL
 =
¥efix
) ? "" :Örefix)) {

1040 i‡(0 > 
	`a•rötf
(&
tmp
, "%sType: %s Number of child objects: %u%sName=%s",

1041 (
NULL
 =
¥efix
Ë? "" :Öªfix, 
°rög
, 
obj
->
¨ôy
,

1042 
pfx
, (
NULL
 =
obj
->
«me
) ? "NULL" : obj->name)) {

1043 
	`‰ì
(
pfx
);

1046 i‡(0 < 
	`hwloc_obj_©å_¢¥ötf
(
°rög
, 1024, 
obj
, 
pfx
, 1)) {

1048 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%s%s", 
tmp
, 
pfx
, 
°rög
)) {

1049 
	`‰ì
(
tmp
);

1050 
	`‰ì
(
pfx
);

1053 
	`‰ì
(
tmp
);

1054 
tmp
 = 
tmp2
;

1059 i‡(
NULL
 !
obj
->
˝u£t
) {

1060 
	`hwloc_bôm≠_¢¥ötf
(
°rög
, 
PMIX_HWLOC_MAX_STRING
, 
obj
->
˝u£t
);

1061 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%sCpu£t: %s", 
tmp
, 
pfx
, 
°rög
)) {

1062 
	`‰ì
(
tmp
);

1063 
	`‰ì
(
pfx
);

1066 
	`‰ì
(
tmp
);

1067 
tmp
 = 
tmp2
;

1069 i‡(
NULL
 !
obj
->
⁄löe_˝u£t
) {

1070 
	`hwloc_bôm≠_¢¥ötf
(
°rög
, 
PMIX_HWLOC_MAX_STRING
, 
obj
->
⁄löe_˝u£t
);

1071 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%sO∆öe: %s", 
tmp
, 
pfx
, 
°rög
)) {

1072 
	`‰ì
(
tmp
);

1073 
	`‰ì
(
pfx
);

1076 
	`‰ì
(
tmp
);

1077 
tmp
 = 
tmp2
;

1079 i‡(
NULL
 !
obj
->
Ælowed_˝u£t
) {

1080 
	`hwloc_bôm≠_¢¥ötf
(
°rög
, 
PMIX_HWLOC_MAX_STRING
, 
obj
->
Ælowed_˝u£t
);

1081 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%sAŒowed: %s", 
tmp
, 
pfx
, 
°rög
)) {

1082 
	`‰ì
(
tmp
);

1083 
	`‰ì
(
pfx
);

1086 
	`‰ì
(
tmp
);

1087 
tmp
 = 
tmp2
;

1089 i‡(
HWLOC_OBJ_MACHINE
 =
obj
->
ty≥
) {

1091 
suµ‹t
 = (
hwloc_t›ﬁogy_suµ‹t
*)
	`hwloc_t›ﬁogy_gë_suµ‹t
(
t›o
);

1092 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%sBöd CPUÖroc: %s%sBöd CPUÅhªad: %s", 
tmp
, 
pfx
,

1093 (
suµ‹t
->
˝uböd
->
£t_thi•roc_˝uböd
Ë? "TRUE" : "FALSE", 
pfx
,

1094 (
suµ‹t
->
˝uböd
->
£t_thi°hªad_˝uböd
) ? "TRUE" : "FALSE")) {

1095 
	`‰ì
(
tmp
);

1096 
	`‰ì
(
pfx
);

1099 
	`‰ì
(
tmp
);

1100 
tmp
 = 
tmp2
;

1101 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%sBöd MEMÖroc: %s%sBöd MEMÅhªad: %s", 
tmp
, 
pfx
,

1102 (
suµ‹t
->
memböd
->
£t_thi•roc_memböd
Ë? "TRUE" : "FALSE", 
pfx
,

1103 (
suµ‹t
->
memböd
->
£t_thi°hªad_memböd
) ? "TRUE" : "FALSE")) {

1104 
	`‰ì
(
tmp
);

1105 
	`‰ì
(
pfx
);

1108 
	`‰ì
(
tmp
);

1109 
tmp
 = 
tmp2
;

1111 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%s\n", (
NULL
 =*
ouçut
Ë? "" : *ouçut, 
tmp
)) {

1112 
	`‰ì
(
tmp
);

1115 
	`‰ì
(
tmp
);

1116 
	`‰ì
(
pfx
);

1117 i‡(0 > 
	`a•rötf
(&
pfx
, "%s\t", (
NULL
 =
¥efix
) ? "" :Örefix)) {

1120 
i
=0; i < 
obj
->
¨ôy
; i++) {

1121 
obj2
 = 
obj
->
chûdªn
[
i
];

1123 
	`¥öt_hwloc_obj
(&
tmp2
, 
pfx
, 
t›o
, 
obj2
);

1125 
	`‰ì
(
pfx
);

1126 i‡(
NULL
 !*
ouçut
) {

1127 
	`‰ì
(*
ouçut
);

1129 *
ouçut
 = 
tmp2
;

1130 
	}
}

1132 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_t›o
(**
ouçut
, *
¥efix
,

1133 
hwloc_t›ﬁogy_t
 
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1135 
hwloc_obj_t
 
obj
;

1136 *
tmp
=
NULL
;

1139 
obj
 = 
	`hwloc_gë_roŸ_obj
(
§c
);

1141 
	`¥öt_hwloc_obj
(&
tmp
, 
¥efix
, 
§c
, 
obj
);

1142 *
ouçut
 = 
tmp
;

1143  
PMIX_SUCCESS
;

1144 
	}
}

1148 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_modex
(**
ouçut
, *
¥efix
,

1149 
pmix_modex_d©a_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1151  
PMIX_SUCCESS
;

1152 
	}
}

1154 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_≥rsi°
(**
ouçut
, *
¥efix
, 
pmix_≥rsi°í˚_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1156 *
¥efx
;

1159 i‡(
NULL
 =
¥efix
) {

1160 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1161  
PMIX_ERR_NOMEM
;

1164 
¥efx
 = 
¥efix
;

1168 i‡(
NULL
 =
§c
) {

1169 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_PERSIST\tVÆue: NULLÖoöãr", 
¥efx
)) {

1170  
PMIX_ERR_NOMEM
;

1172 i‡(
¥efx
 !
¥efix
) {

1173 
	`‰ì
(
¥efx
);

1175  
PMIX_SUCCESS
;

1178 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_PERSIST\tVÆue: %ld", 
¥efx
, (Ë*
§c
)) {

1179  
PMIX_ERR_NOMEM
;

1181 i‡(
¥efx
 !
¥efix
) {

1182 
	`‰ì
(
¥efx
);

1185  
PMIX_SUCCESS
;

1186 
	}
}

1188 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_sc›e
(**
ouçut
, *
¥efix
,

1189 
pmix_sc›e_t
 *
§c
,

1190 
pmix_d©a_ty≥_t
 
ty≥
)

1192 *
¥efx
;

1195 i‡(
NULL
 =
¥efix
) {

1196 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1197  
PMIX_ERR_NOMEM
;

1200 
¥efx
 = 
¥efix
;

1203 i‡(0 > 
	`a•rötf
(
ouçut
, "%sDataÅype: PMIX_SCOPE\tValue: %s",

1204 
¥efx
, 
	`PMIx_Sc›e_°rög
(*
§c
))) {

1205  
PMIX_ERR_NOMEM
;

1207 i‡(
¥efx
 !
¥efix
) {

1208 
	`‰ì
(
¥efx
);

1211  
PMIX_SUCCESS
;

1212 
	}
}

1214 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_ønge
(**
ouçut
, *
¥efix
,

1215 
pmix_d©a_ønge_t
 *
§c
,

1216 
pmix_d©a_ty≥_t
 
ty≥
)

1218 *
¥efx
;

1221 i‡(
NULL
 =
¥efix
) {

1222 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1223  
PMIX_ERR_NOMEM
;

1226 
¥efx
 = 
¥efix
;

1229 i‡(0 > 
	`a•rötf
(
ouçut
, "%sDataÅype: PMIX_DATA_RANGE\tValue: %s",

1230 
¥efx
, 
	`PMIx_D©a_ønge_°rög
(*
§c
))) {

1231  
PMIX_ERR_NOMEM
;

1233 i‡(
¥efx
 !
¥efix
) {

1234 
	`‰ì
(
¥efx
);

1237  
PMIX_SUCCESS
;

1238 
	}
}

1239 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_cmd
(**
ouçut
, *
¥efix
,

1240 
pmix_cmd_t
 *
§c
,

1241 
pmix_d©a_ty≥_t
 
ty≥
)

1243 *
¥efx
;

1246 i‡(
NULL
 =
¥efix
) {

1247 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1248  
PMIX_ERR_NOMEM
;

1251 
¥efx
 = 
¥efix
;

1254 i‡(0 > 
	`a•rötf
(
ouçut
, "%sDataÅype: PMIX_CMD\tValue: %s",

1255 
¥efx
, 
	`pmix_comm™d_°rög
(*
§c
))) {

1256  
PMIX_ERR_NOMEM
;

1258 i‡(
¥efx
 !
¥efix
) {

1259 
	`‰ì
(
¥efx
);

1262  
PMIX_SUCCESS
;

1263 
	}
}

1265 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_öfodús
(**
ouçut
, *
¥efix
,

1266 
pmix_öfo_dúe˘ives_t
 *
§c
,

1267 
pmix_d©a_ty≥_t
 
ty≥
)

1269 *
¥efx
;

1272 i‡(
NULL
 =
¥efix
) {

1273 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1274  
PMIX_ERR_NOMEM
;

1277 
¥efx
 = 
¥efix
;

1280 i‡(0 > 
	`a•rötf
(
ouçut
, "%sDataÅype: PMIX_INFO_DIRECTIVES\tValue: %s",

1281 
¥efx
, 
	`PMIx_Info_dúe˘ives_°rög
(*
§c
))) {

1282  
PMIX_ERR_NOMEM
;

1284 i‡(
¥efx
 !
¥efix
) {

1285 
	`‰ì
(
¥efx
);

1288  
PMIX_SUCCESS
;

1289 
	}
}

1291 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_bo
(**
ouçut
, *
¥efix
,

1292 
pmix_byã_obje˘_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1294 *
¥efx
;

1297 i‡(
NULL
 =
¥efix
) {

1298 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1299  
PMIX_ERR_NOMEM
;

1302 
¥efx
 = 
¥efix
;

1306 i‡(
NULL
 =
§c
) {

1307 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_BYTE_OBJECT\tVÆue: NULLÖoöãr", 
¥efx
)) {

1308  
PMIX_ERR_NOMEM
;

1310 i‡(
¥efx
 !
¥efix
) {

1311 
	`‰ì
(
¥efx
);

1313  
PMIX_SUCCESS
;

1316 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_BYTE_OBJECT\tSize: %ld", 
¥efx
, ()
§c
->
size
)) {

1317  
PMIX_ERR_NOMEM
;

1319 i‡(
¥efx
 !
¥efix
) {

1320 
	`‰ì
(
¥efx
);

1323  
PMIX_SUCCESS
;

1324 
	}
}

1326 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_±r
(**
ouçut
, *
¥efix
,

1327 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1329 *
¥efx
;

1332 i‡(
NULL
 =
¥efix
) {

1333 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1334  
PMIX_ERR_NOMEM
;

1337 
¥efx
 = 
¥efix
;

1340 i‡(0 > 
	`a•rötf
(
ouçut
, "%sD©®ty≥: PMIX_POINTER\tAddªss: %p", 
¥efx
, 
§c
)) {

1341  
PMIX_ERR_NOMEM
;

1343 i‡(
¥efx
 !
¥efix
) {

1344 
	`‰ì
(
¥efx
);

1347  
PMIX_SUCCESS
;

1348 
	}
}

1350 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_p°©e
(**
ouçut
, *
¥efix
,

1351 
pmix_¥oc_°©e_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1353 *
¥efx
;

1356 i‡(
NULL
 =
¥efix
) {

1357 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1358  
PMIX_ERR_NOMEM
;

1361 
¥efx
 = 
¥efix
;

1364 i‡(0 > 
	`a•rötf
(
ouçut
, "%sDataÅype: PMIX_PROC_STATE\tValue: %s",

1365 
¥efx
, 
	`PMIx_Proc_°©e_°rög
(*
§c
))) {

1366  
PMIX_ERR_NOMEM
;

1368 i‡(
¥efx
 !
¥efix
) {

1369 
	`‰ì
(
¥efx
);

1372  
PMIX_SUCCESS
;

1373 
	}
}

1375 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_pöfo
(**
ouçut
, *
¥efix
,

1376 
pmix_¥oc_öfo_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1378 *
¥efx
;

1379 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

1380 *
p2
, *
tmp
;

1383 i‡(
NULL
 =
¥efix
) {

1384 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1385  
PMIX_ERR_NOMEM
;

1388 
¥efx
 = 
¥efix
;

1391 i‡(0 > 
	`a•rötf
(&
p2
, "%s\t", 
¥efx
)) {

1392 
rc
 = 
PMIX_ERR_NOMEM
;

1393 
d⁄e
;

1396 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_¥öt_¥oc
(&
tmp
, 
p2
, &
§c
->
¥oc
, 
PMIX_PROC
))) {

1397 
	`‰ì
(
p2
);

1398 
d⁄e
;

1401 i‡(0 > 
	`a•rötf
(
ouçut
,

1403 
¥efx
, 
tmp
, 
p2
, 
§c
->
ho°«me
, src->
execuèbÀ_«me
,

1404 
p2
, ()
§c
->
pid
, src->
exô_code
, 
	`PMIx_Proc_°©e_°rög
(§c->
°©e
))) {

1405 
	`‰ì
(
p2
);

1406 
rc
 = 
PMIX_ERR_NOMEM
;

1409 
d⁄e
:

1410 i‡(
¥efx
 !
¥efix
) {

1411 
	`‰ì
(
¥efx
);

1414  
rc
;

1415 
	}
}

1417 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_d¨øy
(**
ouçut
, *
¥efix
,

1418 
pmix_d©a_¨øy_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1420 *
¥efx
;

1423 i‡(
NULL
 =
¥efix
) {

1424 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1425  
PMIX_ERR_NOMEM
;

1428 
¥efx
 = 
¥efix
;

1431 i‡(0 > 
	`a•rötf
(
ouçut
, "%sDataÅype: PMIX_DATA_ARRAY\tSize: %lu",

1432 
¥efx
, ()
§c
->
size
)) {

1433  
PMIX_ERR_NOMEM
;

1435 i‡(
¥efx
 !
¥efix
) {

1436 
	`‰ì
(
¥efx
);

1439  
PMIX_SUCCESS
;

1440 
	}
}

1442 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_quîy
(**
ouçut
, *
¥efix
,

1443 
pmix_quîy_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1445 *
¥efx
, *
p2
;

1446 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

1447 *
tmp
, *
t2
, *
t3
;

1448 
size_t
 
n
;

1451 i‡(
NULL
 =
¥efix
) {

1452 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1453  
PMIX_ERR_NOMEM
;

1456 
¥efx
 = 
¥efix
;

1459 i‡(0 > 
	`a•rötf
(&
p2
, "%s\t", 
¥efx
)) {

1460 
rc
 = 
PMIX_ERR_NOMEM
;

1461 
d⁄e
;

1464 i‡(0 > 
	`a•rötf
(&
tmp
,

1465 "%sD©®ty≥: PMIX_QUERY\tVÆue:", 
¥efx
)) {

1466 
	`‰ì
(
p2
);

1467 
rc
 = 
PMIX_ERR_NOMEM
;

1468 
d⁄e
;

1472 i‡(
NULL
 !
§c
->
keys
) {

1473 
n
=0; 
NULL
 !
§c
->
keys
[n];Ç++) {

1474 i‡(0 > 
	`a•rötf
(&
t2
, "%s\n%sKey: %s", 
tmp
, 
p2
, 
§c
->
keys
[
n
])) {

1475 
	`‰ì
(
p2
);

1476 
	`‰ì
(
tmp
);

1477 
rc
 = 
PMIX_ERR_NOMEM
;

1478 
d⁄e
;

1480 
	`‰ì
(
tmp
);

1481 
tmp
 = 
t2
;

1486 i‡(0 < 
§c
->
nquÆ
) {

1487 
n
=0;Ç < 
§c
->
nquÆ
;Ç++) {

1488 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_¥öt_öfo
(&
t2
, 
p2
, &
§c
->
quÆifõrs
[
n
], 
PMIX_PROC
))) {

1489 
	`‰ì
(
p2
);

1490 
d⁄e
;

1492 i‡(0 > 
	`a•rötf
(&
t3
, "%s\n%s", 
tmp
, 
t2
)) {

1493 
	`‰ì
(
p2
);

1494 
	`‰ì
(
tmp
);

1495 
	`‰ì
(
t2
);

1496 
rc
 = 
PMIX_ERR_NOMEM
;

1497 
d⁄e
;

1499 
	`‰ì
(
tmp
);

1500 
	`‰ì
(
t2
);

1501 
tmp
 = 
t3
;

1504 *
ouçut
 = 
tmp
;

1506 
d⁄e
:

1507 i‡(
¥efx
 !
¥efix
) {

1508 
	`‰ì
(
¥efx
);

1511  
rc
;

1512 
	}
}

1514 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_ønk
(**
ouçut
, *
¥efix
,

1515 
pmix_ønk_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1517 *
¥efx
;

1518 
rc
;

1521 i‡(
NULL
 =
¥efix
) {

1522 i‡(0 > 
	`a•rötf
(&
¥efx
, " ")) {

1523  
PMIX_ERR_NOMEM
;

1526 
¥efx
 = 
¥efix
;

1529 *
§c
) {

1530 
PMIX_RANK_UNDEF
:

1531 
rc
 = 
	`a•rötf
(
ouçut
,

1533 
¥efx
);

1535 
PMIX_RANK_WILDCARD
:

1536 
rc
 = 
	`a•rötf
(
ouçut
,

1538 
¥efx
);

1540 
PMIX_RANK_LOCAL_NODE
:

1541 
rc
 = 
	`a•rötf
(
ouçut
,

1543 
¥efx
);

1546 
rc
 = 
	`a•rötf
(
ouçut
, "%sDataÅype: PMIX_PROC_RANK\tValue: %lu",

1547 
¥efx
, ()(*
§c
));

1549 i‡(
¥efx
 !
¥efix
) {

1550 
	`‰ì
(
¥efx
);

1552 i‡(0 > 
rc
) {

1553  
PMIX_ERR_NOMEM
;

1555  
PMIX_SUCCESS
;

1556 
	}
}

1559 
pmix_°©us_t
 
	$pmix_b‰›_¥öt_¨øy
(**
ouçut
, *
¥efix
,

1560 
pmix_öfo_¨øy_t
 *
§c
, 
pmix_d©a_ty≥_t
 
ty≥
)

1562 
size_t
 
j
;

1563 *
tmp
, *
tmp2
, *
tmp3
, *
pfx
;

1564 
pmix_öfo_t
 *
s1
;

1566 i‡(0 > 
	`a•rötf
(&
tmp
, "%sARRAY SIZE: %ld", 
¥efix
, ()
§c
->
size
)) {

1567  
PMIX_ERR_NOMEM
;

1569 i‡(0 > 
	`a•rötf
(&
pfx
, "\n%s\t", (
NULL
 =
¥efix
) ? "" :Örefix)) {

1570 
	`‰ì
(
tmp
);

1571  
PMIX_ERR_NOMEM
;

1573 
s1
 = (
pmix_öfo_t
*)
§c
->
¨øy
;

1575 
j
=0; j < 
§c
->
size
; j++) {

1576 
	`pmix_b‰›_¥öt_öfo
(&
tmp2
, 
pfx
, &
s1
[
j
], 
PMIX_INFO
);

1577 i‡(0 > 
	`a•rötf
(&
tmp3
, "%s%s", 
tmp
, 
tmp2
)) {

1578 
	`‰ì
(
tmp
);

1579 
	`‰ì
(
tmp2
);

1580  
PMIX_ERR_NOMEM
;

1582 
	`‰ì
(
tmp
);

1583 
	`‰ì
(
tmp2
);

1584 
tmp
 = 
tmp3
;

1586 *
ouçut
 = 
tmp
;

1587  
PMIX_SUCCESS
;

1588 
	}
}

	@buffer_ops/types.h

28 #i‚de‡
PMIX_BFROP_TYPES_H_


29 
	#PMIX_BFROP_TYPES_H_


	)

31 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

34 
	~"§c/˛ass/pmix_obje˘.h
"

35 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

36 
	~"§c/˛ass/pmix_li°.h
"

37 
	~<pmix_comm⁄.h
>

39 
	gBEGIN_C_DECLS


42 
	#PMIX_VALUE1_GREATER
 +1

	)

43 
	#PMIX_VALUE2_GREATER
 -1

	)

44 
	#PMIX_EQUAL
 0

	)

49 
	epmix_b‰›_buf„r_ty≥_t
 {

50 
	mPMIX_BFROP_BUFFER_NON_DESC
 = 0x00,

51 
	mPMIX_BFROP_BUFFER_FULLY_DESC
 = 0x01

54 
pmix_b‰›_buf„r_ty≥_t
 
	tpmix_b‰›_buf„r_ty≥_t
;

56 
	#PMIX_BFROP_BUFFER_TYPE_HTON
(
h
);

	)

57 
	#PMIX_BFROP_BUFFER_TYPE_NTOH
(
h
);

	)

63 
pmix_obje˘_t
 
	m∑ª¡
;

65 
pmix_b‰›_buf„r_ty≥_t
 
	mty≥
;

67 *
	mba£_±r
;

70 *
	m∑ck_±r
;

73 *
	mu≈ack_±r
;

76 
size_t
 
	mbyãs_Æloˇãd
;

79 
size_t
 
	mbyãs_u£d
;

80 } 
	tpmix_buf„r_t
;

81 
PMIX_CLASS_DECLARATION
 (
pmix_buf„r_t
);

87 
pmix_li°_ôem_t
 
	msu≥r
;

88 
	m°¨t
;

89 
	m˙t
;

90 } 
	tpmix_ªgex_ønge_t
;

91 
PMIX_CLASS_DECLARATION
(
pmix_ªgex_ønge_t
);

95 
pmix_li°_ôem_t
 
	msu≥r
;

96 *
	m¥efix
;

97 *
	msuffix
;

98 
	mnum_digôs
;

99 
pmix_li°_t
 
	mønges
;

100 } 
	tpmix_ªgex_vÆue_t
;

101 
PMIX_CLASS_DECLARATION
(
pmix_ªgex_vÆue_t
);

103 
	gEND_C_DECLS


	@buffer_ops/unpack.c

26 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 
	~<§c/ö˛ude/ty≥s.h
>

30 
	~"§c/utû/¨gv.h
"

31 
	~"§c/utû/îr‹.h
"

32 
	~"§c/utû/ouçut.h
"

33 
	~"§c/buf„r_›s/ty≥s.h
"

34 
	~"§c/buf„r_›s/öã∫Æ.h
"

36 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack
(
pmix_buf„r_t
 *
buf„r
,

37 *
d°
, 
öt32_t
 *
num_vÆs
,

38 
pmix_d©a_ty≥_t
 
ty≥
)

40 
pmix_°©us_t
 
rc
, 
ªt
;

41 
öt32_t
 
loˇl_num
, 
n
=1;

42 
pmix_d©a_ty≥_t
 
loˇl_ty≥
;

45 i‡(
NULL
 =
buf„r
 || NULL =
d°
 || NULL =
num_vÆs
) {

46  
PMIX_ERR_BAD_PARAM
;

52 i‡(0 =*
num_vÆs
) {

53 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_bfrop_unpack: inadequate space ( %p, %p, %lu, %d )\n",

54 (*)
buf„r
, 
d°
, ()*
num_vÆs
, ()
ty≥
);

55  
PMIX_ERR_UNPACK_INADEQUATE_SPACE
;

67 i‡(
PMIX_BFROP_BUFFER_FULLY_DESC
 =
buf„r
->
ty≥
) {

68 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_gë_d©a_ty≥
(
buf„r
, &
loˇl_ty≥
))) {

69 *
num_vÆs
 = 0;

72  
rc
;

74 i‡(
PMIX_INT32
 !
loˇl_ty≥
) {

75 *
num_vÆs
 = 0;

76  
PMIX_ERR_UNPACK_FAILURE
;

80 
n
=1;

81 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_u≈ack_öt32
(
buf„r
, &
loˇl_num
, &
n
, 
PMIX_INT32
))) {

82 *
num_vÆs
 = 0;

85  
rc
;

88 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_bfrop_unpack: found %d values for %dÖrovided storage",

89 
loˇl_num
, *
num_vÆs
);

96 i‡(
loˇl_num
 > *
num_vÆs
) {

97 
loˇl_num
 = *
num_vÆs
;

98 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_bfrop_unpack: inadequate space ( %p, %p, %lu, %d )\n",

99 (*)
buf„r
, 
d°
, ()*
num_vÆs
, ()
ty≥
);

100 
ªt
 = 
PMIX_ERR_UNPACK_INADEQUATE_SPACE
;

102 *
num_vÆs
 = 
loˇl_num
;

103 
ªt
 = 
PMIX_SUCCESS
;

107 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
d°
, &
loˇl_num
, 
ty≥
))) {

108 *
num_vÆs
 = 0;

109 
ªt
 = 
rc
;

112  
ªt
;

113 
	}
}

115 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_buf„r
(
pmix_buf„r_t
 *
buf„r
, *
d°
, 
öt32_t
 *
num_vÆs
,

116 
pmix_d©a_ty≥_t
 
ty≥
)

118 
pmix_°©us_t
 
rc
;

119 
pmix_d©a_ty≥_t
 
loˇl_ty≥
;

120 
pmix_b‰›_ty≥_öfo_t
 *
öfo
;

122 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_bfrop_unpack_buffer( %p, %p, %lu, %d )\n",

123 (*)
buf„r
, 
d°
, ()*
num_vÆs
, ()
ty≥
);

126 i‡(
PMIX_BFROP_BUFFER_FULLY_DESC
 =
buf„r
->
ty≥
) {

127 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_gë_d©a_ty≥
(
buf„r
, &
loˇl_ty≥
))) {

128  
rc
;

131 i‡(
ty≥
 !
loˇl_ty≥
) {

132 
	`pmix_ouçut
(0, "PMIX b‰›:u≈ack: gŸÅy≥ %d whíÉx≥˘ögÅy≥ %d", 
loˇl_ty≥
, 
ty≥
);

133  
PMIX_ERR_PACK_MISMATCH
;

139 i‡(
NULL
 =(
öfo
 = (
pmix_b‰›_ty≥_öfo_t
*)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_b‰›_ty≥s
, 
ty≥
))) {

140  
PMIX_ERR_UNPACK_FAILURE
;

143  
öfo
->
	`odti_u≈ack_‚
(
buf„r
, 
d°
, 
num_vÆs
, 
ty≥
);

144 
	}
}

152 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_boﬁ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

153 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

155 
öt32_t
 
i
;

156 
uöt8_t
 *
§c
;

157 
boﬁ
 *
d°
;

159 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_boﬁ * %d\n", ()*
num_vÆs
);

161 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, *
num_vÆs
)) {

162  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

166 
§c
 = (
uöt8_t
*)
buf„r
->
u≈ack_±r
;

167 
d°
 = (
boﬁ
*)
de°
;

169 
i
=0; i < *
num_vÆs
; i++) {

170 i‡(
§c
[
i
]) {

171 
d°
[
i
] = 
åue
;

173 
d°
[
i
] = 
Ál£
;

178 
buf„r
->
u≈ack_±r
 +*
num_vÆs
;

180  
PMIX_SUCCESS
;

181 
	}
}

186 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_öt
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

187 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

189 
pmix_°©us_t
 
ªt
;

190 
pmix_d©a_ty≥_t
 
ªmŸe_ty≥
;

192 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_gë_d©a_ty≥
(
buf„r
, &
ªmŸe_ty≥
))) {

193  
ªt
;

196 i‡(
ªmŸe_ty≥
 =
BFROP_TYPE_INT
) {

199 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
de°
, 
num_vÆs
, 
BFROP_TYPE_INT
))) {

203 
	`UNPACK_SIZE_MISMATCH
(, 
ªmŸe_ty≥
, 
ªt
);

206  
ªt
;

207 
	}
}

212 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_sizë
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

213 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

215 
pmix_°©us_t
 
ªt
;

216 
pmix_d©a_ty≥_t
 
ªmŸe_ty≥
;

218 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_gë_d©a_ty≥
(
buf„r
, &
ªmŸe_ty≥
))) {

219  
ªt
;

222 i‡(
ªmŸe_ty≥
 =
BFROP_TYPE_SIZE_T
) {

225 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
de°
, 
num_vÆs
, 
BFROP_TYPE_SIZE_T
))) {

229 
	`UNPACK_SIZE_MISMATCH
(
size_t
, 
ªmŸe_ty≥
, 
ªt
);

232  
ªt
;

233 
	}
}

238 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_pid
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

239 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

241 
pmix_°©us_t
 
ªt
;

242 
pmix_d©a_ty≥_t
 
ªmŸe_ty≥
;

244 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_gë_d©a_ty≥
(
buf„r
, &
ªmŸe_ty≥
))) {

245  
ªt
;

248 i‡(
ªmŸe_ty≥
 =
BFROP_TYPE_PID_T
) {

251 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
de°
, 
num_vÆs
, 
BFROP_TYPE_PID_T
))) {

255 
	`UNPACK_SIZE_MISMATCH
(
pid_t
, 
ªmŸe_ty≥
, 
ªt
);

258  
ªt
;

259 
	}
}

267 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_byã
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

268 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

270 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_byã * %d\n", ()*
num_vÆs
);

272 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, *
num_vÆs
)) {

273  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

277 
	`mem˝y
(
de°
, 
buf„r
->
u≈ack_±r
, *
num_vÆs
);

280 
buf„r
->
u≈ack_±r
 +*
num_vÆs
;

282  
PMIX_SUCCESS
;

283 
	}
}

285 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_öt16
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

286 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

288 
öt32_t
 
i
;

289 
uöt16_t
 
tmp
, *
de°tmp
 = (uöt16_t*Ë
de°
;

291 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_öt16 * %d\n", ()*
num_vÆs
);

293 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*(
tmp
))) {

294  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

298 
i
 = 0; i < (*
num_vÆs
); ++i) {

299 
	`mem˝y
–&(
tmp
), 
buf„r
->
u≈ack_±r
, (tmp) );

300 
tmp
 = 
	`pmix_¡ohs
(tmp);

301 
	`mem˝y
(&
de°tmp
[
i
], &
tmp
, (tmp));

302 
buf„r
->
u≈ack_±r
 +(
tmp
);

305  
PMIX_SUCCESS
;

306 
	}
}

308 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_öt32
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

309 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

311 
öt32_t
 
i
;

312 
uöt32_t
 
tmp
, *
de°tmp
 = (uöt32_t*Ë
de°
;

314 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_öt32 * %d\n", ()*
num_vÆs
);

316 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*(
tmp
))) {

317  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

321 
i
 = 0; i < (*
num_vÆs
); ++i) {

322 
	`mem˝y
–&(
tmp
), 
buf„r
->
u≈ack_±r
, (tmp) );

323 
tmp
 = 
	`¡ohl
(tmp);

324 
	`mem˝y
(&
de°tmp
[
i
], &
tmp
, (tmp));

325 
buf„r
->
u≈ack_±r
 +(
tmp
);

328  
PMIX_SUCCESS
;

329 
	}
}

331 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_d©©y≥
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

332 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

334  
	`pmix_b‰›_u≈ack_öt16
(
buf„r
, 
de°
, 
num_vÆs
, 
ty≥
);

335 
	}
}

337 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_öt64
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

338 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

340 
öt32_t
 
i
;

341 
uöt64_t
 
tmp
, *
de°tmp
 = (uöt64_t*Ë
de°
;

343 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_öt64 * %d\n", ()*
num_vÆs
);

345 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*(
tmp
))) {

346  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

350 
i
 = 0; i < (*
num_vÆs
); ++i) {

351 
	`mem˝y
–&(
tmp
), 
buf„r
->
u≈ack_±r
, (tmp) );

352 
tmp
 = 
	`pmix_¡oh64
(tmp);

353 
	`mem˝y
(&
de°tmp
[
i
], &
tmp
, (tmp));

354 
buf„r
->
u≈ack_±r
 +(
tmp
);

357  
PMIX_SUCCESS
;

358 
	}
}

360 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_°rög
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

361 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

363 
pmix_°©us_t
 
ªt
;

364 
öt32_t
 
i
, 
Àn
, 
n
=1;

365 **
sde°
 = (**Ë
de°
;

367 
i
 = 0; i < (*
num_vÆs
); ++i) {

368 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt32
(
buf„r
, &
Àn
, &
n
, 
PMIX_INT32
))) {

369  
ªt
;

371 i‡(0 =
Àn
) {

372 
sde°
[
i
] = 
NULL
;

374 
sde°
[
i
] = (*)
	`mÆloc
(
Àn
);

375 i‡(
NULL
 =
sde°
[
i
]) {

376  
PMIX_ERR_OUT_OF_RESOURCE
;

378 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
sde°
[
i
], &
Àn
, 
PMIX_BYTE
))) {

379  
ªt
;

384  
PMIX_SUCCESS
;

385 
	}
}

387 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_Êﬂt
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

388 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

390 
öt32_t
 
i
, 
n
;

391 *
de°tmp
 = (*Ë
de°
, 
tmp
;

392 
pmix_°©us_t
 
ªt
;

393 *
c⁄vît
;

395 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_Êﬂà* %d\n", ()*
num_vÆs
);

397 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*())) {

398  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

402 
i
 = 0; i < (*
num_vÆs
); ++i) {

403 
n
=1;

404 
c⁄vît
 = 
NULL
;

405 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
c⁄vît
, &
n
, 
PMIX_STRING
))) {

406  
ªt
;

408 i‡(
NULL
 !
c⁄vît
) {

409 
tmp
 = 
	`°πof
(
c⁄vît
, 
NULL
);

410 
	`mem˝y
(&
de°tmp
[
i
], &
tmp
, (tmp));

411 
	`‰ì
(
c⁄vît
);

414  
PMIX_SUCCESS
;

415 
	}
}

417 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_doubÀ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

418 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

420 
öt32_t
 
i
, 
n
;

421 *
de°tmp
 = (*Ë
de°
, 
tmp
;

422 
pmix_°©us_t
 
ªt
;

423 *
c⁄vît
;

425 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_doubÀ * %d\n", ()*
num_vÆs
);

427 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*())) {

428  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

432 
i
 = 0; i < (*
num_vÆs
); ++i) {

433 
n
=1;

434 
c⁄vît
 = 
NULL
;

435 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
c⁄vît
, &
n
, 
PMIX_STRING
))) {

436  
ªt
;

438 i‡(
NULL
 !
c⁄vît
) {

439 
tmp
 = 
	`°πod
(
c⁄vît
, 
NULL
);

440 
	`mem˝y
(&
de°tmp
[
i
], &
tmp
, (tmp));

441 
	`‰ì
(
c⁄vît
);

444  
PMIX_SUCCESS
;

445 
	}
}

447 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_timevÆ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

448 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

450 
öt32_t
 
i
, 
n
;

451 
öt64_t
 
tmp
[2];

452 
timevÆ
 *
de°tmp
 = (timevÆ *Ë
de°
, 
â
;

453 
pmix_°©us_t
 
ªt
;

455 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_timevÆ * %d\n", ()*
num_vÆs
);

457 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*(
timevÆ
))) {

458  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

462 
i
 = 0; i < (*
num_vÆs
); ++i) {

463 
n
=2;

464 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt64
(
buf„r
, 
tmp
, &
n
, 
PMIX_INT64
))) {

465  
ªt
;

467 
â
.
tv_£c
 = 
tmp
[0];

468 
â
.
tv_u£c
 = 
tmp
[1];

469 
	`mem˝y
(&
de°tmp
[
i
], &
â
, (tt));

471  
PMIX_SUCCESS
;

472 
	}
}

474 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_time
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

475 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

477 
öt32_t
 
i
, 
n
;

478 
time_t
 *
de°tmp
 = (time_à*Ë
de°
, 
tmp
;

479 
pmix_°©us_t
 
ªt
;

480 
uöt64_t
 
ui64
;

486 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_timê* %d\n", ()*
num_vÆs
);

488 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*((
uöt64_t
)))) {

489  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

493 
i
 = 0; i < (*
num_vÆs
); ++i) {

494 
n
=1;

495 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt64
(
buf„r
, &
ui64
, &
n
, 
PMIX_UINT64
))) {

496  
ªt
;

498 
tmp
 = (
time_t
)
ui64
;

499 
	`mem˝y
(&
de°tmp
[
i
], &
tmp
, (tmp));

501  
PMIX_SUCCESS
;

502 
	}
}

505 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_°©us
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

506 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

508 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
, "pmix_b‰›_u≈ack_°©u†* %d\n", ()*
num_vÆs
);

510 i‡(
	`pmix_b‰›_too_smÆl
(
buf„r
, (*
num_vÆs
)*((
pmix_°©us_t
)))) {

511  
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
;

515  
	`pmix_b‰›_u≈ack_öt32
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_INT32
);

516 
	}
}

524 
pmix_°©us_t
 
	$u≈ack_vÆ
(
pmix_buf„r_t
 *
buf„r
, 
pmix_vÆue_t
 *
vÆ
)

526 
öt32_t
 
m
;

527 
pmix_°©us_t
 
ªt
;

529 
m
 = 1;

530 
vÆ
->
ty≥
) {

531 
PMIX_UNDEF
:

533 
PMIX_BOOL
:

534 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
Êag
, &
m
, 
PMIX_BOOL
))) {

535  
ªt
;

538 
PMIX_BYTE
:

539 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
byã
, &
m
, 
PMIX_BYTE
))) {

540  
ªt
;

543 
PMIX_STRING
:

544 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
°rög
, &
m
, 
PMIX_STRING
))) {

545  
ªt
;

548 
PMIX_SIZE
:

549 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
size
, &
m
, 
PMIX_SIZE
))) {

550  
ªt
;

553 
PMIX_PID
:

554 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
pid
, &
m
, 
PMIX_PID
))) {

555  
ªt
;

558 
PMIX_INT
:

559 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
öãgî
, &
m
, 
PMIX_INT
))) {

560  
ªt
;

563 
PMIX_INT8
:

564 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
öt8
, &
m
, 
PMIX_INT8
))) {

565  
ªt
;

568 
PMIX_INT16
:

569 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
öt16
, &
m
, 
PMIX_INT16
))) {

570  
ªt
;

573 
PMIX_INT32
:

574 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
öt32
, &
m
, 
PMIX_INT32
))) {

575  
ªt
;

578 
PMIX_INT64
:

579 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
öt64
, &
m
, 
PMIX_INT64
))) {

580  
ªt
;

583 
PMIX_UINT
:

584 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
uöt
, &
m
, 
PMIX_UINT
))) {

585  
ªt
;

588 
PMIX_UINT8
:

589 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
uöt8
, &
m
, 
PMIX_UINT8
))) {

590  
ªt
;

593 
PMIX_UINT16
:

594 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
uöt16
, &
m
, 
PMIX_UINT16
))) {

595  
ªt
;

598 
PMIX_UINT32
:

599 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
uöt32
, &
m
, 
PMIX_UINT32
))) {

600  
ªt
;

603 
PMIX_UINT64
:

604 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
uöt64
, &
m
, 
PMIX_UINT64
))) {

605  
ªt
;

608 
PMIX_FLOAT
:

609 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
fvÆ
, &
m
, 
PMIX_FLOAT
))) {

610  
ªt
;

613 
PMIX_DOUBLE
:

614 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
dvÆ
, &
m
, 
PMIX_DOUBLE
))) {

615  
ªt
;

618 
PMIX_TIMEVAL
:

619 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
tv
, &
m
, 
PMIX_TIMEVAL
))) {

620  
ªt
;

623 
PMIX_TIME
:

624 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
time
, &
m
, 
PMIX_TIME
))) {

625  
ªt
;

628 
PMIX_STATUS
:

629 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
°©us
, &
m
, 
PMIX_STATUS
))) {

630  
ªt
;

633 
PMIX_PROC
:

635 
	`PMIX_PROC_CREATE
(
vÆ
->
d©a
.
¥oc
, 1);

636 i‡(
NULL
 =
vÆ
->
d©a
.
¥oc
) {

637  
PMIX_ERR_NOMEM
;

639 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
vÆ
->
d©a
.
¥oc
, &
m
, 
PMIX_PROC
))) {

640  
ªt
;

643 
PMIX_PROC_RANK
:

644 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
ønk
, &
m
, 
PMIX_PROC_RANK
))) {

645  
ªt
;

648 
PMIX_BYTE_OBJECT
:

649 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
bo
, &
m
, 
PMIX_BYTE_OBJECT
))) {

650  
ªt
;

653 
PMIX_PERSIST
:

654 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
¥oc
, &
m
, 
PMIX_PROC
))) {

655  
ªt
;

658 
PMIX_SCOPE
:

659 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
sc›e
, &
m
, 
PMIX_SCOPE
))) {

660  
ªt
;

663 
PMIX_DATA_RANGE
:

664 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
ønge
, &
m
, 
PMIX_DATA_RANGE
))) {

665  
ªt
;

668 
PMIX_PROC_STATE
:

669 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, &
vÆ
->
d©a
.
°©e
, &
m
, 
PMIX_PROC_STATE
))) {

670  
ªt
;

673 
PMIX_PROC_INFO
:

675 
	`PMIX_PROC_INFO_CREATE
(
vÆ
->
d©a
.
pöfo
, 1);

676 i‡(
NULL
 =
vÆ
->
d©a
.
pöfo
) {

677  
PMIX_ERR_NOMEM
;

679 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
vÆ
->
d©a
.
pöfo
, &
m
, 
PMIX_PROC_INFO
))) {

680  
ªt
;

683 
PMIX_DATA_ARRAY
:

685 
vÆ
->
d©a
.
d¨øy
 = (
pmix_d©a_¨øy_t
*)
	`mÆloc
((pmix_data_array_t));

686 i‡(
NULL
 =
vÆ
->
d©a
.
d¨øy
) {

687  
PMIX_ERR_NOMEM
;

689 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
vÆ
->
d©a
.
d¨øy
, &
m
, 
PMIX_DATA_ARRAY
))) {

690  
ªt
;

693 
PMIX_QUERY
:

694 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
vÆ
->
d©a
.
d¨øy
, &
m
, 
PMIX_QUERY
))) {

695  
ªt
;

699 
PMIX_INFO_ARRAY
:

701 
vÆ
->
d©a
.
¨øy
 = (
pmix_öfo_¨øy_t
*)
	`mÆloc
((pmix_info_array_t));

702 i‡(
NULL
 =
vÆ
->
d©a
.
¨øy
) {

703  
PMIX_ERR_NOMEM
;

705 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
vÆ
->
d©a
.
¨øy
, &
m
, 
PMIX_INFO_ARRAY
))) {

706  
ªt
;

711 
	`pmix_ouçut
(0, "UNPACK-PMIX-VALUE: UNSUPPORTED TYPE %d", ()
vÆ
->
ty≥
);

712  
PMIX_ERROR
;

715  
PMIX_SUCCESS
;

716 
	}
}

718 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_vÆue
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

719 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

721 
pmix_vÆue_t
 *
±r
;

722 
öt32_t
 
i
, 
n
;

723 
pmix_°©us_t
 
ªt
;

725 
±r
 = (
pmix_vÆue_t
 *Ë
de°
;

726 
n
 = *
num_vÆs
;

728 
i
 = 0; i < 
n
; ++i) {

730 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_gë_d©a_ty≥
(
buf„r
, &
±r
[
i
].
ty≥
))) {

731  
ªt
;

734 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`u≈ack_vÆ
(
buf„r
, &
±r
[
i
])) ) {

735  
ªt
;

738  
PMIX_SUCCESS
;

739 
	}
}

741 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_öfo
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

742 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

744 
pmix_öfo_t
 *
±r
;

745 
öt32_t
 
i
, 
n
, 
m
;

746 
pmix_°©us_t
 
ªt
;

747 *
tmp
;

749 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

750 "pmix_b‰›_u≈ack: %d info", *
num_vÆs
);

752 
±r
 = (
pmix_öfo_t
 *Ë
de°
;

753 
n
 = *
num_vÆs
;

755 
i
 = 0; i < 
n
; ++i) {

756 
	`mem£t
(
±r
[
i
].
key
, 0, (ptr[i].key));

757 
	`mem£t
(&
±r
[
i
].
vÆue
, 0, (
pmix_vÆue_t
));

759 
m
=1;

760 
tmp
 = 
NULL
;

761 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
tmp
, &
m
, 
PMIX_STRING
))) {

762  
ªt
;

764 i‡(
NULL
 =
tmp
) {

765  
PMIX_ERROR
;

767 ()
	`°∫˝y
(
±r
[
i
].
key
, 
tmp
, 
PMIX_MAX_KEYLEN
);

768 
	`‰ì
(
tmp
);

770 
m
=1;

771 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öfodús
(
buf„r
, &
±r
[
i
].
Êags
, &
m
, 
PMIX_INFO_DIRECTIVES
))) {

772  
ªt
;

777 
m
=1;

778 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt
(
buf„r
, &
±r
[
i
].
vÆue
.
ty≥
, &
m
, 
PMIX_INT
))) {

779  
ªt
;

781 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

782 "pmix_b‰›_u≈ack: infÿty≥ %d", 
±r
[
i
].
vÆue
.
ty≥
);

783 
m
=1;

784 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`u≈ack_vÆ
(
buf„r
, &
±r
[
i
].
vÆue
))) {

785  
ªt
;

788  
PMIX_SUCCESS
;

789 
	}
}

791 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_pd©a
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

792 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

794 
pmix_pd©a_t
 *
±r
;

795 
öt32_t
 
i
, 
n
, 
m
;

796 
pmix_°©us_t
 
ªt
;

797 *
tmp
;

799 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

800 "pmix_b‰›_u≈ack: %dÖd©a", *
num_vÆs
);

802 
±r
 = (
pmix_pd©a_t
 *Ë
de°
;

803 
n
 = *
num_vÆs
;

805 
i
 = 0; i < 
n
; ++i) {

806 
	`PMIX_PDATA_CONSTRUCT
(&
±r
[
i
]);

808 
m
=1;

809 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_¥oc
(
buf„r
, &
±r
[
i
].
¥oc
, &
m
, 
PMIX_PROC
))) {

810  
ªt
;

813 
m
=1;

814 
tmp
 = 
NULL
;

815 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
tmp
, &
m
, 
PMIX_STRING
))) {

816  
ªt
;

818 i‡(
NULL
 =
tmp
) {

819  
PMIX_ERROR
;

821 ()
	`°∫˝y
(
±r
[
i
].
key
, 
tmp
, 
PMIX_MAX_KEYLEN
);

822 
	`‰ì
(
tmp
);

826 
m
=1;

827 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt
(
buf„r
, &
±r
[
i
].
vÆue
.
ty≥
, &
m
, 
PMIX_INT
))) {

828  
ªt
;

830 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

831 "pmix_b‰›_u≈ack:Öd©®ty≥ %d", 
±r
[
i
].
vÆue
.
ty≥
);

832 
m
=1;

833 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`u≈ack_vÆ
(
buf„r
, &
±r
[
i
].
vÆue
))) {

834  
ªt
;

837  
PMIX_SUCCESS
;

838 
	}
}

840 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_buf
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

841 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

843 
pmix_buf„r_t
 **
±r
;

844 
öt32_t
 
i
, 
n
, 
m
;

845 
pmix_°©us_t
 
ªt
;

846 
size_t
 
nbyãs
;

848 
±r
 = (
pmix_buf„r_t
 **Ë
de°
;

849 
n
 = *
num_vÆs
;

851 
i
 = 0; i < 
n
; ++i) {

853 
±r
[
i
] = 
	`PMIX_NEW
(
pmix_buf„r_t
);

854 i‡(
NULL
 =
±r
[
i
]) {

855  
PMIX_ERR_OUT_OF_RESOURCE
;

858 
m
=1;

859 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_sizë
(
buf„r
, &
nbyãs
, &
m
, 
PMIX_SIZE
))) {

860  
ªt
;

862 
m
 = 
nbyãs
;

864 i‡(0 < 
nbyãs
) {

865 
±r
[
i
]->
ba£_±r
 = (*)
	`mÆloc
(
nbyãs
);

867 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
±r
[
i
]->
ba£_±r
, &
m
, 
PMIX_BYTE
))) {

868  
ªt
;

871 
±r
[
i
]->
∑ck_±r
 =Öå[i]->
ba£_±r
 + 
m
;

872 
±r
[
i
]->
u≈ack_±r
 =Öå[i]->
ba£_±r
;

873 
±r
[
i
]->
byãs_Æloˇãd
 = 
nbyãs
;

874 
±r
[
i
]->
byãs_u£d
 = 
m
;

876  
PMIX_SUCCESS
;

877 
	}
}

879 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_¥oc
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

880 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

882 
pmix_¥oc_t
 *
±r
;

883 
öt32_t
 
i
, 
n
, 
m
;

884 
pmix_°©us_t
 
ªt
;

885 *
tmp
;

887 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

888 "pmix_b‰›_u≈ack: %dÖrocs", *
num_vÆs
);

890 
±r
 = (
pmix_¥oc_t
 *Ë
de°
;

891 
n
 = *
num_vÆs
;

893 
i
 = 0; i < 
n
; ++i) {

894 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

895 "pmix_b‰›_u≈ack: inôÖroc[%d]", 
i
);

896 
	`mem£t
(&
±r
[
i
], 0, (
pmix_¥oc_t
));

898 
m
=1;

899 
tmp
 = 
NULL
;

900 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
tmp
, &
m
, 
PMIX_STRING
))) {

901  
ªt
;

903 i‡(
NULL
 =
tmp
) {

904  
PMIX_ERROR
;

906 ()
	`°∫˝y
(
±r
[
i
].
n•a˚
, 
tmp
, 
PMIX_MAX_NSLEN
);

907 
	`‰ì
(
tmp
);

909 
m
=1;

910 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_ønk
(
buf„r
, &
±r
[
i
].
ønk
, &
m
, 
PMIX_PROC_RANK
))) {

911  
ªt
;

914  
PMIX_SUCCESS
;

915 
	}
}

917 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_≠p
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

918 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

920 
pmix_≠p_t
 *
±r
;

921 
öt32_t
 
i
, 
k
, 
n
, 
m
;

922 
pmix_°©us_t
 
ªt
;

923 
öt32_t
 
nvÆ
;

924 *
tmp
;

926 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

927 "pmix_b‰›_u≈ack: %dáµs", *
num_vÆs
);

929 
±r
 = (
pmix_≠p_t
 *Ë
de°
;

930 
n
 = *
num_vÆs
;

932 
i
 = 0; i < 
n
; ++i) {

934 
	`PMIX_APP_CONSTRUCT
(&
±r
[
i
]);

936 
m
=1;

937 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
±r
[
i
].
cmd
, &
m
, 
PMIX_STRING
))) {

938  
ªt
;

941 
m
=1;

942 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt
(
buf„r
, &
±r
[
i
].
¨gc
, &
m
, 
PMIX_INT
))) {

943  
ªt
;

946 
k
=0; k < 
±r
[
i
].
¨gc
; k++) {

947 
m
=1;

948 
tmp
 = 
NULL
;

949 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
tmp
, &
m
, 
PMIX_STRING
))) {

950  
ªt
;

952 i‡(
NULL
 =
tmp
) {

953  
PMIX_ERROR
;

955 
	`pmix_¨gv_≠≥nd_nosize
(&
±r
[
i
].
¨gv
, 
tmp
);

956 
	`‰ì
(
tmp
);

959 
m
=1;

960 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt32
(
buf„r
, &
nvÆ
, &
m
, 
PMIX_INT32
))) {

961  
ªt
;

963 
k
=0; k < 
nvÆ
; k++) {

964 
m
=1;

965 
tmp
 = 
NULL
;

966 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
tmp
, &
m
, 
PMIX_STRING
))) {

967  
ªt
;

969 i‡(
NULL
 =
tmp
) {

970  
PMIX_ERROR
;

972 
	`pmix_¨gv_≠≥nd_nosize
(&
±r
[
i
].
ív
, 
tmp
);

973 
	`‰ì
(
tmp
);

976 
m
=1;

977 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt
(
buf„r
, &
±r
[
i
].
max¥ocs
, &
m
, 
PMIX_INT
))) {

978  
ªt
;

981 
m
=1;

982 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_sizë
(
buf„r
, &
±r
[
i
].
nöfo
, &
m
, 
PMIX_SIZE
))) {

983  
ªt
;

985 i‡(0 < 
±r
[
i
].
nöfo
) {

986 
	`PMIX_INFO_CREATE
(
±r
[
i
].
öfo
,Öå[i].
nöfo
);

987 
m
 = 
±r
[
i
].
nöfo
;

988 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öfo
(
buf„r
, 
±r
[
i
].
öfo
, &
m
, 
PMIX_INFO
))) {

989  
ªt
;

993  
PMIX_SUCCESS
;

994 
	}
}

996 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_kvÆ
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

997 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

999 
pmix_kvÆ_t
 *
±r
;

1000 
öt32_t
 
i
, 
n
, 
m
;

1001 
pmix_°©us_t
 
ªt
;

1003 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1004 "pmix_b‰›_u≈ack: %d kvÆs", *
num_vÆs
);

1006 
±r
 = (
pmix_kvÆ_t
*Ë
de°
;

1007 
n
 = *
num_vÆs
;

1009 
i
 = 0; i < 
n
; ++i) {

1010 
	`PMIX_CONSTRUCT
(&
±r
[
i
], 
pmix_kvÆ_t
);

1012 
m
 = 1;

1013 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
±r
[
i
].
key
, &
m
, 
PMIX_STRING
))) {

1014 
	`PMIX_ERROR_LOG
(
ªt
);

1015  
ªt
;

1018 
±r
[
i
].
vÆue
 = (
pmix_vÆue_t
*)
	`mÆloc
((pmix_value_t));

1020 
m
 = 1;

1021 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_vÆue
(
buf„r
, 
±r
[
i
].
vÆue
, &
m
, 
PMIX_VALUE
))) {

1022 
	`PMIX_ERROR_LOG
(
ªt
);

1023  
ªt
;

1026  
PMIX_SUCCESS
;

1027 
	}
}

1029 #i‡
PMIX_HAVE_HWLOC


1030 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_t›o
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1031 
öt32_t
 *
num_vÆs
,

1032 
pmix_d©a_ty≥_t
 
ty≥
)

1035 
hwloc_t›ﬁogy_t
 
t
, *
èºay
 = (hwloc_t›ﬁogy_t*)
de°
;

1036 
pmix_°©us_t
 
rc
=
PMIX_SUCCESS
;

1037 
öt32_t
 
˙t
, 
i
, 
j
;

1038 *
xmlbuf„r
;

1039 
hwloc_t›ﬁogy_suµ‹t
 *
suµ‹t
;

1041 
i
=0, 
j
=0; i < *
num_vÆs
; i++) {

1043 
˙t
=1;

1044 
xmlbuf„r
 = 
NULL
;

1045 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
xmlbuf„r
, &
˙t
, 
PMIX_STRING
))) {

1046 
˛ónup
;

1048 i‡(
NULL
 =
xmlbuf„r
) {

1049 
˛ónup
;

1052 i‡(0 !
	`hwloc_t›ﬁogy_öô
(&
t
)) {

1053 
rc
 = 
PMIX_ERROR
;

1054 
˛ónup
;

1056 i‡(0 !
	`hwloc_t›ﬁogy_£t_xmlbuf„r
(
t
, 
xmlbuf„r
, 
	`°æí
(xmlbuffer))) {

1057 
rc
 = 
PMIX_ERROR
;

1058 
	`‰ì
(
xmlbuf„r
);

1059 
	`hwloc_t›ﬁogy_de°roy
(
t
);

1060 
˛ónup
;

1065 i‡(0 !
	`hwloc_t›ﬁogy_£t_Êags
(
t
, 
HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM
 | 
HWLOC_TOPOLOGY_FLAG_IO_DEVICES
)) {

1066 
	`‰ì
(
xmlbuf„r
);

1067 
rc
 = 
PMIX_ERROR
;

1068 
	`hwloc_t›ﬁogy_de°roy
(
t
);

1069 
˛ónup
;

1072 i‡(0 !
	`hwloc_t›ﬁogy_lﬂd
(
t
)) {

1073 
	`‰ì
(
xmlbuf„r
);

1074 
rc
 = 
PMIX_ERROR
;

1075 
	`hwloc_t›ﬁogy_de°roy
(
t
);

1076 
˛ónup
;

1078 i‡(
NULL
 !
xmlbuf„r
) {

1079 
	`‰ì
(
xmlbuf„r
);

1085 
suµ‹t
 = (
hwloc_t›ﬁogy_suµ‹t
*)
	`hwloc_t›ﬁogy_gë_suµ‹t
(
t
);

1086 
˙t
 = (
hwloc_t›ﬁogy_discovîy_suµ‹t
);

1087 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
suµ‹t
->
discovîy
, &
˙t
, 
PMIX_BYTE
))) {

1088 
˛ónup
;

1090 
˙t
 = (
hwloc_t›ﬁogy_˝uböd_suµ‹t
);

1091 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
suµ‹t
->
˝uböd
, &
˙t
, 
PMIX_BYTE
))) {

1092 
˛ónup
;

1094 
˙t
 = (
hwloc_t›ﬁogy_memböd_suµ‹t
);

1095 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
suµ‹t
->
memböd
, &
˙t
, 
PMIX_BYTE
))) {

1096 
˛ónup
;

1100 
èºay
[
i
] = 
t
;

1103 
j
++;

1106 
˛ónup
:

1107 *
num_vÆs
 = 
j
;

1108  
rc
;

1109 
	}
}

1112 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_modex
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1113 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1115 
pmix_modex_d©a_t
 *
±r
;

1116 
öt32_t
 
i
, 
n
, 
m
;

1117 
pmix_°©us_t
 
ªt
;

1119 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1120 "pmix_b‰›_u≈ack: %d modex", *
num_vÆs
);

1122 
±r
 = (
pmix_modex_d©a_t
 *Ë
de°
;

1123 
n
 = *
num_vÆs
;

1125 
i
 = 0; i < 
n
; ++i) {

1126 
	`mem£t
(&
±r
[
i
], 0, (
pmix_modex_d©a_t
));

1128 
m
=1;

1129 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_sizë
(
buf„r
, &
±r
[
i
].
size
, &
m
, 
PMIX_SIZE
))) {

1130  
ªt
;

1132 i‡(0 < 
±r
[
i
].
size
) {

1133 
±r
[
i
].
blob
 = (
uöt8_t
*)
	`mÆloc
’å[i].
size
 * (uint8_t));

1134 
m
=
±r
[
i
].
size
;

1135 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
±r
[
i
].
blob
, &
m
, 
PMIX_UINT8
))) {

1136  
ªt
;

1140  
PMIX_SUCCESS
;

1141 
	}
}

1144 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_≥rsi°
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1145 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1147  
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_UINT8
);

1148 
	}
}

1150 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_sc›e
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1151 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1153  
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_UINT8
);

1154 
	}
}

1156 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_ønge
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1157 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1159  
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_UINT8
);

1160 
	}
}

1162 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_cmd
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1163 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1165  
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_UINT8
);

1166 
	}
}

1168 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_öfodús
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1169 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1171  
	`pmix_b‰›_u≈ack_öt32
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_UINT32
);

1172 
	}
}

1174 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_bo
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1175 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1177 
pmix_byã_obje˘_t
 *
±r
;

1178 
öt32_t
 
i
, 
n
, 
m
;

1179 
pmix_°©us_t
 
ªt
;

1181 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1182 "pmix_b‰›_u≈ack: %d byã_obje˘", *
num_vÆs
);

1184 
±r
 = (
pmix_byã_obje˘_t
 *Ë
de°
;

1185 
n
 = *
num_vÆs
;

1187 
i
 = 0; i < 
n
; ++i) {

1188 
	`mem£t
(&
±r
[
i
], 0, (
pmix_byã_obje˘_t
));

1190 
m
=1;

1191 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_sizë
(
buf„r
, &
±r
[
i
].
size
, &
m
, 
PMIX_SIZE
))) {

1192  
ªt
;

1194 i‡(0 < 
±r
[
i
].
size
) {

1195 
±r
[
i
].
byãs
 = (*)
	`mÆloc
’å[i].
size
 * ());

1196 
m
=
±r
[
i
].
size
;

1197 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
±r
[
i
].
byãs
, &
m
, 
PMIX_BYTE
))) {

1198  
ªt
;

1202  
PMIX_SUCCESS
;

1203 
	}
}

1205 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_±r
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1206 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1208 
uöt8_t
 
foo
=1;

1209 
öt32_t
 
˙t
=1;

1213  
	`pmix_b‰›_u≈ack_byã
(
buf„r
, &
foo
, &
˙t
, 
PMIX_UINT8
);

1214 
	}
}

1216 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_p°©e
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1217 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1219  
	`pmix_b‰›_u≈ack_byã
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_UINT8
);

1220 
	}
}

1223 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_pöfo
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1224 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1226 
pmix_¥oc_öfo_t
 *
±r
;

1227 
öt32_t
 
i
, 
n
, 
m
;

1228 
pmix_°©us_t
 
ªt
;

1230 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1231 "pmix_b‰›_u≈ack: %dÖöfo", *
num_vÆs
);

1233 
±r
 = (
pmix_¥oc_öfo_t
 *Ë
de°
;

1234 
n
 = *
num_vÆs
;

1236 
i
 = 0; i < 
n
; ++i) {

1237 
	`PMIX_PROC_INFO_CONSTRUCT
(&
±r
[
i
]);

1239 
m
=1;

1240 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_¥oc
(
buf„r
, &
±r
[
i
].
¥oc
, &
m
, 
PMIX_PROC
))) {

1241  
ªt
;

1244 
m
=1;

1245 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
±r
[
i
].
ho°«me
, &
m
, 
PMIX_STRING
))) {

1246  
ªt
;

1249 
m
=1;

1250 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, &
±r
[
i
].
execuèbÀ_«me
, &
m
, 
PMIX_STRING
))) {

1251  
ªt
;

1254 
m
=1;

1255 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_pid
(
buf„r
, &
±r
[
i
].
pid
, &
m
, 
PMIX_PID
))) {

1256  
ªt
;

1259 
m
=1;

1260 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_p°©e
(
buf„r
, &
±r
[
i
].
°©e
, &
m
, 
PMIX_PROC_STATE
))) {

1261  
ªt
;

1264  
PMIX_SUCCESS
;

1265 
	}
}

1267 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_d¨øy
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1268 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1270 
pmix_d©a_¨øy_t
 *
±r
;

1271 
öt32_t
 
i
, 
n
, 
m
;

1272 
pmix_°©us_t
 
ªt
;

1273 
size_t
 
nbyãs
;

1275 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1276 "pmix_b‰›_u≈ack: %d d©®¨øys", *
num_vÆs
);

1278 
±r
 = (
pmix_d©a_¨øy_t
 *Ë
de°
;

1279 
n
 = *
num_vÆs
;

1281 
i
 = 0; i < 
n
; ++i) {

1282 
	`mem£t
(&
±r
[
i
], 0, (
pmix_d©a_¨øy_t
));

1284 
m
=1;

1285 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_d©©y≥
(
buf„r
, &
±r
[
i
].
ty≥
, &
m
, 
PMIX_DATA_TYPE
))) {

1286  
ªt
;

1289 
m
=1;

1290 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_sizë
(
buf„r
, &
±r
[
i
].
size
, &
m
, 
PMIX_SIZE
))) {

1291  
ªt
;

1293 i‡(0 =
±r
[
i
].
size
 || 
PMIX_UNDEF
 =±r[i].
ty≥
) {

1298 
m
 = 
±r
[
i
].
size
;

1299 
±r
[
i
].
ty≥
) {

1300 
PMIX_BOOL
:

1301 
nbyãs
 = (
boﬁ
);

1303 
PMIX_BYTE
:

1304 
PMIX_INT8
:

1305 
PMIX_UINT8
:

1306 
nbyãs
 = (
öt8_t
);

1308 
PMIX_INT16
:

1309 
PMIX_UINT16
:

1310 
nbyãs
 = (
öt16_t
);

1312 
PMIX_INT32
:

1313 
PMIX_UINT32
:

1314 
nbyãs
 = (
öt32_t
);

1316 
PMIX_INT64
:

1317 
PMIX_UINT64
:

1318 
nbyãs
 = (
öt64_t
);

1320 
PMIX_STRING
:

1321 
nbyãs
 = (*);

1323 
PMIX_SIZE
:

1324 
nbyãs
 = (
size_t
);

1326 
PMIX_PID
:

1327 
nbyãs
 = (
pid_t
);

1329 
PMIX_INT
:

1330 
PMIX_UINT
:

1331 
nbyãs
 = ();

1333 
PMIX_FLOAT
:

1334 
nbyãs
 = ();

1336 
PMIX_DOUBLE
:

1337 
nbyãs
 = ();

1339 
PMIX_TIMEVAL
:

1340 
nbyãs
 = (
timevÆ
);

1342 
PMIX_TIME
:

1343 
nbyãs
 = (
time_t
);

1345 
PMIX_STATUS
:

1346 
nbyãs
 = (
pmix_°©us_t
);

1348 
PMIX_PROC
:

1349 
nbyãs
 = (
pmix_¥oc_t
);

1351 
PMIX_BYTE_OBJECT
:

1352 
nbyãs
 = (
pmix_byã_obje˘_t
);

1354 
PMIX_PERSIST
:

1355 
nbyãs
 = (
pmix_≥rsi°í˚_t
);

1357 
PMIX_SCOPE
:

1358 
nbyãs
 = (
pmix_sc›e_t
);

1360 
PMIX_DATA_RANGE
:

1361 
nbyãs
 = (
pmix_d©a_ønge_t
);

1363 
PMIX_PROC_STATE
:

1364 
nbyãs
 = (
pmix_¥oc_°©e_t
);

1366 
PMIX_PROC_INFO
:

1367 
nbyãs
 = (
pmix_¥oc_öfo_t
);

1369 
PMIX_QUERY
:

1370 
nbyãs
 = (
pmix_quîy_t
);

1372  
PMIX_ERR_NOT_SUPPORTED
;

1374 i‡(
NULL
 =(
±r
[
i
].
¨øy
 = 
	`mÆloc
(
m
 * 
nbyãs
))) {

1375  
PMIX_ERR_NOMEM
;

1377 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_buf„r
(
buf„r
, 
±r
[
i
].
¨øy
, &
m
,Öå[i].
ty≥
))) {

1378  
ªt
;

1381  
PMIX_SUCCESS
;

1382 
	}
}

1384 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_ønk
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1385 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1387  
	`pmix_b‰›_u≈ack_öt32
(
buf„r
, 
de°
, 
num_vÆs
, 
PMIX_UINT32
);

1388 
	}
}

1390 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_quîy
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1391 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1393 
pmix_quîy_t
 *
±r
;

1394 
öt32_t
 
i
, 
n
, 
m
;

1395 
pmix_°©us_t
 
ªt
;

1396 
öt32_t
 
nkeys
;

1398 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1399 "pmix_b‰›_u≈ack: %d quîõs", *
num_vÆs
);

1401 
±r
 = (
pmix_quîy_t
 *Ë
de°
;

1402 
n
 = *
num_vÆs
;

1404 
i
 = 0; i < 
n
; ++i) {

1405 
	`PMIX_QUERY_CONSTRUCT
(&
±r
[
i
]);

1407 
m
=1;

1408 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öt32
(
buf„r
, &
nkeys
, &
m
, 
PMIX_INT32
))) {

1409  
ªt
;

1411 i‡(0 < 
nkeys
) {

1413 i‡(
NULL
 =(
±r
[
i
].
keys
 = (**)
	`ˇŒoc
(
nkeys
+1, (*)))) {

1414  
PMIX_ERR_NOMEM
;

1417 
m
=
nkeys
;

1418 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_°rög
(
buf„r
, 
±r
[
i
].
keys
, &
m
, 
PMIX_STRING
))) {

1419  
ªt
;

1423 
m
=1;

1424 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_sizë
(
buf„r
, &
±r
[
i
].
nquÆ
, &
m
, 
PMIX_SIZE
))) {

1425  
ªt
;

1427 i‡(0 < 
±r
[
i
].
nquÆ
) {

1429 
	`PMIX_INFO_CREATE
(
±r
[
i
].
quÆifõrs
,Öå[i].
nquÆ
);

1430 
m
 = 
±r
[
i
].
nquÆ
;

1431 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_öfo
(
buf„r
, 
±r
[
i
].
quÆifõrs
, &
m
, 
PMIX_INFO
))) {

1432  
ªt
;

1436  
PMIX_SUCCESS
;

1437 
	}
}

1440 
pmix_°©us_t
 
	$pmix_b‰›_u≈ack_¨øy
(
pmix_buf„r_t
 *
buf„r
, *
de°
,

1441 
öt32_t
 *
num_vÆs
, 
pmix_d©a_ty≥_t
 
ty≥
)

1443 
pmix_öfo_¨øy_t
 *
±r
;

1444 
öt32_t
 
i
, 
n
, 
m
;

1445 
pmix_°©us_t
 
ªt
;

1447 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1448 "pmix_b‰›_u≈ack: %d infÿ¨øys", *
num_vÆs
);

1450 
±r
 = (
pmix_öfo_¨øy_t
*Ë
de°
;

1451 
n
 = *
num_vÆs
;

1453 
i
 = 0; i < 
n
; ++i) {

1454 
	`pmix_ouçut_vîbo£
(20, 
pmix_globÆs
.
debug_ouçut
,

1455 "pmix_b‰›_u≈ack: inôáºay[%d]", 
i
);

1456 
	`mem£t
(&
±r
[
i
], 0, (
pmix_öfo_¨øy_t
));

1458 
m
=1;

1459 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_sizë
(
buf„r
, &
±r
[
i
].
size
, &
m
, 
PMIX_SIZE
))) {

1460  
ªt
;

1462 i‡(0 < 
±r
[
i
].
size
) {

1463 
±r
[
i
].
¨øy
 = (
pmix_öfo_t
*)
	`mÆloc
’å[i].
size
 * (pmix_info_t));

1464 
m
=
±r
[
i
].
size
;

1465 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_u≈ack_vÆue
(
buf„r
, 
±r
[
i
].
¨øy
, &
m
, 
PMIX_INFO
))) {

1466  
ªt
;

1470  
PMIX_SUCCESS
;

1471 
	}
}

	@class/pmix_hash_table.c

22 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

24 
	~<°rög.h
>

25 
	~<°dlib.h
>

27 
	~"§c/utû/ouçut.h
"

28 
	~"§c/utû/¸c.h
"

29 
	~"§c/˛ass/pmix_li°.h
"

30 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

32 
	~"ö˛ude/pmix_comm⁄.h
"

38 
	#HASH_MULTIPLIER
 31

	)

44 
	spmix_hash_ñemít_t
 {

45 
	mvÆid
;

47 
uöt32_t
 
	mu32
;

48 
uöt64_t
 
	mu64
;

50 c⁄° * 
	mkey
;

51 
size_t
 
	mkey_size
;

52 } 
	m±r
;

53 } 
	mkey
;

54 * 
	mvÆue
;

56 
pmix_hash_ñemít_t
 
	tpmix_hash_ñemít_t
;

58 
	spmix_hash_ty≥_mëhods_t
 {

63 (*
	mñt_de°ru˘‹
)(
pmix_hash_ñemít_t
 * 
	mñt
);

65 
uöt64_t
 (*
hash_ñt
)(
pmix_hash_ñemít_t
 * 
	mñt
);

70 
pmix_hash_èbÀ_c⁄°ru˘
(
pmix_hash_èbÀ_t
* 
ht
);

71 
pmix_hash_èbÀ_de°ru˘
(
pmix_hash_èbÀ_t
* 
ht
);

73 
PMIX_CLASS_INSTANCE
(

74 
pmix_hash_èbÀ_t
,

75 
pmix_obje˘_t
,

76 
pmix_hash_èbÀ_c⁄°ru˘
,

77 
pmix_hash_èbÀ_de°ru˘


81 
	$pmix_hash_èbÀ_c⁄°ru˘
(
pmix_hash_èbÀ_t
* 
ht
)

83 
ht
->
ht_èbÀ
 = 
NULL
;

84 
ht
->
ht_ˇ∑côy
 = ht->
ht_size
 = ht->
ht_growth_åiggî
 = 0;

85 
ht
->
ht_dísôy_numî
 = ht->
ht_dísôy_díom
 = 0;

86 
ht
->
ht_growth_numî
 = ht->
ht_growth_díom
 = 0;

87 
ht
->
ht_ty≥_mëhods
 = 
NULL
;

88 
	}
}

91 
	$pmix_hash_èbÀ_de°ru˘
(
pmix_hash_èbÀ_t
* 
ht
)

93 
	`pmix_hash_èbÀ_ªmove_Æl
(
ht
);

94 
	`‰ì
(
ht
->
ht_èbÀ
);

95 
	}
}

101 
size_t


102 
	$pmix_hash_round_ˇ∑côy_up
(
size_t
 
ˇ∑côy
)

105  ((
ˇ∑côy
+29)/30*30 + 1);

106 
	}
}

111 
	$pmix_hash_èbÀ_öô2
(
pmix_hash_èbÀ_t
* 
ht
, 
size_t
 
e°im©ed_max_size
,

112 
dísôy_numî
, 
dísôy_díom
,

113 
growth_numî
, 
growth_díom
)

115 
size_t
 
e°_ˇ∑côy
 = 
e°im©ed_max_size
 * 
dísôy_díom
 / 
dísôy_numî
;

116 
size_t
 
ˇ∑côy
 = 
	`pmix_hash_round_ˇ∑côy_up
(
e°_ˇ∑côy
);

117 
ht
->
ht_èbÀ
 = (
pmix_hash_ñemít_t
*Ë
	`ˇŒoc
(
ˇ∑côy
, (pmix_hash_element_t));

118 i‡(
NULL
 =
ht
->
ht_èbÀ
) {

119  
PMIX_ERR_OUT_OF_RESOURCE
;

121 
ht
->
ht_ˇ∑côy
 = 
ˇ∑côy
;

122 
ht
->
ht_dísôy_numî
 = 
dísôy_numî
;

123 
ht
->
ht_dísôy_díom
 = 
dísôy_díom
;

124 
ht
->
ht_growth_numî
 = 
growth_numî
;

125 
ht
->
ht_growth_díom
 = 
growth_díom
;

126 
ht
->
ht_growth_åiggî
 = 
ˇ∑côy
 * 
dísôy_numî
 / 
dísôy_díom
;

127 
ht
->
ht_ty≥_mëhods
 = 
NULL
;

128  
PMIX_SUCCESS
;

129 
	}
}

132 
	$pmix_hash_èbÀ_öô
(
pmix_hash_èbÀ_t
* 
ht
, 
size_t
 
èbÀ_size
)

135  
	`pmix_hash_èbÀ_öô2
(
ht
, 
èbÀ_size
, 1, 2, 2, 1);

136 
	}
}

139 
	$pmix_hash_èbÀ_ªmove_Æl
(
pmix_hash_èbÀ_t
* 
ht
)

141 
size_t
 
ii
;

142 
ii
 = 0; iò< 
ht
->
ht_ˇ∑côy
; ii += 1) {

143 
pmix_hash_ñemít_t
 * 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

144 i‡(
ñt
->
vÆid
 && 
ht
->
ht_ty≥_mëhods
 && ht->ht_ty≥_mëhods->
ñt_de°ru˘‹
) {

145 
ht
->
ht_ty≥_mëhods
->
	`ñt_de°ru˘‹
(
ñt
);

147 
ñt
->
vÆid
 = 0;

148 
ñt
->
vÆue
 = 
NULL
;

150 
ht
->
ht_size
 = 0;

153 
ht
->
ht_ty≥_mëhods
 = 
NULL
;

154  
PMIX_SUCCESS
;

155 
	}
}

158 
	$pmix_hash_grow
(
pmix_hash_èbÀ_t
 * 
ht
)

160 
size_t
 
jj
, 
ii
;

161 
pmix_hash_ñemít_t
* 
ﬁd_èbÀ
;

162 
pmix_hash_ñemít_t
* 
√w_èbÀ
;

163 
size_t
 
ﬁd_ˇ∑côy
;

164 
size_t
 
√w_ˇ∑côy
;

166 
ﬁd_èbÀ
 = 
ht
->
ht_èbÀ
;

167 
ﬁd_ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

169 
√w_ˇ∑côy
 = 
ﬁd_ˇ∑côy
 * 
ht
->
ht_growth_numî
 / ht->
ht_growth_díom
;

170 
√w_ˇ∑côy
 = 
	`pmix_hash_round_ˇ∑côy_up
(new_capacity);

172 
√w_èbÀ
 = (
pmix_hash_ñemít_t
*Ë
	`ˇŒoc
(
√w_ˇ∑côy
, (new_table[0]));

173 i‡(
NULL
 =
√w_èbÀ
) {

174  
PMIX_ERR_OUT_OF_RESOURCE
;

185 
jj
 = 0; jj < 
ﬁd_ˇ∑côy
; jj += 1) {

186 
pmix_hash_ñemít_t
 * 
ﬁd_ñt
;

187 
pmix_hash_ñemít_t
 * 
√w_ñt
;

188 
ﬁd_ñt
 = &
ﬁd_èbÀ
[
jj
];

189 i‡(
ﬁd_ñt
->
vÆid
) {

190 
ii
 = (
ht
->
ht_ty≥_mëhods
->
	`hash_ñt
(
ﬁd_ñt
)%
√w_ˇ∑côy
); ; ii += 1) {

191 i‡(
ii
 =
√w_ˇ∑côy
) { ii = 0; }

192 
√w_ñt
 = &
√w_èbÀ
[
ii
];

193 i‡(! 
√w_ñt
->
vÆid
) {

194 *
√w_ñt
 = *
ﬁd_ñt
;

201 
ht
->
ht_èbÀ
 = 
√w_èbÀ
;

202 
ht
->
ht_ˇ∑côy
 = 
√w_ˇ∑côy
;

203 
ht
->
ht_growth_åiggî
 = 
√w_ˇ∑côy
 * ht->
ht_dísôy_numî
 / ht->
ht_dísôy_díom
;

204 
	`‰ì
(
ﬁd_èbÀ
);

205  
PMIX_SUCCESS
;

206 
	}
}

213 
	$pmix_hash_èbÀ_ªmove_ñt_©
(
pmix_hash_èbÀ_t
 * 
ht
, 
size_t
 
ii
)

215 
size_t
 
jj
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

216 
pmix_hash_ñemít_t
* 
ñts
 = 
ht
->
ht_èbÀ
;

217 
pmix_hash_ñemít_t
 * 
ñt
;

219 
ñt
 = &
ñts
[
ii
];

221 i‡(! 
ñt
->
vÆid
) {

223  
PMIX_ERROR
;

226 
ñt
->
vÆid
 = 0;

227 i‡(
ht
->
ht_ty≥_mëhods
->
ñt_de°ru˘‹
) {

228 
ht
->
ht_ty≥_mëhods
->
	`ñt_de°ru˘‹
(
ñt
);

241 
ii
 = ii+1; ; ii += 1) {

242 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

243 
ñt
 = &
ñts
[
ii
];

244 i‡(! 
ñt
->
vÆid
) {

248 
jj
 = 
ht
->
ht_ty≥_mëhods
->
	`hash_ñt
(
ñt
)%
ˇ∑côy
; ; jj += 1) {

249 i‡(
jj
 =
ˇ∑côy
) { jj = 0; }

250 i‡(
jj
 =
ii
) {

253 } i‡(! 
ñts
[
jj
].
vÆid
) {

255 
ñts
[
jj
] =É…s[
ii
];

256 
ñts
[
ii
].
vÆid
 = 0;

263 
ht
->
ht_size
 -= 1;

264  
PMIX_SUCCESS
;

265 
	}
}

270 
uöt64_t


271 
	$pmix_hash_hash_ñt_uöt32
(
pmix_hash_ñemít_t
 * 
ñt
)

273  
ñt
->
key
.
u32
;

274 
	}
}

276 c⁄° 
pmix_hash_ty≥_mëhods_t


277 
	gpmix_hash_ty≥_mëhods_uöt32
 = {

278 
NULL
,

279 
pmix_hash_hash_ñt_uöt32


283 
	$pmix_hash_èbÀ_gë_vÆue_uöt32
(
pmix_hash_èbÀ_t
* 
ht
, 
uöt32_t
 
key
, * *
vÆue
)

285 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

286 
pmix_hash_ñemít_t
 * 
ñt
;

288 #i‡
PMIX_ENABLE_DEBUG


289 if(
ˇ∑côy
 == 0) {

290 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_uint32:"

292  
PMIX_ERROR
;

294 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

295 &
pmix_hash_ty≥_mëhods_uöt32
 !
ht
->
ht_ty≥_mëhods
) {

296 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_uint32:"

298  
PMIX_ERROR
;

302 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_uöt32
;

303 
ii
 = 
key
%
ˇ∑côy
; ; ii += 1) {

304 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

305 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

306 i‡(! 
ñt
->
vÆid
) {

307  
PMIX_ERR_NOT_FOUND
;

308 } i‡(
ñt
->
key
.
u32
 == key) {

309 *
vÆue
 = 
ñt
->value;

310  
PMIX_SUCCESS
;

316 
	}
}

319 
	$pmix_hash_èbÀ_£t_vÆue_uöt32
(
pmix_hash_èbÀ_t
 * 
ht
, 
uöt32_t
 
key
, * 
vÆue
)

321 
rc
;

322 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

323 
pmix_hash_ñemít_t
 * 
ñt
;

325 #i‡
PMIX_ENABLE_DEBUG


326 if(
ˇ∑côy
 == 0) {

327 
	`pmix_ouçut
(0, "pmix_hash_table_set_value_uint32:"

329  
PMIX_ERR_BAD_PARAM
;

331 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

332 &
pmix_hash_ty≥_mëhods_uöt32
 !
ht
->
ht_ty≥_mëhods
) {

333 
	`pmix_ouçut
(0, "pmix_hash_table_set_value_uint32:"

335  
PMIX_ERROR
;

339 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_uöt32
;

340 
ii
 = 
key
%
ˇ∑côy
; ; ii += 1) {

341 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

342 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

343 i‡(! 
ñt
->
vÆid
) {

345 
ñt
->
key
.
u32
 = key;

346 
ñt
->
vÆue
 = value;

347 
ñt
->
vÆid
 = 1;

348 
ht
->
ht_size
 += 1;

349 i‡(
ht
->
ht_size
 >ht->
ht_growth_åiggî
) {

350 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_grow
(
ht
))) {

351  
rc
;

354  
PMIX_SUCCESS
;

355 } i‡(
ñt
->
key
.
u32
 == key) {

357 
ñt
->
vÆue
 = value;

358  
PMIX_SUCCESS
;

363 
	}
}

366 
	$pmix_hash_èbÀ_ªmove_vÆue_uöt32
(
pmix_hash_èbÀ_t
 * 
ht
, 
uöt32_t
 
key
)

368 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

370 #i‡
PMIX_ENABLE_DEBUG


371 if(
ˇ∑côy
 == 0) {

372 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_uint32:"

374  
PMIX_ERROR
;

376 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

377 &
pmix_hash_ty≥_mëhods_uöt32
 !
ht
->
ht_ty≥_mëhods
) {

378 
	`pmix_ouçut
(0, "pmix_hash_table_remove_value_uint32:"

380  
PMIX_ERROR
;

384 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_uöt32
;

385 
ii
 = 
key
%
ˇ∑côy
; ; ii += 1) {

386 
pmix_hash_ñemít_t
 * 
ñt
;

387 i‡(
ii
 =
ˇ∑côy
) ii = 0;

388 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

389 i‡(! 
ñt
->
vÆid
) {

390  
PMIX_ERR_NOT_FOUND
;

391 } i‡(
ñt
->
key
.
u32
 == key) {

392  
	`pmix_hash_èbÀ_ªmove_ñt_©
(
ht
, 
ii
);

397 
	}
}

403 
uöt64_t


404 
	$pmix_hash_hash_ñt_uöt64
(
pmix_hash_ñemít_t
 * 
ñt
)

406  
ñt
->
key
.
u64
;

407 
	}
}

409 c⁄° 
pmix_hash_ty≥_mëhods_t


410 
	gpmix_hash_ty≥_mëhods_uöt64
 = {

411 
NULL
,

412 
pmix_hash_hash_ñt_uöt64


416 
	$pmix_hash_èbÀ_gë_vÆue_uöt64
(
pmix_hash_èbÀ_t
 * 
ht
, 
uöt64_t
 
key
, * *
vÆue
)

418 
size_t
 
ii
;

419 
size_t
 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

420 
pmix_hash_ñemít_t
 * 
ñt
;

422 #i‡
PMIX_ENABLE_DEBUG


423 if(
ˇ∑côy
 == 0) {

424 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_uint64:"

426  
PMIX_ERROR
;

428 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

429 &
pmix_hash_ty≥_mëhods_uöt64
 !
ht
->
ht_ty≥_mëhods
) {

430 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_uint64:"

432  
PMIX_ERROR
;

436 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_uöt64
;

437 
ii
 = 
key
%
ˇ∑côy
; ; ii += 1) {

438 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

439 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

440 i‡(! 
ñt
->
vÆid
) {

441  
PMIX_ERR_NOT_FOUND
;

442 } i‡(
ñt
->
key
.
u64
 == key) {

443 *
vÆue
 = 
ñt
->value;

444  
PMIX_SUCCESS
;

450 
	}
}

453 
	$pmix_hash_èbÀ_£t_vÆue_uöt64
(
pmix_hash_èbÀ_t
 * 
ht
, 
uöt64_t
 
key
, * 
vÆue
)

455 
rc
;

456 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

457 
pmix_hash_ñemít_t
 * 
ñt
;

459 #i‡
PMIX_ENABLE_DEBUG


460 if(
ˇ∑côy
 == 0) {

461 
	`pmix_ouçut
(0, "pmix_hash_table_set_value_uint64:"

463  
PMIX_ERR_BAD_PARAM
;

465 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

466 &
pmix_hash_ty≥_mëhods_uöt64
 !
ht
->
ht_ty≥_mëhods
) {

467 
	`pmix_ouçut
(0, "pmix_hash_table_set_value_uint64:"

469  
PMIX_ERROR
;

473 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_uöt64
;

474 
ii
 = 
key
%
ˇ∑côy
; ; ii += 1) {

475 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

476 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

477 i‡(! 
ñt
->
vÆid
) {

479 
ñt
->
key
.
u64
 = key;

480 
ñt
->
vÆue
 = value;

481 
ñt
->
vÆid
 = 1;

482 
ht
->
ht_size
 += 1;

483 i‡(
ht
->
ht_size
 >ht->
ht_growth_åiggî
) {

484 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_grow
(
ht
))) {

485  
rc
;

488  
PMIX_SUCCESS
;

489 } i‡(
ñt
->
key
.
u64
 == key) {

490 
ñt
->
vÆue
 = value;

491  
PMIX_SUCCESS
;

496 
	}
}

500 
	$pmix_hash_èbÀ_ªmove_vÆue_uöt64
(
pmix_hash_èbÀ_t
 * 
ht
, 
uöt64_t
 
key
)

502 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

504 #i‡
PMIX_ENABLE_DEBUG


505 if(
ˇ∑côy
 == 0) {

506 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_uint64:"

508  
PMIX_ERROR
;

510 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

511 &
pmix_hash_ty≥_mëhods_uöt64
 !
ht
->
ht_ty≥_mëhods
) {

512 
	`pmix_ouçut
(0, "pmix_hash_table_remove_value_uint64:"

514  
PMIX_ERROR
;

518 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_uöt64
;

519 
ii
 = 
key
%
ˇ∑côy
; ; ii += 1) {

520 
pmix_hash_ñemít_t
 * 
ñt
;

521 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

522 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

523 i‡(! 
ñt
->
vÆid
) {

524  
PMIX_ERR_NOT_FOUND
;

525 } i‡(
ñt
->
key
.
u64
 == key) {

526  
	`pmix_hash_èbÀ_ªmove_ñt_©
(
ht
, 
ii
);

531 
	}
}

537 
uöt64_t


538 
	$pmix_hash_hash_key_±r
(c⁄° * 
key
, 
size_t
 
key_size
)

540 
uöt64_t
 
hash
;

541 c⁄° *
sˇ¬î
;

542 
size_t
 
ii
;

544 
hash
 = 0;

545 
sˇ¬î
 = (c⁄° *)
key
;

546 
ii
 = 0; iò< 
key_size
; ii += 1) {

547 
hash
 = 
HASH_MULTIPLIER
*hash + *
sˇ¬î
++;

549  
hash
;

550 
	}
}

555 
	$pmix_hash_de°ru˘_ñt_±r
(
pmix_hash_ñemít_t
 * 
ñt
)

557 
ñt
->
key
.
±r
.
key_size
 = 0;

558 * 
key
 = (*Ë
ñt
->key.
±r
.key;

559 i‡(
NULL
 !
key
) {

560 
ñt
->
key
.
±r
.key = 
NULL
;

561 
	`‰ì
(
key
);

563 
	}
}

565 
uöt64_t


566 
	$pmix_hash_hash_ñt_±r
(
pmix_hash_ñemít_t
 * 
ñt
)

568  
	`pmix_hash_hash_key_±r
(
ñt
->
key
.
±r
.key,É…->key.±r.
key_size
);

569 
	}
}

571 c⁄° 
pmix_hash_ty≥_mëhods_t


572 
	gpmix_hash_ty≥_mëhods_±r
 = {

573 
pmix_hash_de°ru˘_ñt_±r
,

574 
pmix_hash_hash_ñt_±r


578 
	$pmix_hash_èbÀ_gë_vÆue_±r
(
pmix_hash_èbÀ_t
 * 
ht
,

579 c⁄° * 
key
, 
size_t
 
key_size
,

580 * *
vÆue
)

582 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

583 
pmix_hash_ñemít_t
 * 
ñt
;

585 #i‡
PMIX_ENABLE_DEBUG


586 if(
ˇ∑côy
 == 0) {

587 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_ptr:"

589  
PMIX_ERROR
;

591 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

592 &
pmix_hash_ty≥_mëhods_±r
 !
ht
->
ht_ty≥_mëhods
) {

593 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_ptr:"

595  
PMIX_ERROR
;

599 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_±r
;

600 
ii
 = 
	`pmix_hash_hash_key_±r
(
key
, 
key_size
)%
ˇ∑côy
; ; ii += 1) {

601 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

602 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

603 i‡(! 
ñt
->
vÆid
) {

604  
PMIX_ERR_NOT_FOUND
;

605 } i‡(
ñt
->
key
.
±r
.
key_size
 == key_size &&

606 0 =
	`memcmp
(
ñt
->
key
.
±r
.key, key, 
key_size
)) {

607 *
vÆue
 = 
ñt
->value;

608  
PMIX_SUCCESS
;

613 
	}
}

616 
	$pmix_hash_èbÀ_£t_vÆue_±r
(
pmix_hash_èbÀ_t
 * 
ht
,

617 c⁄° * 
key
, 
size_t
 
key_size
,

618 * 
vÆue
)

620 
rc
;

621 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

622 
pmix_hash_ñemít_t
 * 
ñt
;

624 #i‡
PMIX_ENABLE_DEBUG


625 if(
ˇ∑côy
 == 0) {

626 
	`pmix_ouçut
(0, "pmix_hash_table_set_value_ptr:"

628  
PMIX_ERR_BAD_PARAM
;

630 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

631 &
pmix_hash_ty≥_mëhods_±r
 !
ht
->
ht_ty≥_mëhods
) {

632 
	`pmix_ouçut
(0, "pmix_hash_table_set_value_ptr:"

634  
PMIX_ERROR
;

638 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_±r
;

639 
ii
 = 
	`pmix_hash_hash_key_±r
(
key
, 
key_size
)%
ˇ∑côy
; ; ii += 1) {

640 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

641 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

642 i‡(! 
ñt
->
vÆid
) {

644 * 
key_loˇl
 = 
	`mÆloc
(
key_size
);

645 
	`mem˝y
(
key_loˇl
, 
key
, 
key_size
);

646 
ñt
->
key
.
±r
.key = 
key_loˇl
;

647 
ñt
->
key
.
±r
.
key_size
 = key_size;

648 
ñt
->
vÆue
 = value;

649 
ñt
->
vÆid
 = 1;

650 
ht
->
ht_size
 += 1;

651 i‡(
ht
->
ht_size
 >ht->
ht_growth_åiggî
) {

652 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_grow
(
ht
))) {

653  
rc
;

656  
PMIX_SUCCESS
;

657 } i‡(
ñt
->
key
.
±r
.
key_size
 == key_size &&

658 0 =
	`memcmp
(
ñt
->
key
.
±r
.key, key, 
key_size
)) {

660 
ñt
->
vÆue
 = value;

661  
PMIX_SUCCESS
;

666 
	}
}

669 
	$pmix_hash_èbÀ_ªmove_vÆue_±r
(
pmix_hash_èbÀ_t
 * 
ht
,

670 c⁄° * 
key
, 
size_t
 
key_size
)

672 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

674 #i‡
PMIX_ENABLE_DEBUG


675 if(
ˇ∑côy
 == 0) {

676 
	`pmix_ouçut
(0, "pmix_hash_table_get_value_ptr:"

678  
PMIX_ERROR
;

680 i‡(
NULL
 !
ht
->
ht_ty≥_mëhods
 &&

681 &
pmix_hash_ty≥_mëhods_±r
 !
ht
->
ht_ty≥_mëhods
) {

682 
	`pmix_ouçut
(0, "pmix_hash_table_remove_value_ptr:"

684  
PMIX_ERROR
;

688 
ht
->
ht_ty≥_mëhods
 = &
pmix_hash_ty≥_mëhods_±r
;

689 
ii
 = 
	`pmix_hash_hash_key_±r
(
key
, 
key_size
)%
ˇ∑côy
; ; ii += 1) {

690 
pmix_hash_ñemít_t
 * 
ñt
;

691 i‡(
ii
 =
ˇ∑côy
) { ii = 0; }

692 
ñt
 = &
ht
->
ht_èbÀ
[
ii
];

693 i‡(! 
ñt
->
vÆid
) {

694  
PMIX_ERR_NOT_FOUND
;

695 } i‡(
ñt
->
key
.
±r
.
key_size
 == key_size &&

696 0 =
	`memcmp
(
ñt
->
key
.
±r
.key, key, 
key_size
)) {

697  
	`pmix_hash_èbÀ_ªmove_ñt_©
(
ht
, 
ii
);

702 
	}
}

708 
	$pmix_hash_èbÀ_gë_√xt_ñt
(
pmix_hash_èbÀ_t
 *
ht
,

709 
pmix_hash_ñemít_t
 * 
¥ev_ñt
,

710 
pmix_hash_ñemít_t
 * *
√xt_ñt
)

712 
pmix_hash_ñemít_t
* 
ñts
 = 
ht
->
ht_èbÀ
;

713 
size_t
 
ii
, 
ˇ∑côy
 = 
ht
->
ht_ˇ∑côy
;

715 
ii
 = (
NULL
 =
¥ev_ñt
 ? 0 : (¥ev_ñt-
ñts
)+1); iò< 
ˇ∑côy
; ii += 1) {

716 
pmix_hash_ñemít_t
 * 
ñt
 = &
ñts
[
ii
];

717 i‡(
ñt
->
vÆid
) {

718 *
√xt_ñt
 = 
ñt
;

719  
PMIX_SUCCESS
;

722  
PMIX_ERROR
;

723 
	}
}

726 
	$pmix_hash_èbÀ_gë_fú°_key_uöt32
(
pmix_hash_èbÀ_t
 * 
ht
,

727 
uöt32_t
 *
key
, * *
vÆue
,

728 * *
node
)

730  
	`pmix_hash_èbÀ_gë_√xt_key_uöt32
(
ht
, 
key
, 
vÆue
, 
NULL
, 
node
);

731 
	}
}

734 
	$pmix_hash_èbÀ_gë_√xt_key_uöt32
(
pmix_hash_èbÀ_t
 * 
ht
,

735 
uöt32_t
 *
key
, * *
vÆue
,

736 * 
ö_node
, * *
out_node
)

738 
pmix_hash_ñemít_t
 * 
ñt
;

739 i‡(
PMIX_SUCCESS
 =
	`pmix_hash_èbÀ_gë_√xt_ñt
(
ht
, (
pmix_hash_ñemít_t
 *Ë
ö_node
, &
ñt
)) {

740 *
key
 = 
ñt
->key.
u32
;

741 *
vÆue
 = 
ñt
->value;

742 *
out_node
 = 
ñt
;

743  
PMIX_SUCCESS
;

745  
PMIX_ERROR
;

746 
	}
}

749 
	$pmix_hash_èbÀ_gë_fú°_key_±r
(
pmix_hash_èbÀ_t
 * 
ht
,

750 * *
key
, 
size_t
 *
key_size
, * *
vÆue
,

751 * *
node
)

753  
	`pmix_hash_èbÀ_gë_√xt_key_±r
(
ht
, 
key
, 
key_size
, 
vÆue
, 
NULL
, 
node
);

754 
	}
}

757 
	$pmix_hash_èbÀ_gë_√xt_key_±r
(
pmix_hash_èbÀ_t
 * 
ht
,

758 * *
key
, 
size_t
 *
key_size
, * *
vÆue
,

759 * 
ö_node
, * *
out_node
)

761 
pmix_hash_ñemít_t
 * 
ñt
;

762 i‡(
PMIX_SUCCESS
 =
	`pmix_hash_èbÀ_gë_√xt_ñt
(
ht
, (
pmix_hash_ñemít_t
 *Ë
ö_node
, &
ñt
)) {

763 *
key
 = (*)
ñt
->key.
±r
.key;

764 *
key_size
 = 
ñt
->
key
.
±r
.key_size;

765 *
vÆue
 = 
ñt
->value;

766 *
out_node
 = 
ñt
;

767  
PMIX_SUCCESS
;

769  
PMIX_ERROR
;

770 
	}
}

773 
	$pmix_hash_èbÀ_gë_fú°_key_uöt64
(
pmix_hash_èbÀ_t
 * 
ht
,

774 
uöt64_t
 *
key
, * *
vÆue
,

775 * *
node
)

777  
	`pmix_hash_èbÀ_gë_√xt_key_uöt64
(
ht
, 
key
, 
vÆue
, 
NULL
, 
node
);

778 
	}
}

781 
	$pmix_hash_èbÀ_gë_√xt_key_uöt64
(
pmix_hash_èbÀ_t
 * 
ht
,

782 
uöt64_t
 *
key
, * *
vÆue
,

783 * 
ö_node
, * *
out_node
)

785 
pmix_hash_ñemít_t
 * 
ñt
;

786 i‡(
PMIX_SUCCESS
 =
	`pmix_hash_èbÀ_gë_√xt_ñt
(
ht
, (
pmix_hash_ñemít_t
 *Ë
ö_node
, &
ñt
)) {

787 *
key
 = 
ñt
->key.
u64
;

788 *
vÆue
 = 
ñt
->value;

789 *
out_node
 = 
ñt
;

790  
PMIX_SUCCESS
;

792  
PMIX_ERROR
;

793 
	}
}

	@class/pmix_hash_table.h

34 #i‚de‡
PMIX_HASH_TABLE_H


35 
	#PMIX_HASH_TABLE_H


	)

37 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

38 
	~<§c/ö˛ude/¥e„tch.h
>

40 #ifde‡
HAVE_STDINT_H


41 
	~<°döt.h
>

44 
	~"§c/˛ass/pmix_li°.h
"

46 
	~<pmix_comm⁄.h
>

48 
BEGIN_C_DECLS


50 
PMIX_CLASS_DECLARATION
(
pmix_hash_èbÀ_t
);

52 
	spmix_hash_èbÀ_t


54 
pmix_obje˘_t
 
	msu≥r
;

55 
pmix_hash_ñemít_t
 * 
	mht_èbÀ
;

56 
size_t
 
	mht_ˇ∑côy
;

57 
size_t
 
	mht_size
;

58 
size_t
 
	mht_growth_åiggî
;

59 
	mht_dísôy_numî
, 
	mht_dísôy_díom
;

60 
	mht_growth_numî
, 
	mht_growth_díom
;

61 c⁄° 
pmix_hash_ty≥_mëhods_t
 * 
	mht_ty≥_mëhods
;

63 
pmix_hash_èbÀ_t
 
	tpmix_hash_èbÀ_t
;

78 
pmix_hash_èbÀ_öô
(
pmix_hash_èbÀ_t
* 
ht
, 
size_t
 
èbÀ_size
);

81 
pmix_hash_èbÀ_öô2
(
pmix_hash_èbÀ_t
* 
ht
, 
size_t
 
e°im©ed_max_size
,

82 
dísôy_numî
, 
dísôy_díom
,

83 
growth_numî
, 
growth_díom
);

93 
ölöe
 
size_t
 
	$pmix_hash_èbÀ_gë_size
(
pmix_hash_èbÀ_t
 *
ht
)

95  
ht
->
ht_size
;

96 
	}
}

106 
pmix_hash_èbÀ_ªmove_Æl
(
pmix_hash_èbÀ_t
 *
ht
);

121 
pmix_hash_èbÀ_gë_vÆue_uöt32
(
pmix_hash_èbÀ_t
* 
èbÀ
, 
uöt32_t
 
key
,

122 ** 
±r
);

134 
pmix_hash_èbÀ_£t_vÆue_uöt32
(
pmix_hash_èbÀ_t
* 
èbÀ
, 
uöt32_t
 
key
, * 
vÆue
);

145 
pmix_hash_èbÀ_ªmove_vÆue_uöt32
(
pmix_hash_èbÀ_t
* 
èbÀ
, 
uöt32_t
 
key
);

160 
pmix_hash_èbÀ_gë_vÆue_uöt64
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
uöt64_t
 
key
,

161 **
±r
);

173 
pmix_hash_èbÀ_£t_vÆue_uöt64
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
uöt64_t
 
key
, * 
vÆue
);

184 
pmix_hash_èbÀ_ªmove_vÆue_uöt64
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
uöt64_t
 
key
);

199 
pmix_hash_èbÀ_gë_vÆue_±r
(
pmix_hash_èbÀ_t
 *
èbÀ
, c⁄° * 
key
,

200 
size_t
 
keyÀn
, **
±r
);

212 
pmix_hash_èbÀ_£t_vÆue_±r
(
pmix_hash_èbÀ_t
 *
èbÀ
, c⁄° * 
key
, 
size_t
 
keyÀn
, * 
vÆue
);

223 
pmix_hash_èbÀ_ªmove_vÆue_±r
(
pmix_hash_èbÀ_t
 *
èbÀ
, c⁄° * 
key
, 
size_t
 
keyÀn
);

248 
pmix_hash_èbÀ_gë_fú°_key_uöt32
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
uöt32_t
 *
key
,

249 **
vÆue
, **
node
);

266 
pmix_hash_èbÀ_gë_√xt_key_uöt32
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
uöt32_t
 *
key
,

267 **
vÆue
, *
ö_node
,

268 **
out_node
);

284 
pmix_hash_èbÀ_gë_fú°_key_uöt64
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
uöt64_t
 *
key
,

285 **
vÆue
, **
node
);

302 
pmix_hash_èbÀ_gë_√xt_key_uöt64
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
uöt64_t
 *
key
,

303 **
vÆue
, *
ö_node
,

304 **
out_node
);

321 
pmix_hash_èbÀ_gë_fú°_key_±r
(
pmix_hash_èbÀ_t
 *
èbÀ
, * *
key
,

322 
size_t
 *
key_size
, **
vÆue
, **
node
);

340 
pmix_hash_èbÀ_gë_√xt_key_±r
(
pmix_hash_èbÀ_t
 *
èbÀ
, * *
key
,

341 
size_t
 *
key_size
, **
vÆue
,

342 *
ö_node
, **
out_node
);

357 
ölöe
 
	$pmix_√xt_powîo·wo
(
vÆue
)

359 
powî2
;

361 #i‡
PMIX_C_HAVE_BUILTIN_CLZ


362 i‡(
	`PMIX_UNLIKELY
 (0 =
vÆue
)) {

365 
powî2
 = 1 << (8 *  (Ë- 
	`__buûtö_˛z
(
vÆue
));

367 
powî2
 = 1; 
vÆue
 > 0; value >>= 1,Öower2 <<= 1) ;

370  
powî2
;

371 
	}
}

374 
	gEND_C_DECLS


	@class/pmix_hotel.c

12 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

14 
	~<°dio.h
>

15 
	~<°ddef.h
>

17 #ö˛udê
PMIX_EVENT_HEADER


18 
	~"§c/˛ass/pmix_hŸñ.h
"

21 
	$loˇl_evi˘i⁄_ˇŒback
(
fd
, 
Êags
, *
¨g
)

23 
pmix_hŸñ_room_evi˘i⁄_ˇŒback_¨g_t
 *
órgs
 =

24 (
pmix_hŸñ_room_evi˘i⁄_ˇŒback_¨g_t
*Ë
¨g
;

25 *
occu∑¡
 = 
órgs
->
hŸñ
->
rooms
[órgs->
room_num
].occupant;

32 
pmix_hŸñ_t
 *
hŸñ
 = 
órgs
->hotel;

33 
pmix_hŸñ_room_t
 *
room
 = &(
hŸñ
->
rooms
[
órgs
->
room_num
]);

34 
room
->
occu∑¡
 = 
NULL
;

35 
hŸñ
->
œ°_unoccupõd_room
++;

36 
	`as£π
(
hŸñ
->
œ°_unoccupõd_room
 < hŸñ->
num_rooms
);

37 
hŸñ
->
unoccupõd_rooms
[hŸñ->
œ°_unoccupõd_room
] = 
órgs
->
room_num
;

40 
hŸñ
->
	`evi˘_ˇŒback_‚
(hotel,

41 
órgs
->
room_num
,

42 
occu∑¡
);

43 
	}
}

46 
	$pmix_hŸñ_öô
(
pmix_hŸñ_t
 *
h
, 
num_rooms
,

47 
pmix_evít_ba£_t
 *
evba£
,

48 
uöt32_t
 
evi˘i⁄_timeout
,

49 
evi˘i⁄_evít_¥i‹ôy
,

50 
pmix_hŸñ_evi˘i⁄_ˇŒback_‚_t
 
evi˘_ˇŒback_‚
)

52 
i
;

55 i‡(
num_rooms
 <= 0 ||

56 
NULL
 =
evi˘_ˇŒback_‚
) {

57  
PMIX_ERR_BAD_PARAM
;

60 
h
->
num_rooms
 =Çum_rooms;

61 
h
->
evba£
 =Évbase;

62 
h
->
evi˘i⁄_timeout
.
tv_u£c
 =Éviction_timeout % 1000000;

63 
h
->
evi˘i⁄_timeout
.
tv_£c
 =Éviction_timeout / 1000000;

64 
h
->
evi˘_ˇŒback_‚
 =Évict_callback_fn;

65 
h
->
rooms
 = (
pmix_hŸñ_room_t
*)
	`mÆloc
(
num_rooms
 * (pmix_hotel_room_t));

66 i‡(
NULL
 !
evi˘_ˇŒback_‚
) {

67 
h
->
evi˘i⁄_¨gs
 =

68 (
pmix_hŸñ_room_evi˘i⁄_ˇŒback_¨g_t
*)
	`mÆloc
(
num_rooms
 * (pmix_hotel_room_eviction_callback_arg_t));

70 
h
->
unoccupõd_rooms
 = (*Ë
	`mÆloc
(
num_rooms
 * ());

71 
h
->
œ°_unoccupõd_room
 = 
num_rooms
 - 1;

73 
i
 = 0; i < 
num_rooms
; ++i) {

75 
h
->
rooms
[
i
].
occu∑¡
 = 
NULL
;

78 
h
->
unoccupõd_rooms
[
i
] = i;

81 
h
->
evi˘i⁄_¨gs
[
i
].
hŸñ
 = h;

82 
h
->
evi˘i⁄_¨gs
[
i
].
room_num
 = i;

85 i‡(
NULL
 !
h
->
evba£
) {

86 
	`evít_assign
(&(
h
->
rooms
[
i
].
evi˘i⁄_timî_evít
),

87 
h
->
evba£
,

88 -1, 0, 
loˇl_evi˘i⁄_ˇŒback
,

89 &(
h
->
evi˘i⁄_¨gs
[
i
]));

93  
PMIX_SUCCESS
;

94 
	}
}

96 
	$c⁄°ru˘‹
(
pmix_hŸñ_t
 *
h
)

98 
h
->
num_rooms
 = 0;

99 
h
->
evba£
 = 
NULL
;

100 
h
->
evi˘i⁄_timeout
.
tv_£c
 = 0;

101 
h
->
evi˘i⁄_timeout
.
tv_u£c
 = 0;

102 
h
->
evi˘_ˇŒback_‚
 = 
NULL
;

103 
h
->
rooms
 = 
NULL
;

104 
h
->
evi˘i⁄_¨gs
 = 
NULL
;

105 
h
->
unoccupõd_rooms
 = 
NULL
;

106 
h
->
œ°_unoccupõd_room
 = -1;

107 
	}
}

109 
	$de°ru˘‹
(
pmix_hŸñ_t
 *
h
)

111 
i
;

114 i‡(
NULL
 !
h
->
evba£
) {

115 
i
 = 0; i < 
h
->
num_rooms
; ++i) {

116 i‡(
NULL
 !
h
->
rooms
[
i
].
occu∑¡
) {

117 
	`evít_dñ
(&(
h
->
rooms
[
i
].
evi˘i⁄_timî_evít
));

122 i‡(
NULL
 !
h
->
rooms
) {

123 
	`‰ì
(
h
->
rooms
);

125 i‡(
NULL
 !
h
->
evi˘i⁄_¨gs
) {

126 
	`‰ì
(
h
->
evi˘i⁄_¨gs
);

128 i‡(
NULL
 !
h
->
unoccupõd_rooms
) {

129 
	`‰ì
(
h
->
unoccupõd_rooms
);

131 
	}
}

133 
PMIX_CLASS_INSTANCE
(
pmix_hŸñ_t
,

134 
pmix_obje˘_t
,

135 
c⁄°ru˘‹
,

136 
de°ru˘‹
);

	@class/pmix_hotel.h

51 #i‚de‡
PMIX_HOTEL_H


52 
	#PMIX_HOTEL_H


	)

54 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

55 
	~"§c/ö˛ude/ty≥s.h
"

56 
	~"§c/ö˛ude/¥e„tch.h
"

57 
	~"pmix_comm⁄.h
"

58 
	~"§c/˛ass/pmix_obje˘.h
"

59 #ö˛udê
PMIX_EVENT_HEADER


61 
	~"§c/utû/ouçut.h
"

63 
BEGIN_C_DECLS


65 
	gpmix_hŸñ_t
;

68 (*
	tpmix_hŸñ_evi˘i⁄_ˇŒback_‚_t
)(
	tpmix_hŸñ_t
 *
	thŸñ
,

69 
	troom_num
,

70 *
	toccu∑¡
);

83 *
occu∑¡
;

84 
pmix_evít_t
 
evi˘i⁄_timî_evít
;

85 } 
	tpmix_hŸñ_room_t
;

106 
pmix_hŸñ_t
 *
hŸñ
;

107 
room_num
;

108 } 
	tpmix_hŸñ_room_evi˘i⁄_ˇŒback_¨g_t
;

110 
	spmix_hŸñ_t
 {

112 
pmix_obje˘_t
 
su≥r
;

115 
num_rooms
;

118 
pmix_evít_ba£_t
 *
evba£
;

119 
timevÆ
 
evi˘i⁄_timeout
;

120 
pmix_hŸñ_evi˘i⁄_ˇŒback_‚_t
 
evi˘_ˇŒback_‚
;

123 
pmix_hŸñ_room_t
 *
rooms
;

127 
pmix_hŸñ_room_evi˘i⁄_ˇŒback_¨g_t
 *
evi˘i⁄_¨gs
;

131 *
unoccupõd_rooms
;

132 
œ°_unoccupõd_room
;

133 } 
	tpmix_hŸñ_t
;

134 
	`PMIX_CLASS_DECLARATION
(
pmix_hŸñ_t
);

160 
	`pmix_hŸñ_öô
(
pmix_hŸñ_t
 *
hŸñ
, 
num_rooms
,

161 
pmix_evít_ba£_t
 *
evba£
,

162 
uöt32_t
 
evi˘i⁄_timeout
,

163 
evi˘i⁄_evít_¥i‹ôy
,

164 
pmix_hŸñ_evi˘i⁄_ˇŒback_‚_t
 
evi˘_ˇŒback_‚
);

186 
ölöe
 
	$pmix_hŸñ_checkö
(
pmix_hŸñ_t
 *
hŸñ
,

187 *
occu∑¡
,

188 *
room_num
)

190 
pmix_hŸñ_room_t
 *
room
;

193 i‡(
	`PMIX_UNLIKELY
(
hŸñ
->
œ°_unoccupõd_room
 < 0)) {

194  
PMIX_ERR_OUT_OF_RESOURCE
;

198 *
room_num
 = 
hŸñ
->
unoccupõd_rooms
[hŸñ->
œ°_unoccupõd_room
--];

199 
room
 = &(
hŸñ
->
rooms
[*
room_num
]);

200 
room
->
occu∑¡
 = occupant;

203 i‡(
NULL
 !
hŸñ
->
evba£
) {

204 
	`evít_add
(&(
room
->
evi˘i⁄_timî_evít
),

205 &(
hŸñ
->
evi˘i⁄_timeout
));

208  
PMIX_SUCCESS
;

209 
	}
}

215 
ölöe
 
	$pmix_hŸñ_checkö_wôh_ªs
(
pmix_hŸñ_t
 *
hŸñ
,

216 *
occu∑¡
,

217 *
room_num
)

219 
pmix_hŸñ_room_t
 *
room
;

222 *
room_num
 = 
hŸñ
->
unoccupõd_rooms
[hŸñ->
œ°_unoccupõd_room
--];

223 
room
 = &(
hŸñ
->
rooms
[*
room_num
]);

224 
	`as£π
(
room
->
occu∑¡
 =
NULL
);

225 
room
->
occu∑¡
 = occupant;

228 i‡(
NULL
 !
hŸñ
->
evba£
) {

229 
	`evít_add
(&(
room
->
evi˘i⁄_timî_evít
),

230 &(
hŸñ
->
evi˘i⁄_timeout
));

232 
	}
}

245 
ölöe
 
	$pmix_hŸñ_checkout
(
pmix_hŸñ_t
 *
hŸñ
, 
room_num
)

247 
pmix_hŸñ_room_t
 *
room
;

250 
	`as£π
(
room_num
 < 
hŸñ
->
num_rooms
);

253 
room
 = &(
hŸñ
->
rooms
[
room_num
]);

254 i‡(
	`PMIX_LIKELY
(
NULL
 !
room
->
occu∑¡
)) {

258 
room
->
occu∑¡
 = 
NULL
;

259 i‡(
NULL
 !
hŸñ
->
evba£
) {

260 
	`evít_dñ
(&(
room
->
evi˘i⁄_timî_evít
));

262 
hŸñ
->
œ°_unoccupõd_room
++;

263 
	`as£π
(
hŸñ
->
œ°_unoccupõd_room
 < hŸñ->
num_rooms
);

264 
hŸñ
->
unoccupõd_rooms
[hŸñ->
œ°_unoccupõd_room
] = 
room_num
;

270 
	}
}

283 
ölöe
 
	$pmix_hŸñ_checkout_™d_ªtu∫_occu∑¡
(
pmix_hŸñ_t
 *
hŸñ
, 
room_num
, **
occu∑¡
)

285 
pmix_hŸñ_room_t
 *
room
;

288 
	`as£π
(
room_num
 < 
hŸñ
->
num_rooms
);

291 
room
 = &(
hŸñ
->
rooms
[
room_num
]);

292 i‡(
	`PMIX_LIKELY
(
NULL
 !
room
->
occu∑¡
)) {

293 
	`pmix_ouçut
 (10, "checkög ouàoccu∑¡ %∞‰omÑoomÇum %d", 
room
->
occu∑¡
, 
room_num
);

297 *
occu∑¡
 = 
room
->occupant;

298 
room
->
occu∑¡
 = 
NULL
;

299 i‡(
NULL
 !
hŸñ
->
evba£
) {

300 
	`evít_dñ
(&(
room
->
evi˘i⁄_timî_evít
));

302 
hŸñ
->
œ°_unoccupõd_room
++;

303 
	`as£π
(
hŸñ
->
œ°_unoccupõd_room
 < hŸñ->
num_rooms
);

304 
hŸñ
->
unoccupõd_rooms
[hŸñ->
œ°_unoccupõd_room
] = 
room_num
;

307 *
occu∑¡
 = 
NULL
;

309 
	}
}

317 
ölöe
 
boﬁ
 
	$pmix_hŸñ_is_em±y
 (
pmix_hŸñ_t
 *
hŸñ
)

319 i‡(
hŸñ
->
œ°_unoccupõd_room
 =hŸñ->
num_rooms
 - 1)

320  
åue
;

322  
Ál£
;

323 
	}
}

335 
ölöe
 
	$pmix_hŸñ_knock
(
pmix_hŸñ_t
 *
hŸñ
, 
room_num
, **
occu∑¡
)

337 
pmix_hŸñ_room_t
 *
room
;

340 
	`as£π
(
room_num
 < 
hŸñ
->
num_rooms
);

342 *
occu∑¡
 = 
NULL
;

345 
room
 = &(
hŸñ
->
rooms
[
room_num
]);

346 i‡(
	`PMIX_LIKELY
(
NULL
 !
room
->
occu∑¡
)) {

347 
	`pmix_ouçut
 (10, "occu∑¡ %∞öÑoomÇum %dÑe•⁄dedÅÿknock", 
room
->
occu∑¡
, 
room_num
);

348 *
occu∑¡
 = 
room
->occupant;

350 
	}
}

352 
	gEND_C_DECLS


	@class/pmix_list.c

22 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

23 
	~"ö˛ude/pmix_comm⁄.h
"

24 
	~"§c/˛ass/pmix_li°.h
"

30 
pmix_li°_ôem_c⁄°ru˘
(
pmix_li°_ôem_t
*);

31 
pmix_li°_ôem_de°ru˘
(
pmix_li°_ôem_t
*);

33 
PMIX_CLASS_INSTANCE
(

34 
pmix_li°_ôem_t
,

35 
pmix_obje˘_t
,

36 
pmix_li°_ôem_c⁄°ru˘
,

37 
pmix_li°_ôem_de°ru˘


40 
pmix_li°_c⁄°ru˘
(
pmix_li°_t
*);

41 
pmix_li°_de°ru˘
(
pmix_li°_t
*);

43 
PMIX_CLASS_INSTANCE
(

44 
pmix_li°_t
,

45 
pmix_obje˘_t
,

46 
pmix_li°_c⁄°ru˘
,

47 
pmix_li°_de°ru˘


57 
	$pmix_li°_ôem_c⁄°ru˘
(
pmix_li°_ôem_t
 *
ôem
)

59 
ôem
->
pmix_li°_√xt
 = iãm->
pmix_li°_¥ev
 = 
NULL
;

60 
ôem
->
ôem_‰ì
 = 1;

61 #i‡
PMIX_ENABLE_DEBUG


62 
ôem
->
pmix_li°_ôem_ªfcou¡
 = 0;

63 
ôem
->
pmix_li°_ôem_bñ⁄g_to
 = 
NULL
;

65 
	}
}

67 
	$pmix_li°_ôem_de°ru˘
(
pmix_li°_ôem_t
 *
ôem
)

69 #i‡
PMIX_ENABLE_DEBUG


70 
	`as£π
–0 =
ôem
->
pmix_li°_ôem_ªfcou¡
 );

71 
	`as£π
–
NULL
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

73 
	}
}

82 
	$pmix_li°_c⁄°ru˘
(
pmix_li°_t
 *
li°
)

84 #i‡
PMIX_ENABLE_DEBUG


89 
	`PMIX_CONSTRUCT
–&(
li°
->
pmix_li°_£¡öñ
), 
pmix_li°_ôem_t
 );

90 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_ôem_ªfcou¡
 = 1;

91 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_ôem_bñ⁄g_to
 =Üist;

94 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_√xt
 = &list->pmix_list_sentinel;

95 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_¥ev
 = &list->pmix_list_sentinel;

96 
li°
->
pmix_li°_Àngth
 = 0;

97 
	}
}

104 
	$pmix_li°_de°ru˘
(
pmix_li°_t
 *
li°
)

106 
	`pmix_li°_c⁄°ru˘
(
li°
);

107 
	}
}

113 
boﬁ
 
	$pmix_li°_ö£π
(
pmix_li°_t
 *
li°
, 
pmix_li°_ôem_t
 *
ôem
, 
idx
)

116 
i
;

117 vﬁ©ûê
pmix_li°_ôem_t
 *
±r
, *
√xt
;

119 i‡–
idx
 >()
li°
->
pmix_li°_Àngth
 ) {

120  
Ál£
;

123 i‡–0 =
idx
 )

125 
	`pmix_li°_¥ïíd
(
li°
, 
ôem
);

127 #i‡
PMIX_ENABLE_DEBUG


131 
	`as£π
(0 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

134 
±r
 = 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_√xt
;

135  
i
 = 0; i < 
idx
-1; i++ )

136 
±r
 =Öå->
pmix_li°_√xt
;

138 
√xt
 = 
±r
->
pmix_li°_√xt
;

139 
ôem
->
pmix_li°_√xt
 = 
√xt
;

140 
ôem
->
pmix_li°_¥ev
 = 
±r
;

141 
√xt
->
pmix_li°_¥ev
 = 
ôem
;

142 
±r
->
pmix_li°_√xt
 = 
ôem
;

144 #i‡
PMIX_ENABLE_DEBUG


148 
ôem
->
pmix_li°_ôem_ªfcou¡
 += 1;

149 
	`as£π
(1 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

150 
ôem
->
pmix_li°_ôem_bñ⁄g_to
 = 
li°
;

154 
li°
->
pmix_li°_Àngth
++;

155  
åue
;

156 
	}
}

161 
	$pmix_li°_å™s„r
(
pmix_li°_ôem_t
 *
pos
,Ömix_li°_ôem_à*
begö
,

162 
pmix_li°_ôem_t
 *
íd
)

164 vﬁ©ûê
pmix_li°_ôem_t
 *
tmp
;

166 i‡(
pos
 !
íd
) {

168 
íd
->
pmix_li°_¥ev
->
pmix_li°_√xt
 = 
pos
;

169 
begö
->
pmix_li°_¥ev
->
pmix_li°_√xt
 = 
íd
;

170 
pos
->
pmix_li°_¥ev
->
pmix_li°_√xt
 = 
begö
;

173 
tmp
 = 
pos
->
pmix_li°_¥ev
;

174 
pos
->
pmix_li°_¥ev
 = 
íd
->pmix_list_prev;

175 
íd
->
pmix_li°_¥ev
 = 
begö
->pmix_list_prev;

176 
begö
->
pmix_li°_¥ev
 = 
tmp
;

177 #i‡
PMIX_ENABLE_DEBUG


179 vﬁ©ûê
pmix_li°_ôem_t
* 
ôem
 = 
begö
;

180  
pos
 !
ôem
 ) {

181 
ôem
->
pmix_li°_ôem_bñ⁄g_to
 = 
pos
->pmix_list_item_belong_to;

182 
ôem
 = iãm->
pmix_li°_√xt
;

183 
	`as£π
(
NULL
 !
ôem
);

188 
	}
}

192 
	$pmix_li°_joö
(
pmix_li°_t
 *
thi¶i°
, 
pmix_li°_ôem_t
 *
pos
,

193 
pmix_li°_t
 *
xli°
)

195 i‡(0 !
	`pmix_li°_gë_size
(
xli°
)) {

196 
	`pmix_li°_å™s„r
(
pos
, 
	`pmix_li°_gë_fú°
(
xli°
),

197 
	`pmix_li°_gë_íd
(
xli°
));

200 
thi¶i°
->
pmix_li°_Àngth
 +
xli°
->pmix_list_length;

201 
xli°
->
pmix_li°_Àngth
 = 0;

203 
	}
}

207 
	$pmix_li°_•li˚
(
pmix_li°_t
 *
thi¶i°
, 
pmix_li°_ôem_t
 *
pos
,

208 
pmix_li°_t
 *
xli°
, 
pmix_li°_ôem_t
 *
fú°
,

209 
pmix_li°_ôem_t
 *
œ°
)

211 
size_t
 
ch™ge
 = 0;

212 
pmix_li°_ôem_t
 *
tmp
;

214 i‡(
fú°
 !
œ°
) {

219 
tmp
 = 
fú°
 ;Åm∞!
œ°
 ;Åm∞
	`pmix_li°_gë_√xt
(tmp)) {

220 
ch™ge
++;

223 
	`pmix_li°_å™s„r
(
pos
, 
fú°
, 
œ°
);

226 
thi¶i°
->
pmix_li°_Àngth
 +
ch™ge
;

227 
xli°
->
pmix_li°_Àngth
 -
ch™ge
;

229 
	}
}

232 
	$pmix_li°_s‹t
(
pmix_li°_t
* 
li°
, 
pmix_li°_ôem_com∑ª_‚_t
 
com∑ª
)

234 
pmix_li°_ôem_t
* 
ôem
;

235 
pmix_li°_ôem_t
** 
ôems
;

236 
size_t
 
i
, 
ödex
=0;

238 i‡(0 =
li°
->
pmix_li°_Àngth
) {

239  
PMIX_SUCCESS
;

241 
ôems
 = (
pmix_li°_ôem_t
**)
	`mÆloc
((pmix_list_item_t*) *

242 
li°
->
pmix_li°_Àngth
);

244 i‡(
NULL
 =
ôems
) {

245  
PMIX_ERR_OUT_OF_RESOURCE
;

248 
NULL
 !(
ôem
 = 
	`pmix_li°_ªmove_fú°
(
li°
))) {

249 
ôems
[
ödex
++] = 
ôem
;

252 
	`qs‹t
(
ôems
, 
ödex
, (
pmix_li°_ôem_t
*),

253 ((*)(c⁄° *,c⁄° *))
com∑ª
);

254 
i
=0; i<
ödex
; i++) {

255 
	`pmix_li°_≠≥nd
(
li°
,
ôems
[
i
]);

257 
	`‰ì
(
ôems
);

258  
PMIX_SUCCESS
;

259 
	}
}

	@class/pmix_list.h

67 #i‚de‡
PMIX_LIST_H


68 
	#PMIX_LIST_H


	)

70 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

71 
	~<°dio.h
>

72 
	~<°dlib.h
>

73 #i‡
HAVE_STDBOOL_H


74 
	~<°dboﬁ.h
>

77 
	~"§c/˛ass/pmix_obje˘.h
"

79 
BEGIN_C_DECLS


86 
PMIX_CLASS_DECLARATION
(
pmix_li°_t
);

92 
PMIX_CLASS_DECLARATION
(
pmix_li°_ôem_t
);

100 
	spmix_li°_ôem_t


102 
pmix_obje˘_t
 
	msu≥r
;

104 vﬁ©ûê
pmix_li°_ôem_t
 *
	mpmix_li°_√xt
;

106 vﬁ©ûê
pmix_li°_ôem_t
 *
	mpmix_li°_¥ev
;

108 
öt32_t
 
	môem_‰ì
;

110 #i‡
PMIX_ENABLE_DEBUG


112 vﬁ©ûê
öt32_t
 
	mpmix_li°_ôem_ªfcou¡
;

114 vﬁ©ûê
pmix_li°_t
* 
	mpmix_li°_ôem_bñ⁄g_to
;

120 
pmix_li°_ôem_t
 
	tpmix_li°_ôem_t
;

130 
	#pmix_li°_gë_√xt
(
ôem
) \

131 ((
ôem
Ë? ((
pmix_li°_ôem_t
*Ë(’mix_li°_ôem_t*)(ôem))->
pmix_li°_√xt
Ë: 
NULL
)

	)

140 
	#pmix_li°_gë_¥ev
(
ôem
) \

141 ((
ôem
Ë? ((
pmix_li°_ôem_t
*Ë(’mix_li°_ôem_t*)(ôem))->
pmix_li°_¥ev
Ë: 
NULL
)

	)

149 
	spmix_li°_t


151 
pmix_obje˘_t
 
	msu≥r
;

153 
pmix_li°_ôem_t
 
	mpmix_li°_£¡öñ
;

155 vﬁ©ûê
size_t
 
	mpmix_li°_Àngth
;

161 
pmix_li°_t
 
	tpmix_li°_t
;

171 
	#PMIX_LIST_DESTRUCT
(
li°
) \

173 
pmix_li°_ôem_t
 *
ô
; \

174 
NULL
 !(
ô
 = 
	`pmix_li°_ªmove_fú°
(
li°
))) { \

175 
	`PMIX_RELEASE
(
ô
); \

177 
	`PMIX_DESTRUCT
(
li°
); \

178 } 0)

	)

180 
	#PMIX_LIST_RELEASE
(
li°
) \

182 
pmix_li°_ôem_t
 *
ô
; \

183 
NULL
 !(
ô
 = 
	`pmix_li°_ªmove_fú°
(
li°
))) { \

184 
	`PMIX_RELEASE
(
ô
); \

186 
	`PMIX_RELEASE
(
li°
); \

187 } 0)

	)

207 
	#PMIX_LIST_FOREACH
(
ôem
, 
li°
, 
ty≥
) \

208 
ôem
 = (
ty≥
 *Ë(
li°
)->
pmix_li°_£¡öñ
.
pmix_li°_√xt
 ; \

209 
ôem
 !(
ty≥
 *Ë&(
li°
)->
pmix_li°_£¡öñ
 ; \

210 
ôem
 = (
ty≥
 *Ë((
pmix_li°_ôem_t
 *Ë(ôem))->
pmix_li°_√xt
)

	)

229 
	#PMIX_LIST_FOREACH_REV
(
ôem
, 
li°
, 
ty≥
) \

230 
ôem
 = (
ty≥
 *Ë(
li°
)->
pmix_li°_£¡öñ
.
pmix_li°_¥ev
 ; \

231 
ôem
 !(
ty≥
 *Ë&(
li°
)->
pmix_li°_£¡öñ
 ; \

232 
ôem
 = (
ty≥
 *Ë((
pmix_li°_ôem_t
 *Ë(ôem))->
pmix_li°_¥ev
)

	)

253 
	#PMIX_LIST_FOREACH_SAFE
(
ôem
, 
√xt
, 
li°
, 
ty≥
) \

254 
ôem
 = (
ty≥
 *Ë(
li°
)->
pmix_li°_£¡öñ
.
pmix_li°_√xt
, \

255 
√xt
 = (
ty≥
 *Ë((
pmix_li°_ôem_t
 *Ë(
ôem
))->
pmix_li°_√xt
 ;\

256 
ôem
 !(
ty≥
 *Ë&(
li°
)->
pmix_li°_£¡öñ
 ; \

257 
ôem
 = 
√xt
,Çexà(
ty≥
 *Ë((
pmix_li°_ôem_t
 *Ë(ôem))->
pmix_li°_√xt
)

	)

278 
	#PMIX_LIST_FOREACH_SAFE_REV
(
ôem
, 
¥ev
, 
li°
, 
ty≥
) \

279 
ôem
 = (
ty≥
 *Ë(
li°
)->
pmix_li°_£¡öñ
.
pmix_li°_¥ev
, \

280 
¥ev
 = (
ty≥
 *Ë((
pmix_li°_ôem_t
 *Ë(
ôem
))->
pmix_li°_¥ev
 ;\

281 
ôem
 !(
ty≥
 *Ë&(
li°
)->
pmix_li°_£¡öñ
 ; \

282 
ôem
 = 
¥ev
,Öªv = (
ty≥
 *Ë((
pmix_li°_ôem_t
 *Ë(ôem))->
pmix_li°_¥ev
)

	)

297 
ölöe
 
boﬁ
 
	$pmix_li°_is_em±y
(
pmix_li°_t
* 
li°
)

299  (
li°
->
pmix_li°_£¡öñ
.
pmix_li°_√xt
 ==

300 &(
li°
->
pmix_li°_£¡öñ
Ë? 
åue
 : 
Ál£
);

301 
	}
}

318 
ölöe
 
pmix_li°_ôem_t
* 
	$pmix_li°_gë_fú°
(
pmix_li°_t
* 
li°
)

320 
pmix_li°_ôem_t
* 
ôem
 = (pmix_li°_ôem_t*)
li°
->
pmix_li°_£¡öñ
.
pmix_li°_√xt
;

321 #i‡
PMIX_ENABLE_DEBUG


324 
	`as£π
(1 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

325 
	`as£π
–
li°
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

328  
ôem
;

329 
	}
}

345 
ölöe
 
pmix_li°_ôem_t
* 
	$pmix_li°_gë_œ°
(
pmix_li°_t
* 
li°
)

347 
pmix_li°_ôem_t
* 
ôem
 = (pmix_li°_ôem_à*)
li°
->
pmix_li°_£¡öñ
.
pmix_li°_¥ev
;

348 #i‡
PMIX_ENABLE_DEBUG


351 
	`as£π
–1 =
ôem
->
pmix_li°_ôem_ªfcou¡
 );

352 
	`as£π
–
li°
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

355  
ôem
;

356 
	}
}

375 
ölöe
 
pmix_li°_ôem_t
* 
	$pmix_li°_gë_begö
(
pmix_li°_t
* 
li°
)

377  &(
li°
->
pmix_li°_£¡öñ
);

378 
	}
}

397 
ölöe
 
pmix_li°_ôem_t
* 
	$pmix_li°_gë_íd
(
pmix_li°_t
* 
li°
)

399  &(
li°
->
pmix_li°_£¡öñ
);

400 
	}
}

422 
ölöe
 
size_t
 
	$pmix_li°_gë_size
(
pmix_li°_t
* 
li°
)

424 #i‡
PMIX_ENABLE_DEBUG
 && 0

429 
size_t
 
check_Àn
 = 0;

430 
pmix_li°_ôem_t
 *
ôem
;

432 
ôem
 = 
	`pmix_li°_gë_fú°
(
li°
) ;

433 
ôem
 !
	`pmix_li°_gë_íd
(
li°
) ;

434 
ôem
 = 
	`pmix_li°_gë_√xt
(item)) {

435 
check_Àn
++;

438 i‡(
check_Àn
 !
li°
->
pmix_li°_Àngth
) {

439 
	`Ârötf
(
°dîr
," Error ::Ömix_list_get_size -Ömix_list_length doesÇot matcháctualÜistÜength\n");

440 
	`fÊush
(
°dîr
);

441 
	`ab‹t
();

445  
li°
->
pmix_li°_Àngth
;

446 
	}
}

470 
ölöe
 
pmix_li°_ôem_t
 *
	gpmix_li°_ªmove_ôem


471 (
pmix_li°_t
 *
	gli°
, 
pmix_li°_ôem_t
 *
	gôem
)

473 #i‡
PMIX_ENABLE_DEBUG


474 
pmix_li°_ôem_t
 *
	gôem_±r
;

475 
boﬁ
 
	gfound
 = 
Ál£
;

478 
	gôem_±r
 = 
pmix_li°_gë_fú°
(
li°
);

479 
	gôem_±r
 !
pmix_li°_gë_íd
(
li°
);

480 
	gôem_±r
 = (
pmix_li°_ôem_t
 *)(
ôem_±r
->
pmix_li°_√xt
)) {

481 i‡(
ôem_±r
 =(
pmix_li°_ôem_t
 *Ë
ôem
) {

482 
found
 = 
åue
;

486 i‡(!
	gfound
) {

487 
Ârötf
(
°dîr
," W¨nög ::Ömix_li°_ªmove_ôem -Åhêôem %∞i†nŸ o¿thêli° %∞\n",(*Ë
ôem
, (*Ë
li°
);

488 
fÊush
(
°dîr
);

489  (
	gpmix_li°_ôem_t
 *)
	gNULL
;

492 
as£π
–
li°
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

496 
	gôem
->
	gpmix_li°_¥ev
->
	gpmix_li°_√xt
=
ôem
->
pmix_li°_√xt
;

499 
	gôem
->
	gpmix_li°_√xt
->
	gpmix_li°_¥ev
=
ôem
->
pmix_li°_¥ev
;

501 
	gli°
->
	gpmix_li°_Àngth
--;

503 #i‡
PMIX_ENABLE_DEBUG


506 
	gôem
->
	gpmix_li°_ôem_ªfcou¡
 -= 1;

507 
as£π
(0 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

508 
	gôem
->
	gpmix_li°_ôem_bñ⁄g_to
 = 
NULL
;

511  (
	gpmix_li°_ôem_t
 *)
	gôem
->
	gpmix_li°_¥ev
;

529 #i‡
PMIX_ENABLE_DEBUG


530 
	#pmix_li°_≠≥nd
(
l
,
i
) \

531 
	`_pmix_li°_≠≥nd
(
l
,
i
,
__FILE__
,
__LINE__
)

	)

533 
	#pmix_li°_≠≥nd
(
l
,
i
) \

534 
	`_pmix_li°_≠≥nd
(
l
,
i
)

	)

537 
ölöe
 
_pmix_li°_≠≥nd
(
pmix_li°_t
 *
li°
, 
pmix_li°_ôem_t
 *
ôem


538 #i‡
PMIX_ENABLE_DEBUG


539 , c⁄° * 
FILE_NAME
, 
LINENO


543 
pmix_li°_ôem_t
* 
	g£¡öñ
 = &(
li°
->
pmix_li°_£¡öñ
);

544 #i‡
PMIX_ENABLE_DEBUG


547 
as£π
(0 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

548 
as£π
–
NULL
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

549 
	gôem
->
	gsu≥r
.
	g˛s_öô_fûe_«me
 = 
FILE_NAME
;

550 
	gôem
->
	gsu≥r
.
	g˛s_öô_löío
 = 
LINENO
;

554 
	gôem
->
	gpmix_li°_¥ev
 = 
£¡öñ
->
pmix_li°_¥ev
;

557 
	g£¡öñ
->
	gpmix_li°_¥ev
->
	gpmix_li°_√xt
 = 
ôem
;

560 
	gôem
->
	gpmix_li°_√xt
 = 
£¡öñ
;

563 
	g£¡öñ
->
	gpmix_li°_¥ev
 = 
ôem
;

566 
	gli°
->
	gpmix_li°_Àngth
++;

568 #i‡
PMIX_ENABLE_DEBUG


572 
	gôem
->
	gpmix_li°_ôem_ªfcou¡
 += 1;

573 
as£π
(1 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

574 
	gôem
->
	gpmix_li°_ôem_bñ⁄g_to
 = 
li°
;

592 
ölöe
 
	$pmix_li°_¥ïíd
(
pmix_li°_t
 *
li°
,

593 
pmix_li°_ôem_t
 *
ôem
)

595 
pmix_li°_ôem_t
* 
£¡öñ
 = &(
li°
->
pmix_li°_£¡öñ
);

596 #i‡
PMIX_ENABLE_DEBUG


599 
	`as£π
(0 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

600 
	`as£π
–
NULL
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

604 
ôem
->
pmix_li°_√xt
 = 
£¡öñ
->pmix_list_next;

607 
ôem
->
pmix_li°_¥ev
 = 
£¡öñ
;

610 
£¡öñ
->
pmix_li°_√xt
->
pmix_li°_¥ev
 = 
ôem
;

613 
£¡öñ
->
pmix_li°_√xt
 = 
ôem
;

616 
li°
->
pmix_li°_Àngth
++;

618 #i‡
PMIX_ENABLE_DEBUG


622 
ôem
->
pmix_li°_ôem_ªfcou¡
 += 1;

623 
	`as£π
(1 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

624 
ôem
->
pmix_li°_ôem_bñ⁄g_to
 = 
li°
;

626 
	}
}

645 
ölöe
 
pmix_li°_ôem_t
 *
	$pmix_li°_ªmove_fú°
(
pmix_li°_t
 *
li°
)

651 vﬁ©ûê
pmix_li°_ôem_t
 *
ôem
;

652 i‡–0 =
li°
->
pmix_li°_Àngth
 ) {

653  (
pmix_li°_ôem_t
 *)
NULL
;

656 #i‡
PMIX_ENABLE_DEBUG


659 
	`as£π
(1 =
li°
->
pmix_li°_£¡öñ
.
pmix_li°_√xt
->
pmix_li°_ôem_ªfcou¡
);

663 
li°
->
pmix_li°_Àngth
--;

666 
ôem
 = 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_√xt
;

669 
ôem
->
pmix_li°_√xt
->
pmix_li°_¥ev
 = item->pmix_list_prev;

672 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_√xt
 = 
ôem
->pmix_list_next;

674 #i‡
PMIX_ENABLE_DEBUG


675 
	`as£π
–
li°
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

676 
ôem
->
pmix_li°_ôem_bñ⁄g_to
 = 
NULL
;

677 
ôem
->
pmix_li°_¥ev
=(
pmix_li°_ôem_t
 *)
NULL
;

678 
ôem
->
pmix_li°_√xt
=(
pmix_li°_ôem_t
 *)
NULL
;

683 
ôem
->
pmix_li°_ôem_ªfcou¡
 -= 1;

684 
	`as£π
(0 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

687  (
pmix_li°_ôem_t
 *Ë
ôem
;

688 
	}
}

707 
ölöe
 
pmix_li°_ôem_t
 *
	$pmix_li°_ªmove_œ°
(
pmix_li°_t
 *
li°
)

713 vﬁ©ûê
pmix_li°_ôem_t
 *
ôem
;

714 i‡–0 =
li°
->
pmix_li°_Àngth
 ) {

715  (
pmix_li°_ôem_t
 *)
NULL
;

718 #i‡
PMIX_ENABLE_DEBUG


721 
	`as£π
(1 =
li°
->
pmix_li°_£¡öñ
.
pmix_li°_¥ev
->
pmix_li°_ôem_ªfcou¡
);

725 
li°
->
pmix_li°_Àngth
--;

728 
ôem
 = 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_¥ev
;

731 
ôem
->
pmix_li°_¥ev
->
pmix_li°_√xt
 = item->pmix_list_next;

734 
li°
->
pmix_li°_£¡öñ
.
pmix_li°_¥ev
 = 
ôem
->pmix_list_prev;

736 #i‡
PMIX_ENABLE_DEBUG


737 
	`as£π
–
li°
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

738 
ôem
->
pmix_li°_√xt
 = iãm->
pmix_li°_¥ev
 = (
pmix_li°_ôem_t
 *)
NULL
;

743 
ôem
->
pmix_li°_ôem_ªfcou¡
 -= 1;

744 
	`as£π
(0 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

745 
ôem
->
pmix_li°_ôem_bñ⁄g_to
 = 
NULL
;

748  (
pmix_li°_ôem_t
 *Ë
ôem
;

749 
	}
}

760 
ölöe
 
	$pmix_li°_ö£π_pos
(
pmix_li°_t
 *
li°
, 
pmix_li°_ôem_t
 *
pos
,

761 
pmix_li°_ôem_t
 *
ôem
)

763 #i‡
PMIX_ENABLE_DEBUG


767 
	`as£π
(0 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

768 
	`as£π
–
NULL
 =
ôem
->
pmix_li°_ôem_bñ⁄g_to
 );

772 
ôem
->
pmix_li°_√xt
 = 
pos
;

773 
ôem
->
pmix_li°_¥ev
 = 
pos
->pmix_list_prev;

776 
pos
->
pmix_li°_¥ev
->
pmix_li°_√xt
 = 
ôem
;

777 
pos
->
pmix_li°_¥ev
 = 
ôem
;

780 
li°
->
pmix_li°_Àngth
++;

782 #i‡
PMIX_ENABLE_DEBUG


786 
ôem
->
pmix_li°_ôem_ªfcou¡
 += 1;

787 
	`as£π
(1 =
ôem
->
pmix_li°_ôem_ªfcou¡
);

788 
ôem
->
pmix_li°_ôem_bñ⁄g_to
 = 
li°
;

790 
	}
}

810 
boﬁ
 
pmix_li°_ö£π
(
pmix_li°_t
 *
li°
, 
pmix_li°_ôem_t
 *
ôem
,

811 
idx
);

831 
pmix_li°_joö
(
pmix_li°_t
 *
thi¶i°
, 
pmix_li°_ôem_t
 *
pos
,

832 
pmix_li°_t
 *
xli°
);

858 
pmix_li°_•li˚
(
pmix_li°_t
 *
thi¶i°
, 
pmix_li°_ôem_t
 *
pos
,

859 
pmix_li°_t
 *
xli°
, 
pmix_li°_ôem_t
 *
fú°
,

860 
pmix_li°_ôem_t
 *
œ°
);

882 (*
	tpmix_li°_ôem_com∑ª_‚_t
)(
	tpmix_li°_ôem_t
 **
	ta
,

883 
	tpmix_li°_ôem_t
 **
	tb
);

905 
	`pmix_li°_s‹t
(
pmix_li°_t
* 
li°
, 
pmix_li°_ôem_com∑ª_‚_t
 
com∑ª
);

907 
END_C_DECLS


	@class/pmix_object.c

26 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

30 
	~<°dio.h
>

32 
	~"§c/˛ass/pmix_obje˘.h
"

39 
pmix_˛ass_t
 
	gpmix_obje˘_t_˛ass
 = {

41 
NULL
,

42 
NULL
,

43 
NULL
,

46 
NULL
,

47 
NULL
,

48 (
pmix_obje˘_t
)

54 ** 
	g˛as£s
 = 
NULL
;

55 
	gnum_˛as£s
 = 0;

56 
	gmax_˛as£s
 = 0;

57 c⁄° 
	gö¸emít
 = 10;

63 
ßve_˛ass
(
pmix_˛ass_t
 *
˛s
);

64 
ex∑nd_¨øy
();

70 
	$pmix_˛ass_öôülize
(
pmix_˛ass_t
 *
˛s
)

72 
pmix_˛ass_t
 *
c
;

73 
pmix_c⁄°ru˘_t
* 
˛s_c⁄°ru˘_¨øy
;

74 
pmix_de°ru˘_t
* 
˛s_de°ru˘_¨øy
;

75 
˛s_c⁄°ru˘_¨øy_cou¡
;

76 
˛s_de°ru˘_¨øy_cou¡
;

77 
i
;

79 
	`as£π
(
˛s
);

84 i‡(1 =
˛s
->
˛s_öôülized
) {

93 
˛s
->
˛s_dïth
 = 0;

94 
˛s_c⁄°ru˘_¨øy_cou¡
 = 0;

95 
˛s_de°ru˘_¨øy_cou¡
 = 0;

96 
c
 = 
˛s
; c; c = c->
˛s_∑ª¡
) {

97 if–
NULL
 !
c
->
˛s_c⁄°ru˘
 ) {

98 
˛s_c⁄°ru˘_¨øy_cou¡
++;

100 if–
NULL
 !
c
->
˛s_de°ru˘
 ) {

101 
˛s_de°ru˘_¨øy_cou¡
++;

103 
˛s
->
˛s_dïth
++;

111 
˛s
->
˛s_c⁄°ru˘_¨øy
 =

112 ((**)(
pmix_obje˘_t
*))
	`mÆloc
((
˛s_c⁄°ru˘_¨øy_cou¡
 +

113 
˛s_de°ru˘_¨øy_cou¡
 + 2) *

114 (
pmix_c⁄°ru˘_t
) );

115 i‡(
NULL
 =
˛s
->
˛s_c⁄°ru˘_¨øy
) {

116 
	`≥º‹
("Out of memory");

117 
	`exô
(-1);

119 
˛s
->
˛s_de°ru˘_¨øy
 =

120 
˛s
->
˛s_c⁄°ru˘_¨øy
 + 
˛s_c⁄°ru˘_¨øy_cou¡
 + 1;

126 
˛s_c⁄°ru˘_¨øy
 = 
˛s
->˛s_c⁄°ru˘_¨øy + 
˛s_c⁄°ru˘_¨øy_cou¡
;

127 
˛s_de°ru˘_¨øy
 = 
˛s
->cls_destruct_array;

129 
c
 = 
˛s
;

130 *
˛s_c⁄°ru˘_¨øy
 = 
NULL
;

131 
i
 = 0; i < 
˛s
->
˛s_dïth
; i++) {

132 if–
NULL
 !
c
->
˛s_c⁄°ru˘
 ) {

133 --
˛s_c⁄°ru˘_¨øy
;

134 *
˛s_c⁄°ru˘_¨øy
 = 
c
->
˛s_c⁄°ru˘
;

136 if–
NULL
 !
c
->
˛s_de°ru˘
 ) {

137 *
˛s_de°ru˘_¨øy
 = 
c
->
˛s_de°ru˘
;

138 
˛s_de°ru˘_¨øy
++;

140 
c
 = c->
˛s_∑ª¡
;

142 *
˛s_de°ru˘_¨øy
 = 
NULL
;

144 
˛s
->
˛s_öôülized
 = 1;

145 
	`ßve_˛ass
(
˛s
);

148 
	}
}

154 
	$pmix_˛ass_föÆize
()

156 
i
;

158 i‡(
NULL
 !
˛as£s
) {

159 
i
 = 0; i < 
num_˛as£s
; ++i) {

160 i‡(
NULL
 !
˛as£s
[
i
]) {

161 
	`‰ì
(
˛as£s
[
i
]);

164 
	`‰ì
(
˛as£s
);

165 
˛as£s
 = 
NULL
;

166 
num_˛as£s
 = 0;

167 
max_˛as£s
 = 0;

171 
	}
}

174 
	$ßve_˛ass
(
pmix_˛ass_t
 *
˛s
)

176 i‡(
num_˛as£s
 >
max_˛as£s
) {

177 
	`ex∑nd_¨øy
();

180 
˛as£s
[
num_˛as£s
] = 
˛s
->
˛s_c⁄°ru˘_¨øy
;

181 ++
num_˛as£s
;

182 
	}
}

185 
	$ex∑nd_¨øy
()

187 
i
;

189 
max_˛as£s
 +
ö¸emít
;

190 i‡(
NULL
 =
˛as£s
) {

191 
˛as£s
 = (**)
	`ˇŒoc
(
max_˛as£s
, (*));

193 
˛as£s
 = (**)
	`ªÆloc
(˛as£s, (*Ë* 
max_˛as£s
);

195 i‡(
NULL
 =
˛as£s
) {

196 
	`≥º‹
("class malloc failed");

197 
	`exô
(-1);

199 
i
 = 
num_˛as£s
; i < 
max_˛as£s
; ++i) {

200 
˛as£s
[
i
] = 
NULL
;

202 
	}
}

	@class/pmix_object.h

118 #i‚de‡
PMIX_OBJECT_H


119 
	#PMIX_OBJECT_H


	)

121 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

123 
	~<as£π.h
>

124 #ifde‡
HAVE_STDLIB_H


125 
	~<°dlib.h
>

129 
	gBEGIN_C_DECLS


131 #i‡
PMIX_ENABLE_DEBUG


133 
	#PMIX_OBJ_MAGIC_ID
 ((0xdófbìdULL << 32Ë+ 0xdófbìdULL)

	)

138 
pmix_obje˘_t
 
	tpmix_obje˘_t
;

139 
pmix_˛ass_t
 
	tpmix_˛ass_t
;

140 (*
	tpmix_c⁄°ru˘_t
Ë(
	tpmix_obje˘_t
 *);

141 (*
	tpmix_de°ru˘_t
Ë(
	tpmix_obje˘_t
 *);

152 
	spmix_˛ass_t
 {

153 c⁄° *
˛s_«me
;

154 
pmix_˛ass_t
 *
˛s_∑ª¡
;

155 
pmix_c⁄°ru˘_t
 
˛s_c⁄°ru˘
;

156 
pmix_de°ru˘_t
 
˛s_de°ru˘
;

157 
˛s_öôülized
;

158 
˛s_dïth
;

159 
pmix_c⁄°ru˘_t
 *
˛s_c⁄°ru˘_¨øy
;

161 
pmix_de°ru˘_t
 *
˛s_de°ru˘_¨øy
;

163 
size_t
 
˛s_sizeof
;

171 #i‡
PMIX_ENABLE_DEBUG


172 
	#PMIX_OBJ_STATIC_INIT
(
BASE_CLASS
Ë{ 
PMIX_OBJ_MAGIC_ID
, 
	`PMIX_CLASS
(BASE_CLASS), 1, 
__FILE__
, 
__LINE__
 
	}

	)
}

174 
	#PMIX_OBJ_STATIC_INIT
(
BASE_CLASS
Ë{ 
	`PMIX_CLASS
(BASE_CLASS), 1 }

	)

182 
	spmix_obje˘_t
 {

183 #i‡
PMIX_ENABLE_DEBUG


186 
uöt64_t
 
	mobj_magic_id
;

188 
pmix_˛ass_t
 *
	mobj_˛ass
;

189 vﬁ©ûê
öt32_t
 
	mobj_ª„ªn˚_cou¡
;

190 #i‡
PMIX_ENABLE_DEBUG


191 c⁄° * 
	m˛s_öô_fûe_«me
;

192 
	m˛s_öô_löío
;

205 
	#PMIX_CLASS
(
NAME
Ë(&(NAME ## 
_˛ass
))

	)

218 
	#PMIX_CLASS_INSTANCE
(
NAME
, 
PARENT
, 
CONSTRUCTOR
, 
DESTRUCTOR
) \

219 
pmix_˛ass_t
 
NAME
 ## 
_˛ass
 = { \

221 
	`PMIX_CLASS
(
PARENT
), \

222 (
pmix_c⁄°ru˘_t
Ë
CONSTRUCTOR
, \

223 (
pmix_de°ru˘_t
Ë
DESTRUCTOR
, \

224 0, 0, 
NULL
, NULL, \

225 (
NAME
) \

226 }

	)

236 
	#PMIX_CLASS_DECLARATION
(
NAME
) \

237 
pmix_˛ass_t
 
NAME
 ## 
_˛ass


	)

247 
ölöe
 
pmix_obje˘_t
 *
pmix_obj_√w
(
pmix_˛ass_t
 * 
˛s
);

248 #i‡
PMIX_ENABLE_DEBUG


249 
ölöe
 
pmix_obje˘_t
 *
	$pmix_obj_√w_debug
(
pmix_˛ass_t
* 
ty≥
, c⁄° * 
fûe
, 
löe
)

251 
pmix_obje˘_t
* 
obje˘
 = 
	`pmix_obj_√w
(
ty≥
);

252 
obje˘
->
obj_magic_id
 = 
PMIX_OBJ_MAGIC_ID
;

253 
obje˘
->
˛s_öô_fûe_«me
 = 
fûe
;

254 
obje˘
->
˛s_öô_löío
 = 
löe
;

255  
obje˘
;

256 
	}
}

257 
	#PMIX_NEW
(
ty≥
) \

258 ((
ty≥
 *)
	`pmix_obj_√w_debug
(
	`PMIX_CLASS
—y≥), 
__FILE__
, 
__LINE__
))

	)

260 
	#PMIX_NEW
(
ty≥
) \

261 ((
ty≥
 *Ë
	`pmix_obj_√w
(
	`PMIX_CLASS
—y≥)))

	)

269 #i‡
PMIX_ENABLE_DEBUG


270 
	#PMIX_RETAIN
(
obje˘
) \

272 
	`as£π
(
NULL
 !((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_˛ass
); \

273 
	`as£π
(
PMIX_OBJ_MAGIC_ID
 =((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_magic_id
); \

274 
	`pmix_obj_upd©e
((
pmix_obje˘_t
 *Ë(
obje˘
), 1); \

275 
	`as£π
(((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_ª„ªn˚_cou¡
 >= 0); \

276 } 0)

	)

278 
	#PMIX_RETAIN
(
obje˘
Ë
	`pmix_obj_upd©e
((
pmix_obje˘_t
 *Ë(obje˘), 1);

	)

285 #i‡
PMIX_ENABLE_DEBUG


286 
	#PMIX_REMEMBER_FILE_AND_LINENO
–
OBJECT
, 
FILE
, 
LINENO
 ) \

288 ((
pmix_obje˘_t
*)(
OBJECT
))->
˛s_öô_fûe_«me
 = 
FILE
; \

289 ((
pmix_obje˘_t
*)(
OBJECT
))->
˛s_öô_löío
 = 
LINENO
; \

290 } 0)

	)

291 
	#PMIX_SET_MAGIC_ID
–
OBJECT
, 
VALUE
 ) \

293 ((
pmix_obje˘_t
*)(
OBJECT
))->
obj_magic_id
 = (
VALUE
); \

294 } 0)

	)

296 
	#PMIX_REMEMBER_FILE_AND_LINENO
–
OBJECT
, 
FILE
, 
LINENO
 )

	)

297 
	#PMIX_SET_MAGIC_ID
–
OBJECT
, 
VALUE
 )

	)

310 #i‡
PMIX_ENABLE_DEBUG


311 
	#PMIX_RELEASE
(
obje˘
) \

313 
	`as£π
(
NULL
 !((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_˛ass
); \

314 
	`as£π
(
PMIX_OBJ_MAGIC_ID
 =((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_magic_id
); \

315 i‡(0 =
	`pmix_obj_upd©e
((
pmix_obje˘_t
 *Ë(
obje˘
), -1)) { \

316 
	`PMIX_SET_MAGIC_ID
((
obje˘
), 0); \

317 
	`pmix_obj_run_de°ru˘‹s
((
pmix_obje˘_t
 *Ë(
obje˘
)); \

318 
	`PMIX_REMEMBER_FILE_AND_LINENO
–
obje˘
, 
__FILE__
, 
__LINE__
 ); \

319 
	`‰ì
(
obje˘
); \

320 
obje˘
 = 
NULL
; \

322 } 0)

	)

324 
	#PMIX_RELEASE
(
obje˘
) \

326 i‡(0 =
	`pmix_obj_upd©e
((
pmix_obje˘_t
 *Ë(
obje˘
), -1)) { \

327 
	`pmix_obj_run_de°ru˘‹s
((
pmix_obje˘_t
 *Ë(
obje˘
)); \

328 
	`‰ì
(
obje˘
); \

329 
obje˘
 = 
NULL
; \

331 } 0)

	)

342 
	#PMIX_CONSTRUCT
(
obje˘
, 
ty≥
) \

344 
	`PMIX_CONSTRUCT_INTERNAL
((
obje˘
), 
	`PMIX_CLASS
(
ty≥
)); \

345 } 0)

	)

347 
	#PMIX_CONSTRUCT_INTERNAL
(
obje˘
, 
ty≥
) \

349 
	`PMIX_SET_MAGIC_ID
((
obje˘
), 
PMIX_OBJ_MAGIC_ID
); \

350 i‡(0 =(
ty≥
)->
˛s_öôülized
) { \

351 
	`pmix_˛ass_öôülize
((
ty≥
)); \

353 ((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_˛ass
 = (
ty≥
); \

354 ((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_ª„ªn˚_cou¡
 = 1; \

355 
	`pmix_obj_run_c⁄°ru˘‹s
((
pmix_obje˘_t
 *Ë(
obje˘
)); \

356 
	`PMIX_REMEMBER_FILE_AND_LINENO
–
obje˘
, 
__FILE__
, 
__LINE__
 ); \

357 } 0)

	)

365 #i‡
PMIX_ENABLE_DEBUG


366 
	#PMIX_DESTRUCT
(
obje˘
) \

368 
	`as£π
(
PMIX_OBJ_MAGIC_ID
 =((
pmix_obje˘_t
 *Ë(
obje˘
))->
obj_magic_id
); \

369 
	`PMIX_SET_MAGIC_ID
((
obje˘
), 0); \

370 
	`pmix_obj_run_de°ru˘‹s
((
pmix_obje˘_t
 *Ë(
obje˘
)); \

371 
	`PMIX_REMEMBER_FILE_AND_LINENO
–
obje˘
, 
__FILE__
, 
__LINE__
 ); \

372 } 0)

	)

374 
	#PMIX_DESTRUCT
(
obje˘
) \

376 
	`pmix_obj_run_de°ru˘‹s
((
pmix_obje˘_t
 *Ë(
obje˘
)); \

377 
	`PMIX_REMEMBER_FILE_AND_LINENO
–
obje˘
, 
__FILE__
, 
__LINE__
 ); \

378 } 0)

	)

381 
PMIX_CLASS_DECLARATION
(
pmix_obje˘_t
);

393 
pmix_˛ass_öôülize
(
pmix_˛ass_t
 *);

404 
pmix_˛ass_föÆize
();

418 
ölöe
 
	$pmix_obj_run_c⁄°ru˘‹s
(
pmix_obje˘_t
 * 
obje˘
)

420 
pmix_c⁄°ru˘_t
* 
˛s_c⁄°ru˘
;

422 
	`as£π
(
NULL
 !
obje˘
->
obj_˛ass
);

424 
˛s_c⁄°ru˘
 = 
obje˘
->
obj_˛ass
->
˛s_c⁄°ru˘_¨øy
;

425  
NULL
 !*
˛s_c⁄°ru˘
 ) {

426 (*
˛s_c⁄°ru˘
)(
obje˘
);

427 
˛s_c⁄°ru˘
++;

429 
	}
}

440 
ölöe
 
	$pmix_obj_run_de°ru˘‹s
(
pmix_obje˘_t
 * 
obje˘
)

442 
pmix_de°ru˘_t
* 
˛s_de°ru˘
;

444 
	`as£π
(
NULL
 !
obje˘
->
obj_˛ass
);

446 
˛s_de°ru˘
 = 
obje˘
->
obj_˛ass
->
˛s_de°ru˘_¨øy
;

447  
NULL
 !*
˛s_de°ru˘
 ) {

448 (*
˛s_de°ru˘
)(
obje˘
);

449 
˛s_de°ru˘
++;

451 
	}
}

464 
ölöe
 
pmix_obje˘_t
 *
	$pmix_obj_√w
(
pmix_˛ass_t
 * 
˛s
)

466 
pmix_obje˘_t
 *
obje˘
;

467 
	`as£π
(
˛s
->
˛s_sizeof
 >(
pmix_obje˘_t
));

469 
obje˘
 = (
pmix_obje˘_t
 *Ë
	`mÆloc
(
˛s
->
˛s_sizeof
);

470 i‡(0 =
˛s
->
˛s_öôülized
) {

471 
	`pmix_˛ass_öôülize
(
˛s
);

473 i‡(
NULL
 !
obje˘
) {

474 
obje˘
->
obj_˛ass
 = 
˛s
;

475 
obje˘
->
obj_ª„ªn˚_cou¡
 = 1;

476 
	`pmix_obj_run_c⁄°ru˘‹s
(
obje˘
);

478  
obje˘
;

479 
	}
}

492 
ölöe
 
	$pmix_obj_upd©e
(
pmix_obje˘_t
 *
obje˘
, 
öc
Ë
__pmix_©åibuã_Æways_ölöe__
;

493 
ölöe
 
	$pmix_obj_upd©e
(
pmix_obje˘_t
 *
obje˘
, 
öc
)

495  
obje˘
->
obj_ª„ªn˚_cou¡
 +
öc
;

496 
	}
}

498 
	gEND_C_DECLS


	@class/pmix_pointer_array.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<°dlib.h
>

26 
	~<°dio.h
>

27 
	~<as£π.h
>

28 #i‡
HAVE_STDBOOL_H


29 
	~<°dboﬁ.h
>

31 
	~<limôs.h
>

33 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

34 
	~"§c/utû/ouçut.h
"

35 
	~"ö˛ude/pmix_comm⁄.h
"

37 íum { 
	mTABLE_INIT
 = 1, 
	mTABLE_GROW
 = 2 };

39 
pmix_poöãr_¨øy_c⁄°ru˘
(
pmix_poöãr_¨øy_t
 *);

40 
pmix_poöãr_¨øy_de°ru˘
(
pmix_poöãr_¨øy_t
 *);

41 
boﬁ
 
grow_èbÀ
(
pmix_poöãr_¨øy_t
 *
èbÀ
, 
so·
, 
h¨d
);

43 
PMIX_CLASS_INSTANCE
(
pmix_poöãr_¨øy_t
, 
pmix_obje˘_t
,

44 
pmix_poöãr_¨øy_c⁄°ru˘
,

45 
pmix_poöãr_¨øy_de°ru˘
);

50 
	$pmix_poöãr_¨øy_c⁄°ru˘
(
pmix_poöãr_¨øy_t
 *
¨øy
)

52 
¨øy
->
lowe°_‰ì
 = 0;

53 
¨øy
->
numbî_‰ì
 = 0;

54 
¨øy
->
size
 = 0;

55 
¨øy
->
max_size
 = 
INT_MAX
;

56 
¨øy
->
block_size
 = 0;

57 
¨øy
->
addr
 = 0;

58 
	}
}

63 
	$pmix_poöãr_¨øy_de°ru˘
(
pmix_poöãr_¨øy_t
 *
¨øy
)

66 if–
NULL
 !
¨øy
->
addr
) {

67 
	`‰ì
(
¨øy
->
addr
);

68 
¨øy
->
addr
 = 
NULL
;

71 
¨øy
->
size
 = 0;

72 
	}
}

77 
pmix_°©us_t
 
	$pmix_poöãr_¨øy_öô
(
pmix_poöãr_¨øy_t
* 
¨øy
,

78 
öôül_Æloˇti⁄
,

79 
max_size
, 
block_size
)

81 
size_t
 
num_byãs
;

84 i‡(
NULL
 =
¨øy
 || 
max_size
 < 
block_size
) {

85  
PMIX_ERR_BAD_PARAM
;

88 
¨øy
->
max_size
 = max_size;

89 
¨øy
->
block_size
 = block_size;

91 
num_byãs
 = (0 < 
öôül_Æloˇti⁄
 ? inôül_Æloˇti⁄ : 
block_size
);

92 
¨øy
->
numbî_‰ì
 = 
num_byãs
;

93 
¨øy
->
size
 = 
num_byãs
;

94 
num_byãs
 *= (*);

97 
¨øy
->
addr
 = (**)
	`ˇŒoc
(
num_byãs
, 1);

98 i‡(
NULL
 =
¨øy
->
addr
) {

99  
PMIX_ERR_OUT_OF_RESOURCE
;

102  
PMIX_SUCCESS
;

103 
	}
}

113 
	$pmix_poöãr_¨øy_add
(
pmix_poöãr_¨øy_t
 *
èbÀ
, *
±r
)

115 
i
, 
ödex
;

117 i‡(
èbÀ
->
numbî_‰ì
 == 0) {

119 i‡(!
	`grow_èbÀ
(
èbÀ
,

120 (
NULL
 =
èbÀ
->
addr
 ? 
TABLE_INIT
 :ÅabÀ->
size
 * 
TABLE_GROW
),

121 
INT_MAX
)) {

122  
PMIX_ERR_OUT_OF_RESOURCE
;

126 
	`as£π
–(
èbÀ
->
addr
 !
NULL
Ë&& (èbÀ->
size
 > 0) );

127 
	`as£π
–(
èbÀ
->
lowe°_‰ì
 >0Ë&& (èbÀ->lowe°_‰ì <ÅabÀ->
size
) );

128 
	`as£π
–(
èbÀ
->
numbî_‰ì
 > 0Ë&& (èbÀ->numbî_‰ì <èbÀ->
size
) );

134 
ödex
 = 
èbÀ
->
lowe°_‰ì
;

135 
	`as£π
(
èbÀ
->
addr
[
ödex
] =
NULL
);

136 
èbÀ
->
addr
[
ödex
] = 
±r
;

137 
èbÀ
->
numbî_‰ì
--;

138 i‡(
èbÀ
->
numbî_‰ì
 > 0) {

139 
i
 = 
èbÀ
->
lowe°_‰ì
 + 1; i <ÅabÀ->
size
; i++) {

140 i‡(
èbÀ
->
addr
[
i
] =
NULL
) {

141 
èbÀ
->
lowe°_‰ì
 = 
i
;

147 
èbÀ
->
lowe°_‰ì
 =ÅabÀ->
size
;

150  
ödex
;

151 
	}
}

164 
pmix_°©us_t
 
	$pmix_poöãr_¨øy_£t_ôem
(
pmix_poöãr_¨øy_t
 *
èbÀ
, 
ödex
,

165 * 
vÆue
)

167 
	`as£π
(
èbÀ
 !
NULL
);

171 i‡(
èbÀ
->
size
 <
ödex
) {

172 i‡(!
	`grow_èbÀ
(
èbÀ
, ((
ödex
 / 
TABLE_GROW
) + 1) * TABLE_GROW,

173 
ödex
)) {

174  
PMIX_ERROR
;

179 if–
NULL
 =
vÆue
 ) {

180 i‡(
ödex
 < 
èbÀ
->
lowe°_‰ì
) {

181 
èbÀ
->
lowe°_‰ì
 = 
ödex
;

183 if–
NULL
 !
èbÀ
->
addr
[
ödex
] ) {

184 
èbÀ
->
numbî_‰ì
++;

187 i‡(
NULL
 =
èbÀ
->
addr
[
ödex
]) {

188 
èbÀ
->
numbî_‰ì
--;

191 i‡–
ödex
 =
èbÀ
->
lowe°_‰ì
 ) {

192 
i
;

194 
èbÀ
->
lowe°_‰ì
 =ÅabÀ->
size
;

195  
i
=
ödex
 + 1; i<
èbÀ
->
size
; i++) {

196 i‡–
NULL
 =
èbÀ
->
addr
[
i
] ){

197 
èbÀ
->
lowe°_‰ì
 = 
i
;

203 
èbÀ
->
addr
[
ödex
] = 
vÆue
;

206 
	`pmix_ouçut
(0,"pmix_pointer_array_set_item: OUT: "

209 
èbÀ
,ÅabÀ->
size
,ÅabÀ->
lowe°_‰ì
,ÅabÀ->
numbî_‰ì
,

210 
ödex
, 
èbÀ
->
addr
[index]);

213  
PMIX_SUCCESS
;

214 
	}
}

230 
boﬁ
 
	$pmix_poöãr_¨øy_ã°_™d_£t_ôem
 (
pmix_poöãr_¨øy_t
 *
èbÀ
,

231 
ödex
, *
vÆue
)

233 
	`as£π
(
èbÀ
 !
NULL
);

234 
	`as£π
(
ödex
 >= 0);

237 
	`pmix_ouçut
(0,"pmix_pointer_array_test_and_set_item: IN: "

240 
èbÀ
,ÅabÀ->
size
,ÅabÀ->
lowe°_‰ì
,ÅabÀ->
numbî_‰ì
,

241 
ödex
, 
èbÀ
->
addr
[index]);

245 i‡–
ödex
 < 
èbÀ
->
size
 &&ÅabÀ->
addr
[ödex] !
NULL
 ) {

247  
Ál£
;

252 i‡(
èbÀ
->
size
 <
ödex
) {

253 i‡(!
	`grow_èbÀ
(
èbÀ
, (((
ödex
 / 
TABLE_GROW
) + 1) * TABLE_GROW),

254 
ödex
)) {

255  
Ál£
;

262 
èbÀ
->
addr
[
ödex
] = 
vÆue
;

263 
èbÀ
->
numbî_‰ì
--;

265 i‡–
ödex
 =
èbÀ
->
lowe°_‰ì
 ) {

266 
i
;

268 
èbÀ
->
lowe°_‰ì
 =ÅabÀ->
size
;

269  
i
=
ödex
; i<
èbÀ
->
size
; i++) {

270 i‡–
NULL
 =
èbÀ
->
addr
[
i
] ){

271 
èbÀ
->
lowe°_‰ì
 = 
i
;

278 
	`pmix_ouçut
(0,"pmix_pointer_array_test_and_set_item: OUT: "

281 
èbÀ
,ÅabÀ->
size
,ÅabÀ->
lowe°_‰ì
,ÅabÀ->
numbî_‰ì
,

282 
ödex
, 
èbÀ
->
addr
[index]);

285  
åue
;

286 
	}
}

288 
pmix_°©us_t
 
	$pmix_poöãr_¨øy_£t_size
(
pmix_poöãr_¨øy_t
 *
¨øy
, 
√w_size
)

290 if(
√w_size
 > 
¨øy
->
size
) {

291 i‡(!
	`grow_èbÀ
(
¨øy
, 
√w_size
,Çew_size)) {

292  
PMIX_ERROR
;

295  
PMIX_SUCCESS
;

296 
	}
}

298 
boﬁ
 
	$grow_èbÀ
(
pmix_poöãr_¨øy_t
 *
èbÀ
, 
so·
, 
h¨d
)

300 
√w_size
;

301 
i
, 
√w_size_öt
;

302 *
p
;

306 
√w_size
 = 
so·
;

307 if–
so·
 > 
èbÀ
->
max_size
 ) {

308 if–
h¨d
 > 
èbÀ
->
max_size
 ) {

309  
Ál£
;

311 
√w_size
 = 
h¨d
;

313 if–
√w_size
 >
èbÀ
->
max_size
 ) {

314  
Ál£
;

317 
p
 = (**Ë
	`ªÆloc
(
èbÀ
->
addr
, 
√w_size
 * (*));

318 i‡(
p
 =
NULL
) {

319  
Ál£
;

322 
√w_size_öt
 = (Ë
√w_size
;

323 
èbÀ
->
numbî_‰ì
 +
√w_size_öt
 -ÅabÀ->
size
;

324 
èbÀ
->
addr
 = (**)
p
;

325 
i
 = 
èbÀ
->
size
; i < 
√w_size_öt
; ++i) {

326 
èbÀ
->
addr
[
i
] = 
NULL
;

328 
èbÀ
->
size
 = 
√w_size_öt
;

330  
åue
;

331 
	}
}

	@class/pmix_pointer_array.h

23 #i‚de‡
PMIX_POINTER_ARRAY_H


24 
	#PMIX_POINTER_ARRAY_H


	)

26 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 #i‡
HAVE_STDBOOL_H


29 
	~<°dboﬁ.h
>

32 
	~"§c/˛ass/pmix_obje˘.h
"

33 
	~<pmix_comm⁄.h
>

35 
BEGIN_C_DECLS


40 
	spmix_poöãr_¨øy_t
 {

42 
pmix_obje˘_t
 
	msu≥r
;

47 
	mlowe°_‰ì
;

49 
	mnumbî_‰ì
;

51 
	msize
;

53 
	mmax_size
;

55 
	mblock_size
;

57 **
	maddr
;

62 
pmix_poöãr_¨øy_t
 
	tpmix_poöãr_¨øy_t
;

66 
PMIX_CLASS_DECLARATION
(
pmix_poöãr_¨øy_t
);

82 
pmix_°©us_t
 
pmix_poöãr_¨øy_öô
(
pmix_poöãr_¨øy_t
* 
¨øy
,

83 
öôül_Æloˇti⁄
,

84 
max_size
, 
block_size
 );

95 
pmix_poöãr_¨øy_add
(
pmix_poöãr_¨øy_t
 *
¨øy
, *
±r
);

107 
pmix_°©us_t
 
pmix_poöãr_¨øy_£t_ôem
(
pmix_poöãr_¨øy_t
 *
¨øy
,

108 
ödex
, *
vÆue
);

119 
ölöe
 *
	$pmix_poöãr_¨øy_gë_ôem
(
pmix_poöãr_¨øy_t
 *
èbÀ
,

120 
ñemít_ödex
)

122 *
p
;

124 if–
èbÀ
->
size
 <
ñemít_ödex
 ) {

125  
NULL
;

127 
p
 = 
èbÀ
->
addr
[
ñemít_ödex
];

128  
p
;

129 
	}
}

142 
ölöe
 
	$pmix_poöãr_¨øy_gë_size
(
pmix_poöãr_¨øy_t
 *
¨øy
)

144  
¨øy
->
size
;

145 
	}
}

160 
pmix_°©us_t
 
pmix_poöãr_¨øy_£t_size
(
pmix_poöãr_¨øy_t
 *
¨øy
, 
size
);

176 
boﬁ
 
pmix_poöãr_¨øy_ã°_™d_£t_ôem
 (
pmix_poöãr_¨øy_t
 *
èbÀ
,

177 
ödex
,

178 *
vÆue
);

186 
ölöe
 
	$pmix_poöãr_¨øy_ªmove_Æl
(
pmix_poöãr_¨øy_t
 *
¨øy
)

188 
i
;

189 if–
¨øy
->
numbî_‰ì
 =¨øy->
size
 )

192 
¨øy
->
lowe°_‰ì
 = 0;

193 
¨øy
->
numbî_‰ì
 =áºay->
size
;

194 
i
=0; i<
¨øy
->
size
; i++) {

195 
¨øy
->
addr
[
i
] = 
NULL
;

197 
	}
}

199 
	gEND_C_DECLS


	@class/pmix_ring_buffer.c

22 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

24 
	~<°dlib.h
>

25 
	~<°dio.h
>

26 
	~<as£π.h
>

28 
	~"pmix_comm⁄.h
"

29 
	~"§c/˛ass/pmix_rög_buf„r.h
"

30 
	~"§c/utû/ouçut.h
"

32 
pmix_rög_buf„r_c⁄°ru˘
(
pmix_rög_buf„r_t
 *);

33 
pmix_rög_buf„r_de°ru˘
(
pmix_rög_buf„r_t
 *);

35 
PMIX_CLASS_INSTANCE
(
pmix_rög_buf„r_t
, 
pmix_obje˘_t
,

36 
pmix_rög_buf„r_c⁄°ru˘
,

37 
pmix_rög_buf„r_de°ru˘
);

42 
	$pmix_rög_buf„r_c⁄°ru˘
(
pmix_rög_buf„r_t
 *
rög
)

44 
rög
->
hód
 = 0;

45 
rög
->
èû
 = -1;

46 
rög
->
size
 = 0;

47 
rög
->
addr
 = 
NULL
;

48 
	}
}

53 
	$pmix_rög_buf„r_de°ru˘
(
pmix_rög_buf„r_t
 *
rög
)

55 if–
NULL
 !
rög
->
addr
) {

56 
	`‰ì
(
rög
->
addr
);

57 
rög
->
addr
 = 
NULL
;

60 
rög
->
size
 = 0;

61 
	}
}

66 
	$pmix_rög_buf„r_öô
(
pmix_rög_buf„r_t
* 
rög
, 
size
)

69 i‡(
NULL
 =
rög
) {

70  
PMIX_ERR_BAD_PARAM
;

74 
rög
->
addr
 = (**)
	`ˇŒoc
(
size
 * (*), 1);

75 i‡(
NULL
 =
rög
->
addr
) {

76  
PMIX_ERR_OUT_OF_RESOURCE
;

78 
rög
->
size
 = size;

80  
PMIX_SUCCESS
;

81 
	}
}

83 * 
	$pmix_rög_buf„r_push
(
pmix_rög_buf„r_t
 *
rög
, *
±r
)

85 *
p
=
NULL
;

87 i‡(
NULL
 !
rög
->
addr
[rög->
hód
]) {

88 
p
 = (*)
rög
->
addr
[rög->
hód
];

89 i‡(
rög
->
èû
 =rög->
size
 - 1) {

90 
rög
->
èû
 = 0;

92 
rög
->
èû
 =Ñög->
hód
 + 1;

95 
rög
->
addr
[rög->
hód
] = (*)
±r
;

96 i‡(
rög
->
èû
 < 0) {

97 
rög
->
èû
 =Ñög->
hód
;

99 i‡(
rög
->
hód
 =rög->
size
 - 1) {

100 
rög
->
hód
 = 0;

102 
rög
->
hód
++;

104  (*)
p
;

105 
	}
}

107 * 
	$pmix_rög_buf„r_p›
(
pmix_rög_buf„r_t
 *
rög
)

109 *
p
=
NULL
;

111 i‡(-1 =
rög
->
èû
) {

113 
p
 = 
NULL
;

115 
p
 = (*)
rög
->
addr
[rög->
èû
];

116 
rög
->
addr
[rög->
èû
] = 
NULL
;

117 i‡(
rög
->
èû
 =rög->
size
-1) {

118 
rög
->
èû
 = 0;

120 
rög
->
èû
++;

123 i‡(
rög
->
èû
 =rög->
hód
) {

124 
rög
->
èû
 = -1;

127  (*)
p
;

128 
	}
}

130 * 
	$pmix_rög_buf„r_poke
(
pmix_rög_buf„r_t
 *
rög
, 
i
)

132 *
p
=
NULL
;

133 
off£t
;

135 i‡(
rög
->
size
 <
i
 || -1 =rög->
èû
) {

136 
p
 = 
NULL
;

137 } i‡(
i
 < 0) {

139 i‡(
rög
->
hód
 == 0) {

140 
p
 = 
rög
->
addr
[rög->
size
 - 1];

142 
p
 = 
rög
->
addr
[rög->
hód
 - 1];

146 
off£t
 = 
rög
->
èû
 + 
i
;

148 i‡(
rög
->
size
 <
off£t
) {

149 
off£t
 -
rög
->
size
;

151 
p
 = 
rög
->
addr
[
off£t
];

153  (*)
p
;

154 
	}
}

	@class/pmix_ring_buffer.h

25 #i‚de‡
PMIX_RING_BUFFER_H


26 
	#PMIX_RING_BUFFER_H


	)

28 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

30 
	~"§c/˛ass/pmix_obje˘.h
"

31 
	~"§c/utû/ouçut.h
"

33 
BEGIN_C_DECLS


38 
	spmix_rög_buf„r_t
 {

40 
pmix_obje˘_t
 
	msu≥r
;

42 
	mhód
;

43 
	mèû
;

45 
	msize
;

47 **
	maddr
;

52 
pmix_rög_buf„r_t
 
	tpmix_rög_buf„r_t
;

56 
PMIX_CLASS_DECLARATION
(
pmix_rög_buf„r_t
);

67 
pmix_rög_buf„r_öô
(
pmix_rög_buf„r_t
* 
rög
, 
size
);

79 * 
pmix_rög_buf„r_push
(
pmix_rög_buf„r_t
 *
rög
, *
±r
);

91 * 
pmix_rög_buf„r_p›
(
pmix_rög_buf„r_t
 *
rög
);

98 * 
pmix_rög_buf„r_poke
(
pmix_rög_buf„r_t
 *
rög
, 
i
);

100 
	gEND_C_DECLS


	@class/pmix_value_array.c

20 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

22 
	~"§c/˛ass/pmix_vÆue_¨øy.h
"

25 
	$pmix_vÆue_¨øy_c⁄°ru˘
(
pmix_vÆue_¨øy_t
* 
¨øy
)

27 
¨øy
->
¨øy_ôems
 = 
NULL
;

28 
¨øy
->
¨øy_size
 = 0;

29 
¨øy
->
¨øy_ôem_sizeof
 = 0;

30 
¨øy
->
¨øy_Æloc_size
 = 0;

31 
	}
}

33 
	$pmix_vÆue_¨øy_de°ru˘
(
pmix_vÆue_¨øy_t
* 
¨øy
)

35 i‡(
NULL
 !
¨øy
->
¨øy_ôems
)

36 
	`‰ì
(
¨øy
->
¨øy_ôems
);

37 
	}
}

39 
PMIX_CLASS_INSTANCE
(

40 
pmix_vÆue_¨øy_t
,

41 
pmix_obje˘_t
,

42 
pmix_vÆue_¨øy_c⁄°ru˘
,

43 
pmix_vÆue_¨øy_de°ru˘


47 
	$pmix_vÆue_¨øy_£t_size
(
pmix_vÆue_¨øy_t
* 
¨øy
, 
size_t
 
size
)

49 #i‡
PMIX_ENABLE_DEBUG


50 if(
¨øy
->
¨øy_ôem_sizeof
 == 0) {

51 
	`pmix_ouçut
(0, "pmix_value_array_set_size: item size must be initialized");

52  
PMIX_ERR_BAD_PARAM
;

56 if(
size
 > 
¨øy
->
¨øy_Æloc_size
) {

57 
¨øy
->
¨øy_Æloc_size
 < 
size
)

58 
¨øy
->
¨øy_Æloc_size
 <<= 1;

59 
¨øy
->
¨øy_ôems
 = (*)
	`ªÆloc
(array->array_items,

60 
¨øy
->
¨øy_Æloc_size
 *áºay->
¨øy_ôem_sizeof
);

61 i‡(
NULL
 =
¨øy
->
¨øy_ôems
)

62  
PMIX_ERR_OUT_OF_RESOURCE
;

64 
¨øy
->
¨øy_size
 = 
size
;

65  
PMIX_SUCCESS
;

66 
	}
}

	@class/pmix_value_array.h

20 #i‚de‡
PMIX_VALUE_ARRAY_H


21 
	#PMIX_VALUE_ARRAY_H


	)

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<°rög.h
>

26 #ifde‡
HAVE_STRINGS_H


27 
	~<°rögs.h
>

30 
	~"§c/˛ass/pmix_obje˘.h
"

31 #i‡
PMIX_ENABLE_DEBUG


32 
	~"§c/utû/ouçut.h
"

34 
	~"pmix_comm⁄.h
"

36 
BEGIN_C_DECLS


42 
	spmix_vÆue_¨øy_t


44 
pmix_obje˘_t
 
	msu≥r
;

45 * 
	m¨øy_ôems
;

46 
size_t
 
	m¨øy_ôem_sizeof
;

47 
size_t
 
	m¨øy_size
;

48 
size_t
 
	m¨øy_Æloc_size
;

50 
pmix_vÆue_¨øy_t
 
	tpmix_vÆue_¨øy_t
;

52 
PMIX_CLASS_DECLARATION
(
pmix_vÆue_¨øy_t
);

67 
ölöe
 
	$pmix_vÆue_¨øy_öô
(
pmix_vÆue_¨øy_t
 *
¨øy
, 
size_t
 
ôem_sizeof
)

69 
¨øy
->
¨øy_ôem_sizeof
 = 
ôem_sizeof
;

70 
¨øy
->
¨øy_Æloc_size
 = 1;

71 
¨øy
->
¨øy_size
 = 0;

72 
¨øy
->
¨øy_ôems
 = (*)
	`ªÆloc
◊ºay->¨øy_ôems, 
ôem_sizeof
 *áºay->
¨øy_Æloc_size
);

73  (
NULL
 !
¨øy
->
¨øy_ôems
Ë? 
PMIX_SUCCESS
 : 
PMIX_ERR_OUT_OF_RESOURCE
;

74 
	}
}

85 
ölöe
 
	$pmix_vÆue_¨øy_ª£rve
(
pmix_vÆue_¨øy_t
* 
¨øy
, 
size_t
 
size
)

87 if(
size
 > 
¨øy
->
¨øy_Æloc_size
) {

88 
¨øy
->
¨øy_ôems
 = (*)
	`ªÆloc
◊ºay->¨øy_ôems,áºay->
¨øy_ôem_sizeof
 * 
size
);

89 if(
NULL
 =
¨øy
->
¨øy_ôems
) {

90 
¨øy
->
¨øy_size
 = 0;

91 
¨øy
->
¨øy_Æloc_size
 = 0;

92  
PMIX_ERR_OUT_OF_RESOURCE
;

94 
¨øy
->
¨øy_Æloc_size
 = 
size
;

96  
PMIX_SUCCESS
;

97 
	}
}

108 
ölöe
 
size_t
 
	$pmix_vÆue_¨øy_gë_size
(
pmix_vÆue_¨øy_t
* 
¨øy
)

110  
¨øy
->
¨øy_size
;

111 
	}
}

129 
pmix_vÆue_¨øy_£t_size
(
pmix_vÆue_¨øy_t
* 
¨øy
, 
size_t
 
size
);

146 
	#PMIX_VALUE_ARRAY_GET_ITEM
(
¨øy
, 
ôem_ty≥
, 
ôem_ödex
) \

147 ((
ôem_ty≥
*)((
¨øy
)->
¨øy_ôems
))[
ôem_ödex
]

	)

161 
ölöe
 * 
	$pmix_vÆue_¨øy_gë_ôem
(
pmix_vÆue_¨øy_t
 *
¨øy
, 
size_t
 
ôem_ödex
)

163 if(
ôem_ödex
 >
¨øy
->
¨øy_size
 && 
	`pmix_vÆue_¨øy_£t_size
◊ºay, iãm_ödex+1Ë!
PMIX_SUCCESS
)

164  
NULL
;

165  
¨øy
->
¨øy_ôems
 + (
ôem_ödex
 *áºay->
¨øy_ôem_sizeof
);

166 
	}
}

184 
	#PMIX_VALUE_ARRAY_SET_ITEM
(
¨øy
, 
ôem_ty≥
, 
ôem_ödex
, 
ôem_vÆue
) \

185 (((
ôem_ty≥
*)((
¨øy
)->
¨øy_ôems
))[
ôem_ödex
] = 
ôem_vÆue
)

	)

201 
ölöe
 
	$pmix_vÆue_¨øy_£t_ôem
(
pmix_vÆue_¨øy_t
 *
¨øy
, 
size_t
 
ôem_ödex
, c⁄° * 
ôem
)

203 
rc
;

204 if(
ôem_ödex
 >
¨øy
->
¨øy_size
 &&

205 (
rc
 = 
	`pmix_vÆue_¨øy_£t_size
(
¨øy
, 
ôem_ödex
+1)Ë!
PMIX_SUCCESS
)

206  
rc
;

207 
	`mem˝y
(
¨øy
->
¨øy_ôems
 + (
ôem_ödex
 *áºay->
¨øy_ôem_sizeof
), 
ôem
,árray->array_item_sizeof);

208  
PMIX_SUCCESS
;

209 
	}
}

226 
ölöe
 
	$pmix_vÆue_¨øy_≠≥nd_ôem
(
pmix_vÆue_¨øy_t
 *
¨øy
, c⁄° *
ôem
)

228  
	`pmix_vÆue_¨øy_£t_ôem
(
¨øy
,áºay->
¨øy_size
, 
ôem
);

229 
	}
}

244 
ölöe
 
	$pmix_vÆue_¨øy_ªmove_ôem
(
pmix_vÆue_¨øy_t
 *
¨øy
, 
size_t
 
ôem_ödex
)

246 #i‡
PMIX_ENABLE_DEBUG


247 i‡(
ôem_ödex
 >
¨øy
->
¨øy_size
) {

248 
	`pmix_ouçut
(0, "pmix_vÆue_¨øy_ªmove_ôem: invÆid index %lu\n", ()
ôem_ödex
);

249  
PMIX_ERR_BAD_PARAM
;

252 
	`memmove
(
¨øy
->
¨øy_ôems
+◊ºay->
¨øy_ôem_sizeof
 * 
ôem_ödex
),

253 
¨øy
->
¨øy_ôems
+◊ºay->
¨øy_ôem_sizeof
 * (
ôem_ödex
+1)),

254 
¨øy
->
¨øy_ôem_sizeof
 * (¨øy->
¨øy_size
 - 
ôem_ödex
 - 1));

255 
¨øy
->
¨øy_size
--;

256  
PMIX_SUCCESS
;

257 
	}
}

275 
	#PMIX_VALUE_ARRAY_GET_BASE
(
¨øy
, 
ôem_ty≥
) \

276 ((
ôem_ty≥
*Ë((
¨øy
)->
¨øy_ôems
))

	)

278 
	gEND_C_DECLS


	@client/pmi1.c

15 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~<§c/ö˛ude/ty≥s.h
>

19 
	~<pmix.h
>

20 
	~<pmi.h
>

22 
	~"§c/ö˛ude/pmix_globÆs.h
"

24 #ifde‡
HAVE_STRING_H


25 
	~<°rög.h
>

27 #ifde‡
HAVE_UNISTD_H


28 
	~<uni°d.h
>

30 #ifde‡
HAVE_STDLIB_H


31 
	~<°dlib.h
>

33 #ö˛udê
PMIX_EVENT_HEADER


35 
	#ANL_MAPPING
 "PMI_¥o˚ss_m≠pög"

	)

37 
	~"§c/buf„r_›s/buf„r_›s.h
"

38 
	~"§c/utû/¨gv.h
"

39 
	~"§c/utû/îr‹.h
"

40 
	~"§c/utû/ouçut.h
"

42 
	#PMI_MAX_ID_LEN
 
PMIX_MAX_NSLEN


	)

43 
	#PMI_MAX_KEY_LEN
 
PMIX_MAX_KEYLEN


	)

44 
	#PMI_MAX_KVSNAME_LEN
 
PMIX_MAX_NSLEN


	)

45 
	#PMI_MAX_VAL_LEN
 4096

	)

48 
	#PMI_CHECK
() \

50 i‡(!
pmi_öô
) { \

51  
PMI_FAIL
; \

53 } 0)

	)

56 
pmix_°©us_t
 
c⁄vît_öt
(*
vÆue
, 
pmix_vÆue_t
 *
kv
);

57 
c⁄vît_îr
(
pmix_°©us_t
 
rc
);

58 
pmix_¥oc_t
 
	gmy¥oc
;

59 
	gpmi_öô
 = 0;

61 
PMIX_EXPORT
 
	$PMI_Inô
(*
•aw√d
)

63 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

64 
pmix_vÆue_t
 *
vÆ
;

65 
pmix_¥oc_t
 
¥oc
;

66 
pmix_öfo_t
 
öfo
[1];

67 
boﬁ
 
vÆ_›töÆ
 = 1;

69 i‡(
PMIX_SUCCESS
 !
	`PMIx_Inô
(&
my¥oc
, 
NULL
, 0)) {

70  
PMI_ERR_INIT
;

74 
	`mem˝y
(&
¥oc
, &
my¥oc
, (myproc));

75 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

80 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

81 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

83 i‡(
NULL
 !
•aw√d
) {

85 i‡(
PMIX_SUCCESS
 =
	`PMIx_Gë
(&
¥oc
, 
PMIX_SPAWNED
, 
öfo
, 1, &
vÆ
)) {

86 
rc
 = 
	`c⁄vît_öt
(
•aw√d
, 
vÆ
);

87 
	`PMIX_VALUE_RELEASE
(
vÆ
);

88 i‡(
PMIX_SUCCESS
 !
rc
) {

89 
îr‹
;

93 *
•aw√d
 = 0;

96 
pmi_öô
 = 1;

98 
rc
 = 
PMIX_SUCCESS
;

100 
îr‹
:

101 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

103  
	`c⁄vît_îr
(
rc
);

104 
	}
}

106 
PMIX_EXPORT
 
	$PMI_Inôülized
(
PMI_BOOL
 *
öôülized
)

108 i‡(
NULL
 =
öôülized
) {

109  
PMI_ERR_INVALID_ARG
;

112 *
öôülized
 = (
	`PMIx_Inôülized
(Ë? 
PMI_TRUE
 : 
PMI_FALSE
);

114  
PMI_SUCCESS
;

115 
	}
}

117 
PMIX_EXPORT
 
	$PMI_FöÆize
()

119 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

121 
	`PMI_CHECK
();

123 
pmi_öô
 = 0;

124 
rc
 = 
	`PMIx_FöÆize
(
NULL
, 0);

125  
	`c⁄vît_îr
(
rc
);

126 
	}
}

128 
PMIX_EXPORT
 
	$PMI_Ab‹t
(
Êag
, c⁄° 
msg
[])

130 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

132 
	`PMI_CHECK
();

134 
rc
 = 
	`PMIx_Ab‹t
(
Êag
, 
msg
, 
NULL
, 0);

135  
	`c⁄vît_îr
(
rc
);

136 
	}
}

140 
PMIX_EXPORT
 
	$PMI_KVS_Put
(c⁄° 
kv¢ame
[], c⁄° 
key
[], c⁄° 
vÆue
[])

142 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

143 
pmix_vÆue_t
 
vÆ
;

145 
	`PMI_CHECK
();

147 i‡((
kv¢ame
 =
NULL
Ë|| (
	`°æí
(kv¢ameË> 
PMI_MAX_KVSNAME_LEN
)) {

148  
PMI_ERR_INVALID_KVS
;

150 i‡((
key
 =
NULL
Ë|| (
	`°æí
(keyË>
PMI_MAX_KEY_LEN
)) {

151  
PMI_ERR_INVALID_KEY
;

153 i‡((
vÆue
 =
NULL
Ë|| (
	`°æí
(vÆueË> 
PMI_MAX_VAL_LEN
)) {

154  
PMI_ERR_INVALID_VAL
;

157 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

158 "PMI_KVS_Put: KVS=%s, key=%†vÆue=%s", 
kv¢ame
, 
key
, 
vÆue
);

160 
vÆ
.
ty≥
 = 
PMIX_STRING
;

161 
vÆ
.
d©a
.
°rög
 = (*)
vÆue
;

162 
rc
 = 
	`PMIx_Put
(
PMIX_GLOBAL
, 
key
, &
vÆ
);

163  
	`c⁄vît_îr
(
rc
);

164 
	}
}

167 
PMIX_EXPORT
 
	$PMI_KVS_Commô
(c⁄° 
kv¢ame
[])

169 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

171 
	`PMI_CHECK
();

173 i‡((
kv¢ame
 =
NULL
Ë|| (
	`°æí
(kv¢ameË> 
PMI_MAX_KVSNAME_LEN
)) {

174  
PMI_ERR_INVALID_KVS
;

177 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
, "PMI_KVS_Commit: KVS=%s",

178 
kv¢ame
);

180 
rc
 = 
	`PMIx_Commô
();

181  
	`c⁄vît_îr
(
rc
);

182 
	}
}

184 
PMIX_EXPORT
 
	$PMI_KVS_Gë
–c⁄° 
kv¢ame
[], c⁄° 
key
[], 
vÆue
[], 
Àngth
)

186 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

187 
pmix_vÆue_t
 *
vÆ
;

188 
pmix_¥oc_t
 
¥oc
;

190 
	`PMI_CHECK
();

192 i‡((
kv¢ame
 =
NULL
Ë|| (
	`°æí
(kv¢ameË> 
PMI_MAX_KVSNAME_LEN
)) {

193  
PMI_ERR_INVALID_KVS
;

195 i‡((
key
 =
NULL
Ë|| (
	`°æí
(keyË> 
PMI_MAX_KEY_LEN
)) {

196  
PMI_ERR_INVALID_KEY
;

198 i‡(
vÆue
 =
NULL
) {

199  
PMI_ERR_INVALID_VAL
;

202 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

203 "PMI_KVS_Gë: KVS=%s, key=%†vÆue=%s", 
kv¢ame
, 
key
, 
vÆue
);

207 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
kv¢ame
, 
PMIX_MAX_NSLEN
);

208 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

210 
rc
 = 
	`PMIx_Gë
(&
¥oc
, 
key
, 
NULL
, 0, &
vÆ
);

211 i‡(
PMIX_SUCCESS
 =
rc
 && 
NULL
 !
vÆ
) {

212 i‡(
PMIX_STRING
 !
vÆ
->
ty≥
) {

213 
rc
 = 
PMIX_ERROR
;

214 } i‡(
NULL
 !
vÆ
->
d©a
.
°rög
) {

215 ()
	`°∫˝y
(
vÆue
, 
vÆ
->
d©a
.
°rög
, 
Àngth
);

217 
	`PMIX_VALUE_RELEASE
(
vÆ
);

220  
	`c⁄vît_îr
(
rc
);

221 
	}
}

225 
PMIX_EXPORT
 
	$PMI_B¨rõr
()

227 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

228 
pmix_öfo_t
 
buf
;

229 
nöfo
 = 0;

230 
pmix_öfo_t
 *
öfo
 = 
NULL
;

231 
boﬁ
 
vÆ
 = 1;

233 
	`PMI_CHECK
();

235 
öfo
 = &
buf
;

236 
	`PMIX_INFO_CONSTRUCT
(
öfo
);

237 
	`PMIX_INFO_LOAD
(
öfo
, 
PMIX_COLLECT_DATA
, &
vÆ
, 
PMIX_BOOL
);

238 
nöfo
 = 1;

239 
rc
 = 
	`PMIx_Fí˚
(
NULL
, 0, 
öfo
, 
nöfo
);

241 
	`PMIX_INFO_DESTRUCT
(
öfo
);

243  
	`c⁄vît_îr
(
rc
);

244 
	}
}

246 
PMIX_EXPORT
 
	$PMI_Gë_size
(*
size
)

248 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

249 
pmix_vÆue_t
 *
vÆ
;

250 
pmix_¥oc_t
 
¥oc
;

251 
pmix_öfo_t
 
öfo
[1];

252 
boﬁ
 
vÆ_›töÆ
 = 1;

254 
	`PMI_CHECK
();

256 i‡(
NULL
 =
size
) {

257  
PMI_ERR_INVALID_ARG
;

260 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
my¥oc
.n•a˚, 
PMIX_MAX_NSLEN
);

261 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

266 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

267 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

269 
rc
 = 
	`PMIx_Gë
(&
¥oc
, 
PMIX_JOB_SIZE
, 
öfo
, 1, &
vÆ
);

270 i‡(
PMIX_SUCCESS
 =
rc
) {

271 
rc
 = 
	`c⁄vît_öt
(
size
, 
vÆ
);

272 
	`PMIX_VALUE_RELEASE
(
vÆ
);

275 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

277  
	`c⁄vît_îr
(
rc
);

278 
	}
}

280 
PMIX_EXPORT
 
	$PMI_Gë_ønk
(*
rk
)

282 
	`PMI_CHECK
();

284 i‡(
NULL
 =
rk
) {

285  
PMI_ERR_INVALID_ARG
;

288 *
rk
 = 
my¥oc
.
ønk
;

289  
PMI_SUCCESS
;

290 
	}
}

292 
PMIX_EXPORT
 
	$PMI_Gë_univî£_size
(*
size
)

294 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

295 
pmix_vÆue_t
 *
vÆ
;

296 
pmix_¥oc_t
 
¥oc
;

297 
pmix_öfo_t
 
öfo
[1];

298 
boﬁ
 
vÆ_›töÆ
 = 1;

300 
	`PMI_CHECK
();

302 i‡(
NULL
 =
size
) {

303  
PMI_ERR_INVALID_ARG
;

306 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
my¥oc
.n•a˚, 
PMIX_MAX_NSLEN
);

307 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

312 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

313 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

315 
rc
 = 
	`PMIx_Gë
(&
¥oc
, 
PMIX_UNIV_SIZE
, 
öfo
, 1, &
vÆ
);

316 i‡(
PMIX_SUCCESS
 =
rc
) {

317 
rc
 = 
	`c⁄vît_öt
(
size
, 
vÆ
);

318 
	`PMIX_VALUE_RELEASE
(
vÆ
);

321 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

323  
	`c⁄vît_îr
(
rc
);

324 
	}
}

326 
PMIX_EXPORT
 
	$PMI_Gë_≠≤um
(*
≠≤um
)

328 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

329 
pmix_vÆue_t
 *
vÆ
;

330 
pmix_¥oc_t
 
¥oc
;

331 
pmix_öfo_t
 
öfo
[1];

332 
boﬁ
 
vÆ_›töÆ
 = 1;

334 
	`PMI_CHECK
();

336 i‡(
NULL
 =
≠≤um
) {

337  
PMI_ERR_INVALID_ARG
;

340 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
my¥oc
.n•a˚, 
PMIX_MAX_NSLEN
);

341 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

346 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

347 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

349 
rc
 = 
	`PMIx_Gë
(&
¥oc
, 
PMIX_APPNUM
, 
öfo
, 1, &
vÆ
);

350 i‡(
PMIX_SUCCESS
 =
rc
) {

351 
rc
 = 
	`c⁄vît_öt
(
≠≤um
, 
vÆ
);

352 
	`PMIX_VALUE_RELEASE
(
vÆ
);

355 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

357  
	`c⁄vît_îr
(
rc
);

358 
	}
}

360 
PMIX_EXPORT
 
	$PMI_Publish_«me
(c⁄° 
£rvi˚_«me
[], c⁄° 
p‹t
[])

362 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

363 
pmix_öfo_t
 
öfo
;

365 
	`PMI_CHECK
();

367 i‡(
NULL
 =
£rvi˚_«me
 || NULL =
p‹t
) {

368  
PMI_ERR_INVALID_ARG
;

372 (Ë
	`°∫˝y
(
öfo
.
key
, 
£rvi˚_«me
, 
PMIX_MAX_KEYLEN
);

373 
öfo
.
vÆue
.
ty≥
 = 
PMIX_STRING
;

374 
öfo
.
vÆue
.
d©a
.
°rög
 = (*Ë
p‹t
;

378 
rc
 = 
	`PMIx_Publish
(&
öfo
, 1);

380  
	`c⁄vît_îr
(
rc
);

381 
	}
}

383 
PMIX_EXPORT
 
	$PMI_U≈ublish_«me
(c⁄° 
£rvi˚_«me
[])

385 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

386 *
keys
[2];

388 
	`PMI_CHECK
();

390 i‡(
NULL
 =
£rvi˚_«me
) {

391  
PMI_ERR_INVALID_ARG
;

395 
keys
[0] = (*Ë
£rvi˚_«me
;

396 
keys
[1] = 
NULL
;

398 
rc
 = 
	`PMIx_U≈ublish
(
keys
, 
NULL
, 0);

399  
	`c⁄vît_îr
(
rc
);

400 
	}
}

402 
PMIX_EXPORT
 
	$PMI_Lookup_«me
(c⁄° 
£rvi˚_«me
[], 
p‹t
[])

404 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

405 
pmix_pd©a_t
 
pd©a
;

407 
	`PMI_CHECK
();

409 i‡(
NULL
 =
£rvi˚_«me
 || NULL =
p‹t
) {

410  
PMI_ERR_INVALID_ARG
;

413 
	`PMIX_PDATA_CONSTRUCT
(&
pd©a
);

416 (Ë
	`°∫˝y
(
pd©a
.
key
, 
£rvi˚_«me
, 
PMIX_MAX_KEYLEN
);

419 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Lookup
(&
pd©a
, 1, 
NULL
, 0))) {

420  
	`c⁄vît_îr
(
rc
);

424 i‡(
PMIX_STRING
 !
pd©a
.
vÆue
.
ty≥
 || 
NULL
 =pd©a.vÆue.
d©a
.
°rög
) {

425  
	`c⁄vît_îr
(
PMIX_ERR_NOT_FOUND
);

433 (Ë
	`°∫˝y
(
p‹t
, 
pd©a
.
vÆue
.
d©a
.
°rög
, 
PMIX_MAX_KEYLEN
);

434 
	`PMIX_PDATA_DESTRUCT
(&
pd©a
);

436  
PMIX_SUCCESS
;

437 
	}
}

439 
PMIX_EXPORT
 
	$PMI_Gë_id
(
id_°r
[], 
Àngth
)

444 
	`PMI_CHECK
();

447 i‡(
NULL
 =
id_°r
) {

448  
PMI_ERR_INVALID_ARGS
;

450 i‡(
Àngth
 < 
PMI_MAX_ID_LEN
) {

451  
PMI_ERR_INVALID_LENGTH
;

454 (Ë
	`°∫˝y
(
id_°r
, 
my¥oc
.
n•a˚
, 
Àngth
);

455  
PMI_SUCCESS
;

456 
	}
}

458 
PMIX_EXPORT
 
	$PMI_Gë_kvs_domaö_id
(
id_°r
[], 
Àngth
)

460 
	`PMI_CHECK
();

463  
	`PMI_Gë_id
(
id_°r
, 
Àngth
);

464 
	}
}

466 
PMIX_EXPORT
 
	$PMI_Gë_id_Àngth_max
(*
Àngth
)

468 
	`PMI_CHECK
();

470 i‡(
NULL
 =
Àngth
) {

471  
PMI_ERR_INVALID_VAL_LENGTH
;

474 *
Àngth
 = 
PMI_MAX_ID_LEN
;

475  
PMI_SUCCESS
;

476 
	}
}

478 
PMIX_EXPORT
 
	$PMI_Gë_˛ique_size
(*
size
)

480 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

481 
pmix_vÆue_t
 *
vÆ
;

482 
pmix_öfo_t
 
öfo
[1];

483 
boﬁ
 
vÆ_›töÆ
 = 1;

485 
	`PMI_CHECK
();

487 i‡(
NULL
 =
size
) {

488  
PMI_ERR_INVALID_ARG
;

494 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

495 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

497 
rc
 = 
	`PMIx_Gë
(&
my¥oc
, 
PMIX_LOCAL_SIZE
, 
öfo
, 1, &
vÆ
);

498 i‡(
PMIX_SUCCESS
 =
rc
) {

499 
rc
 = 
	`c⁄vît_öt
(
size
, 
vÆ
);

500 
	`PMIX_VALUE_RELEASE
(
vÆ
);

503 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

505  
	`c⁄vît_îr
(
rc
);

506 
	}
}

508 
PMIX_EXPORT
 
	$PMI_Gë_˛ique_ønks
(
ønks
[], 
Àngth
)

510 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

511 
pmix_vÆue_t
 *
vÆ
;

512 **
rks
;

513 
i
;

515 
	`PMI_CHECK
();

517 i‡(
NULL
 =
ønks
) {

518  
PMI_ERR_INVALID_ARGS
;

521 
rc
 = 
	`PMIx_Gë
(&
my¥oc
, 
PMIX_LOCAL_PEERS
, 
NULL
, 0, &
vÆ
);

522 i‡(
PMIX_SUCCESS
 =
rc
) {

525 
rks
 = 
	`pmix_¨gv_•lô
(
vÆ
->
d©a
.
°rög
, ',');

526 
i
 = 0; 
NULL
 !
rks
[i] && i < 
Àngth
; i++) {

527 
ønks
[
i
] = 
	`°πﬁ
(
rks
[i], 
NULL
, 10);

529 
	`pmix_¨gv_‰ì
(
rks
);

530 
	`PMIX_VALUE_RELEASE
(
vÆ
);

533  
	`c⁄vît_îr
(
rc
);

534 
	}
}

536 
PMIX_EXPORT
 
	$PMI_KVS_Gë_my_«me
(
kv¢ame
[], 
Àngth
)

538 
	`PMI_CHECK
();

541  
	`PMI_Gë_id
(
kv¢ame
, 
Àngth
);

542 
	}
}

544 
PMIX_EXPORT
 
	$PMI_KVS_Gë_«me_Àngth_max
(*
Àngth
)

546 
	`PMI_CHECK
();

548 i‡(
NULL
 =
Àngth
) {

549  
PMI_ERR_INVALID_ARG
;

552 *
Àngth
 = 
PMI_MAX_KVSNAME_LEN
;

553  
PMI_SUCCESS
;

554 
	}
}

556 
PMIX_EXPORT
 
	$PMI_KVS_Gë_key_Àngth_max
(*
Àngth
)

558 
	`PMI_CHECK
();

560 i‡(
NULL
 =
Àngth
) {

561  
PMI_ERR_INVALID_ARG
;

564 *
Àngth
 = 
PMI_MAX_KEY_LEN
;

565  
PMI_SUCCESS
;

566 
	}
}

568 
PMIX_EXPORT
 
	$PMI_KVS_Gë_vÆue_Àngth_max
(*
Àngth
)

570 
	`PMI_CHECK
();

572 i‡(
NULL
 =
Àngth
) {

573  
PMI_ERR_INVALID_ARG
;

578 *
Àngth
 = 
PMI_MAX_VAL_LEN
;

579  
PMI_SUCCESS
;

580 
	}
}

584 
PMIX_EXPORT
 
	$PMI_KVS_Cª©e
(
kv¢ame
[], 
Àngth
)

586  
PMI_FAIL
;

587 
	}
}

591 
PMIX_EXPORT
 
	$PMI_KVS_De°roy
(c⁄° 
kv¢ame
[])

593  
PMI_FAIL
;

594 
	}
}

598 
PMIX_EXPORT
 
	$PMI_KVS_Iãr_fú°
(c⁄° 
kv¢ame
[], 
key
[], 
key_Àn
, 
vÆ
[], 
vÆ_Àn
)

600  
PMI_FAIL
;

601 
	}
}

605 
PMIX_EXPORT
 
	$PMI_KVS_Iãr_√xt
(c⁄° 
kv¢ame
[], 
key
[], 
key_Àn
, 
vÆ
[], 
vÆ_Àn
)

607  
PMI_FAIL
;

608 
	}
}

610 
PMIX_EXPORT
 
	$PMI_S∑wn_mu…ùÀ
(
cou¡
,

611 c⁄° * 
cmds
[],

612 c⁄° ** 
¨gvs
[],

613 c⁄° 
max¥ocs
[],

614 c⁄° 
öfo_keyvÆ_size•
[],

615 c⁄° 
PMI_keyvÆ_t
 * 
öfo_keyvÆ_ve˘‹s
[],

616 
¥ïut_keyvÆ_size
,

617 c⁄° 
PMI_keyvÆ_t
 
¥ïut_keyvÆ_ve˘‹
[],

618 
îr‹s
[])

620 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

621 
pmix_≠p_t
 *
≠ps
;

622 
i
, 
k
;

623 
size_t
 
j
;

624 *
ev¨
;

626 
	`PMI_CHECK
();

628 i‡(
NULL
 =
cmds
) {

629  
PMI_ERR_INVALID_ARG
;

633 
	`PMIX_APP_CREATE
(
≠ps
, 
cou¡
);

634 
i
 = 0; i < 
cou¡
; i++) {

635 
≠ps
[
i
].
cmd
 = 
	`°rdup
(
cmds
[i]);

636 
≠ps
[
i
].
max¥ocs
 = maxprocs[i];

637 
≠ps
[
i
].
¨gv
 = 
	`pmix_¨gv_c›y
((**Ë
¨gvs
[i]);

638 
≠ps
[
i
].
¨gc
 = 
	`pmix_¨gv_cou¡
◊µs[i].
¨gv
);

639 
≠ps
[
i
].
nöfo
 = 
öfo_keyvÆ_size•
[i];

640 i‡(0 < 
≠ps
[
i
].
nöfo
) {

641 
≠ps
[
i
].
öfo
 = (
pmix_öfo_t
*)
	`mÆloc
◊µs[i].
nöfo
 * (pmix_info_t));

643 
j
 = 0; j < 
≠ps
[
i
].
nöfo
; j++) {

644 ()
	`°∫˝y
(
≠ps
[
i
].
öfo
[
j
].
key
, 
öfo_keyvÆ_ve˘‹s
[i][j].key, 
PMIX_MAX_KEYLEN
);

645 
≠ps
[
i
].
öfo
[
j
].
vÆue
.
ty≥
 = 
PMIX_STRING
;

646 
≠ps
[
i
].
öfo
[
j
].
vÆue
.
d©a
.
°rög
 = 
	`°rdup
(
öfo_keyvÆ_ve˘‹s
[i][j].
vÆ
);

650 
k
 = 0; k < 
¥ïut_keyvÆ_size
; k++) {

651 i‡(0 > 
	`a•rötf
(&
ev¨
, "%s=%s", 
¥ïut_keyvÆ_ve˘‹
[
k
].
key
,Öªput_keyvÆ_ve˘‹[k].
vÆ
)) {

652 
i
 = 0; i < 
cou¡
; i++) {

653 
	`PMIX_APP_DESTRUCT
(&
≠ps
[
i
]);

655 
	`‰ì
(
≠ps
);

656  
PMIX_ERR_NOMEM
;

658 
	`pmix_¨gv_≠≥nd_nosize
(&
≠ps
[
i
].
ív
, 
ev¨
);

659 
	`‰ì
(
ev¨
);

663 
rc
 = 
	`PMIx_S∑wn
(
NULL
, 0, 
≠ps
, 
cou¡
, NULL);

665 
i
 = 0; i < 
cou¡
; i++) {

666 
	`PMIX_APP_DESTRUCT
(&
≠ps
[
i
]);

668 
	`‰ì
(
≠ps
);

669 i‡(
NULL
 !
îr‹s
) {

670 
i
 = 0; i < 
cou¡
; i++) {

671 
îr‹s
[
i
] = 
	`c⁄vît_îr
(
rc
);

674  
	`c⁄vît_îr
(
rc
);

675 
	}
}

679 
PMIX_EXPORT
 
	$PMI_P¨£_›ti⁄
(
num_¨gs
, *
¨gs
[], *
num_∑r£d
, 
PMI_keyvÆ_t
 **
keyvÆp
, *
size
)

681  
PMI_FAIL
;

682 
	}
}

686 
PMIX_EXPORT
 
PMI_Args_to_keyvÆ
(*
¨g˝
, *((*
¨gvp
)[]), 
PMI_keyvÆ_t
 **
keyvÆp
, *
size
)

688  
	gPMI_FAIL
;

693 
PMIX_EXPORT
 
	$PMI_Fªe_keyvÆs
(
PMI_keyvÆ_t
 
keyvÆp
[], 
size
)

695  
PMI_FAIL
;

696 
	}
}

700 
PMIX_EXPORT
 
	$PMI_Gë_›ti⁄s
(*
°r
, *
Àngth
)

702  
PMI_FAIL
;

703 
	}
}

707 
pmix_°©us_t
 
	$c⁄vît_öt
(*
vÆue
, 
pmix_vÆue_t
 *
kv
)

709 
kv
->
ty≥
) {

710 
PMIX_INT
:

711 *
vÆue
 = 
kv
->
d©a
.
öãgî
;

713 
PMIX_INT8
:

714 *
vÆue
 = 
kv
->
d©a
.
öt8
;

716 
PMIX_INT16
:

717 *
vÆue
 = 
kv
->
d©a
.
öt16
;

719 
PMIX_INT32
:

720 *
vÆue
 = 
kv
->
d©a
.
öt32
;

722 
PMIX_INT64
:

723 *
vÆue
 = 
kv
->
d©a
.
öt64
;

725 
PMIX_UINT
:

726 *
vÆue
 = 
kv
->
d©a
.
uöt
;

728 
PMIX_UINT8
:

729 *
vÆue
 = 
kv
->
d©a
.
uöt8
;

731 
PMIX_UINT16
:

732 *
vÆue
 = 
kv
->
d©a
.
uöt16
;

734 
PMIX_UINT32
:

735 *
vÆue
 = 
kv
->
d©a
.
uöt32
;

737 
PMIX_UINT64
:

738 *
vÆue
 = 
kv
->
d©a
.
uöt64
;

740 
PMIX_BYTE
:

741 *
vÆue
 = 
kv
->
d©a
.
byã
;

743 
PMIX_SIZE
:

744 *
vÆue
 = 
kv
->
d©a
.
size
;

746 
PMIX_BOOL
:

747 *
vÆue
 = 
kv
->
d©a
.
Êag
;

751  
PMIX_ERR_BAD_PARAM
;

753  
PMIX_SUCCESS
;

754 
	}
}

756 
	$c⁄vît_îr
(
pmix_°©us_t
 
rc
)

758 
rc
) {

759 
PMIX_ERR_INVALID_SIZE
:

760  
PMI_ERR_INVALID_SIZE
;

762 
PMIX_ERR_INVALID_KEYVALP
:

763  
PMI_ERR_INVALID_KEYVALP
;

765 
PMIX_ERR_INVALID_NUM_PARSED
:

766  
PMI_ERR_INVALID_NUM_PARSED
;

768 
PMIX_ERR_INVALID_ARGS
:

769  
PMI_ERR_INVALID_ARGS
;

771 
PMIX_ERR_INVALID_NUM_ARGS
:

772  
PMI_ERR_INVALID_NUM_ARGS
;

774 
PMIX_ERR_INVALID_LENGTH
:

775  
PMI_ERR_INVALID_LENGTH
;

777 
PMIX_ERR_INVALID_VAL_LENGTH
:

778  
PMI_ERR_INVALID_VAL_LENGTH
;

780 
PMIX_ERR_INVALID_VAL
:

781  
PMI_ERR_INVALID_VAL
;

783 
PMIX_ERR_INVALID_KEY_LENGTH
:

784  
PMI_ERR_INVALID_KEY_LENGTH
;

786 
PMIX_ERR_INVALID_KEY
:

787  
PMI_ERR_INVALID_KEY
;

789 
PMIX_ERR_INVALID_ARG
:

790  
PMI_ERR_INVALID_ARG
;

792 
PMIX_ERR_NOMEM
:

793  
PMI_ERR_NOMEM
;

795 
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
:

796 
PMIX_ERR_LOST_CONNECTION_TO_SERVER
:

797 
PMIX_ERR_LOST_PEER_CONNECTION
:

798 
PMIX_ERR_LOST_CONNECTION_TO_CLIENT
:

799 
PMIX_ERR_NOT_SUPPORTED
:

800 
PMIX_ERR_NOT_FOUND
:

801 
PMIX_ERR_SERVER_NOT_AVAIL
:

802 
PMIX_ERR_INVALID_NAMESPACE
:

803 
PMIX_ERR_DATA_VALUE_NOT_FOUND
:

804 
PMIX_ERR_OUT_OF_RESOURCE
:

805 
PMIX_ERR_RESOURCE_BUSY
:

806 
PMIX_ERR_BAD_PARAM
:

807 
PMIX_ERR_IN_ERRNO
:

808 
PMIX_ERR_UNREACH
:

809 
PMIX_ERR_TIMEOUT
:

810 
PMIX_ERR_NO_PERMISSIONS
:

811 
PMIX_ERR_PACK_MISMATCH
:

812 
PMIX_ERR_PACK_FAILURE
:

813 
PMIX_ERR_UNPACK_FAILURE
:

814 
PMIX_ERR_UNPACK_INADEQUATE_SPACE
:

815 
PMIX_ERR_TYPE_MISMATCH
:

816 
PMIX_ERR_PROC_ENTRY_NOT_FOUND
:

817 
PMIX_ERR_UNKNOWN_DATA_TYPE
:

818 
PMIX_ERR_WOULD_BLOCK
:

819 
PMIX_EXISTS
:

820 
PMIX_ERROR
:

821  
PMI_FAIL
;

823 
PMIX_ERR_INIT
:

824  
PMI_ERR_INIT
;

826 
PMIX_SUCCESS
:

827  
PMI_SUCCESS
;

829  
PMI_FAIL
;

831 
	}
}

	@client/pmi2.c

15 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~<§c/ö˛ude/ty≥s.h
>

19 #ifde‡
HAVE_STRING_H


20 
	~<°rög.h
>

22 #ifde‡
HAVE_UNISTD_H


23 
	~<uni°d.h
>

25 #ifde‡
HAVE_STDLIB_H


26 
	~<°dlib.h
>

28 #ö˛udê
PMIX_EVENT_HEADER


30 
	~<pmi2.h
>

31 
	~<pmix.h
>

33 
	~"§c/buf„r_›s/buf„r_›s.h
"

34 
	~"§c/utû/¨gv.h
"

35 
	~"§c/utû/îr‹.h
"

36 
	~"§c/utû/ouçut.h
"

37 
	~"§c/ö˛ude/pmix_globÆs.h
"

40 
	#PMI2_CHECK
() \

42 i‡(!
pmi2_öô
) { \

43  
PMI2_FAIL
; \

45 } 0)

	)

48 
pmix_°©us_t
 
c⁄vît_öt
(*
vÆue
, 
pmix_vÆue_t
 *
kv
);

49 
c⁄vît_îr
(
pmix_°©us_t
 
rc
);

50 
pmix_¥oc_t
 
	gmy¥oc
;

51 
	gpmi2_öô
 = 0;

52 
boﬁ
 
	gcommô_ªqd
 = 
Ál£
;

54 
PMIX_EXPORT
 
	$PMI2_Inô
(*
•aw√d
, *
size
, *
ønk
, *
≠≤um
)

56 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

57 
pmix_vÆue_t
 *
vÆ
;

58 
pmix_¥oc_t
 
¥oc
;

59 
pmix_öfo_t
 
öfo
[1];

60 
boﬁ
 
vÆ_›töÆ
 = 1;

62 i‡(
PMIX_SUCCESS
 !
	`PMIx_Inô
(&
my¥oc
, 
NULL
, 0)) {

63  
PMI2_ERR_INIT
;

67 *
ønk
 = 
my¥oc
.rank;

70 
	`mem˝y
(&
¥oc
, &
my¥oc
, (myproc));

71 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

76 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

77 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

79 i‡(
NULL
 !
size
) {

84 i‡(
PMIX_SUCCESS
 =
	`PMIx_Gë
(&
¥oc
, 
PMIX_UNIV_SIZE
, 
öfo
, 1, &
vÆ
)) {

85 
rc
 = 
	`c⁄vît_öt
(
size
, 
vÆ
);

86 
	`PMIX_VALUE_RELEASE
(
vÆ
);

87 i‡(
PMIX_SUCCESS
 !
rc
) {

88 
îr‹
;

92 
rc
 = 
PMIX_ERR_INIT
;

93 
îr‹
;

97 i‡(
NULL
 !
•aw√d
) {

99 i‡(
PMIX_SUCCESS
 =
	`PMIx_Gë
(&
¥oc
, 
PMIX_SPAWNED
, 
öfo
, 1, &
vÆ
)) {

100 
rc
 = 
	`c⁄vît_öt
(
•aw√d
, 
vÆ
);

101 
	`PMIX_VALUE_RELEASE
(
vÆ
);

102 i‡(
PMIX_SUCCESS
 !
rc
) {

103 
îr‹
;

107 *
•aw√d
 = 0;

111 i‡(
NULL
 !
≠≤um
) {

113 i‡(
PMIX_SUCCESS
 =
	`PMIx_Gë
(&
¥oc
, 
PMIX_APPNUM
, 
öfo
, 1, &
vÆ
)) {

114 
rc
 = 
	`c⁄vît_öt
(
≠≤um
, 
vÆ
);

115 
	`PMIX_VALUE_RELEASE
(
vÆ
);

116 i‡(
PMIX_SUCCESS
 !
rc
) {

117 
îr‹
;

121 *
≠≤um
 = 0;

124 
pmi2_öô
 = 1;

126 
rc
 = 
PMIX_SUCCESS
;

128 
îr‹
:

129 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

131  
	`c⁄vît_îr
(
rc
);

132 
	}
}

134 
PMIX_EXPORT
 
	$PMI2_Inôülized
()

136 
öôülized
;

137 
öôülized
 = ()
	`PMIx_Inôülized
();

138  
öôülized
;

139 
	}
}

141 
PMIX_EXPORT
 
	$PMI2_FöÆize
()

143 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

145 
	`PMI2_CHECK
();

147 
pmi2_öô
 = 0;

148 
rc
 = 
	`PMIx_FöÆize
(
NULL
, 0);

149  
	`c⁄vît_îr
(
rc
);

150 
	}
}

152 
PMIX_EXPORT
 
	$PMI2_Ab‹t
(
Êag
, c⁄° 
msg
[])

154 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

156 
	`PMI2_CHECK
();

158 
rc
 = 
	`PMIx_Ab‹t
(
Êag
, 
msg
, 
NULL
, 0);

159  
	`c⁄vît_îr
(
rc
);

160 
	}
}

162 
PMIX_EXPORT
 
	$PMI2_Job_S∑wn
(
cou¡
, c⁄° * 
cmds
[],

163 
¨gcs
[], c⁄° ** 
¨gvs
[],

164 c⁄° 
max¥ocs
[],

165 c⁄° 
öfo_keyvÆ_sizes
[],

166 c⁄° 
PMI_keyvÆ_t
 *
öfo_keyvÆ_ve˘‹s
[],

167 
¥ïut_keyvÆ_size
,

168 c⁄° 
PMI_keyvÆ_t
 *
¥ïut_keyvÆ_ve˘‹
[],

169 
jobId
[], 
jobIdSize
,

170 
îr‹s
[])

172 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

173 
pmix_≠p_t
 *
≠ps
;

174 
i
, 
k
;

175 
size_t
 
j
;

176 *
ev¨
;

178 
	`PMI2_CHECK
();

180 i‡(
NULL
 =
cmds
) {

181  
PMI2_ERR_INVALID_ARGS
;

185 
	`PMIX_APP_CREATE
(
≠ps
, 
cou¡
);

186 
i
=0; i < 
cou¡
; i++) {

187 
≠ps
[
i
].
cmd
 = 
	`°rdup
(
cmds
[i]);

188 
≠ps
[
i
].
max¥ocs
 = maxprocs[i];

189 
≠ps
[
i
].
¨gv
 = 
	`pmix_¨gv_c›y
((**)
¨gvs
[i]);

190 
≠ps
[
i
].
¨gc
 = 
	`pmix_¨gv_cou¡
◊µs[i].
¨gv
);

191 
≠ps
[
i
].
nöfo
 = 
öfo_keyvÆ_sizes
[i];

192 
≠ps
[
i
].
öfo
 = (
pmix_öfo_t
*)
	`mÆloc
◊µs[i].
nöfo
 * (pmix_info_t));

194 
j
=0; j < 
≠ps
[
i
].
nöfo
; j++) {

195 ()
	`°∫˝y
(
≠ps
[
i
].
öfo
[
j
].
key
, 
öfo_keyvÆ_ve˘‹s
[i][j].key, 
PMIX_MAX_KEYLEN
);

196 
≠ps
[
i
].
öfo
[
j
].
vÆue
.
ty≥
 = 
PMIX_STRING
;

197 
≠ps
[
i
].
öfo
[
j
].
vÆue
.
d©a
.
°rög
 = 
	`°rdup
(
öfo_keyvÆ_ve˘‹s
[i][j].
vÆ
);

200 
k
=0; k < 
¥ïut_keyvÆ_size
; k++) {

201 i‡(0 > 
	`a•rötf
(&
ev¨
, "%s=%s", 
¥ïut_keyvÆ_ve˘‹
[
j
]->
key
,Öªput_keyvÆ_ve˘‹[j]->
vÆ
)) {

202 
i
 = 0; i < 
cou¡
; i++) {

203 
	`PMIX_APP_DESTRUCT
(&
≠ps
[
i
]);

205 
	`‰ì
(
≠ps
);

206  
PMIX_ERR_NOMEM
;

208 
	`pmix_¨gv_≠≥nd_nosize
(&
≠ps
[
i
].
ív
, 
ev¨
);

209 
	`‰ì
(
ev¨
);

213 
rc
 = 
	`PMIx_S∑wn
(
NULL
, 0, 
≠ps
, 
cou¡
, NULL);

215 
i
=0; i < 
cou¡
; i++) {

216 
	`PMIX_APP_DESTRUCT
(&
≠ps
[
i
]);

218 
	`‰ì
(
≠ps
);

219 i‡(
NULL
 !
îr‹s
) {

220 
i
=0; i < 
cou¡
; i++) {

221 
îr‹s
[
i
] = 
	`c⁄vît_îr
(
rc
);

225  
	`c⁄vît_îr
(
rc
);

226 
	}
}

228 
PMIX_EXPORT
 
	$PMI2_Job_GëId
(
jobid
[], 
jobid_size
)

233 
	`PMI2_CHECK
();

236 i‡(
NULL
 =
jobid
) {

237  
PMI2_ERR_INVALID_ARGS
;

239 ()
	`°∫˝y
(
jobid
, 
my¥oc
.
n•a˚
, 
jobid_size
);

240  
PMI2_SUCCESS
;

241 
	}
}

243 
PMIX_EXPORT
 
	$PMI2_Job_GëR™k
(*
ønk
)

245 
	`PMI2_CHECK
();

247 i‡(
NULL
 =
ønk
) {

248  
PMI2_ERR_INVALID_ARGS
;

250 *
ønk
 = 
my¥oc
.rank;

251  
PMI2_SUCCESS
;

252 
	}
}

254 
PMIX_EXPORT
 
	$PMI2_Info_GëSize
(*
size
)

256 
pmix_°©us_t
 
rc
 = 
PMIX_ERROR
;

257 
pmix_vÆue_t
 *
vÆ
;

258 
pmix_öfo_t
 
öfo
[1];

259 
boﬁ
 
vÆ_›töÆ
 = 1;

261 
	`PMI2_CHECK
();

263 i‡(
NULL
 =
size
) {

264  
PMI2_ERR_INVALID_ARGS
;

270 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

271 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

273 i‡(
PMIX_SUCCESS
 =
	`PMIx_Gë
(&
my¥oc
, 
PMIX_LOCAL_SIZE
, 
öfo
, 1, &
vÆ
)) {

274 
rc
 = 
	`c⁄vît_öt
(
size
, 
vÆ
);

275 
	`PMIX_VALUE_RELEASE
(
vÆ
);

278 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

280  
	`c⁄vît_îr
(
rc
);

281 
	}
}

283 
PMIX_EXPORT
 
	$PMI2_Job_C⁄√˘
(c⁄° 
jobid
[], 
PMI2_C⁄√˘_comm_t
 *
c⁄n
)

285 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

286 
pmix_¥oc_t
 
¥oc
;

288 
	`PMI2_CHECK
();

290 i‡(
NULL
 =
c⁄n
) {

291  
PMI2_ERR_INVALID_ARGS
;

294 
	`mem£t
(
¥oc
.
n•a˚
, 0, (proc.nspace));

295 ()
	`°∫˝y
(
¥oc
.
n•a˚
, (
jobid
 ? jobid :Öroc.nspace), (proc.nspace)-1);

296 
¥oc
.
ønk
 = 
PMIX_RANK_WILDCARD
;

297 
rc
 = 
	`PMIx_C⁄√˘
(&
¥oc
, 1, 
NULL
, 0);

298  
	`c⁄vît_îr
(
rc
);

299 
	}
}

301 
PMIX_EXPORT
 
	$PMI2_Job_Disc⁄√˘
(c⁄° 
jobid
[])

303 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

304 
pmix_¥oc_t
 
¥oc
;

306 
	`PMI2_CHECK
();

308 
	`mem£t
(
¥oc
.
n•a˚
, 0, (proc.nspace));

309 ()
	`°∫˝y
(
¥oc
.
n•a˚
, (
jobid
 ? jobid :Öroc.nspace), (proc.nspace)-1);

310 
¥oc
.
ønk
 = 
PMIX_RANK_WILDCARD
;

311 
rc
 = 
	`PMIx_Disc⁄√˘
(&
¥oc
, 1, 
NULL
, 0);

312  
	`c⁄vît_îr
(
rc
);

313 
	}
}

316 
PMIX_EXPORT
 
	$PMI2_KVS_Put
(c⁄° 
key
[], c⁄° 
vÆue
[])

318 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

319 
pmix_vÆue_t
 
vÆ
;

321 
	`PMI2_CHECK
();

323 i‡((
NULL
 =
key
Ë|| (NULL =
vÆue
)) {

324  
PMI2_ERR_INVALID_ARG
;

327 
	`pmix_ouçut_vîbo£
(3, 
pmix_globÆs
.
debug_ouçut
,

328 "PMI2_KVS_Put: key=%†vÆue=%s", 
key
, 
vÆue
);

330 
vÆ
.
ty≥
 = 
PMIX_STRING
;

331 
vÆ
.
d©a
.
°rög
 = (*)
vÆue
;

332 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`PMIx_Put
(
PMIX_GLOBAL
, 
key
, &
vÆ
))) {

333 
commô_ªqd
 = 
åue
;

335  
	`c⁄vît_îr
(
rc
);

336 
	}
}

339 
PMIX_EXPORT
 
	$PMI2_KVS_Fí˚
()

341 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

343 
	`PMI2_CHECK
();

345 
	`pmix_ouçut_vîbo£
(3, 
pmix_globÆs
.
debug_ouçut
, "PMI2_KVS_Fence");

347 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Commô
())) {

348  
	`c⁄vît_îr
(
rc
);

350 
commô_ªqd
 = 
Ál£
;

354 
pmix_öfo_t
 
öfo
[1];

355 
boﬁ
 
vÆ_d©a
 = 1;

360 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

361 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_COLLECT_DATA
, &
vÆ_d©a
, 
PMIX_BOOL
);

363 
rc
 = 
	`PMIx_Fí˚
(
NULL
, 0, &
öfo
[0], 1);

364 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

367  
	`c⁄vît_îr
(
rc
);

368 
	}
}

375 
PMIX_EXPORT
 
	$PMI2_KVS_Gë
(c⁄° *
jobid
, 
§c_pmi_id
,

376 c⁄° 
key
[], 
vÆue
 [],

377 
maxvÆue
, *
vÆÀn
)

379 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

380 
pmix_vÆue_t
 *
vÆ
;

381 
pmix_¥oc_t
 
¥oc
;

383 
	`PMI2_CHECK
();

385 i‡(
commô_ªqd
) {

387  
PMI2_FAIL
;

390 *
vÆÀn
 = 0;

392 i‡((
NULL
 =
key
Ë|| (NULL =
vÆue
)) {

393  
PMI2_ERR_INVALID_ARG
;

396 
	`pmix_ouçut_vîbo£
(3, 
pmix_globÆs
.
debug_ouçut
,

397 "PMI2_KVS_Gë: key=%†jobid=%†§c_pmi_id=%d", 
key
, (
jobid
 ? jobid : "nuŒ"), 
§c_pmi_id
);

399 ()
	`°∫˝y
(
¥oc
.
n•a˚
, (
jobid
 ? jobid : 
my¥oc
.n•a˚), 
PMIX_MAX_NSLEN
);

400 i‡(
§c_pmi_id
 =
PMI2_ID_NULL
) {

402 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

404 
¥oc
.
ønk
 = 
§c_pmi_id
;

407 
rc
 = 
	`PMIx_Gë
(&
¥oc
, 
key
, 
NULL
, 0, &
vÆ
);

408 i‡(
PMIX_SUCCESS
 =
rc
 && 
NULL
 !
vÆ
) {

409 i‡(
PMIX_STRING
 !
vÆ
->
ty≥
) {

410 
rc
 = 
PMIX_ERROR
;

411 } i‡(
NULL
 !
vÆ
->
d©a
.
°rög
) {

412 ()
	`°∫˝y
(
vÆue
, 
vÆ
->
d©a
.
°rög
, 
maxvÆue
);

413 *
vÆÀn
 = 
	`°æí
(
vÆ
->
d©a
.
°rög
);

415 
	`PMIX_VALUE_RELEASE
(
vÆ
);

418  
	`c⁄vît_îr
(
rc
);

419 
	}
}

421 
PMIX_EXPORT
 
	$PMI2_Info_GëNodeAâr
(c⁄° 
«me
[],

422 
vÆue
[], 
vÆuñí
,

423 *
found
, 
waôf‹
)

425 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

426 
pmix_vÆue_t
 *
vÆ
;

427 
pmix_öfo_t
 
öfo
[1];

428 
boﬁ
 
vÆ_›töÆ
 = 1;

430 
	`PMI2_CHECK
();

432 i‡((
NULL
 =
«me
Ë|| (NULL =
vÆue
Ë|| (NULL =
found
)) {

433  
PMI2_ERR_INVALID_ARG
;

439 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

440 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

442 *
found
 = 0;

443 
rc
 = 
	`PMIx_Gë
(&
my¥oc
, 
«me
, 
öfo
, 1, &
vÆ
);

444 i‡(
PMIX_SUCCESS
 =
rc
 && 
NULL
 !
vÆ
) {

445 i‡(
PMIX_STRING
 !
vÆ
->
ty≥
) {

446 
rc
 = 
PMIX_ERROR
;

447 } i‡(
NULL
 !
vÆ
->
d©a
.
°rög
) {

448 ()
	`°∫˝y
(
vÆue
, 
vÆ
->
d©a
.
°rög
, 
vÆuñí
);

449 *
found
 = 1;

451 
	`PMIX_VALUE_RELEASE
(
vÆ
);

452 } i‡(
PMIX_ERR_NOT_FOUND
 =
rc
) {

453 
rc
 = 
PMIX_SUCCESS
;

456 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

458  
	`c⁄vît_îr
(
rc
);

459 
	}
}

461 
PMIX_EXPORT
 
	$PMI2_Info_GëNodeAârI¡Aºay
(c⁄° 
«me
[], 
¨øy
[],

462 
¨øyÀn
, *
ouéí
, *
found
)

464  
PMI2_FAIL
;

465 
	}
}

468 
PMIX_EXPORT
 
	$PMI2_Info_PutNodeAâr
(c⁄° 
«me
[], c⁄° 
vÆue
[])

470 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

471 
pmix_vÆue_t
 
vÆ
;

473 
	`PMI2_CHECK
();

475 i‡((
NULL
 =
«me
Ë|| (NULL =
vÆue
)) {

476  
PMI2_ERR_INVALID_ARG
;

479 
vÆ
.
ty≥
 = 
PMIX_STRING
;

480 
vÆ
.
d©a
.
°rög
 = (*)
vÆue
;

481 
rc
 = 
	`PMIx_Put
(
PMIX_LOCAL
, 
«me
, &
vÆ
);

482  
	`c⁄vît_îr
(
rc
);

483 
	}
}

485 
PMIX_EXPORT
 
	$PMI2_Info_GëJobAâr
(c⁄° 
«me
[], 
vÆue
[], 
vÆuñí
, *
found
)

487 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

488 
pmix_vÆue_t
 *
vÆ
;

489 
pmix_¥oc_t
 
¥oc
;

490 
pmix_öfo_t
 
öfo
[1];

491 
boﬁ
 
vÆ_›töÆ
 = 1;

493 
	`PMI2_CHECK
();

495 i‡((
NULL
 =
«me
Ë|| (NULL =
vÆue
Ë|| (NULL =
found
)) {

496  
PMI2_ERR_INVALID_ARG
;

500 
	`mem˝y
(&
¥oc
, &
my¥oc
, (myproc));

501 
¥oc
.
ønk
 = 
PMIX_RANK_UNDEF
;

506 
	`PMIX_INFO_CONSTRUCT
(&
öfo
[0]);

507 
	`PMIX_INFO_LOAD
(&
öfo
[0], 
PMIX_OPTIONAL
, &
vÆ_›töÆ
, 
PMIX_BOOL
);

509 *
found
 = 0;

510 
rc
 = 
	`PMIx_Gë
(&
¥oc
, 
«me
, 
öfo
, 1, &
vÆ
);

511 i‡(
PMIX_SUCCESS
 =
rc
 && 
NULL
 !
vÆ
) {

512 i‡(
PMIX_STRING
 !
vÆ
->
ty≥
) {

513 
rc
 = 
PMIX_ERROR
;

514 } i‡(
NULL
 !
vÆ
->
d©a
.
°rög
) {

515 ()
	`°∫˝y
(
vÆue
, 
vÆ
->
d©a
.
°rög
, 
vÆuñí
);

516 *
found
 = 1;

518 
	`PMIX_VALUE_RELEASE
(
vÆ
);

519 } i‡(
PMIX_ERR_NOT_FOUND
 =
rc
) {

520 
rc
 = 
PMIX_SUCCESS
;

523 
	`PMIX_INFO_DESTRUCT
(&
öfo
[0]);

525  
	`c⁄vît_îr
(
rc
);

526 
	}
}

528 
PMIX_EXPORT
 
	$PMI2_Info_GëJobAârI¡Aºay
(c⁄° 
«me
[],

529 
¨øy
[], 
¨øyÀn
,

530 *
ouéí
, *
found
)

532  
PMI2_FAIL
;

533 
	}
}

535 
PMIX_EXPORT
 
	$PMI2_Name£rv_publish
(c⁄° 
£rvi˚_«me
[],

536 c⁄° 
PMI_keyvÆ_t
 *
öfo_±r
, c⁄° 
p‹t
[])

538 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

539 
nvÆs
;

540 
pmix_öfo_t
 
öfo
[2];

542 
	`PMI2_CHECK
();

544 i‡(
NULL
 =
£rvi˚_«me
 || NULL =
p‹t
) {

545  
PMI2_ERR_INVALID_ARG
;

549 ()
	`°∫˝y
(
öfo
[0].
key
, 
£rvi˚_«me
, 
PMIX_MAX_KEYLEN
);

550 
öfo
[0].
vÆue
.
ty≥
 = 
PMIX_STRING
;

551 
öfo
[0].
vÆue
.
d©a
.
°rög
 = (*)
p‹t
;

552 
nvÆs
 = 1;

555 i‡(
NULL
 !
öfo_±r
) {

556 ()
	`°∫˝y
(
öfo
[1].
key
, 
öfo_±r
->key, 
PMIX_MAX_KEYLEN
);

557 
öfo
[1].
vÆue
.
ty≥
 = 
PMIX_STRING
;

558 
öfo
[1].
vÆue
.
d©a
.
°rög
 = (*)
öfo_±r
->
vÆ
;

559 
nvÆs
 = 2;

563 
rc
 = 
	`PMIx_Publish
(
öfo
, 
nvÆs
);

565  
	`c⁄vît_îr
(
rc
);

566 
	}
}

568 
PMIX_EXPORT
 
	$PMI2_Name£rv_lookup
(c⁄° 
£rvi˚_«me
[],

569 c⁄° 
PMI_keyvÆ_t
 *
öfo_±r
,

570 
p‹t
[], 
p‹tLí
)

572 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

573 
nvÆs
;

574 
pmix_pd©a_t
 
pd©a
[2];

576 
	`PMI2_CHECK
();

578 i‡(
NULL
 =
£rvi˚_«me
 || NULL =
öfo_±r
 || NULL =
p‹t
) {

579  
PMI2_ERR_INVALID_ARG
;

582 
	`PMIX_PDATA_CONSTRUCT
(&
pd©a
[0]);

583 
	`PMIX_PDATA_CONSTRUCT
(&
pd©a
[1]);

586 ()
	`°∫˝y
(
pd©a
[0].
key
, 
£rvi˚_«me
, 
PMIX_MAX_KEYLEN
);

587 
nvÆs
 = 1;

590 i‡(
NULL
 !
öfo_±r
) {

591 ()
	`°∫˝y
(
pd©a
[1].
key
, 
öfo_±r
->key, 
PMIX_MAX_KEYLEN
);

592 
pd©a
[1].
vÆue
.
ty≥
 = 
PMIX_STRING
;

593 
pd©a
[1].
vÆue
.
d©a
.
°rög
 = 
öfo_±r
->
vÆ
;

594 
nvÆs
 = 2;

598 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Lookup
(
pd©a
, 
nvÆs
, 
NULL
, 0))) {

599 
	`PMIX_PDATA_DESTRUCT
(&
pd©a
[0]);

600 
	`PMIX_PDATA_DESTRUCT
(&
pd©a
[1]);

601  
	`c⁄vît_îr
(
rc
);

605 i‡(
PMIX_STRING
 !
pd©a
[0].
vÆue
.
ty≥
 ||

606 
NULL
 =
pd©a
[0].
vÆue
.
d©a
.
°rög
) {

607 
	`PMIX_PDATA_DESTRUCT
(&
pd©a
[0]);

608 
	`PMIX_PDATA_DESTRUCT
(&
pd©a
[1]);

609  
PMI2_FAIL
;

613 ()
	`°∫˝y
(
p‹t
, 
pd©a
[0].
vÆue
.
d©a
.
°rög
, 
p‹tLí
);

614 
	`PMIX_PDATA_DESTRUCT
(&
pd©a
[0]);

616 i‡(
NULL
 !
öfo_±r
) {

618 
	`PMIX_PDATA_DESTRUCT
(&
pd©a
[1]);

620  
PMI2_SUCCESS
;

621 
	}
}

623 
PMIX_EXPORT
 
	$PMI2_Name£rv_u≈ublish
(c⁄° 
£rvi˚_«me
[],

624 c⁄° 
PMI_keyvÆ_t
 *
öfo_±r
)

626 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

627 *
keys
[3];

629 
	`PMI2_CHECK
();

631 i‡(
NULL
 =
£rvi˚_«me
 || NULL =
öfo_±r
) {

632  
PMI2_ERR_INVALID_ARG
;

636 
keys
[0] = (*)
£rvi˚_«me
;

637 
keys
[1] = 
NULL
;

638 
keys
[2] = 
NULL
;

641 i‡(
NULL
 !
öfo_±r
) {

642 
keys
[1] = 
öfo_±r
->
key
;

645 
rc
 = 
	`PMIx_U≈ublish
(
keys
, 
NULL
, 0);

646  
	`c⁄vît_îr
(
rc
);

647 
	}
}

650 
pmix_°©us_t
 
	$c⁄vît_öt
(*
vÆue
, 
pmix_vÆue_t
 *
kv
)

652 
kv
->
ty≥
) {

653 
PMIX_INT
:

654 *
vÆue
 = 
kv
->
d©a
.
öãgî
;

656 
PMIX_INT8
:

657 *
vÆue
 = 
kv
->
d©a
.
öt8
;

659 
PMIX_INT16
:

660 *
vÆue
 = 
kv
->
d©a
.
öt16
;

662 
PMIX_INT32
:

663 *
vÆue
 = 
kv
->
d©a
.
öt32
;

665 
PMIX_INT64
:

666 *
vÆue
 = 
kv
->
d©a
.
öt64
;

668 
PMIX_UINT
:

669 *
vÆue
 = 
kv
->
d©a
.
uöt
;

671 
PMIX_UINT8
:

672 *
vÆue
 = 
kv
->
d©a
.
uöt8
;

674 
PMIX_UINT16
:

675 *
vÆue
 = 
kv
->
d©a
.
uöt16
;

677 
PMIX_UINT32
:

678 *
vÆue
 = 
kv
->
d©a
.
uöt32
;

680 
PMIX_UINT64
:

681 *
vÆue
 = 
kv
->
d©a
.
uöt64
;

683 
PMIX_BYTE
:

684 *
vÆue
 = 
kv
->
d©a
.
byã
;

686 
PMIX_SIZE
:

687 *
vÆue
 = 
kv
->
d©a
.
size
;

689 
PMIX_BOOL
:

690 *
vÆue
 = 
kv
->
d©a
.
Êag
;

694  
PMIX_ERR_BAD_PARAM
;

696  
PMIX_SUCCESS
;

697 
	}
}

699 
	$c⁄vît_îr
(
pmix_°©us_t
 
rc
)

701 
rc
) {

702 
PMIX_ERR_INVALID_SIZE
:

703  
PMI2_ERR_INVALID_SIZE
;

705 
PMIX_ERR_INVALID_KEYVALP
:

706  
PMI2_ERR_INVALID_KEYVALP
;

708 
PMIX_ERR_INVALID_NUM_PARSED
:

709  
PMI2_ERR_INVALID_NUM_PARSED
;

711 
PMIX_ERR_INVALID_ARGS
:

712  
PMI2_ERR_INVALID_ARGS
;

714 
PMIX_ERR_INVALID_NUM_ARGS
:

715  
PMI2_ERR_INVALID_NUM_ARGS
;

717 
PMIX_ERR_INVALID_LENGTH
:

718  
PMI2_ERR_INVALID_LENGTH
;

720 
PMIX_ERR_INVALID_VAL_LENGTH
:

721  
PMI2_ERR_INVALID_VAL_LENGTH
;

723 
PMIX_ERR_INVALID_VAL
:

724  
PMI2_ERR_INVALID_VAL
;

726 
PMIX_ERR_INVALID_KEY_LENGTH
:

727  
PMI2_ERR_INVALID_KEY_LENGTH
;

729 
PMIX_ERR_INVALID_KEY
:

730  
PMI2_ERR_INVALID_KEY
;

732 
PMIX_ERR_INVALID_ARG
:

733  
PMI2_ERR_INVALID_ARG
;

735 
PMIX_ERR_NOMEM
:

736  
PMI2_ERR_NOMEM
;

738 
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
:

739 
PMIX_ERR_LOST_CONNECTION_TO_SERVER
:

740 
PMIX_ERR_LOST_PEER_CONNECTION
:

741 
PMIX_ERR_LOST_CONNECTION_TO_CLIENT
:

742 
PMIX_ERR_NOT_SUPPORTED
:

743 
PMIX_ERR_NOT_FOUND
:

744 
PMIX_ERR_SERVER_NOT_AVAIL
:

745 
PMIX_ERR_INVALID_NAMESPACE
:

746 
PMIX_ERR_DATA_VALUE_NOT_FOUND
:

747 
PMIX_ERR_OUT_OF_RESOURCE
:

748 
PMIX_ERR_RESOURCE_BUSY
:

749 
PMIX_ERR_BAD_PARAM
:

750 
PMIX_ERR_IN_ERRNO
:

751 
PMIX_ERR_UNREACH
:

752 
PMIX_ERR_TIMEOUT
:

753 
PMIX_ERR_NO_PERMISSIONS
:

754 
PMIX_ERR_PACK_MISMATCH
:

755 
PMIX_ERR_PACK_FAILURE
:

756 
PMIX_ERR_UNPACK_FAILURE
:

757 
PMIX_ERR_UNPACK_INADEQUATE_SPACE
:

758 
PMIX_ERR_TYPE_MISMATCH
:

759 
PMIX_ERR_PROC_ENTRY_NOT_FOUND
:

760 
PMIX_ERR_UNKNOWN_DATA_TYPE
:

761 
PMIX_ERR_WOULD_BLOCK
:

762 
PMIX_EXISTS
:

763 
PMIX_ERROR
:

764  
PMI2_FAIL
;

766 
PMIX_ERR_INIT
:

767  
PMI2_ERR_INIT
;

769 
PMIX_SUCCESS
:

770  
PMI2_SUCCESS
;

772  
PMI2_FAIL
;

774 
	}
}

	@client/pmix_client.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

22 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

24 
	~<pmix.h
>

26 
	~"§c/ö˛ude/pmix_globÆs.h
"

28 #ifde‡
HAVE_STRING_H


29 
	~<°rög.h
>

31 
	~<f˙é.h
>

32 #ifde‡
HAVE_UNISTD_H


33 
	~<uni°d.h
>

35 #ifde‡
HAVE_SYS_SOCKET_H


36 
	~<sys/sockë.h
>

38 #ifde‡
HAVE_SYS_UN_H


39 
	~<sys/un.h
>

41 #ifde‡
HAVE_SYS_UIO_H


42 
	~<sys/uio.h
>

44 #ifde‡
HAVE_SYS_TYPES_H


45 
	~<sys/ty≥s.h
>

47 #ö˛udê
PMIX_EVENT_HEADER


48 #ö˛udê
PMIX_EVENT2_THREAD_HEADER


50 #i‡
PMIX_CC_USE_PRAGMA_IDENT


51 #¥agm®
idít
 
PMIX_VERSION


52 #ñi‡
PMIX_CC_USE_IDENT


53 #idíà
PMIX_VERSION


55 c⁄° 
	gpmix_vîsi⁄_°rög
[] = 
PMIX_VERSION
;

58 
	~"§c/˛ass/pmix_li°.h
"

59 
	~"§c/buf„r_›s/buf„r_›s.h
"

60 
	~"§c/evít/pmix_evít.h
"

61 
	~"§c/utû/¨gv.h
"

62 
	~"§c/utû/îr‹.h
"

63 
	~"§c/utû/hash.h
"

64 
	~"§c/utû/ouçut.h
"

65 
	~"§c/ru¡ime/pmix_¥ogªss_thªads.h
"

66 
	~"§c/usock/usock.h
"

67 
	~"§c/£c/pmix_£c.h
"

68 
	~"§c/ö˛ude/pmix_globÆs.h
"

69 #i‡
deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

70 
	~"§c/d°‹e/pmix_d°‹e.h
"

73 
	~"pmix_˛õ¡_›s.h
"

75 
	#PMIX_MAX_RETRIES
 10

	)

77 
pmix_°©us_t
 
usock_c⁄√˘
(
sockaddr
 *
addªss
, *
fd
);

79 
	$_nŸify_com∂ëe
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

81 
pmix_evít_chaö_t
 *
chaö
 = (pmix_evít_chaö_t*)
cbd©a
;

82 
	`PMIX_RELEASE
(
chaö
);

83 
	}
}

85 
	$pmix_˛õ¡_nŸify_ªcv
(
pmix_≥î_t
 *
≥î
, 
pmix_usock_hdr_t
 *
hdr
,

86 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

88 
pmix_°©us_t
 
rc
;

89 
öt32_t
 
˙t
;

90 
pmix_cmd_t
 
cmd
;

91 
pmix_evít_chaö_t
 *
chaö
;

92 
size_t
 
nöfo
;

94 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

98 
chaö
 = 
	`PMIX_NEW
(
pmix_evít_chaö_t
);

99 
chaö
->
föÆ_cbfunc
 = 
_nŸify_com∂ëe
;

100 
chaö
->
föÆ_cbd©a
 = chain;

102 
˙t
=1;

103 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cmd
, &
˙t
, 
PMIX_CMD
))) {

104 
	`PMIX_ERROR_LOG
(
rc
);

105 
îr‹
;

108 
˙t
=1;

109 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
chaö
->
°©us
, &
˙t
, 
PMIX_STATUS
))) {

110 
	`PMIX_ERROR_LOG
(
rc
);

111 
îr‹
;

115 
˙t
=1;

116 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
chaö
->
sour˚
, &
˙t
, 
PMIX_PROC
))) {

117 
	`PMIX_ERROR_LOG
(
rc
);

118 
îr‹
;

122 
˙t
=1;

123 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

124 
	`PMIX_ERROR_LOG
(
rc
);

125 
îr‹
;

129 
chaö
->
nöfo
 =Çinfo + 1;

130 
	`PMIX_INFO_CREATE
(
chaö
->
öfo
, chaö->
nöfo
);

132 i‡(0 < 
nöfo
) {

133 
˙t
 = 
nöfo
;

134 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
chaö
->
öfo
, &
˙t
, 
PMIX_INFO
))) {

135 
	`PMIX_ERROR_LOG
(
rc
);

136 
îr‹
;

140 
	`PMIX_INFO_LOAD
(&
chaö
->
öfo
[
nöfo
], 
PMIX_EVENT_RETURN_OBJECT
, 
NULL
, 
PMIX_POINTER
);

142 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

144 
pmix_globÆs
.
myid
.
n•a˚
,Ömix_globÆs.myid.
ønk
, 
chaö
->
°©us
);

146 
	`pmix_övoke_loˇl_evít_hdÃ
(
chaö
);

149 
îr‹
:

151 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

152 "pmix:˛õ¡_nŸify_ªcv - u≈ackÉº‹ sètu†=%d, cÆlög de‡îrh™dÀr", 
rc
);

153 
chaö
 = 
	`PMIX_NEW
(
pmix_evít_chaö_t
);

154 
chaö
->
°©us
 = 
rc
;

155 
	`pmix_övoke_loˇl_evít_hdÃ
(
chaö
);

156 
	}
}

159 
pmix_˛õ¡_globÆs_t
 
	gpmix_˛õ¡_globÆs
 = {{{0}}};

162 
	$waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

163 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

165 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

167 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

169 (
NULL
 =
buf
Ë? -1 : ()buf->
byãs_u£d
);

171 
cb
->
a˘ive
 = 
Ál£
;

172 
	}
}

175 
	$job_d©a
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

176 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

178 
pmix_°©us_t
 
rc
;

179 *
n•a˚
;

180 
öt32_t
 
˙t
 = 1;

181 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

185 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
n•a˚
, &
˙t
, 
PMIX_STRING
))) {

186 
	`PMIX_ERROR_LOG
(
rc
);

187 
cb
->
°©us
 = 
PMIX_ERROR
;

188 
cb
->
a˘ive
 = 
Ál£
;

192 
	`pmix_˛õ¡_¥o˚ss_n•a˚_blob
(
pmix_globÆs
.
myid
.
n•a˚
, 
buf
);

193 
cb
->
°©us
 = 
PMIX_SUCCESS
;

194 
cb
->
a˘ive
 = 
Ál£
;

195 
	}
}

197 
pmix_°©us_t
 
	$c⁄√˘_to_£rvî
(
sockaddr_un
 *
addªss
, *
cbd©a
)

199 
sd
;

200 
pmix_°©us_t
 
ªt
;

201 
pmix_cmd_t
 
cmd
 = 
PMIX_REQ_CMD
;

202 
pmix_buf„r_t
 *
ªq
;

204 i‡(
PMIX_SUCCESS
 !(
ªt
=
	`usock_c⁄√˘
((
sockaddr
 *)
addªss
, &
sd
))) {

205 
	`PMIX_ERROR_LOG
(
ªt
);

206  
ªt
;

208 
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
 = sd;

210 
	`evít_assign
(&
pmix_˛õ¡_globÆs
.
my£rvî
.
ªcv_evít
,

211 
pmix_globÆs
.
evba£
,

212 
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
,

213 
EV_READ
 | 
EV_PERSIST
,

214 
pmix_usock_ªcv_h™dÀr
, &
pmix_˛õ¡_globÆs
.
my£rvî
);

215 
	`evít_add
(&
pmix_˛õ¡_globÆs
.
my£rvî
.
ªcv_evít
, 0);

216 
pmix_˛õ¡_globÆs
.
my£rvî
.
ªcv_ev_a˘ive
 = 
åue
;

219 
	`evít_assign
(&
pmix_˛õ¡_globÆs
.
my£rvî
.
£nd_evít
,

220 
pmix_globÆs
.
evba£
,

221 
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
,

222 
EV_WRITE
|
EV_PERSIST
,

223 
pmix_usock_£nd_h™dÀr
, &
pmix_˛õ¡_globÆs
.
my£rvî
);

224 
pmix_˛õ¡_globÆs
.
my£rvî
.
£nd_ev_a˘ive
 = 
Ál£
;

229 
ªq
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

230 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
pmix_b‰›
.
	`∑ck
(
ªq
, &
cmd
, 1, 
PMIX_CMD
))) {

231 
	`PMIX_ERROR_LOG
(
ªt
);

232 
	`PMIX_RELEASE
(
ªq
);

233  
ªt
;

235 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
ªq
, 
job_d©a
, 
cbd©a
);

237  
PMIX_SUCCESS
;

238 
	}
}

240 
PMIX_EXPORT
 c⁄° * 
	$PMIx_Gë_vîsi⁄
()

242  
pmix_vîsi⁄_°rög
;

243 
	}
}

245 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Inô
(
pmix_¥oc_t
 *
¥oc
,

246 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

248 **
uri
, *
ev¨
;

249 
rc
, 
debug_Àvñ
;

250 
sockaddr_un
 
addªss
;

251 
pmix_n•a˚_t
 *
n•å
;

252 
pmix_cb_t
 
cb
;

253 
size_t
 
n
;

255 i‡(
NULL
 =
¥oc
) {

256  
PMIX_ERR_BAD_PARAM
;

259 i‡(0 < 
pmix_globÆs
.
öô_˙å
) {

263 i‡(
NULL
 !
¥oc
) {

264 ()
	`°∫˝y
(
¥oc
->
n•a˚
, 
pmix_globÆs
.
myid
.n•a˚, 
PMIX_MAX_NSLEN
);

265 
¥oc
->
ønk
 = 
pmix_globÆs
.
myid
.rank;

267 ++
pmix_globÆs
.
öô_˙å
;

268  
PMIX_SUCCESS
;

271 i‡(
NULL
 =
	`gëív
("PMIX_NAMESPACE")) {

272  
PMIX_ERR_INVALID_NAMESPACE
;

276 i‡(
NULL
 !
öfo
) {

277 
n
=0;Ç < 
nöfo
;Ç++) {

278 i‡(0 =
	`°rcmp
(
PMIX_EVENT_BASE
, 
öfo
[
n
].
key
)) {

279 
pmix_globÆs
.
evba£
 = (
pmix_evít_ba£_t
*)
öfo
[
n
].
vÆue
.
d©a
.
±r
;

280 
pmix_globÆs
.
exã∫Æ_evba£
 = 
åue
;

285 
	`pmix_globÆs_öô
();

286 
	`PMIX_CONSTRUCT
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, 
pmix_li°_t
);

287 
	`PMIX_CONSTRUCT
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
pmix_≥î_t
);

289 
pmix_globÆs
.
£rvî
 = 
Ál£
;

291 
pmix_globÆs
.
uid
 = 
	`gëeuid
();

292 
pmix_globÆs
.
gid
 = 
	`gëegid
();

294 i‡(!
	`pmix_ouçut_öô
()) {

295  
PMIX_ERROR
;

299 i‡(
NULL
 !(
ev¨
 = 
	`gëív
("PMIX_DEBUG"))) {

300 
debug_Àvñ
 = 
	`°πﬁ
(
ev¨
, 
NULL
, 10);

301 
pmix_globÆs
.
debug_ouçut
 = 
	`pmix_ouçut_›í
(
NULL
);

302 
	`pmix_ouçut_£t_vîbosôy
(
pmix_globÆs
.
debug_ouçut
, 
debug_Àvñ
);

305 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

309 i‡(
NULL
 =(
ev¨
 = 
	`gëív
("PMIX_NAMESPACE"))) {

311 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

312 
	`pmix_ouçut_föÆize
();

313 
	`pmix_˛ass_föÆize
();

314  
PMIX_ERR_INVALID_NAMESPACE
;

316 i‡(
NULL
 !
¥oc
) {

317 ()
	`°∫˝y
(
¥oc
->
n•a˚
, 
ev¨
, 
PMIX_MAX_NSLEN
);

319 ()
	`°∫˝y
(
pmix_globÆs
.
myid
.
n•a˚
, 
ev¨
, 
PMIX_MAX_NSLEN
);

320 
n•å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

321 ()
	`°∫˝y
(
n•å
->
n•a˚
, 
ev¨
, 
PMIX_MAX_NSLEN
);

322 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
n•å
->
su≥r
);

326 i‡(
NULL
 =(
ev¨
 = 
	`gëív
("PMIX_SERVER_URI"))) {

328 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

329 
	`pmix_ouçut_föÆize
();

330 
	`pmix_˛ass_föÆize
();

331  
PMIX_ERR_SERVER_NOT_AVAIL
;

333 
uri
 = 
	`pmix_¨gv_•lô
(
ev¨
, ':');

334 i‡(3 !
	`pmix_¨gv_cou¡
(
uri
)) {

335 
	`pmix_¨gv_‰ì
(
uri
);

336 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

337 
	`pmix_ouçut_föÆize
();

338 
	`pmix_˛ass_föÆize
();

339  
PMIX_ERROR
;

343 
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
 = 
	`PMIX_NEW
(
pmix_ønk_öfo_t
);

344 
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

345 ()
	`°∫˝y
(
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
≈å
->
n•a˚
, 
uri
[0], 
PMIX_MAX_NSLEN
);

348 
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
ønk
 = 
	`°πouŒ
(
uri
[1], 
NULL
, 10);

351 
	`mem£t
(&
addªss
, 0, (
sockaddr_un
));

352 
addªss
.
sun_Ámûy
 = 
AF_UNIX
;

353 
	`¢¥ötf
(
addªss
.
sun_∑th
, ◊ddªss.sun_∑th)-1, "%s", 
uri
[2]);

355 i‡(0 !
	`ac˚ss
(
uri
[2], 
R_OK
)) {

356 
	`pmix_¨gv_‰ì
(
uri
);

357 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

358 
	`pmix_ouçut_föÆize
();

359 
	`pmix_˛ass_föÆize
();

360  
PMIX_ERR_NOT_FOUND
;

362 
	`pmix_¨gv_‰ì
(
uri
);

365 i‡(
NULL
 =(
ev¨
 = 
	`gëív
("PMIX_RANK"))) {

367 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

368 
	`pmix_ouçut_föÆize
();

369 
	`pmix_˛ass_föÆize
();

370  
PMIX_ERR_DATA_VALUE_NOT_FOUND
;

372 
pmix_globÆs
.
myid
.
ønk
 = 
	`°πﬁ
(
ev¨
, 
NULL
, 10);

373 i‡(
NULL
 !
¥oc
) {

374 
¥oc
->
ønk
 = 
pmix_globÆs
.
myid
.rank;

376 
pmix_globÆs
.
pödex
 = -1;

379 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

380 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_d°‹e_öô
(
NULL
, 0))) {

381 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

382 
	`pmix_ouçut_föÆize
();

383 
	`pmix_˛ass_föÆize
();

384  
PMIX_ERR_DATA_VALUE_NOT_FOUND
;

387 
	`pmix_b‰›_›í
();

388 
	`pmix_usock_öô
(
pmix_˛õ¡_nŸify_ªcv
);

389 
	`pmix_£c_öô
();

391 i‡(!
pmix_globÆs
.
exã∫Æ_evba£
) {

393 
	`pmix_evít_u£_thªads
();

396 i‡(
NULL
 =(
pmix_globÆs
.
evba£
 = 
	`pmix_¥ogªss_thªad_öô
(NULL))) {

397 
	`pmix_£c_föÆize
();

398 
	`pmix_usock_föÆize
();

399 
	`pmix_b‰›_˛o£
();

400 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

401 
	`pmix_ouçut_föÆize
();

402 
	`pmix_˛ass_föÆize
();

409 
	`PMIX_CONSTRUCT
(&
cb
, 
pmix_cb_t
);

410 
cb
.
a˘ive
 = 
åue
;

412 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`c⁄√˘_to_£rvî
(&
addªss
, &
cb
))){

413 
	`PMIX_DESTRUCT
(&
cb
);

414 
	`pmix_¥ogªss_thªad_föÆize
(
NULL
);

415 
	`pmix_£c_föÆize
();

416 
	`pmix_usock_föÆize
();

417 
	`pmix_b‰›_˛o£
();

418 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

419 
	`pmix_ouçut_föÆize
();

420 
	`pmix_˛ass_föÆize
();

421  
rc
;

423 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
.
a˘ive
);

424 
rc
 = 
cb
.
°©us
;

425 
	`PMIX_DESTRUCT
(&
cb
);

427 i‡(
PMIX_SUCCESS
 =
rc
) {

428 
pmix_globÆs
.
öô_˙å
++;

430  
rc
;

431 
	}
}

433 
PMIX_EXPORT
 
	$PMIx_Inôülized
()

435 i‡(0 < 
pmix_globÆs
.
öô_˙å
) {

436  
åue
;

438  
Ál£
;

439 
	}
}

441 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_FöÆize
(c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

443 
pmix_buf„r_t
 *
msg
;

444 
pmix_cb_t
 *
cb
;

445 
pmix_cmd_t
 
cmd
 = 
PMIX_FINALIZE_CMD
;

446 
pmix_°©us_t
 
rc
;

447 
size_t
 
n
;

449 i‡(1 !
pmix_globÆs
.
öô_˙å
) {

450 --
pmix_globÆs
.
öô_˙å
;

451  
PMIX_SUCCESS
;

453 
pmix_globÆs
.
öô_˙å
 = 0;

455 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

458 i‡–0 <
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
 ) {

461 i‡(
NULL
 !
öfo
 && 0 < 
nöfo
) {

462 
n
=0;Ç < 
nöfo
;Ç++) {

463 i‡(0 =
	`°rcmp
(
PMIX_EMBED_BARRIER
, 
öfo
[
n
].
key
)) {

465 i‡(
PMIX_BOOL
 =
öfo
[
n
].
vÆue
.
ty≥
) {

466 i‡(
öfo
[
n
].
vÆue
.
d©a
.
Êag
) {

468 
	`PMIx_Fí˚
(
NULL
, 0, NULL, 0);

473 
	`PMIx_Fí˚
(
NULL
, 0, NULL, 0);

482 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

484 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

485 
	`PMIX_ERROR_LOG
(
rc
);

486 
	`PMIX_RELEASE
(
msg
);

487  
rc
;

493 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

494 
cb
->
a˘ive
 = 
åue
;

496 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

500 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_cbfunc
, 
cb
);

503 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

504 
	`PMIX_RELEASE
(
cb
);

505 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

509 i‡(!
pmix_globÆs
.
exã∫Æ_evba£
) {

510 #ifde‡
HAVE_LIBEVENT_GLOBAL_SHUTDOWN


511 
	`libevít_globÆ_shutdown
();

513 
	`pmix_¥ogªss_thªad_föÆize
(
NULL
);

516 
	`pmix_usock_föÆize
();

517 
	`PMIX_DESTRUCT
(&
pmix_˛õ¡_globÆs
.
my£rvî
);

518 
	`PMIX_LIST_DESTRUCT
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
);

520 i‡(0 <
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
) {

521 
	`CLOSE_THE_SOCKET
(
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
);

524 
	`pmix_b‰›_˛o£
();

525 
	`pmix_£c_föÆize
();

526 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

527 
	`pmix_d°‹e_föÆize
();

530 
	`pmix_globÆs_föÆize
();

532 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

533 
	`pmix_ouçut_föÆize
();

534 
	`pmix_˛ass_föÆize
();

536  
PMIX_SUCCESS
;

537 
	}
}

539 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Ab‹t
(
Êag
, c⁄° 
msg
[],

540 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
)

542 
pmix_buf„r_t
 *
b‰
;

543 
pmix_cmd_t
 
cmd
 = 
PMIX_ABORT_CMD
;

544 
pmix_°©us_t
 
rc
;

545 
pmix_cb_t
 *
cb
;

547 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

550 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

551  
PMIX_ERR_INIT
;

555 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

556  
PMIX_ERR_UNREACH
;

560 
b‰
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

562 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
b‰
, &
cmd
, 1, 
PMIX_CMD
))) {

563 
	`PMIX_ERROR_LOG
(
rc
);

564 
	`PMIX_RELEASE
(
b‰
);

565  
rc
;

568 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
b‰
, &
Êag
, 1, 
PMIX_STATUS
))) {

569 
	`PMIX_ERROR_LOG
(
rc
);

570 
	`PMIX_RELEASE
(
b‰
);

571  
rc
;

574 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
b‰
, &
msg
, 1, 
PMIX_STRING
))) {

575 
	`PMIX_ERROR_LOG
(
rc
);

576 
	`PMIX_RELEASE
(
b‰
);

577  
rc
;

580 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
b‰
, &
≈rocs
, 1, 
PMIX_SIZE
))) {

581 
	`PMIX_ERROR_LOG
(
rc
);

582 
	`PMIX_RELEASE
(
b‰
);

583  
rc
;

586 i‡(0 < 
≈rocs
) {

587 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
b‰
, 
¥ocs
, 1, 
PMIX_PROC
))) {

588 
	`PMIX_ERROR_LOG
(
rc
);

589 
	`PMIX_RELEASE
(
b‰
);

590  
rc
;

597 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

598 
cb
->
a˘ive
 = 
åue
;

601 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
b‰
, 
waô_cbfunc
, 
cb
);

604 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

605 
	`PMIX_RELEASE
(
cb
);

606  
PMIX_SUCCESS
;

607 
	}
}

609 
	$_put‚
(
sd
, 
¨gs
, *
cbd©a
)

611 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

612 
pmix_°©us_t
 
rc
;

613 
pmix_kvÆ_t
 *
kv
;

614 
pmix_n•a˚_t
 *
ns
;

617 
kv
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

618 
kv
->
key
 = 
	`°rdup
(
cb
->key);

619 
kv
->
vÆue
 = (
pmix_vÆue_t
*)
	`mÆloc
((pmix_value_t));

620 
rc
 = 
	`pmix_vÆue_x„r
(
kv
->
vÆue
, 
cb
->value);

621 i‡(
PMIX_SUCCESS
 !
rc
) {

622 
	`PMIX_ERROR_LOG
(
rc
);

623 
d⁄e
;

628 i‡(
NULL
 =(
ns
 = (
pmix_n•a˚_t
*)
	`pmix_li°_gë_fú°
(&
pmix_globÆs
.
n•a˚s
))) {

630 
d⁄e
;

632 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

643 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
ns
->
modex
, 
pmix_globÆs
.
myid
.
ønk
, 
kv
))) {

644 
	`PMIX_ERROR_LOG
(
rc
);

650 i‡(
PMIX_LOCAL
 =
cb
->
sc›e
 || 
PMIX_GLOBAL
 == cb->scope) {

651 i‡(
NULL
 =
pmix_globÆs
.
ˇche_loˇl
) {

652 
pmix_globÆs
.
ˇche_loˇl
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

654 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

656 
cb
->
key
, (
PMIX_GLOBAL
 =cb->
sc›e
) ? "global" : "local");

657 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
pmix_globÆs
.
ˇche_loˇl
, 
kv
, 1, 
PMIX_KVAL
))) {

658 
	`PMIX_ERROR_LOG
(
rc
);

662 i‡(
PMIX_REMOTE
 =
cb
->
sc›e
 || 
PMIX_GLOBAL
 == cb->scope) {

663 i‡(
NULL
 =
pmix_globÆs
.
ˇche_ªmŸe
) {

664 
pmix_globÆs
.
ˇche_ªmŸe
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

666 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

668 
cb
->
key
, (
PMIX_GLOBAL
 =cb->
sc›e
) ? "global" : "remote");

669 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
pmix_globÆs
.
ˇche_ªmŸe
, 
kv
, 1, 
PMIX_KVAL
))) {

670 
	`PMIX_ERROR_LOG
(
rc
);

674 
d⁄e
:

675 
	`PMIX_RELEASE
(
kv
);

676 
cb
->
p°©us
 = 
rc
;

677 
cb
->
a˘ive
 = 
Ál£
;

678 
	}
}

680 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Put
(
pmix_sc›e_t
 
sc›e
, c⁄° 
key
[], 
pmix_vÆue_t
 *
vÆ
)

682 
pmix_cb_t
 *
cb
;

683 
pmix_°©us_t
 
rc
;

685 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

687 
key
, 
vÆ
->
ty≥
);

689 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

690  
PMIX_ERR_INIT
;

694 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

695 
cb
->
a˘ive
 = 
åue
;

696 
cb
->
sc›e
 = scope;

697 
cb
->
key
 = (*)key;

698 
cb
->
vÆue
 = 
vÆ
;

701 
	`PMIX_THREADSHIFT
(
cb
, 
_put‚
);

704 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

705 
rc
 = 
cb
->
p°©us
;

706 
	`PMIX_RELEASE
(
cb
);

708  
rc
;

709 
	}
}

711 
	$_commô‚
(
sd
, 
¨gs
, *
cbd©a
)

713 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

714 
pmix_°©us_t
 
rc
;

715 
pmix_sc›e_t
 
sc›e
;

716 
pmix_buf„r_t
 *
msgout
;

717 
pmix_cmd_t
 
cmd
=
PMIX_COMMIT_CMD
;

719 
msgout
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

721 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msgout
, &
cmd
, 1, 
PMIX_CMD
))) {

722 
	`PMIX_ERROR_LOG
(
rc
);

723 
	`PMIX_RELEASE
(
msgout
);

724 
d⁄e
;

728 i‡(
NULL
 !
pmix_globÆs
.
ˇche_loˇl
) {

729 
sc›e
 = 
PMIX_LOCAL
;

730 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msgout
, &
sc›e
, 1, 
PMIX_SCOPE
))) {

731 
	`PMIX_ERROR_LOG
(
rc
);

732 
	`PMIX_RELEASE
(
msgout
);

733 
d⁄e
;

735 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msgout
, &
pmix_globÆs
.
ˇche_loˇl
, 1, 
PMIX_BUFFER
))) {

736 
	`PMIX_ERROR_LOG
(
rc
);

737 
	`PMIX_RELEASE
(
msgout
);

738 
d⁄e
;

740 
	`PMIX_RELEASE
(
pmix_globÆs
.
ˇche_loˇl
);

742 i‡(
NULL
 !
pmix_globÆs
.
ˇche_ªmŸe
) {

743 
sc›e
 = 
PMIX_REMOTE
;

744 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msgout
, &
sc›e
, 1, 
PMIX_SCOPE
))) {

745 
	`PMIX_ERROR_LOG
(
rc
);

746 
	`PMIX_RELEASE
(
msgout
);

747 
d⁄e
;

749 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msgout
, &
pmix_globÆs
.
ˇche_ªmŸe
, 1, 
PMIX_BUFFER
))) {

750 
	`PMIX_ERROR_LOG
(
rc
);

751 
	`PMIX_RELEASE
(
msgout
);

752 
d⁄e
;

754 
	`PMIX_RELEASE
(
pmix_globÆs
.
ˇche_ªmŸe
);

760 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msgout
, 
NULL
, NULL);

762 
d⁄e
:

763 
cb
->
p°©us
 = 
rc
;

764 
cb
->
a˘ive
 = 
Ál£
;

765 
	}
}

767 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Commô
()

769 
pmix_cb_t
 *
cb
;

770 
pmix_°©us_t
 
rc
;

772 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

773  
PMIX_ERR_INIT
;

777 i‡(
pmix_globÆs
.
£rvî
) {

778  
PMIX_SUCCESS
;

780 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

781  
PMIX_ERR_UNREACH
;

785 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

786 
cb
->
a˘ive
 = 
åue
;

789 
	`PMIX_THREADSHIFT
(
cb
, 
_commô‚
);

792 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

793 
rc
 = 
cb
->
p°©us
;

794 
	`PMIX_RELEASE
(
cb
);

796  
rc
;

797 
	}
}

799 
	$_≥îs‚
(
sd
, 
¨gs
, *
cbd©a
)

801 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

802 
pmix_°©us_t
 
rc
;

803 **
n•rocs
=
NULL
, **
n•s
=NULL, **
tmp
;

804 
pmix_n•a˚_t
 *
n•å
;

805 
pmix_ƒec_t
 *
≈å
;

806 
size_t
 
i
;

809 
tmp
 = 
NULL
;

810 
	`PMIX_LIST_FOREACH
(
n•å
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

811 i‡(0 =
	`°∫cmp
(
n•å
->
n•a˚
, 
cb
->n•a˚, 
PMIX_MAX_NSLEN
)) {

813 
	`PMIX_LIST_FOREACH
(
≈å
, &
n•å
->
nodes
, 
pmix_ƒec_t
) {

814 i‡(0 =
	`°rcmp
(
cb
->
key
, 
≈å
->
«me
)) {

816 
tmp
 = 
	`pmix_¨gv_•lô
(
≈å
->
¥ocs
, ',');

817 
i
=0; 
NULL
 !
tmp
[i]; i++) {

818 
	`pmix_¨gv_≠≥nd_nosize
(&
n•s
, 
n•å
->
n•a˚
);

819 
	`pmix_¨gv_≠≥nd_nosize
(&
n•rocs
, 
tmp
[
i
]);

821 
	`pmix_¨gv_‰ì
(
tmp
);

822 
tmp
 = 
NULL
;

827 i‡(0 =(
i
 = 
	`pmix_¨gv_cou¡
(
n•s
))) {

829 
rc
 = 
PMIX_ERR_NOT_FOUND
;

830 
d⁄e
;

834 
	`PMIX_PROC_CREATE
(
cb
->
¥ocs
, 
i
);

835 
cb
->
nvÆs
 = 
	`pmix_¨gv_cou¡
(
n•s
);

838 
i
=0; 
NULL
 !
n•s
[i]; i++) {

839 ()
	`°∫˝y
(
cb
->
¥ocs
[
i
].
n•a˚
, 
n•s
[i], 
PMIX_MAX_NSLEN
);

840 
cb
->
¥ocs
[
i
].
ønk
 = 
	`°πﬁ
(
n•rocs
[i], 
NULL
, 10);

842 
	`pmix_¨gv_‰ì
(
n•s
);

843 
	`pmix_¨gv_‰ì
(
n•rocs
);

844 
rc
 = 
PMIX_SUCCESS
;

846 
d⁄e
:

847 
cb
->
p°©us
 = 
rc
;

848 
cb
->
a˘ive
 = 
Ál£
;

849 
	}
}

851 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Resﬁve_≥îs
(c⁄° *
nodíame
,

852 c⁄° *
n•a˚
,

853 
pmix_¥oc_t
 **
¥ocs
, 
size_t
 *
≈rocs
)

855 
pmix_cb_t
 *
cb
;

856 
pmix_°©us_t
 
rc
;

858 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

859  
PMIX_ERR_INIT
;

863 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

864 
cb
->
a˘ive
 = 
åue
;

865 
cb
->
key
 = (*)
nodíame
;

866 i‡(
NULL
 !
n•a˚
) {

867 ()
	`°∫˝y
(
cb
->
n•a˚
,Ç•a˚, 
PMIX_MAX_NSLEN
);

871 
	`PMIX_THREADSHIFT
(
cb
, 
_≥îs‚
);

874 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

875 
rc
 = 
cb
->
p°©us
;

877 *
¥ocs
 = 
cb
->procs;

878 *
≈rocs
 = 
cb
->
nvÆs
;

881 
	`PMIX_RELEASE
(
cb
);

883  
rc
;

884 
	}
}

886 
	$_nodes‚
(
sd
, 
¨gs
, *
cbd©a
)

888 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

889 
pmix_°©us_t
 
rc
;

890 **
tmp
;

891 
pmix_n•a˚_t
 *
n•å
;

892 
pmix_ƒec_t
 *
≈å
;

895 
tmp
 = 
NULL
;

896 
	`PMIX_LIST_FOREACH
(
n•å
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

897 i‡(0 =
	`°∫cmp
(
n•å
->
n•a˚
, 
cb
->n•a˚, 
PMIX_MAX_NSLEN
)) {

899 
	`PMIX_LIST_FOREACH
(
≈å
, &
n•å
->
nodes
, 
pmix_ƒec_t
) {

900 
	`pmix_¨gv_≠≥nd_unique_nosize
(&
tmp
, 
≈å
->
«me
, 
Ál£
);

904 i‡(
NULL
 =
tmp
) {

905 
rc
 = 
PMIX_ERR_NOT_FOUND
;

907 
cb
->
key
 = 
	`pmix_¨gv_joö
(
tmp
, ',');

908 
	`pmix_¨gv_‰ì
(
tmp
);

909 
rc
 = 
PMIX_SUCCESS
;

912 
cb
->
p°©us
 = 
rc
;

913 
cb
->
a˘ive
 = 
Ál£
;

914 
	}
}

916 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Resﬁve_nodes
(c⁄° *
n•a˚
, **
nodñi°
)

918 
pmix_cb_t
 *
cb
;

919 
pmix_°©us_t
 
rc
;

921 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

922  
PMIX_ERR_INIT
;

926 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

927 
cb
->
a˘ive
 = 
åue
;

928 i‡(
NULL
 !
n•a˚
) {

929 ()
	`°∫˝y
(
cb
->
n•a˚
,Ç•a˚, 
PMIX_MAX_NSLEN
);

933 
	`PMIX_THREADSHIFT
(
cb
, 
_nodes‚
);

936 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

937 
rc
 = 
cb
->
p°©us
;

938 *
nodñi°
 = 
cb
->
key
;

939 
	`PMIX_RELEASE
(
cb
);

941  
rc
;

942 
	}
}

945 
pmix_°©us_t
 
	$£nd_c⁄√˘_ack
(
sd
)

947 *
msg
;

948 
pmix_usock_hdr_t
 
hdr
;

949 
size_t
 
sdsize
=0, 
csize
=0;

950 *
¸ed
 = 
NULL
;

952 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

956 
	`mem£t
(&
hdr
, 0, (
pmix_usock_hdr_t
));

957 
hdr
.
pödex
 = -1;

958 
hdr
.
èg
 = 
UINT32_MAX
;

961 
sdsize
 = 
	`°æí
(
pmix_globÆs
.
myid
.
n•a˚
) + 1 + ();

965 i‡(
NULL
 !
pmix_£c
.
¸óã_¸ed
) {

966 i‡(
NULL
 =(
¸ed
 = 
pmix_£c
.
	`¸óã_¸ed
())) {

968  
PMIX_ERR_INVALID_CRED
;

970 
csize
 = 
	`°æí
(
¸ed
) + 1;

973 
hdr
.
nbyãs
 = 
sdsize
 + 
	`°æí
(
PMIX_VERSION
Ë+ 1 + 
csize
;

976 
sdsize
 = ((
hdr
Ë+ hdr.
nbyãs
);

977 i‡(
NULL
 =(
msg
 = (*)
	`mÆloc
(
sdsize
))) {

978 i‡(
NULL
 !
¸ed
) {

979 
	`‰ì
(
¸ed
);

981  
PMIX_ERR_OUT_OF_RESOURCE
;

983 
	`mem£t
(
msg
, 0, 
sdsize
);

986 
csize
=0;

987 
	`mem˝y
(
msg
, &
hdr
, (
pmix_usock_hdr_t
));

988 
csize
 +(
pmix_usock_hdr_t
);

989 
	`mem˝y
(
msg
+
csize
, 
pmix_globÆs
.
myid
.
n•a˚
, 
	`°æí
(pmix_globals.myid.nspace));

990 
csize
 +
	`°æí
(
pmix_globÆs
.
myid
.
n•a˚
)+1;

991 
	`mem˝y
(
msg
+
csize
, &
pmix_globÆs
.
myid
.
ønk
, ());

992 
csize
 += ();

993 
	`mem˝y
(
msg
+
csize
, 
PMIX_VERSION
, 
	`°æí
(PMIX_VERSION));

994 
csize
 +
	`°æí
(
PMIX_VERSION
)+1;

995 i‡(
NULL
 !
¸ed
) {

996 
	`mem˝y
(
msg
+
csize
, 
¸ed
, 
	`°æí
(cred));

999 i‡(
PMIX_SUCCESS
 !
	`pmix_usock_£nd_blockög
(
sd
, 
msg
, 
sdsize
)) {

1000 
	`‰ì
(
msg
);

1001 i‡(
NULL
 !
¸ed
) {

1002 
	`‰ì
(
¸ed
);

1004  
PMIX_ERR_UNREACH
;

1006 
	`‰ì
(
msg
);

1007 i‡(
NULL
 !
¸ed
) {

1008 
	`‰ì
(
¸ed
);

1010  
PMIX_SUCCESS
;

1011 
	}
}

1016 
pmix_°©us_t
 
	$ªcv_c⁄√˘_ack
(
sd
)

1018 
pmix_°©us_t
 
ª∂y
;

1019 
pmix_°©us_t
 
rc
;

1020 
timevÆ
 
tv
, 
ßve
;

1021 
pmix_sockÀn_t
 
sz
;

1022 
boﬁ
 
sock›t
 = 
åue
;

1023 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1027 
sz
 = (
ßve
);

1028 i‡(0 !
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, (*)&
ßve
, &
sz
)) {

1029 i‡(
ENOPROTOOPT
 =
î∫o
) {

1030 
sock›t
 = 
Ál£
;

1032  
PMIX_ERR_UNREACH
;

1036 
tv
.
tv_£c
 = 2;

1037 
tv
.
tv_u£c
 = 0;

1038 i‡(0 !
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, &
tv
, (tv))) {

1039 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1041  
PMIX_ERR_UNREACH
;

1046 
rc
 = 
	`pmix_usock_ªcv_blockög
(
sd
, (*)&
ª∂y
, ());

1047 i‡(
PMIX_SUCCESS
 !
rc
) {

1048 
	`PMIX_ERROR_LOG
(
rc
);

1049  
rc
;

1053 i‡(
PMIX_ERR_READY_FOR_HANDSHAKE
 =
ª∂y
) {

1054 i‡(
NULL
 =
pmix_£c
.
˛õ¡_h™dshake
) {

1055  
PMIX_ERR_HANDSHAKE_FAILED
;

1057 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_£c
.
	`˛õ¡_h™dshake
(
sd
))) {

1058  
rc
;

1060 } i‡(
PMIX_SUCCESS
 !
ª∂y
) {

1061  
ª∂y
;

1064 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1068 
rc
 = 
	`pmix_usock_ªcv_blockög
(
sd
, (*)&
pmix_globÆs
.
pödex
, ());

1069 i‡(
PMIX_SUCCESS
 !
rc
) {

1070 
	`PMIX_ERROR_LOG
(
rc
);

1071  
rc
;

1073 i‡(
sock›t
) {

1075 i‡(0 !
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, &
ßve
, 
sz
)) {

1076  
PMIX_ERR_UNREACH
;

1080  
PMIX_SUCCESS
;

1081 
	}
}

1083 
	$pmix_˛õ¡_¥o˚ss_n•a˚_blob
(c⁄° *
n•a˚
, 
pmix_buf„r_t
 *
b±r
)

1085 
pmix_°©us_t
 
rc
;

1086 
öt32_t
 
˙t
;

1087 
ønk
;

1088 
pmix_kvÆ_t
 *
k±r
, *
kp2
, 
kv
;

1089 
pmix_buf„r_t
 
buf2
;

1090 
pmix_byã_obje˘_t
 *
bo
;

1091 
size_t
 
¬odes
, 
i
, 
j
;

1092 
pmix_n•a˚_t
 *
n•å
, *
n•å2
;

1093 
pmix_ƒec_t
 *
ƒec
, *
ƒ2
;

1094 **
¥ocs
;

1096 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1097 "pmix: PROCESSING BLOB FOR NSPACE %s", 
n•a˚
);

1100 
n•å
 = 
NULL
;

1101 
	`PMIX_LIST_FOREACH
(
n•å2
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

1102 i‡(0 =
	`°rcmp
(
n•å2
->
n•a˚
,Çspace)) {

1103 
n•å
 = 
n•å2
;

1107 i‡(
NULL
 =
n•å
) {

1109 
n•å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

1110 ()
	`°∫˝y
(
n•å
->
n•a˚
,Ç•a˚, 
PMIX_MAX_NSLEN
);

1111 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
n•å
->
su≥r
);

1115 
˙t
 = 1;

1116 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1117 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, 
k±r
, &
˙t
, 
PMIX_KVAL
))) {

1118 i‡(0 =
	`°rcmp
(
k±r
->
key
, 
PMIX_PROC_BLOB
)) {

1120 
bo
 = &(
k±r
->
vÆue
->
d©a
.bo);

1121 
	`PMIX_CONSTRUCT
(&
buf2
, 
pmix_buf„r_t
);

1122 
	`PMIX_LOAD_BUFFER
(&
buf2
, 
bo
->
byãs
, bo->
size
);

1123 
	`PMIX_RELEASE
(
k±r
);

1125 
˙t
 = 1;

1126 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(&
buf2
, &
ønk
, &
˙t
, 
PMIX_PROC_RANK
))) {

1127 
	`PMIX_ERROR_LOG
(
rc
);

1128 
	`PMIX_DESTRUCT
(&
buf2
);

1131 
kp2
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1132 
kp2
->
key
 = 
	`°rdup
(
PMIX_RANK
);

1133 
	`PMIX_VALUE_CREATE
(
kp2
->
vÆue
, 1);

1134 
kp2
->
vÆue
->
ty≥
 = 
PMIX_PROC_RANK
;

1135 
kp2
->
vÆue
->
d©a
.
ønk
 =Ñank;

1136 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
ønk
, 
kp2
))) {

1137 
	`PMIX_ERROR_LOG
(
rc
);

1139 
	`PMIX_RELEASE
(
kp2
);

1140 
˙t
 = 1;

1141 
kp2
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1142 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(&
buf2
, 
kp2
, &
˙t
, 
PMIX_KVAL
))) {

1145 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
ønk
, 
kp2
))) {

1146 
	`PMIX_ERROR_LOG
(
rc
);

1148 
	`PMIX_RELEASE
(
kp2
);

1149 
kp2
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1152 
	`PMIX_DESTRUCT
(&
buf2
);

1153 
	`PMIX_RELEASE
(
kp2
);

1154 } i‡(0 =
	`°rcmp
(
k±r
->
key
, 
PMIX_MAP_BLOB
)) {

1156 
bo
 = &(
k±r
->
vÆue
->
d©a
.bo);

1157 
	`PMIX_CONSTRUCT
(&
buf2
, 
pmix_buf„r_t
);

1158 
	`PMIX_LOAD_BUFFER
(&
buf2
, 
bo
->
byãs
, bo->
size
);

1159 
	`PMIX_RELEASE
(
k±r
);

1161 
˙t
 = 1;

1162 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(&
buf2
, &
¬odes
, &
˙t
, 
PMIX_SIZE
))) {

1163 
	`PMIX_ERROR_LOG
(
rc
);

1164 
	`PMIX_DESTRUCT
(&
buf2
);

1168 
i
=0; i < 
¬odes
; i++) {

1169 
˙t
 = 1;

1170 
	`PMIX_CONSTRUCT
(&
kv
, 
pmix_kvÆ_t
);

1171 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(&
buf2
, &
kv
, &
˙t
, 
PMIX_KVAL
))) {

1172 
	`PMIX_ERROR_LOG
(
rc
);

1173 
	`PMIX_DESTRUCT
(&
buf2
);

1174 
	`PMIX_DESTRUCT
(&
kv
);

1180 
ƒec
 = 
NULL
;

1181 
	`PMIX_LIST_FOREACH
(
ƒ2
, &
n•å
->
nodes
, 
pmix_ƒec_t
) {

1182 i‡(0 =
	`°rcmp
(
ƒ2
->
«me
, 
kv
.
key
)) {

1183 
ƒec
 = 
ƒ2
;

1187 i‡(
NULL
 =
ƒec
) {

1189 
ƒec
 = 
	`PMIX_NEW
(
pmix_ƒec_t
);

1190 
ƒec
->
«me
 = 
	`°rdup
(
kv
.
key
);

1191 
	`pmix_li°_≠≥nd
(&
n•å
->
nodes
, &
ƒec
->
su≥r
);

1194 i‡(
NULL
 !
ƒec
->
¥ocs
) {

1195 
	`‰ì
(
ƒec
->
¥ocs
);

1198 
ƒec
->
¥ocs
 = 
	`°rdup
(
kv
.
vÆue
->
d©a
.
°rög
);

1201 
¥ocs
 = 
	`pmix_¨gv_•lô
(
ƒec
->procs, ',');

1202 
j
=0; 
NULL
 !
¥ocs
[j]; j++) {

1206 
kp2
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1207 
kp2
->
key
 = 
	`°rdup
(
PMIX_HOSTNAME
);

1208 
kp2
->
vÆue
 = (
pmix_vÆue_t
*)
	`mÆloc
((pmix_value_t));

1209 
kp2
->
vÆue
->
ty≥
 = 
PMIX_STRING
;

1210 
kp2
->
vÆue
->
d©a
.
°rög
 = 
	`°rdup
(
ƒec
->
«me
);

1211 
ønk
 = 
	`°πﬁ
(
¥ocs
[
j
], 
NULL
, 10);

1212 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
ønk
, 
kp2
))) {

1213 
	`PMIX_ERROR_LOG
(
rc
);

1215 
	`PMIX_RELEASE
(
kp2
);

1217 
	`pmix_¨gv_‰ì
(
¥ocs
);

1218 
	`PMIX_DESTRUCT
(&
kv
);

1221 
	`PMIX_DESTRUCT
(&
buf2
);

1225 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
PMIX_RANK_WILDCARD
, 
k±r
))) {

1226 
	`PMIX_ERROR_LOG
(
rc
);

1231 
	`PMIX_RELEASE
(
k±r
);

1233 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1234 
˙t
 = 1;

1237 
	`PMIX_RELEASE
(
k±r
);

1238 
	}
}

1240 
pmix_°©us_t
 
	$usock_c⁄√˘
(
sockaddr
 *
addr
, *
fd
)

1242 
sd
=-1;

1243 
pmix_°©us_t
 
rc
;

1244 
pmix_sockÀn_t
 
addæí
 = 0;

1245 
ªåõs
 = 0;

1247 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1250 
addæí
 = (
sockaddr_un
);

1251 
ªåõs
 < 
PMIX_MAX_RETRIES
) {

1252 
ªåõs
++;

1254 
sd
 = 
	`sockë
(
PF_UNIX
, 
SOCK_STREAM
, 0);

1255 i‡(
sd
 < 0) {

1256 
	`pmix_ouçut
(0, "pmix:create_socket: socket() failed: %s (%d)\n",

1257 
	`°ªº‹
(
pmix_sockë_î∫o
),

1258 
pmix_sockë_î∫o
);

1261 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1262 "usock_≥î_åy_c⁄√˘:áâem±ögÅÿc⁄√˘Åÿ£rvî o¿sockë %d", 
sd
);

1264 i‡(
	`c⁄√˘
(
sd
, 
addr
, 
addæí
) < 0) {

1265 i‡(
pmix_sockë_î∫o
 =
ETIMEDOUT
) {

1267 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1269 
	`CLOSE_THE_SOCKET
(
sd
);

1278 i‡(
ECONNABORTED
 =
pmix_sockë_î∫o
) {

1279 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1281 
	`CLOSE_THE_SOCKET
(
sd
);

1284 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1285 "C⁄√˘ faûed: %†(%d)", 
	`°ªº‹
(
pmix_sockë_î∫o
),

1286 
pmix_sockë_î∫o
);

1287 
	`CLOSE_THE_SOCKET
(
sd
);

1296 i‡(
ªåõs
 =
PMIX_MAX_RETRIES
 || 
sd
 < 0){

1299 i‡(0 <
sd
) {

1300 
	`CLOSE_THE_SOCKET
(
sd
);

1302  
PMIX_ERR_UNREACH
;

1306 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`£nd_c⁄√˘_ack
(
sd
))) {

1307 
	`CLOSE_THE_SOCKET
(
sd
);

1308  
rc
;

1312 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`ªcv_c⁄√˘_ack
(
sd
))) {

1313 
	`CLOSE_THE_SOCKET
(
sd
);

1314  
rc
;

1317 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1321 
pmix_globÆs
.
c⁄√˘ed
 = 
åue
;

1323 
	`pmix_usock_£t_n⁄blockög
(
sd
);

1325 *
fd
 = 
sd
;

1326  
PMIX_SUCCESS
;

1327 
	}
}

	@client/pmix_client_connect.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

23 
	~<pmix.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ö˛udê
PMIX_EVENT_HEADER


48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/ouçut.h
"

53 
	~"§c/usock/usock.h
"

54 
	~"§c/£c/pmix_£c.h
"

56 
	~"pmix_˛õ¡_›s.h
"

59 
waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

60 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

61 
›_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
);

63 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_C⁄√˘
(c⁄° 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
,

64 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

66 
pmix_°©us_t
 
rc
;

67 
pmix_cb_t
 *
cb
;

69 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

72 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

73  
PMIX_ERR_INIT
;

77 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

78  
PMIX_ERR_UNREACH
;

84 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

85 
cb
->
a˘ive
 = 
åue
;

88 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_C⁄√˘_nb
(
¥ocs
, 
≈rocs
, 
öfo
, 
nöfo
, 
›_cbfunc
, 
cb
))) {

89 
	`PMIX_RELEASE
(
cb
);

90  
rc
;

94 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

95 
rc
 = 
cb
->
°©us
;

96 
	`PMIX_RELEASE
(
cb
);

98 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

101  
rc
;

102 
	}
}

104 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_C⁄√˘_nb
(c⁄° 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
,

105 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

106 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

108 
pmix_buf„r_t
 *
msg
;

109 
pmix_cmd_t
 
cmd
 = 
PMIX_CONNECTNB_CMD
;

110 
pmix_°©us_t
 
rc
;

111 
pmix_cb_t
 *
cb
;

113 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

116 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

117  
PMIX_ERR_INIT
;

121 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

122  
PMIX_ERR_UNREACH
;

126 i‡(
NULL
 =
¥ocs
 || 0 >
≈rocs
) {

127  
PMIX_ERR_BAD_PARAM
;

130 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

132 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

133 
	`PMIX_ERROR_LOG
(
rc
);

134  
rc
;

138 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
≈rocs
, 1, 
PMIX_SIZE
))) {

139 
	`PMIX_ERROR_LOG
(
rc
);

140  
rc
;

142 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
¥ocs
, 
≈rocs
, 
PMIX_PROC
))) {

143 
	`PMIX_ERROR_LOG
(
rc
);

144  
rc
;

148 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

149 
	`PMIX_ERROR_LOG
(
rc
);

150 
	`PMIX_RELEASE
(
msg
);

151  
rc
;

153 i‡(0 < 
nöfo
) {

154 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

155 
	`PMIX_ERROR_LOG
(
rc
);

156 
	`PMIX_RELEASE
(
msg
);

157  
rc
;

164 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

165 
cb
->
›_cbfunc
 = 
cbfunc
;

166 
cb
->
cbd©a
 = cbdata;

169 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_cbfunc
, 
cb
);

171  
PMIX_SUCCESS
;

172 
	}
}

174 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Disc⁄√˘
(c⁄° 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
,

175 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

177 
pmix_°©us_t
 
rc
;

178 
pmix_cb_t
 *
cb
;

180 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

181  
PMIX_ERR_INIT
;

185 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

186  
PMIX_ERR_UNREACH
;

192 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

193 
cb
->
a˘ive
 = 
åue
;

195 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Disc⁄√˘_nb
(
¥ocs
, 
≈rocs
, 
öfo
, 
nöfo
, 
›_cbfunc
, 
cb
))) {

196 
	`PMIX_RELEASE
(
cb
);

197  
rc
;

201 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

202 
rc
 = 
cb
->
°©us
;

203 
	`PMIX_RELEASE
(
cb
);

205 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

208  
rc
;

209 
	}
}

211 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Disc⁄√˘_nb
(c⁄° 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
,

212 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

213 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

215 
pmix_buf„r_t
 *
msg
;

216 
pmix_cmd_t
 
cmd
 = 
PMIX_DISCONNECTNB_CMD
;

217 
pmix_°©us_t
 
rc
;

218 
pmix_cb_t
 *
cb
;

220 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

223 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

224  
PMIX_ERR_INIT
;

228 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

229  
PMIX_ERR_UNREACH
;

233 i‡(
NULL
 =
¥ocs
 || 0 >
≈rocs
) {

234  
PMIX_ERR_BAD_PARAM
;

237 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

239 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

240 
	`PMIX_ERROR_LOG
(
rc
);

241  
rc
;

245 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
≈rocs
, 1, 
PMIX_SIZE
))) {

246 
	`PMIX_ERROR_LOG
(
rc
);

247  
rc
;

249 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
¥ocs
, 
≈rocs
, 
PMIX_PROC
))) {

250 
	`PMIX_ERROR_LOG
(
rc
);

251  
rc
;

255 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

256 
	`PMIX_ERROR_LOG
(
rc
);

257 
	`PMIX_RELEASE
(
msg
);

258  
rc
;

260 i‡(0 < 
nöfo
) {

261 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

262 
	`PMIX_ERROR_LOG
(
rc
);

263 
	`PMIX_RELEASE
(
msg
);

264  
rc
;

271 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

272 
cb
->
›_cbfunc
 = 
cbfunc
;

273 
cb
->
cbd©a
 = cbdata;

276 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_cbfunc
, 
cb
);

278 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

281  
PMIX_SUCCESS
;

282 
	}
}

284 
	$waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

285 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

287 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

288 
pmix_°©us_t
 
rc
;

289 
pmix_°©us_t
 
ªt
;

290 
öt32_t
 
˙t
;

291 *
n•a˚
;

292 
pmix_buf„r_t
 *
b±r
;

294 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

296 (
NULL
 =
buf
Ë? -1 : ()buf->
byãs_u£d
);

299 
˙t
 = 1;

300 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) {

301 
	`PMIX_ERROR_LOG
(
rc
);

302 
ªt
 = 
rc
;

306 
˙t
 = 1;

307 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
b±r
, &
˙t
, 
PMIX_BUFFER
))) {

309 
˙t
 = 1;

310 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, &
n•a˚
, &
˙t
, 
PMIX_STRING
))) {

311 
	`PMIX_ERROR_LOG
(
rc
);

312 
	`PMIX_RELEASE
(
b±r
);

316 
	`pmix_˛õ¡_¥o˚ss_n•a˚_blob
(
n•a˚
, 
b±r
);

317 
	`PMIX_RELEASE
(
b±r
);

319 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
) {

320 
	`PMIX_ERROR_LOG
(
rc
);

321 
ªt
 = 
rc
;

324 i‡(
NULL
 !
cb
->
›_cbfunc
) {

325 
cb
->
	`›_cbfunc
(
ªt
, cb->
cbd©a
);

327 
	}
}

329 
	$›_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

331 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

333 
cb
->
°©us
 = status;

334 
cb
->
a˘ive
 = 
Ál£
;

335 
	}
}

	@client/pmix_client_fence.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

23 
	~<pmix.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ö˛udê
PMIX_EVENT_HEADER


48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/hash.h
"

53 
	~"§c/utû/ouçut.h
"

54 
	~"§c/usock/usock.h
"

55 
	~"§c/£c/pmix_£c.h
"

57 
	~"pmix_˛õ¡_›s.h
"

59 
pmix_°©us_t
 
u≈ack_ªtu∫
(
pmix_buf„r_t
 *
d©a
);

60 
pmix_°©us_t
 
∑ck_„n˚
(
pmix_buf„r_t
 *
msg
, 
pmix_cmd_t
 
cmd
,

61 c⁄° 
pmix_¥oc_t
 *
¥ocs
, 
size_t
 
≈rocs
,

62 c⁄° 
pmix_öfo_t
 *
öfo
, 
size_t
 
nöfo
);

63 
waô_cbfunc
(
pmix_≥î_t
 *
¥
,

64 
pmix_usock_hdr_t
 *
hdr
,

65 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

66 
›_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
);

68 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Fí˚
(c⁄° 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
,

69 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

71 
pmix_cb_t
 *
cb
;

72 
pmix_°©us_t
 
rc
;

74 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

77 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

78  
PMIX_ERR_INIT
;

82 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

83  
PMIX_ERR_UNREACH
;

89 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

90 
cb
->
a˘ive
 = 
åue
;

93 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Fí˚_nb
(
¥ocs
, 
≈rocs
, 
öfo
, 
nöfo
,

94 
›_cbfunc
, 
cb
))) {

95 
	`PMIX_RELEASE
(
cb
);

96  
rc
;

100 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

101 
rc
 = 
cb
->
°©us
;

102 
	`PMIX_RELEASE
(
cb
);

104 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

107  
rc
;

108 
	}
}

110 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Fí˚_nb
(c⁄° 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
,

111 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

112 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

114 
pmix_buf„r_t
 *
msg
;

115 
pmix_cmd_t
 
cmd
 = 
PMIX_FENCENB_CMD
;

116 
pmix_°©us_t
 
rc
;

117 
pmix_cb_t
 *
cb
;

118 
pmix_¥oc_t
 
rg
, *
rgs
;

119 
size_t
 
ƒg
;

121 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

124 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

125  
PMIX_ERR_INIT
;

129 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

130  
PMIX_ERR_UNREACH
;

134 i‡(
NULL
 =
¥ocs
 && 0 !
≈rocs
) {

135  
PMIX_ERR_BAD_PARAM
;

139 i‡(
NULL
 =
¥ocs
) {

140 ()
	`°∫˝y
(
rg
.
n•a˚
, 
pmix_globÆs
.
myid
.n•a˚, 
PMIX_MAX_NSLEN
);

141 
rg
.
ønk
 = 
PMIX_RANK_WILDCARD
;

142 
rgs
 = &
rg
;

143 
ƒg
 = 1;

145 
rgs
 = (
pmix_¥oc_t
*)
¥ocs
;

146 
ƒg
 = 
≈rocs
;

149 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

150 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`∑ck_„n˚
(
msg
, 
cmd
, 
rgs
, 
ƒg
, 
öfo
, 
nöfo
))) {

151 
	`PMIX_RELEASE
(
msg
);

152  
rc
;

158 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

159 
cb
->
›_cbfunc
 = 
cbfunc
;

160 
cb
->
cbd©a
 = cbdata;

163 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_cbfunc
, 
cb
);

165  
PMIX_SUCCESS
;

166 
	}
}

168 
pmix_°©us_t
 
	$u≈ack_ªtu∫
(
pmix_buf„r_t
 *
d©a
)

170 
pmix_°©us_t
 
rc
;

171 
pmix_°©us_t
 
ªt
;

172 
öt32_t
 
˙t
;

174 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

178 
˙t
 = 1;

179 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
d©a
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) {

180 
	`PMIX_ERROR_LOG
(
rc
);

181  
rc
;

183 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

184 "˛õ¡:u≈ack fí˚Ñe˚ived sètu†%d", 
ªt
);

185  
PMIX_SUCCESS
;

186 
	}
}

188 
pmix_°©us_t
 
	$∑ck_„n˚
(
pmix_buf„r_t
 *
msg
, 
pmix_cmd_t
 
cmd
,

189 c⁄° 
pmix_¥oc_t
 *
¥ocs
, 
size_t
 
≈rocs
,

190 c⁄° 
pmix_öfo_t
 *
öfo
, 
size_t
 
nöfo
)

192 
pmix_°©us_t
 
rc
;

195 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

196 
	`PMIX_ERROR_LOG
(
rc
);

197  
rc
;

201 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
≈rocs
, 1, 
PMIX_SIZE
))) {

202 
	`PMIX_ERROR_LOG
(
rc
);

203  
rc
;

206 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
¥ocs
, 
≈rocs
, 
PMIX_PROC
))) {

207 
	`PMIX_ERROR_LOG
(
rc
);

208  
rc
;

211 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

212 
	`PMIX_ERROR_LOG
(
rc
);

213  
rc
;

216 i‡(
NULL
 !
öfo
 && 0 < 
nöfo
) {

217 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

218 
	`PMIX_ERROR_LOG
(
rc
);

219  
rc
;

223  
PMIX_SUCCESS
;

224 
	}
}

226 
	$waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

227 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

229 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

230 
pmix_°©us_t
 
rc
;

232 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

235 i‡(
NULL
 =
cb
) {

236 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

239 
rc
 = 
	`u≈ack_ªtu∫
(
buf
);

242 i‡(
NULL
 !
cb
->
›_cbfunc
) {

243 
cb
->
	`›_cbfunc
(
rc
, cb->
cbd©a
);

245 
	`PMIX_RELEASE
(
cb
);

246 
	}
}

248 
	$›_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

250 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

252 
cb
->
°©us
 = status;

253 
cb
->
a˘ive
 = 
Ál£
;

254 
	}
}

	@client/pmix_client_get.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

23 
	~<pmix.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ö˛udê
PMIX_EVENT_HEADER


48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/hash.h
"

53 
	~"§c/utû/ouçut.h
"

54 
	~"§c/usock/usock.h
"

55 
	~"§c/£c/pmix_£c.h
"

56 #i‡
deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

57 
	~"§c/d°‹e/pmix_d°‹e.h
"

60 
	~"pmix_˛õ¡_›s.h
"

62 
pmix_buf„r_t
* 
_∑ck_gë
(*
n•a˚
, 
pmix_ønk_t
 
ønk
,

63 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

64 
pmix_cmd_t
 
cmd
);

66 
_gënb‚
(
sd
, 
¨gs
, *
cbd©a
);

68 
_gënb_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

69 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

71 
_vÆue_cbfunc
(
pmix_°©us_t
 
°©us
, 
pmix_vÆue_t
 *
kv
, *
cbd©a
);

73 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Gë
(c⁄° 
pmix_¥oc_t
 *
¥oc
, c⁄° 
key
[],

74 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

75 
pmix_vÆue_t
 **
vÆ
)

77 
pmix_cb_t
 *
cb
;

78 
pmix_°©us_t
 
rc
;

80 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

81  
PMIX_ERR_INIT
;

87 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

88 
cb
->
a˘ive
 = 
åue
;

89 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Gë_nb
(
¥oc
, 
key
, 
öfo
, 
nöfo
, 
_vÆue_cbfunc
, 
cb
))) {

90 
	`PMIX_RELEASE
(
cb
);

91  
rc
;

95 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

96 
rc
 = 
cb
->
°©us
;

97 *
vÆ
 = 
cb
->
vÆue
;

98 
	`PMIX_RELEASE
(
cb
);

100 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

103  
rc
;

104 
	}
}

106 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Gë_nb
(c⁄° 
pmix_¥oc_t
 *
¥oc
, c⁄° *
key
,

107 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

108 
pmix_vÆue_cbfunc_t
 
cbfunc
, *
cbd©a
)

110 
pmix_cb_t
 *
cb
;

111 
ønk
;

112 *
nm
;

114 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

115  
PMIX_ERR_INIT
;

129 i‡(
NULL
 =
¥oc
 && NULL =
key
) {

130  
PMIX_ERR_BAD_PARAM
;

135 i‡(
NULL
 !
¥oc
 && 
PMIX_RANK_WILDCARD
 =¥oc->
ønk
 && NULL =
key
) {

136  
PMIX_ERR_BAD_PARAM
;

141 i‡(
NULL
 =
¥oc
 || 0 =
	`°æí
’roc->
n•a˚
)) {

142 
nm
 = 
pmix_globÆs
.
myid
.
n•a˚
;

144 
nm
 = (*)
¥oc
->
n•a˚
;

150 i‡(
NULL
 =
¥oc
) {

151 
ønk
 = 
PMIX_RANK_UNDEF
;

153 
ønk
 = 
¥oc
->rank;

156 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

158 
nm
, 
ønk
, (
NULL
 =
key
) ? "NULL" : key);

161 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

162 
cb
->
a˘ive
 = 
åue
;

163 ()
	`°∫˝y
(
cb
->
n•a˚
, 
nm
, 
PMIX_MAX_NSLEN
);

164 
cb
->
ønk
 =Ñank;

165 
cb
->
key
 = (*)key;

166 
cb
->
öfo
 = (
pmix_öfo_t
*)info;

167 
cb
->
nöfo
 =Çinfo;

168 
cb
->
vÆue_cbfunc
 = 
cbfunc
;

169 
cb
->
cbd©a
 = cbdata;

170 
	`PMIX_THREADSHIFT
(
cb
, 
_gënb‚
);

172  
PMIX_SUCCESS
;

173 
	}
}

175 
	$_vÆue_cbfunc
(
pmix_°©us_t
 
°©us
, 
pmix_vÆue_t
 *
kv
, *
cbd©a
)

177 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

178 
pmix_°©us_t
 
rc
;

180 
cb
->
°©us
 = status;

181 i‡(
PMIX_SUCCESS
 =
°©us
) {

182 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`c›y
((**)&
cb
->
vÆue
, 
kv
, 
PMIX_VALUE
))) {

183 
	`PMIX_ERROR_LOG
(
rc
);

186 
cb
->
a˘ive
 = 
Ál£
;

187 
	}
}

189 
pmix_buf„r_t
* 
	$_∑ck_gë
(*
n•a˚
, 
pmix_ønk_t
 
ønk
,

190 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

191 
pmix_cmd_t
 
cmd
)

193 
pmix_buf„r_t
 *
msg
;

194 
pmix_°©us_t
 
rc
;

197 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

199 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

200 
	`PMIX_ERROR_LOG
(
rc
);

201 
	`PMIX_RELEASE
(
msg
);

202  
NULL
;

206 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
n•a˚
, 1, 
PMIX_STRING
))) {

207 
	`PMIX_ERROR_LOG
(
rc
);

208 
	`PMIX_RELEASE
(
msg
);

209  
NULL
;

211 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
ønk
, 1, 
PMIX_PROC_RANK
))) {

212 
	`PMIX_ERROR_LOG
(
rc
);

213 
	`PMIX_RELEASE
(
msg
);

214  
NULL
;

217 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

218 
	`PMIX_ERROR_LOG
(
rc
);

219 
	`PMIX_RELEASE
(
msg
);

220  
NULL
;

222 i‡(0 < 
nöfo
) {

223 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

224 
	`PMIX_ERROR_LOG
(
rc
);

225 
	`PMIX_RELEASE
(
msg
);

226  
NULL
;

229  
msg
;

230 
	}
}

235 
	$_gënb_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

236 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

238 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

239 
pmix_cb_t
 *
cb2
;

240 
pmix_°©us_t
 
rc
, 
ªt
;

241 
pmix_vÆue_t
 *
vÆ
 = 
NULL
;

242 
öt32_t
 
˙t
;

243 
pmix_n•a˚_t
 *
ns
, *
≈å
;

244 
pmix_ønk_t
 
ønk
;

245 #i‡(
PMIX_ENABLE_DSTORE
 != 1)

246 
pmix_ønk_t
 
cur_ønk
;

249 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

252 i‡(
NULL
 =
cb
) {

254 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

258 
ønk
 = 
cb
->rank;

261 
˙t
 = 1;

262 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) {

263 
	`PMIX_ERROR_LOG
(
rc
);

268 
≈å
 = 
NULL
;

269 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

270 i‡(0 =
	`°∫cmp
(
cb
->
n•a˚
, 
ns
->n•a˚, 
PMIX_MAX_NSLEN
)) {

271 
≈å
 = 
ns
;

275 i‡(
NULL
 =
≈å
) {

277 
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

278 ()
	`°∫˝y
(
≈å
->
n•a˚
, 
cb
->n•a˚, 
PMIX_MAX_NSLEN
);

279 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

282 i‡(
PMIX_SUCCESS
 !
ªt
) {

283 
d⁄e
;

286 #i‡(
PMIX_ENABLE_DSTORE
 == 1)

287 
rc
 = 
	`pmix_d°‹e_„tch
(
≈å
->
n•a˚
, 
cb
->
ønk
, cb->
key
, &
vÆ
);

292 
cur_ønk
 = 
ønk
;

293 
˙t
 = 1;

294 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cur_ønk
, &
˙t
, 
PMIX_PROC_RANK
))) {

295 
pmix_kvÆ_t
 *
cur_kvÆ
;

296 
pmix_buf„r_t
 *
b±r
;

298 
˙t
 = 1;

299 i‡(
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
b±r
, &
˙t
, 
PMIX_BUFFER
))) {

301 i‡(
PMIX_RANK_WILDCARD
 =
cur_ønk
) {

302 *
n•a˚
;

305 
˙t
 = 1;

306 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, &
n•a˚
, &
˙t
, 
PMIX_STRING
))) {

307 
	`PMIX_ERROR_LOG
(
rc
);

310 
	`‰ì
(
n•a˚
);

311 
	`pmix_˛õ¡_¥o˚ss_n•a˚_blob
(
cb
->
n•a˚
, 
b±r
);

315 
	`pmix_hash_„tch
(&
≈å
->
öã∫Æ
, 
cb
->
ønk
, cb->
key
, &
vÆ
);

318 
˙t
 = 1;

319 
cur_kvÆ
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

320 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, 
cur_kvÆ
, &
˙t
, 
PMIX_KVAL
))) {

321 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

322 "pmix: u≈acked key %s", 
cur_kvÆ
->
key
);

323 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
≈å
->
modex
, 
cur_ønk
, 
cur_kvÆ
))) {

324 
	`PMIX_ERROR_LOG
(
rc
);

326 i‡(
NULL
 !
cb
->
key
 && 0 =
	`°rcmp
(cb->key, 
cur_kvÆ
->key)) {

327 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

329 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`c›y
((**)&
vÆ
, 
cur_kvÆ
->
vÆue
, 
PMIX_VALUE
))) {

330 
	`PMIX_ERROR_LOG
(
rc
);

331 
	`PMIX_RELEASE
(
cur_kvÆ
);

332 
vÆ
 = 
NULL
;

333 
d⁄e
;

336 
	`PMIX_RELEASE
(
cur_kvÆ
);

337 
˙t
 = 1;

338 
cur_kvÆ
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

340 
˙t
 = 1;

341 
	`PMIX_RELEASE
(
cur_kvÆ
);

344 
	`PMIX_RELEASE
(
b±r
);

345 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
 &&

346 
PMIX_SUCCESS
 !
rc
) {

347 
	`PMIX_ERROR_LOG
(
rc
);

348 
rc
 = 
PMIX_ERR_SILENT
;

352 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
 &&

353 
PMIX_SUCCESS
 !
rc
) {

354 
	`PMIX_ERROR_LOG
(
rc
);

356 
rc
 = 
PMIX_SUCCESS
;

360 
d⁄e
:

362 i‡(
NULL
 !
cb
 && NULL !cb->
vÆue_cbfunc
) {

363 i‡(
NULL
 =
vÆ
) {

364 
rc
 = 
PMIX_ERR_NOT_FOUND
;

366 
cb
->
	`vÆue_cbfunc
(
rc
, 
vÆ
, cb->
cbd©a
);

368 i‡(
NULL
 !
vÆ
) {

369 
	`PMIX_VALUE_RELEASE
(
vÆ
);

373 
	`pmix_li°_ªmove_ôem
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, &
cb
->
su≥r
);

374 
	`PMIX_RELEASE
(
cb
);

377 
	`PMIX_LIST_FOREACH_SAFE
(
cb
, 
cb2
, &
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, 
pmix_cb_t
) {

378 i‡(0 =
	`°∫cmp
(
≈å
->
n•a˚
, 
cb
->n•a˚, 
PMIX_MAX_NSLEN
Ë&& cb->
ønk
 ==Ñank) {

380 
vÆ
 = 
NULL
;

381 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

382 
rc
 = 
	`pmix_d°‹e_„tch
(
≈å
->
n•a˚
, 
ønk
, 
cb
->
key
, &
vÆ
);

384 
rc
 = 
	`pmix_hash_„tch
(&
≈å
->
modex
, 
ønk
, 
cb
->
key
, &
vÆ
);

386 
cb
->
	`vÆue_cbfunc
(
rc
, 
vÆ
, cb->
cbd©a
);

387 i‡(
NULL
 !
vÆ
) {

388 
	`PMIX_VALUE_RELEASE
(
vÆ
);

390 
	`pmix_li°_ªmove_ôem
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, &
cb
->
su≥r
);

391 
	`PMIX_RELEASE
(
cb
);

394 
	}
}

396 
pmix_°©us_t
 
	$¥o˚ss_vÆ
(
pmix_vÆue_t
 *
vÆ
,

397 
size_t
 *
num_vÆs
,

398 
pmix_poöãr_¨øy_t
 *
ªsu…s
)

400 
pmix_öfo_t
 *
öfo
;

401 
size_t
 
n
, 
nsize
, 
nvÆs
;

402 
pmix_°©us_t
 
rc
;

404 i‡(
NULL
 =
vÆ
) {

406 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

407  
PMIX_ERR_BAD_PARAM
;

413 i‡(
PMIX_DATA_ARRAY
 !
vÆ
->
ty≥
 &&

414 
PMIX_INFO_ARRAY
 !
vÆ
->
ty≥
) {

416 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

417  
PMIX_ERR_BAD_PARAM
;

420 i‡(
PMIX_DATA_ARRAY
 =
vÆ
->
ty≥
) {

421 
öfo
 = (
pmix_öfo_t
*)
vÆ
->
d©a
.
d¨øy
->
¨øy
;

422 
nsize
 = 
vÆ
->
d©a
.
d¨øy
->
size
;

424 
öfo
 = (
pmix_öfo_t
*)
vÆ
->
d©a
.
¨øy
->array;

425 
nsize
 = 
vÆ
->
d©a
.
¨øy
->
size
;

427 
nvÆs
 = 0;

428 
n
=0;Ç < 
nsize
;Ç++) {

429 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_poöãr_¨øy_add
(
ªsu…s
, &
öfo
[
n
]))) {

430  
rc
;

432 ++
nvÆs
;

434 i‡(
PMIX_DATA_ARRAY
 =
vÆ
->
ty≥
) {

435 
vÆ
->
d©a
.
d¨øy
->
¨øy
 = 
NULL
;

436 
vÆ
->
d©a
.
d¨øy
->
size
 = 0;

438 
vÆ
->
d©a
.
¨øy
->¨øy = 
NULL
;

439 
vÆ
->
d©a
.
¨øy
->
size
 = 0;

442 (*
num_vÆs
Ë+
nvÆs
;

443  
PMIX_SUCCESS
;

444 
	}
}

446 
	$_gënb‚
(
fd
, 
Êags
, *
cbd©a
)

448 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

449 
pmix_cb_t
 *
cbªt
;

450 
pmix_buf„r_t
 *
msg
;

451 
pmix_vÆue_t
 *
vÆ
;

452 
pmix_öfo_t
 *
öfo
, *
ùå
;

453 
pmix_poöãr_¨øy_t
 
ªsu…s
;

454 
pmix_°©us_t
 
rc
;

455 
pmix_n•a˚_t
 *
ns
, *
≈å
;

456 
size_t
 
n
, 
nvÆs
;

458 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

460 
cb
->
n•a˚
, cb->
ønk
,

461 (
NULL
 =
cb
->
key
) ? "NULL" : cb->key);

464 
≈å
 = 
NULL
;

465 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

466 i‡(0 =
	`°rcmp
(
cb
->
n•a˚
, 
ns
->nspace)) {

467 
≈å
 = 
ns
;

471 i‡(
NULL
 =
≈å
) {

476 
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

477 ()
	`°∫˝y
(
≈å
->
n•a˚
, 
cb
->n•a˚, 
PMIX_MAX_NSLEN
);

478 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

481 
ªque°
;

489 i‡(
NULL
 =
cb
->
key
) {

490 
	`PMIX_CONSTRUCT
(&
ªsu…s
, 
pmix_poöãr_¨øy_t
);

491 
	`pmix_poöãr_¨øy_öô
(&
ªsu…s
, 2, 
INT_MAX
, 1);

492 
nvÆs
 = 0;

495 i‡(
PMIX_RANK_WILDCARD
 !
cb
->
ønk
) {

496 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

497 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`pmix_d°‹e_„tch
(
≈å
->
n•a˚
, 
cb
->
ønk
, 
NULL
, &
vÆ
))) {

499 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`pmix_hash_„tch
(&
≈å
->
modex
, 
cb
->
ønk
, 
NULL
, &
vÆ
))) {

501 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

502 "pmix_gë[%d]: vÆuêªåõved from d°‹e", 
__LINE__
);

503 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`¥o˚ss_vÆ
(
vÆ
, &
nvÆs
, &
ªsu…s
))) {

504 
cb
->
	`vÆue_cbfunc
(
rc
, 
NULL
, cb->
cbd©a
);

506 i‡(
NULL
 !
vÆ
) {

507 
	`PMIX_VALUE_RELEASE
(
vÆ
);

509 
	`PMIX_RELEASE
(
cb
);

513 
	`PMIX_VALUE_RELEASE
(
vÆ
);

518 
ªque°
;

522 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`pmix_hash_„tch
(&
≈å
->
öã∫Æ
, 
PMIX_RANK_WILDCARD
, 
NULL
, &
vÆ
))) {

523 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`¥o˚ss_vÆ
(
vÆ
, &
nvÆs
, &
ªsu…s
))) {

524 
cb
->
	`vÆue_cbfunc
(
rc
, 
NULL
, cb->
cbd©a
);

526 i‡(
NULL
 !
vÆ
) {

527 
	`PMIX_VALUE_RELEASE
(
vÆ
);

529 
	`PMIX_RELEASE
(
cb
);

533 
	`PMIX_VALUE_RELEASE
(
vÆ
);

536 
	`PMIX_VALUE_CREATE
(
vÆ
, 1);

537 
vÆ
->
ty≥
 = 
PMIX_DATA_ARRAY
;

538 
vÆ
->
d©a
.
d¨øy
->
ty≥
 = 
PMIX_INFO
;

539 
vÆ
->
d©a
.
d¨øy
->
size
 = 
nvÆs
;

540 
	`PMIX_INFO_CREATE
(
ùå
, 
nvÆs
);

541 
vÆ
->
d©a
.
d¨øy
->
¨øy
 = (*)
ùå
;

542 
n
=0;Ç < (
size_t
)
ªsu…s
.
size
 &&Ç < 
nvÆs
;Ç++) {

543 i‡(
NULL
 !(
öfo
 = (
pmix_öfo_t
*)
	`pmix_poöãr_¨øy_gë_ôem
(&
ªsu…s
, 
n
))) {

544 ()
	`°∫˝y
(
ùå
[
n
].
key
, 
öfo
->key, 
PMIX_MAX_KEYLEN
);

545 
	`pmix_vÆue_x„r
(&
ùå
[
n
].
vÆue
, &
öfo
->value);

546 
	`PMIX_INFO_FREE
(
öfo
, 1);

550 
	`PMIX_DESTRUCT
(&
ªsu…s
);

552 
cb
->
	`vÆue_cbfunc
(
PMIX_SUCCESS
, 
vÆ
, cb->
cbd©a
);

553 
	`PMIX_VALUE_FREE
(
vÆ
, 1);

554 
	`PMIX_RELEASE
(
cb
);

560 i‡(0 =
	`°∫cmp
(
cb
->
key
, "pmix", 4)) {

562 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`pmix_hash_„tch
(&
≈å
->
öã∫Æ
, 
cb
->
ønk
, cb->
key
, &
vÆ
))) {

565 
cb
->
	`vÆue_cbfunc
(
rc
, 
vÆ
, cb->
cbd©a
);

567 i‡(
NULL
 !
vÆ
) {

568 
	`PMIX_VALUE_RELEASE
(
vÆ
);

570 
	`PMIX_RELEASE
(
cb
);

574 
ªque°
;

578 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

579 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`pmix_d°‹e_„tch
(
≈å
->
n•a˚
, 
cb
->
ønk
, cb->
key
, &
vÆ
))) {

581 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`pmix_hash_„tch
(&
≈å
->
modex
, 
cb
->
ønk
, cb->
key
, &
vÆ
))) {

583 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

584 "pmix_gë[%d]: vÆuêªåõved from d°‹e", 
__LINE__
);

587 
cb
->
	`vÆue_cbfunc
(
rc
, 
vÆ
, cb->
cbd©a
);

589 i‡(
NULL
 !
vÆ
) {

590 
	`PMIX_VALUE_RELEASE
(
vÆ
);

592 
	`PMIX_RELEASE
(
cb
);

594 } i‡(
PMIX_ERR_NOT_FOUND
 =
rc
) {

599 i‡(
cb
->
checked
) {

600 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

602 
cb
->
key
, cb->
ønk
, cb->
n•a˚
);

603 
cb
->
	`vÆue_cbfunc
(
rc
, 
NULL
, cb->
cbd©a
);

605 
cb
->
¥ocs
 = 
NULL
;

606 
cb
->
key
 = 
NULL
;

607 
cb
->
öfo
 = 
NULL
;

608 
	`PMIX_RELEASE
(
cb
);

611 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

613 
cb
->
key
, cb->
ønk
, cb->
n•a˚
);

614 
cb
->
checked
 = 
åue
;

617 
ªque°
:

621 i‡(
pmix_globÆs
.
£rvî
 || (!pmix_globÆs.£rvî && !pmix_globÆs.
c⁄√˘ed
)) {

622 
cb
->
	`vÆue_cbfunc
(
PMIX_ERR_NOT_FOUND
, 
NULL
, cb->
cbd©a
);

623 
	`PMIX_RELEASE
(
cb
);

629 
n
=0;Ç < 
cb
->
nöfo
;Ç++) {

630 i‡(0 =
	`°rcmp
(
cb
->
öfo
[
n
].
key
, 
PMIX_OPTIONAL
) &&

631 
cb
->
öfo
[
n
].
vÆue
.
d©a
.
Êag
) {

633 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

635 
cb
->
key
, cb->
ønk
, cb->
n•a˚
);

636 
cb
->
	`vÆue_cbfunc
(
PMIX_ERR_NOT_FOUND
, 
NULL
, cb->
cbd©a
);

637 
	`PMIX_RELEASE
(
cb
);

645 i‡(
NULL
 !
cb
->
key
 && 0 =
	`°∫cmp
(cb->key, "pmix", 4) &&

646 0 =
	`°∫cmp
(
cb
->
n•a˚
, 
pmix_globÆs
.
myid
.n•a˚, 
PMIX_MAX_NSLEN
)) {

647 
cb
->
	`vÆue_cbfunc
(
PMIX_ERR_NOT_FOUND
, 
NULL
, cb->
cbd©a
);

648 
	`PMIX_RELEASE
(
cb
);

655 
	`PMIX_LIST_FOREACH
(
cbªt
, &
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, 
pmix_cb_t
) {

656 i‡(0 =
	`°∫cmp
(
cbªt
->
n•a˚
, 
cb
->n•a˚, 
PMIX_MAX_NSLEN
) &&

657 
cbªt
->
ønk
 =
cb
->rank) {

660 
	`pmix_li°_≠≥nd
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, &
cb
->
su≥r
);

667 
msg
 = 
	`_∑ck_gë
(
cb
->
n•a˚
, cb->
ønk
, cb->
öfo
, cb->
nöfo
, 
PMIX_GETNB_CMD
);

668 i‡(
NULL
 =
msg
) {

669 
cb
->
	`vÆue_cbfunc
(
PMIX_ERROR
, 
NULL
, cb->
cbd©a
);

670 
	`PMIX_RELEASE
(
cb
);

674 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

676 
pmix_globÆs
.
myid
.
n•a˚
,Ömix_globÆs.myid.
ønk
,

677 
cb
->
n•a˚
, cb->
ønk
, cb->
key
);

682 
	`pmix_li°_≠≥nd
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, &
cb
->
su≥r
);

684 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
_gënb_cbfunc
, 
cb
);

685 
	}
}

	@client/pmix_client_ops.h

10 #i‚de‡
PMIX_CLIENT_OPS_H


11 
	#PMIX_CLIENT_OPS_H


	)

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

16 
	~"§c/buf„r_›s/buf„r_›s.h
"

17 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

18 
	~"§c/usock/usock.h
"

20 
BEGIN_C_DECLS


23 
pmix_≥î_t
 
	mmy£rvî
;

24 
pmix_li°_t
 
	m≥ndög_ªque°s
;

25 } 
	tpmix_˛õ¡_globÆs_t
;

27 
pmix_˛õ¡_globÆs_t
 
pmix_˛õ¡_globÆs
;

29 
pmix_˛õ¡_¥o˚ss_n•a˚_blob
(c⁄° *
n•a˚
, 
pmix_buf„r_t
 *
b±r
);

32 
	gEND_C_DECLS


	@client/pmix_client_pub.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

23 
	~<pmix.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ö˛udê
PMIX_EVENT_HEADER


48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/ouçut.h
"

53 
	~"§c/usock/usock.h
"

54 
	~"§c/£c/pmix_£c.h
"

56 
	~"pmix_˛õ¡_›s.h
"

58 
waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

59 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

60 
›_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
);

61 
waô_lookup_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

62 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

63 
lookup_cbfunc
(
pmix_°©us_t
 
°©us
, 
pmix_pd©a_t
 
pd©a
[], 
size_t
 
nd©a
,

64 *
cbd©a
);

66 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Publish
(c⁄° 
pmix_öfo_t
 
öfo
[],

67 
size_t
 
nöfo
)

69 
pmix_°©us_t
 
rc
;

70 
pmix_cb_t
 *
cb
;

72 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

75 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

76  
PMIX_ERR_INIT
;

80 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

81  
PMIX_ERR_UNREACH
;

85 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

86 
cb
->
a˘ive
 = 
åue
;

88 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Publish_nb
(
öfo
, 
nöfo
, 
›_cbfunc
, 
cb
))) {

89 
	`PMIX_ERROR_LOG
(
rc
);

90 
	`PMIX_RELEASE
(
cb
);

91  
rc
;

95 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

96 
rc
 = (
pmix_°©us_t
)
cb
->
°©us
;

97 
	`PMIX_RELEASE
(
cb
);

99  
rc
;

100 
	}
}

102 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Publish_nb
(c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

103 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

105 
pmix_buf„r_t
 *
msg
;

106 
pmix_cmd_t
 
cmd
 = 
PMIX_PUBLISHNB_CMD
;

107 
pmix_°©us_t
 
rc
;

108 
pmix_cb_t
 *
cb
;

110 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

113 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

114  
PMIX_ERR_INIT
;

118 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

119  
PMIX_ERR_UNREACH
;

123 i‡(
NULL
 =
öfo
) {

125 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

126  
PMIX_ERR_BAD_PARAM
;

130 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

132 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

133 
	`PMIX_ERROR_LOG
(
rc
);

134 
	`PMIX_RELEASE
(
msg
);

135  
rc
;

138 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
pmix_globÆs
.
uid
, 1, 
PMIX_UINT32
))) {

139 
	`PMIX_ERROR_LOG
(
rc
);

140 
	`PMIX_RELEASE
(
msg
);

141  
rc
;

145 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

146 
	`PMIX_ERROR_LOG
(
rc
);

147 
	`PMIX_RELEASE
(
msg
);

148  
rc
;

151 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

152 
	`PMIX_ERROR_LOG
(
rc
);

153 
	`PMIX_RELEASE
(
msg
);

154  
rc
;

160 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

161 
cb
->
›_cbfunc
 = 
cbfunc
;

162 
cb
->
cbd©a
 = cbdata;

163 
cb
->
a˘ive
 = 
åue
;

166 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_cbfunc
, 
cb
);

168  
PMIX_SUCCESS
;

169 
	}
}

171 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Lookup
(
pmix_pd©a_t
 
pd©a
[], 
size_t
 
nd©a
,

172 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

174 
pmix_°©us_t
 
rc
;

175 
pmix_cb_t
 *
cb
;

176 **
keys
 = 
NULL
;

177 
size_t
 
i
;

179 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

183 i‡(
NULL
 =
pd©a
) {

184  
PMIX_ERR_BAD_PARAM
;

188 
i
=0; i < 
nd©a
; i++) {

189 i‡('\0' !
pd©a
[
i
].
key
[0]) {

190 
	`pmix_¨gv_≠≥nd_nosize
(&
keys
, 
pd©a
[
i
].
key
);

197 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

198 
cb
->
cbd©a
 = (*)
pd©a
;

199 
cb
->
nvÆs
 = 
nd©a
;

200 
cb
->
a˘ive
 = 
åue
;

202 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_Lookup_nb
(
keys
, 
öfo
, 
nöfo
,

203 
lookup_cbfunc
, 
cb
))) {

204 
	`PMIX_RELEASE
(
cb
);

205 
	`pmix_¨gv_‰ì
(
keys
);

206  
rc
;

210 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

214 
rc
 = 
cb
->
°©us
;

215 
	`PMIX_RELEASE
(
cb
);

216  
rc
;

217 
	}
}

219 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Lookup_nb
(**
keys
,

220 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

221 
pmix_lookup_cbfunc_t
 
cbfunc
, *
cbd©a
)

223 
pmix_buf„r_t
 *
msg
;

224 
pmix_cmd_t
 
cmd
 = 
PMIX_LOOKUPNB_CMD
;

225 
pmix_°©us_t
 
rc
;

226 
pmix_cb_t
 *
cb
;

227 
size_t
 
nkeys
, 
n
;

229 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

232 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

233  
PMIX_ERR_INIT
;

237 i‡(
NULL
 =
keys
) {

238  
PMIX_ERR_BAD_PARAM
;

242 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

244 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

245 
	`PMIX_ERROR_LOG
(
rc
);

246 
	`PMIX_RELEASE
(
msg
);

247  
rc
;

250 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
pmix_globÆs
.
uid
, 1, 
PMIX_UINT32
))) {

251 
	`PMIX_ERROR_LOG
(
rc
);

252 
	`PMIX_RELEASE
(
msg
);

253  
rc
;

256 
nkeys
 = 
	`pmix_¨gv_cou¡
(
keys
);

257 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nkeys
, 1, 
PMIX_SIZE
))) {

258 
	`PMIX_ERROR_LOG
(
rc
);

259 
	`PMIX_RELEASE
(
msg
);

260  
rc
;

262 i‡(0 < 
nkeys
) {

263 
n
=0;Ç < 
nkeys
;Ç++) {

264 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
keys
[
n
], 1, 
PMIX_STRING
))) {

265 
	`PMIX_ERROR_LOG
(
rc
);

266 
	`PMIX_RELEASE
(
msg
);

267  
rc
;

273 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

274 
	`PMIX_ERROR_LOG
(
rc
);

275 
	`PMIX_RELEASE
(
msg
);

276  
rc
;

279 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

280 
	`PMIX_ERROR_LOG
(
rc
);

281 
	`PMIX_RELEASE
(
msg
);

282  
rc
;

288 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

289 
cb
->
lookup_cbfunc
 = 
cbfunc
;

290 
cb
->
cbd©a
 = cbdata;

293 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_lookup_cbfunc
, 
cb
);

295  
PMIX_SUCCESS
;

296 
	}
}

298 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_U≈ublish
(**
keys
,

299 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

301 
pmix_°©us_t
 
rc
;

302 
pmix_cb_t
 *
cb
;

304 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

310 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

311 
cb
->
a˘ive
 = 
åue
;

314 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_U≈ublish_nb
(
keys
, 
öfo
, 
nöfo
, 
›_cbfunc
, 
cb
))) {

315 
	`PMIX_RELEASE
(
cb
);

316  
rc
;

320 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

321 
rc
 = 
cb
->
°©us
;

322 
	`PMIX_RELEASE
(
cb
);

324  
rc
;

325 
	}
}

327 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_U≈ublish_nb
(**
keys
,

328 c⁄° 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

329 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

331 
pmix_buf„r_t
 *
msg
;

332 
pmix_cmd_t
 
cmd
 = 
PMIX_UNPUBLISHNB_CMD
;

333 
pmix_°©us_t
 
rc
;

334 
pmix_cb_t
 *
cb
;

335 
size_t
 
i
, 
j
;

337 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

340 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

341  
PMIX_ERR_INIT
;

345 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

347 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

348 
	`PMIX_ERROR_LOG
(
rc
);

349 
	`PMIX_RELEASE
(
msg
);

350  
rc
;

353 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
pmix_globÆs
.
uid
, 1, 
PMIX_UINT32
))) {

354 
	`PMIX_ERROR_LOG
(
rc
);

355 
	`PMIX_RELEASE
(
msg
);

356  
rc
;

359 
i
 = 
	`pmix_¨gv_cou¡
(
keys
);

360 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
i
, 1, 
PMIX_SIZE
))) {

361 
	`PMIX_ERROR_LOG
(
rc
);

362 
	`PMIX_RELEASE
(
msg
);

363  
rc
;

365 i‡(0 < 
i
) {

366 
j
=0; j < 
i
; j++) {

367 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
keys
[
j
], 1, 
PMIX_STRING
))) {

368 
	`PMIX_ERROR_LOG
(
rc
);

369 
	`PMIX_RELEASE
(
msg
);

370  
rc
;

376 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

377 
	`PMIX_ERROR_LOG
(
rc
);

378 
	`PMIX_RELEASE
(
msg
);

379  
rc
;

382 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

383 
	`PMIX_ERROR_LOG
(
rc
);

384 
	`PMIX_RELEASE
(
msg
);

385  
rc
;

389 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

390 
cb
->
›_cbfunc
 = 
cbfunc
;

391 
cb
->
cbd©a
 = cbdata;

392 
cb
->
a˘ive
 = 
åue
;

395 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_cbfunc
, 
cb
);

397  
PMIX_SUCCESS
;

398 
	}
}

400 
	$waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

401 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

403 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

404 
pmix_°©us_t
 
rc
;

405 
ªt
;

406 
öt32_t
 
˙t
;

408 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

410 (
NULL
 =
buf
Ë? -1 : ()buf->
byãs_u£d
);

413 
˙t
 = 1;

414 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) {

415 
	`PMIX_ERROR_LOG
(
rc
);

417 i‡(
NULL
 !
cb
->
›_cbfunc
) {

418 
cb
->
	`›_cbfunc
(
rc
, cb->
cbd©a
);

420 
	`PMIX_RELEASE
(
cb
);

421 
	}
}

423 
	$›_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

425 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

427 
cb
->
°©us
 = status;

428 
cb
->
a˘ive
 = 
Ál£
;

429 
	}
}

431 
	$waô_lookup_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

432 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

434 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

435 
pmix_°©us_t
 
rc
, 
ªt
;

436 
öt32_t
 
˙t
;

437 
pmix_pd©a_t
 *
pd©a
;

438 
size_t
 
nd©a
;

440 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

442 (
NULL
 =
buf
Ë? -1 : ()buf->
byãs_u£d
);

444 i‡(
NULL
 =
cb
->
lookup_cbfunc
) {

446 
	`PMIX_RELEASE
(
cb
);

451 
pd©a
 = 
NULL
;

452 
nd©a
 = 0;

455 
˙t
 = 1;

456 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) {

457 
	`PMIX_ERROR_LOG
(
rc
);

458 
ªt
 = 
rc
;

460 i‡(
PMIX_SUCCESS
 !
ªt
) {

461 i‡(
NULL
 !
cb
->
lookup_cbfunc
) {

462 
cb
->
	`lookup_cbfunc
(
ªt
, 
NULL
, 0, cb->
cbd©a
);

464 
	`PMIX_RELEASE
(
cb
);

469 
˙t
 = 1;

470 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nd©a
, &
˙t
, 
PMIX_SIZE
))) {

471 
	`PMIX_ERROR_LOG
(
rc
);

472 
	`PMIX_RELEASE
(
cb
);

475 i‡(0 < 
nd©a
) {

477 
	`PMIX_PDATA_CREATE
(
pd©a
, 
nd©a
);

478 
˙t
 = 
nd©a
;

480 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
pd©a
, &
˙t
, 
PMIX_PDATA
))) {

481 
	`PMIX_ERROR_LOG
(
rc
);

482 
˛ónup
;

486 i‡(
NULL
 !
cb
->
lookup_cbfunc
) {

487 
cb
->
	`lookup_cbfunc
(
rc
, 
pd©a
, 
nd©a
, cb->
cbd©a
);

490 
˛ónup
:

492 
	`PMIX_PDATA_FREE
(
pd©a
, 
nd©a
);

494 
	`PMIX_RELEASE
(
cb
);

495 
	}
}

497 
	$lookup_cbfunc
(
pmix_°©us_t
 
°©us
, 
pmix_pd©a_t
 
pd©a
[], 
size_t
 
nd©a
,

498 *
cbd©a
)

500 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

501 
pmix_pd©a_t
 *
tgt
 = (pmix_pd©a_t*)
cb
->
cbd©a
;

502 
size_t
 
i
, 
j
;

504 
cb
->
°©us
 = status;

505 i‡(
PMIX_SUCCESS
 =
°©us
) {

507 
i
=0; i < 
nd©a
; i++) {

508 
j
=0; j < 
cb
->
nvÆs
; j++) {

509 i‡(0 =
	`°rcmp
(
pd©a
[
i
].
key
, 
tgt
[
j
].key)) {

511 ()
	`°∫˝y
(
tgt
[
j
].
¥oc
.
n•a˚
, 
pd©a
[
i
].¥oc.n•a˚, 
PMIX_MAX_NSLEN
);

512 
tgt
[
j
].
¥oc
.
ønk
 = 
pd©a
[
i
].proc.rank;

514 
	`pmix_vÆue_x„r
(&
tgt
[
j
].
vÆue
, &
pd©a
[
i
].value);

521 
cb
->
a˘ive
 = 
Ál£
;

522 
	}
}

	@client/pmix_client_spawn.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

23 
	~<pmix.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ö˛udê
PMIX_EVENT_HEADER


48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/ouçut.h
"

53 
	~"§c/usock/usock.h
"

54 
	~"§c/£c/pmix_£c.h
"

56 
	~"pmix_˛õ¡_›s.h
"

58 
waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

59 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

60 
•awn_cbfunc
(
pmix_°©us_t
 
°©us
, 
n•a˚
[], *
cbd©a
);

62 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_S∑wn
(c⁄° 
pmix_öfo_t
 
job_öfo
[], 
size_t
 
nöfo
,

63 c⁄° 
pmix_≠p_t
 
≠ps
[], 
size_t
 
«µs
,

64 
n•a˚
[])

66 
pmix_°©us_t
 
rc
;

67 
pmix_cb_t
 *
cb
;

69 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

72 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

73  
PMIX_ERR_INIT
;

77 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

78  
PMIX_ERR_UNREACH
;

82 i‡(
NULL
 !
n•a˚
) {

83 
	`mem£t
(
n•a˚
, 0, 
PMIX_MAX_NSLEN
+1);

87 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

88 
cb
->
a˘ive
 = 
åue
;

90 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`PMIx_S∑wn_nb
(
job_öfo
, 
nöfo
, 
≠ps
, 
«µs
, 
•awn_cbfunc
, 
cb
))) {

91 
	`PMIX_RELEASE
(
cb
);

92  
rc
;

96 
	`PMIX_WAIT_FOR_COMPLETION
(
cb
->
a˘ive
);

97 
rc
 = 
cb
->
°©us
;

98 i‡(
NULL
 !
n•a˚
) {

99 ()
	`°∫˝y
(
n•a˚
, 
cb
->n•a˚, 
PMIX_MAX_NSLEN
);

101 
	`PMIX_RELEASE
(
cb
);

103  
rc
;

104 
	}
}

106 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_S∑wn_nb
(c⁄° 
pmix_öfo_t
 
job_öfo
[], 
size_t
 
nöfo
,

107 c⁄° 
pmix_≠p_t
 
≠ps
[], 
size_t
 
«µs
,

108 
pmix_•awn_cbfunc_t
 
cbfunc
, *
cbd©a
)

110 
pmix_buf„r_t
 *
msg
;

111 
pmix_cmd_t
 
cmd
 = 
PMIX_SPAWNNB_CMD
;

112 
pmix_°©us_t
 
rc
;

113 
pmix_cb_t
 *
cb
;

115 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

118 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

119  
PMIX_ERR_INIT
;

123 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

124  
PMIX_ERR_UNREACH
;

127 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

129 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

130 
	`PMIX_ERROR_LOG
(
rc
);

131 
	`PMIX_RELEASE
(
msg
);

132  
rc
;

136 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

137 
	`PMIX_ERROR_LOG
(
rc
);

138 
	`PMIX_RELEASE
(
msg
);

139  
rc
;

141 i‡(0 < 
nöfo
) {

142 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
job_öfo
, 
nöfo
, 
PMIX_INFO
))) {

143 
	`PMIX_ERROR_LOG
(
rc
);

144 
	`PMIX_RELEASE
(
msg
);

145  
rc
;

150 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
«µs
, 1, 
PMIX_SIZE
))) {

151 
	`PMIX_ERROR_LOG
(
rc
);

152 
	`PMIX_RELEASE
(
msg
);

153  
rc
;

155 i‡(0 < 
«µs
) {

156 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
≠ps
, 
«µs
, 
PMIX_APP
))) {

157 
	`PMIX_ERROR_LOG
(
rc
);

158 
	`PMIX_RELEASE
(
msg
);

159  
rc
;

166 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

167 
cb
->
•awn_cbfunc
 = 
cbfunc
;

168 
cb
->
cbd©a
 = cbdata;

171 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
waô_cbfunc
, 
cb
);

173  
PMIX_SUCCESS
;

174 
	}
}

177 
	$waô_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

178 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

180 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

181 
n•a˚
[
PMIX_MAX_NSLEN
+1];

182 *
n2
;

183 
pmix_°©us_t
 
rc
, 
ªt
;

184 
öt32_t
 
˙t
;

186 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

188 (
NULL
 =
buf
Ë? -1 : ()buf->
byãs_u£d
);

191 
	`mem£t
(
n•a˚
, 0, 
PMIX_MAX_NSLEN
+1);

194 
˙t
 = 1;

195 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) {

196 
	`PMIX_ERROR_LOG
(
rc
);

197 
ªt
 = 
rc
;

199 i‡(
PMIX_SUCCESS
 =
ªt
) {

201 
˙t
 = 1;

202 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
n2
, &
˙t
, 
PMIX_STRING
))) {

203 
	`PMIX_ERROR_LOG
(
rc
);

204 
ªt
 = 
rc
;

206 i‡(
NULL
 !
n2
) {

207 ()
	`°∫˝y
(
n•a˚
, 
n2
, 
PMIX_MAX_NSLEN
);

209 
	`pmix_˛õ¡_¥o˚ss_n•a˚_blob
(
n•a˚
, 
buf
);

210 
	`‰ì
(
n2
);

214 i‡(
NULL
 !
cb
->
•awn_cbfunc
) {

215 
cb
->
	`•awn_cbfunc
(
ªt
, 
n•a˚
, cb->
cbd©a
);

217 
	}
}

219 
	$•awn_cbfunc
(
pmix_°©us_t
 
°©us
, 
n•a˚
[], *
cbd©a
)

221 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

223 
cb
->
°©us
 = status;

224 i‡(
NULL
 !
n•a˚
) {

225 ()
	`°∫˝y
(
cb
->
n•a˚
,Ç•a˚, 
PMIX_MAX_NSLEN
);

227 
cb
->
a˘ive
 = 
Ál£
;

228 
	}
}

	@common/pmix_log.c

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

15 
	~<§c/ö˛ude/ty≥s.h
>

16 
	~<§c/ö˛ude/pmix_°döt.h
>

17 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

19 
	~<pmix.h
>

20 
	~<pmix_comm⁄.h
>

21 
	~<pmix_£rvî.h
>

23 
	~"§c/utû/¨gv.h
"

24 
	~"§c/utû/îr‹.h
"

25 
	~"§c/utû/ouçut.h
"

26 
	~"§c/buf„r_›s/buf„r_›s.h
"

27 
	~"§c/usock/usock.h
"

29 
	~"§c/˛õ¡/pmix_˛õ¡_›s.h
"

30 
	~"§c/£rvî/pmix_£rvî_›s.h
"

31 
	~"§c/ö˛ude/pmix_globÆs.h
"

33 
	$log_cbfunc
(
pmix_≥î_t
 *
≥î
,

34 
pmix_usock_hdr_t
 *
hdr
,

35 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

37 
pmix_shi·_ˇddy_t
 *
cd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

38 
öt32_t
 
m
;

39 
pmix_°©us_t
 
rc
, 
°©us
;

42 
m
=1;

43 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
°©us
, &
m
, 
PMIX_STATUS
))) {

44 
°©us
 = 
rc
;

47 i‡(
NULL
 !
cd
->
cbfunc
.
›cb‚
) {

48 
cd
->
cbfunc
.
	`›cb‚
(
°©us
, cd->
cbd©a
);

50 
	`PMIX_RELEASE
(
cd
);

51 
	}
}

53 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Log_nb
(c⁄° 
pmix_öfo_t
 
d©a
[], 
size_t
 
nd©a
,

54 c⁄° 
pmix_öfo_t
 
dúe˘ives
[], 
size_t
 
ndús
,

55 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

58 
pmix_shi·_ˇddy_t
 *
cd
;

59 
pmix_cmd_t
 
cmd
 = 
PMIX_LOG_CMD
;

60 
pmix_buf„r_t
 *
msg
;

61 
pmix_°©us_t
 
rc
;

63 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

66 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

67  
PMIX_ERR_INIT
;

70 i‡(0 =
nd©a
 || 
NULL
 =
d©a
) {

71  
PMIX_ERR_BAD_PARAM
;

76 i‡(
pmix_globÆs
.
£rvî
) {

77 i‡(
NULL
 =
pmix_ho°_£rvî
.
log
) {

79  
PMIX_ERR_NOT_SUPPORTED
;

81 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

83 
pmix_ho°_£rvî
.
	`log
(&
pmix_globÆs
.
myid
,

84 
d©a
, 
nd©a
, 
dúe˘ives
, 
ndús
,

85 
cbfunc
, 
cbd©a
);

88 
cd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

89 
cd
->
cbfunc
.
›cb‚
 = cbfunc;

90 
cd
->
cbd©a
 = cbdata;

91 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

92 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

93 
	`PMIX_ERROR_LOG
(
rc
);

94 
	`PMIX_RELEASE
(
msg
);

95 
	`PMIX_RELEASE
(
cd
);

96  
rc
;

98 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nd©a
, 1, 
PMIX_SIZE
))) {

99 
	`PMIX_ERROR_LOG
(
rc
);

100 
	`PMIX_RELEASE
(
msg
);

101 
	`PMIX_RELEASE
(
cd
);

102  
rc
;

104 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
d©a
, 
nd©a
, 
PMIX_INFO
))) {

105 
	`PMIX_ERROR_LOG
(
rc
);

106 
	`PMIX_RELEASE
(
msg
);

107 
	`PMIX_RELEASE
(
cd
);

108  
rc
;

110 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
ndús
, 1, 
PMIX_SIZE
))) {

111 
	`PMIX_ERROR_LOG
(
rc
);

112 
	`PMIX_RELEASE
(
msg
);

113 
	`PMIX_RELEASE
(
cd
);

114  
rc
;

116 i‡(0 < 
ndús
) {

117 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
d©a
, 
nd©a
, 
PMIX_INFO
))) {

118 
	`PMIX_ERROR_LOG
(
rc
);

119 
	`PMIX_RELEASE
(
msg
);

120 
	`PMIX_RELEASE
(
cd
);

121  
rc
;

125 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

127 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
log_cbfunc
, 
cd
);

129  
PMIX_SUCCESS
;

130 
	}
}

	@common/pmix_query.c

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

15 
	~<§c/ö˛ude/ty≥s.h
>

16 
	~<§c/ö˛ude/pmix_°döt.h
>

17 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

19 
	~<pmix.h
>

20 
	~<pmix_comm⁄.h
>

21 
	~<pmix_£rvî.h
>

23 
	~"§c/utû/¨gv.h
"

24 
	~"§c/utû/îr‹.h
"

25 
	~"§c/utû/ouçut.h
"

26 
	~"§c/buf„r_›s/buf„r_›s.h
"

27 
	~"§c/usock/usock.h
"

29 
	~"§c/˛õ¡/pmix_˛õ¡_›s.h
"

30 
	~"§c/£rvî/pmix_£rvî_›s.h
"

31 
	~"§c/ö˛ude/pmix_globÆs.h
"

33 
	$ªlcbfunc
(*
cbd©a
)

35 
pmix_shi·_ˇddy_t
 *
cd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

37 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

40 i‡(
NULL
 !
cd
->
öfo
) {

41 
	`PMIX_INFO_FREE
(
cd
->
öfo
, cd->
nöfo
);

43 
	`PMIX_RELEASE
(
cd
);

44 
	}
}

45 
	$quîy_cbfunc
(
pmix_≥î_t
 *
≥î
,

46 
pmix_usock_hdr_t
 *
hdr
,

47 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

49 
pmix_quîy_ˇddy_t
 *
cd
 = (pmix_quîy_ˇddy_t*)
cbd©a
;

50 
pmix_°©us_t
 
rc
;

51 
pmix_shi·_ˇddy_t
 *
ªsu…s
;

52 
˙t
;

54 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

57 
ªsu…s
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

60 
˙t
 = 1;

61 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªsu…s
->
°©us
, &
˙t
, 
PMIX_STATUS
))) {

62 
	`PMIX_ERROR_LOG
(
rc
);

63 
com∂ëe
;

65 i‡(
PMIX_SUCCESS
 !
ªsu…s
->
°©us
) {

66 
com∂ëe
;

70 
˙t
 = 1;

71 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªsu…s
->
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

72 
	`PMIX_ERROR_LOG
(
rc
);

73 
com∂ëe
;

75 i‡(0 < 
ªsu…s
->
nöfo
) {

76 
	`PMIX_INFO_CREATE
(
ªsu…s
->
öfo
,Ñesu…s->
nöfo
);

77 
˙t
 = 
ªsu…s
->
nöfo
;

78 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
ªsu…s
->
öfo
, &
˙t
, 
PMIX_INFO
))) {

79 
	`PMIX_ERROR_LOG
(
rc
);

80 
com∂ëe
;

84 
com∂ëe
:

85 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

88 i‡(
NULL
 !
cd
->
cbfunc
) {

89 
cd
->
	`cbfunc
(
ªsu…s
->
°©us
,Ñesu…s->
öfo
,Ñesu…s->
nöfo
, cd->
cbd©a
, 
ªlcbfunc
,Ñesults);

91 
	`PMIX_RELEASE
(
cd
);

92 
	}
}

94 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_Quîy_öfo_nb
(
pmix_quîy_t
 
quîõs
[], 
size_t
 
nquîõs
,

95 
pmix_öfo_cbfunc_t
 
cbfunc
, *
cbd©a
)

98 
pmix_quîy_ˇddy_t
 *
cd
;

99 
pmix_cmd_t
 
cmd
 = 
PMIX_QUERY_CMD
;

100 
pmix_buf„r_t
 *
msg
;

101 
pmix_°©us_t
 
rc
;

103 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

106 i‡(
pmix_globÆs
.
öô_˙å
 <= 0) {

107  
PMIX_ERR_INIT
;

110 i‡(0 =
nquîõs
 || 
NULL
 =
quîõs
) {

111  
PMIX_ERR_BAD_PARAM
;

116 i‡(
pmix_globÆs
.
£rvî
) {

117 i‡(
NULL
 =
pmix_ho°_£rvî
.
quîy
) {

119  
PMIX_ERR_NOT_SUPPORTED
;

121 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

123 
pmix_ho°_£rvî
.
	`quîy
(&
pmix_globÆs
.
myid
,

124 
quîõs
, 
nquîõs
,

125 
cbfunc
, 
cbd©a
);

128 
cd
 = 
	`PMIX_NEW
(
pmix_quîy_ˇddy_t
);

129 
cd
->
cbfunc
 = cbfunc;

130 
cd
->
cbd©a
 = cbdata;

131 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

132 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

133 
	`PMIX_ERROR_LOG
(
rc
);

134 
	`PMIX_RELEASE
(
msg
);

135 
	`PMIX_RELEASE
(
cd
);

136  
rc
;

138 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nquîõs
, 1, 
PMIX_SIZE
))) {

139 
	`PMIX_ERROR_LOG
(
rc
);

140 
	`PMIX_RELEASE
(
msg
);

141 
	`PMIX_RELEASE
(
cd
);

142  
rc
;

144 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
quîõs
, 
nquîõs
, 
PMIX_QUERY
))) {

145 
	`PMIX_ERROR_LOG
(
rc
);

146 
	`PMIX_RELEASE
(
msg
);

147 
	`PMIX_RELEASE
(
cd
);

148  
rc
;

150 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

152 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
quîy_cbfunc
, 
cd
);

154  
PMIX_SUCCESS
;

155 
	}
}

	@common/pmix_strings.c

22 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 #ifde‡
HAVE_STRING_H


26 
	~<°rög.h
>

28 
	~<î∫o.h
>

29 
	~<°dio.h
>

30 #ifde‡
HAVE_STDLIB_H


31 
	~<°dlib.h
>

34 
	~<pmix_comm⁄.h
>

35 
	~"§c/buf„r_›s/öã∫Æ.h
"

36 
	~"§c/ö˛ude/pmix_globÆs.h
"

38 c⁄° * 
	$PMIx_Proc_°©e_°rög
(
pmix_¥oc_°©e_t
 
°©e
)

40 
°©e
) {

41 
PMIX_PROC_STATE_UNDEF
:

43 
PMIX_PROC_STATE_PREPPED
:

45 
PMIX_PROC_STATE_LAUNCH_UNDERWAY
:

47 
PMIX_PROC_STATE_RESTART
:

49 
PMIX_PROC_STATE_TERMINATE
:

51 
PMIX_PROC_STATE_RUNNING
:

53 
PMIX_PROC_STATE_CONNECTED
:

55 
PMIX_PROC_STATE_UNTERMINATED
:

57 
PMIX_PROC_STATE_TERMINATED
:

59 
PMIX_PROC_STATE_ERROR
:

61 
PMIX_PROC_STATE_KILLED_BY_CMD
:

63 
PMIX_PROC_STATE_ABORTED
:

65 
PMIX_PROC_STATE_FAILED_TO_START
:

67 
PMIX_PROC_STATE_ABORTED_BY_SIG
:

69 
PMIX_PROC_STATE_TERM_WO_SYNC
:

71 
PMIX_PROC_STATE_COMM_FAILED
:

73 
PMIX_PROC_STATE_CALLED_ABORT
:

75 
PMIX_PROC_STATE_MIGRATING
:

77 
PMIX_PROC_STATE_CANNOT_RESTART
:

79 
PMIX_PROC_STATE_TERM_NON_ZERO
:

81 
PMIX_PROC_STATE_FAILED_TO_LAUNCH
:

86 
	}
}

88 c⁄° * 
	$PMIx_Sc›e_°rög
(
pmix_sc›e_t
 
sc›e
)

90 
sc›e
) {

91 
PMIX_SCOPE_UNDEF
:

93 
PMIX_LOCAL
:

95 
PMIX_REMOTE
:

97 
PMIX_GLOBAL
:

102 
	}
}

104 c⁄° * 
	$PMIx_Pîsi°í˚_°rög
(
pmix_≥rsi°í˚_t
 
≥rsi°
)

106 
≥rsi°
) {

107 
PMIX_PERSIST_INDEF
:

109 
PMIX_PERSIST_FIRST_READ
:

111 
PMIX_PERSIST_PROC
:

113 
PMIX_PERSIST_APP
:

115 
PMIX_PERSIST_SESSION
:

120 
	}
}

122 c⁄° * 
	$PMIx_D©a_ønge_°rög
(
pmix_d©a_ønge_t
 
ønge
)

124 
ønge
) {

125 
PMIX_RANGE_UNDEF
:

127 
PMIX_RANGE_RM
:

129 
PMIX_RANGE_LOCAL
:

131 
PMIX_RANGE_NAMESPACE
:

133 
PMIX_RANGE_SESSION
:

135 
PMIX_RANGE_GLOBAL
:

137 
PMIX_RANGE_CUSTOM
:

142 
	}
}

144 c⁄° * 
	$PMIx_Info_dúe˘ives_°rög
(
pmix_öfo_dúe˘ives_t
 
dúe˘ives
)

146 
dúe˘ives
) {

147 
PMIX_INFO_REQD
:

152 
	}
}

154 c⁄° * 
	$pmix_comm™d_°rög
(
pmix_cmd_t
 
cmd
)

156 
cmd
) {

157 
PMIX_REQ_CMD
:

159 
PMIX_ABORT_CMD
:

161 
PMIX_COMMIT_CMD
:

163 
PMIX_FENCENB_CMD
:

165 
PMIX_GETNB_CMD
:

167 
PMIX_FINALIZE_CMD
:

169 
PMIX_PUBLISHNB_CMD
:

171 
PMIX_LOOKUPNB_CMD
:

173 
PMIX_UNPUBLISHNB_CMD
:

175 
PMIX_SPAWNNB_CMD
:

177 
PMIX_CONNECTNB_CMD
:

179 
PMIX_DISCONNECTNB_CMD
:

181 
PMIX_NOTIFY_CMD
:

183 
PMIX_REGEVENTS_CMD
:

185 
PMIX_DEREGEVENTS_CMD
:

187 
PMIX_QUERY_CMD
:

192 
	}
}

194 c⁄° * 
	$PMIx_D©a_ty≥_°rög
(
pmix_d©a_ty≥_t
 
ty≥
)

196 
pmix_b‰›_ty≥_öfo_t
 *
öfo
;

198 i‡(
NULL
 =(
öfo
 = (
pmix_b‰›_ty≥_öfo_t
*)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_b‰›_ty≥s
, 
ty≥
))) {

201 i‡(
NULL
 =
öfo
->
odti_«me
) {

204  
öfo
->
odti_«me
;

205 
	}
}

	@dstore/pmix_dstore.c

11 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

12 
	~<pmix_comm⁄.h
>

13 
	~"§c/ö˛ude/pmix_globÆs.h
"

15 
	~"pmix_d°‹e.h
"

16 
	~"pmix_esh.h
"

28 
pmix_d°‹e_ba£_moduÀ_t
 *
	gÆl
[] = {

29 &
pmix_d°‹e_esh_moduÀ
,

32 
NULL


35 
pmix_d°‹e_ba£_moduÀ_t
 
	gpmix_d°‹e
 = {0};

37 
	$pmix_d°‹e_öô
(
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

39 
pmix_d°‹e
 = *
Æl
[0];

41 i‡(!
pmix_d°‹e
.
öô
) {

42  
PMIX_ERR_NOT_SUPPORTED
;

45  
pmix_d°‹e
.
	`öô
(
öfo
, 
nöfo
);

46 
	}
}

48 
	$pmix_d°‹e_föÆize
()

50 i‡(!
pmix_d°‹e
.
föÆize
) {

54 
pmix_d°‹e
.
	`föÆize
();

57 
	}
}

59 
	$pmix_d°‹e_°‹e
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
, 
pmix_kvÆ_t
 *
kv
)

61 i‡(!
pmix_d°‹e
.
°‹e
) {

62  
PMIX_ERR_NOT_SUPPORTED
;

65  
pmix_d°‹e
.
	`°‹e
(
n•a˚
, 
ønk
, 
kv
);

66 
	}
}

68 
	$pmix_d°‹e_„tch
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
,

69 c⁄° *
key
, 
pmix_vÆue_t
 **
kvs
)

71 i‡(!
pmix_d°‹e
.
„tch
) {

72  
PMIX_ERR_NOT_SUPPORTED
;

75  
pmix_d°‹e
.
	`„tch
(
n•a˚
, 
ønk
, 
key
, 
kvs
);

76 
	}
}

78 
	$pmix_d°‹e_∑tch_ív
(***
ív
)

80 i‡(!
pmix_d°‹e
.
∑tch_ív
) {

81  
PMIX_ERR_NOT_SUPPORTED
;

83  
pmix_d°‹e
.
	`∑tch_ív
(
ív
);

84 
	}
}

86 
	$pmix_d°‹e_n•a˚_add
(c⁄° *
n•a˚
)

88 i‡(!
pmix_d°‹e
.
n•a˚
) {

89  
PMIX_ERR_NOT_SUPPORTED
;

91  
pmix_d°‹e
.
	`n•a˚
(
n•a˚
);

92 
	}
}

	@dstore/pmix_dstore.h

12 #i‚de‡
PMIX_DSTORE_H


13 
	#PMIX_DSTORE_H


	)

15 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 
	~<pmix_comm⁄.h
>

19 
	~"§c/buf„r_›s/buf„r_›s.h
"

22 
BEGIN_C_DECLS


25 
pmix_d°‹e_öô
(
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
);

26 
pmix_d°‹e_föÆize
();

27 
pmix_d°‹e_°‹e
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
, 
pmix_kvÆ_t
 *
kv
);

28 
pmix_d°‹e_„tch
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
,

29 c⁄° *
key
, 
pmix_vÆue_t
 **
kvs
);

30 
pmix_d°‹e_∑tch_ív
(***
ív
);

31 
pmix_d°‹e_n•a˚_add
(c⁄° *
n•a˚
);

37 (*
	tpmix_d°‹e_ba£_moduÀ_öô_‚_t
)(
	tpmix_öfo_t
 
	töfo
[], 
	tsize_t
 
	tnöfo
);

43 (*
	tpmix_d°‹e_ba£_moduÀ_föi_‚_t
)();

56 (*
	tpmix_d°‹e_ba£_moduÀ_°‹e_‚_t
)(c⁄° *
	tn•a˚
,

57 
	tpmix_ønk_t
 
	tønk
,

58 
	tpmix_kvÆ_t
 *
	tkv
);

71 (*
	tpmix_d°‹e_ba£_moduÀ_„tch_‚_t
)(c⁄° *
	tn•a˚
,

72 
	tpmix_ønk_t
 
	tønk
,

73 c⁄° *
	tkey
,

74 
	tpmix_vÆue_t
 **
	tkvs
);

85 (*
	tpmix_d°‹e_ba£_moduÀ_¥oc_∑tch_ív_‚_t
)(***
	tív
);

96 (*
	tpmix_d°‹e_ba£_moduÀ_add_n•a˚_‚_t
)(c⁄° *
	tn•a˚
);

102 c⁄° *
«me
;

103 
pmix_d°‹e_ba£_moduÀ_öô_‚_t
 
öô
;

104 
pmix_d°‹e_ba£_moduÀ_föi_‚_t
 
föÆize
;

105 
pmix_d°‹e_ba£_moduÀ_°‹e_‚_t
 
°‹e
;

106 
pmix_d°‹e_ba£_moduÀ_„tch_‚_t
 
„tch
;

107 
pmix_d°‹e_ba£_moduÀ_¥oc_∑tch_ív_‚_t
 
∑tch_ív
;

108 
pmix_d°‹e_ba£_moduÀ_add_n•a˚_‚_t
 
n•a˚
;

109 } 
	tpmix_d°‹e_ba£_moduÀ_t
;

111 
END_C_DECLS


	@dstore/pmix_esh.c

13 
	#_GNU_SOURCE


	)

14 
	~<°dio.h
>

15 
	~<sys/ty≥s.h
>

16 
	~<sys/°©.h
>

17 
	~<f˙é.h
>

18 
	~<sys/fûe.h
>

20 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

21 
	~<pmix_£rvî.h
>

22 
	~<pmix_comm⁄.h
>

23 
	~"§c/ö˛ude/pmix_globÆs.h
"

25 
	~"§c/˛ass/pmix_li°.h
"

26 
	~"§c/buf„r_›s/buf„r_›s.h
"

27 
	~"§c/buf„r_›s/ty≥s.h
"

28 
	~"§c/utû/pmix_ívú⁄.h
"

29 
	~"§c/utû/hash.h
"

30 
	~"§c/utû/îr‹.h
"

31 
	~"§c/sm/pmix_sm.h
"

33 
	~"pmix_d°‹e.h
"

34 
	~"pmix_esh.h
"

37 
_esh_öô
(
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
);

38 
_esh_föÆize
();

39 
_esh_°‹e
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
, 
pmix_kvÆ_t
 *
kv
);

40 
_esh_„tch
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
, c⁄° *
key
, 
pmix_vÆue_t
 **
kvs
);

41 
_esh_∑tch_ív
(***
ív
);

42 
_esh_n•a˚
(c⁄° *
n•a˚
);

44 
pmix_d°‹e_ba£_moduÀ_t
 
	gpmix_d°‹e_esh_moduÀ
 = {

46 
_esh_öô
,

47 
_esh_föÆize
,

48 
_esh_°‹e
,

49 
_esh_„tch
,

50 
_esh_∑tch_ív
,

51 
_esh_n•a˚
,

54 
	#ESH_REGION_EXTENSION
 "EXTENSION_SLOT"

	)

55 
	#ESH_REGION_INVALIDATED
 "INVALIDATED"

	)

56 
	#ESH_ENV_INITIAL_SEG_SIZE
 "INITIAL_SEG_SIZE"

	)

57 
	#ESH_ENV_NS_META_SEG_SIZE
 "NS_META_SEG_SIZE"

	)

58 
	#ESH_ENV_NS_DATA_SEG_SIZE
 "NS_DATA_SEG_SIZE"

	)

59 
	#ESH_ENV_LINEAR
 "SM_USE_LINEAR_SEARCH"

	)

61 
	#EXT_SLOT_SIZE
 (
PMIX_MAX_KEYLEN
 + 1 + 2*(
size_t
)Ë

	)

62 
	#KVAL_SIZE
(
size
Ë(
PMIX_MAX_KEYLEN
 + 1 + (
size_t
Ë+ size)

	)

64 
_°‹e_d©a_f‹_ønk
(
ns_åack_ñem_t
 *
ns_öfo
, 
pmix_ønk_t
 
ønk
, 
pmix_buf„r_t
 *
buf
);

65 
£g_desc_t
 *
_¸óã_√w_£gmít
(
£gmít_ty≥
 
ty≥
, *
n¢ame
, 
uöt32_t
 
id
);

66 
£g_desc_t
 *
_©èch_√w_£gmít
(
£gmít_ty≥
 
ty≥
, *
n¢ame
, 
uöt32_t
 
id
);

67 
_upd©e_ns_ñem
(
ns_åack_ñem_t
 *
ns_ñem
, 
ns_£g_öfo_t
 *
öfo
);

68 
_put_ns_öfo_to_öôül_£gmít
(c⁄° *
n•a˚
, 
pmix_sm_£g_t
 *
mëa£g
,Ömix_sm_£g_à*
d©a£g
);

69 
ns_£g_öfo_t
 *
_gë_ns_öfo_‰om_öôül_£gmít
(c⁄° *
n•a˚
);

70 
ns_åack_ñem_t
 *
_gë_åack_ñem_f‹_«me•a˚
(c⁄° *
n•a˚
);

71 
ønk_mëa_öfo
 *
_gë_ønk_mëa_öfo
(
pmix_ønk_t
 
ønk
, 
£g_desc_t
 *
£gdesc
);

72 
uöt8_t
 *
_gë_d©a_ªgi⁄_by_off£t
(
£g_desc_t
 *
£gdesc
, 
size_t
 
off£t
);

73 
_upd©e_öôül_£gmít_öfo
();

74 
_£t_c⁄°™ts_‰om_ív
();

75 
_dñëe_sm_desc
(
£g_desc_t
 *
desc
);

76 
_pmix_gë∑gesize
();

77 
ölöe
 
uöt32_t
 
_gë_univ_size
(c⁄° *
n•a˚
);

79 
£g_desc_t
 *
	g_globÆ_sm_£g_fú°
;

80 
£g_desc_t
 *
	g_globÆ_sm_£g_œ°
;

81 
pmix_li°_t
 
	g_«me•a˚_öfo_li°
;

82 *
	g_ba£_∑th
 = 
NULL
;

83 
size_t
 
	g_öôül_£gmít_size
 = 0;

84 
size_t
 
	g_max_ns_num
;

85 
size_t
 
	g_mëa_£gmít_size
 = 0;

86 
size_t
 
	g_max_mëa_ñems
;

87 
size_t
 
	g_d©a_£gmít_size
 = 0;

88 
	g_lockfd
;

89 *
	g_lockfûe_«me
;

90 *
	g_n•a˚_∑th
 = 
NULL
;

91 
uid_t
 
	gjobuid
;

92 
	g£tjobuid
 = 0;

101 
	g_dúe˘_mode
 = 0;

103 
	$nc⁄
(
ns_åack_ñem_t
 *
p
) {

104 
	`mem£t
(
p
->
ns_«me
, 0, (p->ns_name));

105 
p
->
mëa_£g
 = 
NULL
;

106 
p
->
d©a_£g
 = 
NULL
;

107 
p
->
num_mëa_£g
 = 0;

108 
p
->
num_d©a_£g
 = 0;

109 
	}
}

111 
	$ndes
(
ns_åack_ñem_t
 *
p
) {

112 
	`_dñëe_sm_desc
(
p
->
mëa_£g
);

113 
	`_dñëe_sm_desc
(
p
->
d©a_£g
);

114 
	}
}

116 
PMIX_CLASS_INSTANCE
(
ns_åack_ñem_t
,

117 
pmix_li°_ôem_t
,

118 
nc⁄
, 
ndes
);

120 
ölöe
 
	$_is_£rvî
()

122  (
pmix_globÆs
.
£rvî
);

123 
	}
}

125 
ölöe
 c⁄° *
	$_unique_id
()

127 c⁄° *
°r
 = 
NULL
;

128 i‡(!
°r
) {

132 i‡(
	`_is_£rvî
()) {

133 
buf
[100];

134 
	`¢¥ötf
(
buf
, (bufË- 1, "pmix-%d", 
	`gëpid
());

135 
°r
 = 
buf
;

137 
°r
 = 
	`gëív
("PMIX_SERVER_URI");

138 i‡(
°r
) {

139 
°r
 = 
	`°ºchr
(str, '/');

141 
°r
 = (str ? str + 1 : "$$$");

144  
°r
;

145 
	}
}

147 
	$_esh_öô
(
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

149 
rc
;

150 
£g_desc_t
 *
£g
;

151 
size_t
 
n
;

153 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

154 "%s:%d:%s", 
__FILE__
, 
__LINE__
, 
__func__
));

157 i‡(
	`_is_£rvî
()) {

159 i‡(
NULL
 !
öfo
) {

160 
n
=0;Ç < 
nöfo
;Ç++) {

161 i‡(0 =
	`°rcmp
(
PMIX_USERID
, 
öfo
[
n
].
key
)) {

162 
jobuid
 = 
öfo
[
n
].
vÆue
.
d©a
.
uöt32
;

163 
£tjobuid
 = 1;

166 i‡(0 =
	`°rcmp
(
PMIX_DSTPATH
, 
öfo
[
n
].
key
)) {

177 if(
_ba£_∑th
 !
NULL
)

178 
	`‰ì
(
_ba£_∑th
);

179 
_ba£_∑th
 = 
	`°rdup
((*)
öfo
[
n
].
vÆue
.
d©a
.
±r
);

182 i‡(0 =
	`°rcmp
(
PMIX_SERVER_TMPDIR
, 
öfo
[
n
].
key
)) {

183 i‡(
NULL
 ==
_ba£_∑th
) {

184 
_ba£_∑th
 = 
	`°rdup
((*)
öfo
[
n
].
vÆue
.
d©a
.
°rög
);

191 i‡(
NULL
 ==
_ba£_∑th
) {

192 i‡(
NULL
 =(
_ba£_∑th
 = 
	`gëív
("TMPDIR"))) {

193 i‡(
NULL
 =(
_ba£_∑th
 = 
	`gëív
("TEMP"))) {

194 i‡(
NULL
 =(
_ba£_∑th
 = 
	`gëív
("TMP"))) {

195 
_ba£_∑th
 = "/tmp";

203 i‡(
NULL
 =(
_ba£_∑th
 = 
	`gëív
(
PMIX_DSTORE_ESH_BASE_PATH
))){

204 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

205  
PMIX_ERROR
;

208 i‡(0 > 
	`a•rötf
(&
_n•a˚_∑th
, "%s/%s", 
_ba£_∑th
, 
pmix_globÆs
.
myid
.
n•a˚
)) {

209 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

210  
PMIX_ERROR
;

214 
rc
 = 
	`pmix_sm_öô
();

215 i‡(
PMIX_SUCCESS
 !
rc
) {

216 
	`PMIX_ERROR_LOG
(
rc
);

217  
rc
;

220 
	`PMIX_CONSTRUCT
(&
_«me•a˚_öfo_li°
, 
pmix_li°_t
);

221 
_globÆ_sm_£g_fú°
 = 
NULL
;

222 
_globÆ_sm_£g_œ°
 = 
NULL
;

223 
	`_£t_c⁄°™ts_‰om_ív
();

224 
_max_ns_num
 = (
_öôül_£gmít_size
 - (
size_t
Ë- ()Ë/ (
ns_£g_öfo_t
);

225 
_max_mëa_ñems
 = (
_mëa_£gmít_size
 - (
size_t
)Ë/ (
ønk_mëa_öfo
);

227 i‡(
	`_is_£rvî
()){

228  
PMIX_SUCCESS
;

234 if(0 > 
	`a•rötf
(&
_lockfûe_«me
, "%s/%s_dstore_sm.lock",

235 
_n•a˚_∑th
, 
	`_unique_id
())) {

236 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

237  
PMIX_ERROR
;

239 
_lockfd
 = 
	`›í
(
_lockfûe_«me
, 
O_RDONLY
);

241 i‡(-1 =
_lockfd
) {

242 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

243  
PMIX_ERROR
;

246 
£g
 = 
	`_©èch_√w_£gmít
(
INITIAL_SEGMENT
, 
NULL
, 0);

248 i‡(
NULL
 !
£g
) {

249 
_globÆ_sm_£g_fú°
 = 
£g
;

250 
_globÆ_sm_£g_œ°
 = 
_globÆ_sm_£g_fú°
;

251  
PMIX_SUCCESS
;

255  
PMIX_ERROR
;

256 
	}
}

258 
	$_esh_föÆize
()

260 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

261 "%s:%d:%s", 
__FILE__
, 
__LINE__
, 
__func__
));

263 
	`_dñëe_sm_desc
(
_globÆ_sm_£g_fú°
);

264 
	`PMIX_LIST_DESTRUCT
(&
_«me•a˚_öfo_li°
);

266 
	`˛o£
(
_lockfd
);

267 i‡(
	`_is_£rvî
()) {

268 i‡(
NULL
 !
_lockfûe_«me
) {

269 
	`u∆ök
(
_lockfûe_«me
);

271 i‡(
NULL
 !
_n•a˚_∑th
) {

272 
	`rmdú
(
_n•a˚_∑th
);

276 i‡(
NULL
 !
_lockfûe_«me
) {

277 
	`‰ì
(
_lockfûe_«me
);

280 i‡(
NULL
 !
_n•a˚_∑th
) {

281 
	`‰ì
(
_n•a˚_∑th
);

284 
	`pmix_sm_föÆize
();

286  
PMIX_SUCCESS
;

287 
	}
}

290 
	$_esh_°‹e
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
, 
pmix_kvÆ_t
 *
kv
)

292 
rc
;

293 
ns_åack_ñem_t
 *
ñem
;

294 
pmix_buf„r_t
 
pbkt
, 
x„r
;

295 
ns_£g_öfo_t
 
ns_öfo
;

297 i‡(
NULL
 =
kv
) {

298  
PMIX_ERROR
;

301 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

303 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
, 
ønk
));

306 
	`Êock
(
_lockfd
, 
LOCK_EX
);

318 
ñem
 = 
	`_gë_åack_ñem_f‹_«me•a˚
(
n•a˚
);

319 i‡(
NULL
 =
ñem
) {

320 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

322 
	`Êock
(
_lockfd
, 
LOCK_UN
);

323  
PMIX_ERROR
;

328 i‡(
NULL
 =
ñem
->
mëa_£g
 || NULL =ñem->
d©a_£g
) {

329 
	`mem£t
(
ns_öfo
.
ns_«me
, 0, (ns_info.ns_name));

330 
	`°∫˝y
(
ns_öfo
.
ns_«me
, 
n•a˚
, (ns_info.ns_name)-1);

331 
ns_öfo
.
num_mëa_£g
 = 1;

332 
ns_öfo
.
num_d©a_£g
 = 1;

333 
rc
 = 
	`_upd©e_ns_ñem
(
ñem
, &
ns_öfo
);

334 i‡(
PMIX_SUCCESS
 !
rc
 || 
NULL
 =
ñem
->
mëa_£g
 || NULL =ñem->
d©a_£g
) {

335 
	`PMIX_ERROR_LOG
(
rc
);

337 
	`Êock
(
_lockfd
, 
LOCK_UN
);

338  
PMIX_ERROR
;

342 
	`mem£t
(
ñem
->
mëa_£g
->
£g_öfo
.
£g_ba£_addr
, 0, 
_mëa_£gmít_size
);

343 
	`mem£t
(
ñem
->
d©a_£g
->
£g_öfo
.
£g_ba£_addr
, 0, 
_d©a_£gmít_size
);

346 
rc
 = 
	`_put_ns_öfo_to_öôül_£gmít
(
n•a˚
, &
ñem
->
mëa_£g
->
£g_öfo
, &ñem->
d©a_£g
->seg_info);

347 i‡(
PMIX_SUCCESS
 !
rc
) {

348 
	`PMIX_ERROR_LOG
(
rc
);

350 
	`Êock
(
_lockfd
, 
LOCK_UN
);

351  
rc
;

357 
	`PMIX_CONSTRUCT
(&
pbkt
, 
pmix_buf„r_t
);

358 
	`PMIX_CONSTRUCT
(&
x„r
, 
pmix_buf„r_t
);

359 
	`PMIX_LOAD_BUFFER
(&
x„r
, 
kv
->
vÆue
->
d©a
.
bo
.
byãs
, kv->vÆue->d©a.bo.
size
);

360 
pmix_buf„r_t
 *
px„r
 = &
x„r
;

361 
pmix_b‰›
.
	`∑ck
(&
pbkt
, &
px„r
, 1, 
PMIX_BUFFER
);

362 
x„r
.
ba£_±r
 = 
NULL
;

363 
x„r
.
byãs_u£d
 = 0;

365 
rc
 = 
	`_°‹e_d©a_f‹_ønk
(
ñem
, 
ønk
, &
pbkt
);

367 
	`PMIX_DESTRUCT
(&
x„r
);

368 
	`PMIX_DESTRUCT
(&
pbkt
);

371 
	`Êock
(
_lockfd
, 
LOCK_UN
);

372  
rc
;

373 
	}
}

375 
	$_esh_„tch
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
, c⁄° *
key
, 
pmix_vÆue_t
 **
kvs
)

377 
ns_£g_öfo_t
 *
ns_öfo
 = 
NULL
;

378 
rc
;

379 
ns_åack_ñem_t
 *
ñem
;

380 
ønk_mëa_öfo
 *
röfo
 = 
NULL
;

381 
size_t
 
kvÆ_˙t
;

382 
£g_desc_t
 *
mëa_£g
, *
d©a_£g
;

383 
uöt8_t
 *
addr
;

384 
pmix_buf„r_t
 
buf„r
;

385 
pmix_vÆue_t
 
vÆ
;

386 
uöt32_t
 
≈rocs
;

387 
pmix_ønk_t
 
cur_ønk
;

389 i‡(
NULL
 =
key
) {

390 
	`PMIX_OUTPUT_VERBOSE
((7, 
pmix_globÆs
.
debug_ouçut
,

392  
PMIX_ERROR
;

395 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

397 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
, 
ønk
, 
key
));

399 i‡(
kvs
) {

400 *
kvs
 = 
NULL
;

403 i‡(
PMIX_RANK_UNDEF
 =
ønk
) {

404 
≈rocs
 = 
	`_gë_univ_size
(
n•a˚
);

405 
cur_ønk
 = 
PMIX_RANK_UNDEF
;

407 
≈rocs
 = 1;

408 
cur_ønk
 = 
ønk
;

412 
	`Êock
(
_lockfd
, 
LOCK_SH
);

427 
	`_upd©e_öôül_£gmít_öfo
();

430 
ns_öfo
 = 
	`_gë_ns_öfo_‰om_öôül_£gmít
(
n•a˚
);

431 i‡(
NULL
 =
ns_öfo
) {

433 
	`PMIX_OUTPUT_VERBOSE
((7, 
pmix_globÆs
.
debug_ouçut
,

435 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
));

437 
	`Êock
(
_lockfd
, 
LOCK_UN
);

438  
PMIX_ERROR
;

442 
ñem
 = 
	`_gë_åack_ñem_f‹_«me•a˚
(
n•a˚
);

443 i‡(
NULL
 =
ñem
) {

444 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

446 
	`Êock
(
_lockfd
, 
LOCK_UN
);

447  
PMIX_ERROR
;

452 
rc
 = 
	`_upd©e_ns_ñem
(
ñem
, 
ns_öfo
);

453 i‡(
PMIX_SUCCESS
 !
rc
) {

454 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

456 
	`Êock
(
_lockfd
, 
LOCK_UN
);

457  
PMIX_ERROR
;

461 
mëa_£g
 = 
ñem
->meta_seg;

462 
d©a_£g
 = 
ñem
->data_seg;

464 
≈rocs
--) {

465 i‡(
PMIX_RANK_UNDEF
 =
ønk
) {

466 
cur_ønk
++;

469 
röfo
 = 
	`_gë_ønk_mëa_öfo
(
cur_ønk
, 
mëa_£g
);

470 i‡(
NULL
 =
röfo
) {

471 
	`PMIX_OUTPUT_VERBOSE
((7, 
pmix_globÆs
.
debug_ouçut
,

473 
__FILE__
, 
__LINE__
, 
__func__
, 
cur_ønk
));

474 
rc
 = 
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

477 
addr
 = 
	`_gë_d©a_ªgi⁄_by_off£t
(
d©a_£g
, 
röfo
->
off£t
);

478 i‡(
NULL
 =
addr
) {

479 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

480 
rc
 = 
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

483 
kvÆ_˙t
 = 
röfo
->
cou¡
;

486 
rc
 = 
PMIX_ERROR
;

488 0 < 
kvÆ_˙t
) {

497 i‡(0 =
	`°∫cmp
((c⁄° *)
addr
, 
ESH_REGION_INVALIDATED
, 
PMIX_MAX_KEYLEN
+1)) {

498 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

500 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
, 
cur_ønk
, 
ESH_REGION_INVALIDATED
));

502 
size_t
 
size
 = *(size_à*)(
addr
 + 
PMIX_MAX_KEYLEN
 + 1);

504 
addr
 +
	`KVAL_SIZE
(
size
);

505 } i‡(0 =
	`°∫cmp
((c⁄° *)
addr
, 
ESH_REGION_EXTENSION
, 
PMIX_MAX_KEYLEN
+1)) {

506 
size_t
 
off£t
 = *(size_à*)(
addr
 + 
PMIX_MAX_KEYLEN
 + 1 + (size_t));

507 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

509 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
, 
cur_ønk
, 
ESH_REGION_EXTENSION
, 
off£t
));

510 i‡(0 < 
off£t
) {

512 
addr
 = 
	`_gë_d©a_ªgi⁄_by_off£t
(
d©a_£g
, 
off£t
);

513 i‡(
NULL
 =
addr
) {

515 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

516 
rc
 = 
PMIX_ERROR
;

517 
d⁄e
;

521 
	`PMIX_OUTPUT_VERBOSE
((7, 
pmix_globÆs
.
debug_ouçut
,

523 
__FILE__
, 
__LINE__
, 
__func__
, 
cur_ønk
, 
key
));

526 } i‡(0 =
	`°∫cmp
((c⁄° *)
addr
, 
key
, 
PMIX_MAX_KEYLEN
+1)) {

527 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

529 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
, 
cur_ønk
, 
key
));

531 
size_t
 
size
 = *(size_à*)(
addr
 + 
PMIX_MAX_KEYLEN
 + 1);

532 
addr
 +
PMIX_MAX_KEYLEN
 + 1 + (
size_t
);

533 
	`PMIX_CONSTRUCT
(&
buf„r
, 
pmix_buf„r_t
);

534 
	`PMIX_LOAD_BUFFER
(&
buf„r
, 
addr
, 
size
);

535 
˙t
 = 1;

537 
	`PMIX_VALUE_CONSTRUCT
(&
vÆ
);

538 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(&
buf„r
, &
vÆ
, &
˙t
, 
PMIX_VALUE
))) {

539 
	`PMIX_ERROR_LOG
(
rc
);

540 } i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`c›y
((**)
kvs
, &
vÆ
, 
PMIX_VALUE
))) {

541 
	`PMIX_ERROR_LOG
(
rc
);

543 
	`PMIX_VALUE_DESTRUCT
(&
vÆ
);

544 
buf„r
.
ba£_±r
 = 
NULL
;

545 
buf„r
.
byãs_u£d
 = 0;

546 
	`PMIX_DESTRUCT
(&
buf„r
);

547 
d⁄e
;

549 
ckey
[
PMIX_MAX_KEYLEN
+1] = {0};

550 
	`°∫˝y
(
ckey
, (c⁄° *)
addr
, 
PMIX_MAX_KEYLEN
+1);

551 
size_t
 
size
 = *(size_à*)(
addr
 + 
PMIX_MAX_KEYLEN
 + 1);

552 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

553 "%s:%d:%s: f‹Ñ™k %s:%u, skù key %†look f‹ key %s", 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
, 
cur_ønk
, 
ckey
, 
key
));

555 
addr
 +
	`KVAL_SIZE
(
size
);

556 
kvÆ_˙t
--;

561 
d⁄e
:

563 
	`Êock
(
_lockfd
, 
LOCK_UN
);

564  
rc
;

565 
	}
}

567 
	$_esh_∑tch_ív
(***
ív
)

569 i‡((
_ba£_∑th
 =
NULL
Ë|| (
	`°æí
(_base_path) == 0)){

570 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

571  
PMIX_ERROR
;

574  
	`pmix_£ãnv
(
PMIX_DSTORE_ESH_BASE_PATH
, 
_ba£_∑th
, 
åue
, 
ív
);

575 
	}
}

577 
	$_esh_n•a˚
(c⁄° *
n•a˚
)

579 
°©
 
°
 = {0};

580 
£g_desc_t
 *
£g
;

582 i‡(0 > 
	`a•rötf
(&
_n•a˚_∑th
, "%s/%s", 
_ba£_∑th
, 
n•a˚
)) {

583 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

584  
PMIX_ERROR
;

587 i‡(
	`°©
(
_n•a˚_∑th
, &
°
) == -1){

588 i‡(0 !
	`mkdú
(
_n•a˚_∑th
, 0770)) {

589  
PMIX_ERROR
;

593 i‡(
£tjobuid
) {

594 i‡(
	`chown
(
_n•a˚_∑th
, (
uid_t
Ë
jobuid
, (
gid_t
) -1) < 0){

595 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

599 i‡(0 > 
	`a•rötf
(&
_lockfûe_«me
, "%s/%s_d°‹e_sm.lock", 
_n•a˚_∑th
, 
	`_unique_id
())) {

600 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

601  
PMIX_ERROR
;

604 
_lockfd
 = 
	`›í
(
_lockfûe_«me
, 
O_CREAT
 | 
O_RDWR
 | 
O_EXCL
, 0600);

607 i‡(-1 =
_lockfd
) {

608 
	`u∆ök
(
_lockfûe_«me
);

609 
_lockfd
 = 
	`›í
(
_lockfûe_«me
, 
O_CREAT
 | 
O_RDWR
, 0600);

612 i‡–
£tjobuid
 && (
_lockfd
 != -1)) {

613 i‡(
	`chown
(
_lockfûe_«me
, (
uid_t
Ë
jobuid
, (
gid_t
) -1) < 0) {

614 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

615  
PMIX_ERROR
;

618 i‡(0 !
	`chmod
(
_lockfûe_«me
, 
S_IRUSR
 | 
S_IWGRP
 | 
S_IRGRP
)) {

619 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

620  
PMIX_ERROR
;

624 
£g
 = 
	`_¸óã_√w_£gmít
(
INITIAL_SEGMENT
, 
NULL
, 0);

626 i‡(
NULL
 =
£g
) {

627 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

628  
PMIX_ERROR
;

631 
_globÆ_sm_£g_fú°
 = 
£g
;

632 
_globÆ_sm_£g_œ°
 = 
_globÆ_sm_£g_fú°
;

634  
PMIX_SUCCESS
;

635 
	}
}

637 
	$_£t_c⁄°™ts_‰om_ív
()

639 *
°r
;

640 
∑ge_size
 = 
	`_pmix_gë∑gesize
();

642 if–
NULL
 !(
°r
 = 
	`gëív
(
ESH_ENV_INITIAL_SEG_SIZE
)) ) {

643 
_öôül_£gmít_size
 = 
	`°πoul
(
°r
, 
NULL
, 10);

644 i‡((
size_t
)
∑ge_size
 > 
_öôül_£gmít_size
) {

645 
_öôül_£gmít_size
 = (
size_t
)
∑ge_size
;

648 i‡(0 =
_öôül_£gmít_size
) {

649 
_öôül_£gmít_size
 = 
INITIAL_SEG_SIZE
;

651 if–
NULL
 !(
°r
 = 
	`gëív
(
ESH_ENV_NS_META_SEG_SIZE
)) ) {

652 
_mëa_£gmít_size
 = 
	`°πoul
(
°r
, 
NULL
, 10);

653 i‡((
size_t
)
∑ge_size
 > 
_mëa_£gmít_size
) {

654 
_mëa_£gmít_size
 = (
size_t
)
∑ge_size
;

657 i‡(0 =
_mëa_£gmít_size
) {

658 
_mëa_£gmít_size
 = 
NS_META_SEG_SIZE
;

660 if–
NULL
 !(
°r
 = 
	`gëív
(
ESH_ENV_NS_DATA_SEG_SIZE
)) ) {

661 
_d©a_£gmít_size
 = 
	`°πoul
(
°r
, 
NULL
, 10);

662 i‡((
size_t
)
∑ge_size
 > 
_d©a_£gmít_size
) {

663 
_d©a_£gmít_size
 = (
size_t
)
∑ge_size
;

666 i‡(0 =
_d©a_£gmít_size
) {

667 
_d©a_£gmít_size
 = 
NS_DATA_SEG_SIZE
;

669 i‡(
NULL
 !(
°r
 = 
	`gëív
(
ESH_ENV_LINEAR
))) {

670 i‡(1 =
	`°πoul
(
°r
, 
NULL
, 10)) {

671 
_dúe˘_mode
 = 1;

674 
	}
}

676 
	$_dñëe_sm_desc
(
£g_desc_t
 *
desc
)

678 
£g_desc_t
 *
tmp
;

681 
NULL
 !
desc
) {

682 
tmp
 = 
desc
->
√xt
;

684 i‡(
desc
->
£g_öfo
.
£g_˝id
 =
	`gëpid
()) {

685 
	`pmix_sm_£gmít_u∆ök
(&
desc
->
£g_öfo
);

687 
	`pmix_sm_£gmít_dëach
(&
desc
->
£g_öfo
);

688 
	`‰ì
(
desc
);

689 
desc
 = 
tmp
;

691 
	}
}

693 
	$_pmix_gë∑gesize
()

695 #i‡
	`deföed
(
_SC_PAGESIZE
 )

696  
	`sysc⁄f
(
_SC_PAGESIZE
);

697 #ñi‡
	`deföed
(
_SC_PAGE_SIZE
)

698  
	`sysc⁄f
(
_SC_PAGE_SIZE
);

702 
	}
}

704 
£g_desc_t
 *
	$_¸óã_√w_£gmít
(
£gmít_ty≥
 
ty≥
, *
n¢ame
, 
uöt32_t
 
id
)

706 
rc
;

707 
fûe_«me
[
PMIX_PATH_MAX
];

708 
size_t
 
size
;

709 
£g_desc_t
 *
√w_£g
 = 
NULL
;

711 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

713 
__FILE__
, 
__LINE__
, 
__func__
, 
ty≥
, 
n¢ame
, 
id
));

715 
ty≥
) {

716 
INITIAL_SEGMENT
:

717 
size
 = 
_öôül_£gmít_size
;

718 
	`¢¥ötf
(
fûe_«me
, 
PMIX_PATH_MAX
, "%s/%s_öôül-pmix_sh¨ed-£gmít-%u", 
_n•a˚_∑th
, 
	`_unique_id
(), 
id
);

720 
NS_META_SEGMENT
:

721 
size
 = 
_mëa_£gmít_size
;

722 
	`¢¥ötf
(
fûe_«me
, 
PMIX_PATH_MAX
, "%s/%s_sm£g-%s-%u", 
_n•a˚_∑th
, 
	`_unique_id
(), 
n¢ame
, 
id
);

724 
NS_DATA_SEGMENT
:

725 
size
 = 
_d©a_£gmít_size
;

726 
	`¢¥ötf
(
fûe_«me
, 
PMIX_PATH_MAX
, "%s/%s_smd©a£g-%s-%d", 
_n•a˚_∑th
, 
	`_unique_id
(), 
n¢ame
, 
id
);

729 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

730  
NULL
;

732 
√w_£g
 = (
£g_desc_t
*)
	`mÆloc
((seg_desc_t));

733 i‡(
√w_£g
) {

734 
√w_£g
->
id
 = id;

735 
√w_£g
->
√xt
 = 
NULL
;

736 
√w_£g
->
ty≥
 =Åype;

737 
rc
 = 
	`pmix_sm_£gmít_¸óã
(&
√w_£g
->
£g_öfo
, 
fûe_«me
, 
size
);

738 i‡(
PMIX_SUCCESS
 =
rc
) {

739 
	`mem£t
(
√w_£g
->
£g_öfo
.
£g_ba£_addr
, 0, 
size
);

741 
	`‰ì
(
√w_£g
);

742 
√w_£g
 = 
NULL
;

743 
	`PMIX_ERROR_LOG
(
rc
);

745 i‡(
£tjobuid
 && 
	`_is_£rvî
()){

746 i‡(
	`chown
(
fûe_«me
, (
uid_t
Ë
jobuid
, (
gid_t
) -1) < 0){

747 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

750 i‡(0 !
	`chmod
(
fûe_«me
, 
S_IRUSR
 | 
S_IRGRP
 | 
S_IWGRP
 )) {

751 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

755  
√w_£g
;

756 
	}
}

758 
£g_desc_t
 *
	$_©èch_√w_£gmít
(
£gmít_ty≥
 
ty≥
, *
n¢ame
, 
uöt32_t
 
id
)

760 
rc
;

761 
£g_desc_t
 *
√w_£g
 = 
NULL
;

762 
√w_£g
 = (
£g_desc_t
*)
	`mÆloc
((seg_desc_t));

763 
√w_£g
->
id
 = id;

764 
√w_£g
->
√xt
 = 
NULL
;

765 
√w_£g
->
ty≥
 =Åype;

767 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

769 
__FILE__
, 
__LINE__
, 
__func__
, 
ty≥
, 
n¢ame
, 
id
));

771 
ty≥
) {

772 
INITIAL_SEGMENT
:

773 
√w_£g
->
£g_öfo
.
£g_size
 = 
_öôül_£gmít_size
;

774 
	`¢¥ötf
(
√w_£g
->
£g_öfo
.
£g_«me
, 
PMIX_PATH_MAX
, "%s/%s_öôül-pmix_sh¨ed-£gmít-%u", 
_n•a˚_∑th
, 
	`_unique_id
(), 
id
);

776 
NS_META_SEGMENT
:

777 
√w_£g
->
£g_öfo
.
£g_size
 = 
_mëa_£gmít_size
;

778 
	`¢¥ötf
(
√w_£g
->
£g_öfo
.
£g_«me
, 
PMIX_PATH_MAX
, "%s/%s_sm£g-%s-%u", 
_n•a˚_∑th
, 
	`_unique_id
(), 
n¢ame
, 
id
);

780 
NS_DATA_SEGMENT
:

781 
√w_£g
->
£g_öfo
.
£g_size
 = 
_d©a_£gmít_size
;

782 
	`¢¥ötf
(
√w_£g
->
£g_öfo
.
£g_«me
, 
PMIX_PATH_MAX
, "%s/%s_smd©a£g-%s-%d", 
_n•a˚_∑th
, 
	`_unique_id
(), 
n¢ame
, 
id
);

785 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

786  
NULL
;

788 
rc
 = 
	`pmix_sm_£gmít_©èch
(&
√w_£g
->
£g_öfo
, 
PMIX_SM_RONLY
);

789 i‡(
PMIX_SUCCESS
 !
rc
) {

790 
	`‰ì
(
√w_£g
);

791 
√w_£g
 = 
NULL
;

792 
	`PMIX_ERROR_LOG
(
rc
);

794  
√w_£g
;

795 
	}
}

798 
	$_upd©e_ns_ñem
(
ns_åack_ñem_t
 *
ns_ñem
, 
ns_£g_öfo_t
 *
öfo
)

800 
£g_desc_t
 *
£g
, *
tmp
 = 
NULL
;

801 
size_t
 
i
, 
offs
;

803 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

805 
__FILE__
, 
__LINE__
, 
__func__
));

807 
tmp
 = 
ns_ñem
->
mëa_£g
;

808 i‡(
NULL
 !
tmp
) {

809 
NULL
 !
tmp
->
√xt
) {

810 
tmp
 =Åmp->
√xt
;

815 
i
 = 
ns_ñem
->
num_mëa_£g
; i < 
öfo
->num_meta_seg; i++) {

816 i‡(
	`_is_£rvî
()) {

817 
£g
 = 
	`_¸óã_√w_£gmít
(
NS_META_SEGMENT
, 
öfo
->
ns_«me
, 
i
);

819 
£g
 = 
	`_©èch_√w_£gmít
(
NS_META_SEGMENT
, 
öfo
->
ns_«me
, 
i
);

821 i‡(
NULL
 =
£g
) {

822 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

823  
PMIX_ERROR
;

825 i‡(
NULL
 =
tmp
) {

826 
ns_ñem
->
mëa_£g
 = 
£g
;

828 
tmp
->
√xt
 = 
£g
;

830 
tmp
 = 
£g
;

831 
ns_ñem
->
num_mëa_£g
++;

834 
tmp
 = 
ns_ñem
->
d©a_£g
;

835 i‡(
NULL
 !
tmp
) {

836 
NULL
 !
tmp
->
√xt
) {

837 
tmp
 =Åmp->
√xt
;

841 
i
 = 
ns_ñem
->
num_d©a_£g
; i < 
öfo
->num_data_seg; i++) {

842 i‡(
	`_is_£rvî
()) {

843 
£g
 = 
	`_¸óã_√w_£gmít
(
NS_DATA_SEGMENT
, 
öfo
->
ns_«me
, 
i
);

844 i‡(
£g
) {

845 
offs
 = (
size_t
);

846 
	`mem˝y
(
£g
->
£g_öfo
.
£g_ba£_addr
, &
offs
, (
size_t
));

849 
£g
 = 
	`_©èch_√w_£gmít
(
NS_DATA_SEGMENT
, 
öfo
->
ns_«me
, 
i
);

851 i‡(
NULL
 =
£g
) {

852 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

853  
PMIX_ERROR
;

855 i‡(
NULL
 =
tmp
) {

856 
ns_ñem
->
d©a_£g
 = 
£g
;

858 
tmp
->
√xt
 = 
£g
;

860 
tmp
 = 
£g
;

861 
ns_ñem
->
num_d©a_£g
++;

864  
PMIX_SUCCESS
;

865 
	}
}

867 
£g_desc_t
 *
	$exãnd_£gmít
(
£g_desc_t
 *
£gdesc
, *
n•a˚
)

869 
£g_desc_t
 *
tmp
, *
£g
;

871 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

873 
__FILE__
, 
__LINE__
, 
__func__
));

875 
tmp
 = 
£gdesc
;

876 
NULL
 !
tmp
->
√xt
) {

877 
tmp
 =Åmp->
√xt
;

880 
£g
 = 
	`_¸óã_√w_£gmít
(
£gdesc
->
ty≥
, 
n•a˚
, 
tmp
->
id
 + 1);

881 i‡(
NULL
 =
£g
) {

882 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

883  
NULL
;

886 
tmp
->
√xt
 = 
£g
;

888  
£g
;

889 
	}
}

891 
	$_put_ns_öfo_to_öôül_£gmít
(c⁄° *
n•a˚
, 
pmix_sm_£g_t
 *
mëa£g
,Ömix_sm_£g_à*
d©a£g
)

893 
ns_£g_öfo_t
 
ñem
;

894 
size_t
 
num_ñems
;

895 
num_ñems
 = *((
size_t
*)(
_globÆ_sm_£g_œ°
->
£g_öfo
.
£g_ba£_addr
));

896 
£g_desc_t
 *
œ°_£g
 = 
_globÆ_sm_£g_œ°
;

898 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

899 "%s:%d:%s", 
__FILE__
, 
__LINE__
, 
__func__
));

901 i‡(
_max_ns_num
 =
num_ñems
) {

902 i‡(
NULL
 =(
œ°_£g
 = 
	`exãnd_£gmít
(last_seg, NULL))) {

903 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

904  
PMIX_ERROR
;

907 
fuŒ
 = 1;

908 
	`mem˝y
((
uöt8_t
*)(
_globÆ_sm_£g_œ°
->
£g_öfo
.
£g_ba£_addr
 + (
size_t
)), &
fuŒ
, ());

909 
_globÆ_sm_£g_œ°
 = 
œ°_£g
;

910 
	`mem£t
(
_globÆ_sm_£g_œ°
->
£g_öfo
.
£g_ba£_addr
, 0, 
_öôül_£gmít_size
);

912 
	`mem£t
(
ñem
.
ns_«me
, 0, (elem.ns_name));

913 
	`°∫˝y
(
ñem
.
ns_«me
, 
n•a˚
, (elem.ns_name)-1);

914 
ñem
.
num_mëa_£g
 = 1;

915 
ñem
.
num_d©a_£g
 = 1;

916 
	`mem˝y
((
uöt8_t
*)(
_globÆ_sm_£g_œ°
->
£g_öfo
.
£g_ba£_addr
Ë+ (
size_t
Ë+ (Ë+ 
num_ñems
 * (
ns_£g_öfo_t
),

917 &
ñem
, (
ns_£g_öfo_t
));

918 
num_ñems
++;

919 
	`mem˝y
((
uöt8_t
*)(
_globÆ_sm_£g_œ°
->
£g_öfo
.
£g_ba£_addr
), &
num_ñems
, (
size_t
));

920  
PMIX_SUCCESS
;

921 
	}
}

924 
	$_upd©e_öôül_£gmít_öfo
()

926 
£g_desc_t
 *
tmp
;

927 
tmp
 = 
_globÆ_sm_£g_fú°
;

929 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

930 "%s:%d:%s", 
__FILE__
, 
__LINE__
, 
__func__
));

935 i‡(
NULL
 =
tmp
->
√xt
 && 1 =*((*)((
uöt8_t
*)—mp->
£g_öfo
.
£g_ba£_addr
Ë+ (
size_t
)))) {

936 
tmp
->
√xt
 = 
	`_©èch_√w_£gmít
(
INITIAL_SEGMENT
, 
NULL
,Åmp->
id
+1);

938 
tmp
 =Åmp->
√xt
;

940 
NULL
 !
tmp
);

941 
	}
}

944 
ns_£g_öfo_t
 *
	$_gë_ns_öfo_‰om_öôül_£gmít
(c⁄° *
n•a˚
)

946 
rc
;

947 
size_t
 
i
;

948 
£g_desc_t
 *
tmp
;

949 
ns_£g_öfo_t
 *
ñem
, *
cur_ñem
;

950 
ñem
 = 
NULL
;

951 
size_t
 
num_ñems
;

953 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

954 "%s:%d:%s", 
__FILE__
, 
__LINE__
, 
__func__
));

956 
tmp
 = 
_globÆ_sm_£g_fú°
;

958 
rc
 = 1;

961 
num_ñems
 = *((
size_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
));

962 
i
 = 0; i < 
num_ñems
; i++) {

963 
cur_ñem
 = (
ns_£g_öfo_t
*)((
uöt8_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
Ë+ (
size_t
Ë+ (Ë+ 
i
 * (ns_seg_info_t));

964 i‡(0 =(
rc
 = 
	`°∫cmp
(
cur_ñem
->
ns_«me
, 
n•a˚
, 
	`°æí
(nspace)+1))) {

968 i‡(0 =
rc
) {

969 
ñem
 = 
cur_ñem
;

972 
tmp
 =Åmp->
√xt
;

974 
NULL
 !
tmp
);

975  
ñem
;

976 
	}
}

978 
ns_åack_ñem_t
 *
	$_gë_åack_ñem_f‹_«me•a˚
(c⁄° *
n•a˚
)

980 
ns_åack_ñem_t
 *
√w_ñem
 = 
NULL
;

982 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

984 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
));

987 
	`PMIX_LIST_FOREACH
(
√w_ñem
, &
_«me•a˚_öfo_li°
, 
ns_åack_ñem_t
) {

988 i‡(0 =
	`°∫cmp
(
n•a˚
, 
√w_ñem
->
ns_«me
, 
PMIX_MAX_NSLEN
+1)) {

991 
	`PMIX_OUTPUT_VERBOSE
((7, 
pmix_globÆs
.
debug_ouçut
,

993 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
));

994  
√w_ñem
;

998 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1000 
__FILE__
, 
__LINE__
, 
__func__
, 
n•a˚
));

1003 
√w_ñem
 = 
	`PMIX_NEW
(
ns_åack_ñem_t
);

1004 
	`°∫˝y
(
√w_ñem
->
ns_«me
, 
n•a˚
, (new_elem->ns_name)-1);

1006 
	`pmix_li°_≠≥nd
(&
_«me•a˚_öfo_li°
, &
√w_ñem
->
su≥r
);

1008  
√w_ñem
;

1009 
	}
}

1011 
ønk_mëa_öfo
 *
	$_gë_ønk_mëa_öfo
(
pmix_ønk_t
 
ønk
, 
£g_desc_t
 *
£gdesc
)

1013 
size_t
 
i
;

1014 
ønk_mëa_öfo
 *
ñem
 = 
NULL
;

1015 
£g_desc_t
 *
tmp
 = 
£gdesc
;

1016 
size_t
 
num_ñems
, 
ªl_off£t
;

1017 
id
;

1018 
ønk_mëa_öfo
 *
cur_ñem
;

1020 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1022 
__FILE__
, 
__LINE__
, 
__func__
));

1024 i‡(1 =
_dúe˘_mode
) {

1029 
num_ñems
 = *((
size_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
));

1030 
i
 = 0; i < 
num_ñems
; i++) {

1031 
cur_ñem
 = (
ønk_mëa_öfo
*)((
uöt8_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
Ë+ (
size_t
Ë+ 
i
 * (rank_meta_info));

1032 i‡(
ønk
 =
cur_ñem
->rank) {

1033 
ñem
 = 
cur_ñem
;

1037 
tmp
 =Åmp->
√xt
;

1039 
NULL
 !
tmp
 && NULL =
ñem
);

1043 
id
 = 
ønk
/
_max_mëa_ñems
;

1044 
ªl_off£t
 = (
ønk
%
_max_mëa_ñems
Ë* (
ønk_mëa_öfo
Ë+ (
size_t
);

1047 
NULL
 !
tmp
->
√xt
 && 0 !
id
) {

1048 
tmp
 =Åmp->
√xt
;

1049 
id
--;

1051 i‡(0 =
id
) {

1053 
ñem
 = (
ønk_mëa_öfo
*)((
uöt8_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
Ë+ 
ªl_off£t
);

1054 i‡–0 =
ñem
->
off£t
) {

1056 
ñem
 = 
NULL
;

1060  
ñem
;

1061 
	}
}

1063 
	$£t_ønk_mëa_öfo
(
ns_åack_ñem_t
 *
ns_öfo
, 
ønk_mëa_öfo
 *
röfo
)

1066 
£g_desc_t
 *
tmp
;

1067 
size_t
 
num_ñems
, 
ªl_off£t
;

1068 
id
, 
cou¡
;

1069 
ønk_mëa_öfo
 *
cur_ñem
;

1071 i‡(!
ns_öfo
 || !
röfo
) {

1072 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1073  
PMIX_ERROR
;

1076 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

1078 
__FILE__
, 
__LINE__
, 
__func__
,

1079 
ns_öfo
->
ns_«me
, 
röfo
->
ønk
,Ñöfo->
off£t
,Ñöfo->
cou¡
));

1081 
tmp
 = 
ns_öfo
->
mëa_£g
;

1082 i‡(1 =
_dúe˘_mode
) {

1084 
NULL
 !
tmp
->
√xt
) {

1085 
tmp
 =Åmp->
√xt
;

1087 
num_ñems
 = *((
size_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
));

1088 i‡(
_max_mëa_ñems
 <
num_ñems
) {

1089 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

1091 
__FILE__
, 
__LINE__
, 
__func__
, 
ns_öfo
->
ns_«me
));

1093 
tmp
 = 
	`exãnd_£gmít
—mp, 
ns_öfo
->
ns_«me
);

1094 i‡(
NULL
 =
tmp
) {

1095 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1096  
PMIX_ERROR
;

1098 
ns_öfo
->
num_mëa_£g
++;

1099 
	`mem£t
(
tmp
->
£g_öfo
.
£g_ba£_addr
, 0, (
ønk_mëa_öfo
));

1101 
ns_£g_öfo_t
 *
ñem
 = 
	`_gë_ns_öfo_‰om_öôül_£gmít
(
ns_öfo
->
ns_«me
);

1102 i‡(
NULL
 =
ñem
) {

1103 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1104  
PMIX_ERROR
;

1106 i‡(
ns_öfo
->
num_mëa_£g
 !
ñem
->num_meta_seg) {

1107 
ñem
->
num_mëa_£g
 = 
ns_öfo
->num_meta_seg;

1109 
num_ñems
 = 0;

1111 
cur_ñem
 = (
ønk_mëa_öfo
*)((
uöt8_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
Ë+ (
size_t
Ë+ 
num_ñems
 * (rank_meta_info));

1112 
	`mem˝y
(
cur_ñem
, 
röfo
, (
ønk_mëa_öfo
));

1113 
num_ñems
++;

1114 
	`mem˝y
(
tmp
->
£g_öfo
.
£g_ba£_addr
, &
num_ñems
, (
size_t
));

1118 
id
 = 
röfo
->
ønk
/
_max_mëa_ñems
;

1119 
ªl_off£t
 = (
röfo
->
ønk
 % 
_max_mëa_ñems
Ë* (
ønk_mëa_öfo
Ë+ (
size_t
);

1120 
cou¡
 = 
id
;

1123 
NULL
 !
tmp
->
√xt
 && 0 !
cou¡
) {

1124 
tmp
 =Åmp->
√xt
;

1125 
cou¡
--;

1128 i‡(()
ns_öfo
->
num_mëa_£g
 < (
id
+1)) {

1129 ()
ns_öfo
->
num_mëa_£g
 !(
id
+1)) {

1131 
tmp
 = 
	`exãnd_£gmít
—mp, 
ns_öfo
->
ns_«me
);

1132 i‡(
NULL
 =
tmp
) {

1133 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1134  
PMIX_ERROR
;

1136 
	`mem£t
(
tmp
->
£g_öfo
.
£g_ba£_addr
, 0, (
ønk_mëa_öfo
));

1137 
ns_öfo
->
num_mëa_£g
++;

1140 
ns_£g_öfo_t
 *
ñem
 = 
	`_gë_ns_öfo_‰om_öôül_£gmít
(
ns_öfo
->
ns_«me
);

1141 i‡(
NULL
 =
ñem
) {

1142 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1143  
PMIX_ERROR
;

1145 i‡(
ns_öfo
->
num_mëa_£g
 !
ñem
->num_meta_seg) {

1146 
ñem
->
num_mëa_£g
 = 
ns_öfo
->num_meta_seg;

1150 
cur_ñem
 = (
ønk_mëa_öfo
*)((
uöt8_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
Ë+ 
ªl_off£t
);

1151 
	`mem˝y
(
cur_ñem
, 
röfo
, (
ønk_mëa_öfo
));

1153  
PMIX_SUCCESS
;

1154 
	}
}

1156 
uöt8_t
 *
	$_gë_d©a_ªgi⁄_by_off£t
(
£g_desc_t
 *
£gdesc
, 
size_t
 
off£t
)

1158 
£g_desc_t
 *
tmp
 = 
£gdesc
;

1159 
size_t
 
ªl_off£t
 = 
off£t
;

1160 
uöt8_t
 *
d©Øddr
 = 
NULL
;

1162 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1164 
__FILE__
, 
__LINE__
, 
__func__
));

1168 i‡(
ªl_off£t
 >
_d©a_£gmít_size
) {

1169 
ªl_off£t
 -
_d©a_£gmít_size
;

1171 
d©Øddr
 = 
tmp
->
£g_öfo
.
£g_ba£_addr
 + 
ªl_off£t
;

1173 
tmp
 =Åmp->
√xt
;

1175 
NULL
 !
tmp
 && NULL =
d©Øddr
);

1176  
d©Øddr
;

1177 
	}
}

1179 
size_t
 
	$gë_‰ì_off£t
(
£g_desc_t
 *
d©a_£g
)

1181 
size_t
 
off£t
;

1182 
£g_desc_t
 *
tmp
;

1183 
id
 = 0;

1184 
tmp
 = 
d©a_£g
;

1186 
NULL
 !
tmp
->
√xt
) {

1187 
tmp
 =Åmp->
√xt
;

1188 
id
++;

1190 
off£t
 = *((
size_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
));

1191 i‡(0 =
off£t
) {

1193 
off£t
 = (
size_t
);

1195  (
id
 * 
_d©a_£gmít_size
 + 
off£t
);

1196 
	}
}

1198 
	$put_em±y_ext_¶Ÿ
(
£g_desc_t
 *
d©a£g
)

1200 
size_t
 
globÆ_off£t
, 
ªl_off£t
, 
d©a_íded
, 
sz
, 
vÆ
;

1201 
uöt8_t
 *
addr
;

1202 
globÆ_off£t
 = 
	`gë_‰ì_off£t
(
d©a£g
);

1203 
ªl_off£t
 = 
globÆ_off£t
 % 
_d©a_£gmít_size
;

1204 i‡(
ªl_off£t
 + 
EXT_SLOT_SIZE
 > 
_d©a_£gmít_size
) {

1205  
PMIX_ERROR
;

1207 
addr
 = 
	`_gë_d©a_ªgi⁄_by_off£t
(
d©a£g
, 
globÆ_off£t
);

1208 
	`°∫˝y
((*)
addr
, 
ESH_REGION_EXTENSION
, 
PMIX_MAX_KEYLEN
+1);

1209 
vÆ
 = 0;

1210 
sz
 = (
size_t
);

1211 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1, &
sz
, sz);

1212 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1 + (
size_t
), &
vÆ
, 
sz
);

1215 
d©a_íded
 = 
ªl_off£t
 + 
EXT_SLOT_SIZE
;

1216 
addr
 = (
uöt8_t
*)◊dd∏- 
ªl_off£t
);

1217 
	`mem˝y
(
addr
, &
d©a_íded
, (
size_t
));

1218  
PMIX_SUCCESS
;

1219 
	}
}

1221 
size_t
 
	$put_d©a_to_the_íd
(
ns_åack_ñem_t
 *
ns_öfo
, 
£g_desc_t
 *
d©a£g
, *
key
, *
buf„r
, 
size_t
 
size
)

1223 
size_t
 
off£t
;

1224 
£g_desc_t
 *
tmp
;

1225 
id
 = 0;

1226 
size_t
 
globÆ_off£t
, 
d©a_íded
;

1227 
uöt8_t
 *
addr
;

1228 
size_t
 
sz
;

1230 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

1232 
__FILE__
, 
__LINE__
, 
__func__
, 
key
));

1234 
tmp
 = 
d©a£g
;

1235 
NULL
 !
tmp
->
√xt
) {

1236 
tmp
 =Åmp->
√xt
;

1237 
id
++;

1239 
globÆ_off£t
 = 
	`gë_‰ì_off£t
(
d©a£g
);

1240 
off£t
 = 
globÆ_off£t
 % 
_d©a_£gmít_size
;

1243 i‡((
size_t
Ë+ 
	`KVAL_SIZE
(
size
Ë+ 
EXT_SLOT_SIZE
 > 
_d©a_£gmít_size
) {

1246 
off£t
 = 0;

1247 
	`pmix_ouçut
(0, "PLEASE set NS_DATA_SEG_SIZEÅo value which isÜarger when %lu.",

1248 (
size_t
Ë+ 
PMIX_MAX_KEYLEN
 + 1 + (size_tË+ 
size
 + 
EXT_SLOT_SIZE
);

1249  
off£t
;

1251 i‡(
off£t
 + 
	`KVAL_SIZE
(
size
Ë+ 
EXT_SLOT_SIZE
 > 
_d©a_£gmít_size
) {

1252 
id
++;

1254 
tmp
 = 
	`exãnd_£gmít
—mp, 
ns_öfo
->
ns_«me
);

1255 i‡(
NULL
 =
tmp
) {

1256 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1257 
off£t
 = 0;

1258  
off£t
;

1260 
ns_öfo
->
num_d©a_£g
++;

1262 
ns_£g_öfo_t
 *
ñem
 = 
	`_gë_ns_öfo_‰om_öôül_£gmít
(
ns_öfo
->
ns_«me
);

1263 i‡(
NULL
 =
ñem
) {

1264 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1265  
PMIX_ERROR
;

1267 
ñem
->
num_d©a_£g
++;

1269 
off£t
 = (
size_t
);

1271 
globÆ_off£t
 = 
off£t
 + 
id
 * 
_d©a_£gmít_size
;

1272 
addr
 = (
uöt8_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
)+
off£t
;

1273 
	`°∫˝y
((*)
addr
, 
key
, 
PMIX_MAX_KEYLEN
+1);

1274 
sz
 = 
size
;

1275 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1, &
sz
, (
size_t
));

1276 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1 + (
size_t
), 
buf„r
, 
size
);

1279 
d©a_íded
 = 
off£t
 + 
	`KVAL_SIZE
(
size
);

1280 
addr
 = (
uöt8_t
*)(
tmp
->
£g_öfo
.
£g_ba£_addr
);

1281 
	`mem˝y
(
addr
, &
d©a_íded
, (
size_t
));

1282 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

1284 
__FILE__
, 
__LINE__
, 
__func__
, 
key
, 
off£t
, 
d©a_íded
, 
id
 * 
_d©a_£gmít_size
, 
size
));

1285  
globÆ_off£t
;

1286 
	}
}

1288 
	$pmix_sm_°‹e
(
ns_åack_ñem_t
 *
ns_öfo
, 
pmix_ønk_t
 
ønk
, 
pmix_kvÆ_t
 *
kvÆ
, 
ønk_mëa_öfo
 **
röfo
, 
d©a_exi°
)

1290 
size_t
 
off£t
, 
size
, 
kvÆ_˙t
;

1291 
pmix_buf„r_t
 *
buf„r
;

1292 
rc
;

1293 
£g_desc_t
 *
d©adesc
;

1294 
uöt8_t
 *
addr
;

1296 
	`PMIX_OUTPUT_VERBOSE
((2, 
pmix_globÆs
.
debug_ouçut
,

1298 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
));

1300 
d©adesc
 = 
ns_öfo
->
d©a_£g
;

1302 
buf„r
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

1303 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
buf„r
, 
kvÆ
->
vÆue
, 1, 
PMIX_VALUE
))) {

1304 
	`PMIX_RELEASE
(
buf„r
);

1305 
	`PMIX_ERROR_LOG
(
rc
);

1306  
rc
;

1308 
size
 = 
buf„r
->
byãs_u£d
;

1310 i‡(0 =
d©a_exi°
) {

1312 
size_t
 
‰ì_off£t
;

1313 
‰ì_off£t
 = 
	`gë_‰ì_off£t
(
d©adesc
);

1314 
off£t
 = 
	`put_d©a_to_the_íd
(
ns_öfo
, 
d©adesc
, 
kvÆ
->
key
, 
buf„r
->
ba£_±r
, 
size
);

1315 i‡(0 =
off£t
) {

1317 
	`PMIX_RELEASE
(
buf„r
);

1318 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1319  
PMIX_ERROR
;

1326 i‡(
‰ì_off£t
 !
off£t
 && 
NULL
 !*
röfo
) {

1331 
size_t
 
sz
 = (size_t);

1332 
addr
 = 
	`_gë_d©a_ªgi⁄_by_off£t
(
d©adesc
, 
‰ì_off£t
);

1333 
	`°∫˝y
((*)
addr
, 
ESH_REGION_EXTENSION
, 
PMIX_MAX_KEYLEN
+1);

1334 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1, &
sz
, (
size_t
));

1335 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1 + (
size_t
), &
off£t
, (size_t));

1337 i‡(
NULL
 =*
röfo
) {

1338 *
röfo
 = (
ønk_mëa_öfo
*)
	`mÆloc
((rank_meta_info));

1339 (*
röfo
)->
ønk
 =Ñank;

1340 (*
röfo
)->
off£t
 = offset;

1341 (*
röfo
)->
cou¡
 = 0;

1343 (*
röfo
)->
cou¡
++;

1344 } i‡(
NULL
 !*
röfo
) {

1346 
addr
 = 
	`_gë_d©a_ªgi⁄_by_off£t
(
d©adesc
, (*
röfo
)->
off£t
);

1347 i‡(
NULL
 =
addr
) {

1348 
	`PMIX_RELEASE
(
buf„r
);

1349 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1350  
rc
;

1357 
kvÆ_˙t
 = (*
röfo
)->
cou¡
;

1358 
add_to_the_íd
 = 1;

1359 0 < 
kvÆ_˙t
) {

1368 i‡(0 =
	`°∫cmp
((c⁄° *)
addr
, 
ESH_REGION_EXTENSION
, 
PMIX_MAX_KEYLEN
+1)) {

1369 
off£t
 = *(
size_t
 *)(
addr
 + 
PMIX_MAX_KEYLEN
 + 1 + (size_t));

1370 i‡(0 < 
off£t
) {

1371 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1373 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
, 
ESH_REGION_EXTENSION
, 
off£t
));

1375 
addr
 = 
	`_gë_d©a_ªgi⁄_by_off£t
(
d©adesc
, 
off£t
);

1376 i‡(
NULL
 =
addr
) {

1377 
	`PMIX_RELEASE
(
buf„r
);

1378 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1379  
rc
;

1384 } i‡(0 =
	`°∫cmp
((c⁄° *)
addr
, 
kvÆ
->
key
, 
PMIX_MAX_KEYLEN
+1)) {

1385 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1387 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
, 
kvÆ
->
key
));

1389 
size_t
 
cur_size
 = *(size_à*)(
addr
 + 
PMIX_MAX_KEYLEN
 + 1);

1390 i‡(
cur_size
 !
size
) {

1393 
	`°∫˝y
((*)
addr
, 
ESH_REGION_INVALIDATED
, 
PMIX_MAX_KEYLEN
+1);

1395 (*
röfo
)->
cou¡
--;

1396 
kvÆ_˙t
--;

1398 
addr
 +
	`KVAL_SIZE
(
cur_size
);

1399 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1401 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
, 
kvÆ
->
key
));

1403 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1405 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
, 
kvÆ
->
key
, kvÆ->
vÆue
->
ty≥
));

1407 
addr
 +
PMIX_MAX_KEYLEN
 + 1;

1408 
	`mem˝y
(
addr
, &
size
, (
size_t
));

1409 
addr
 +(
size_t
);

1410 
	`mem£t
(
addr
, 0, 
cur_size
);

1411 
	`mem˝y
(
addr
, 
buf„r
->
ba£_±r
, 
size
);

1412 
addr
 +
cur_size
;

1413 
add_to_the_íd
 = 0;

1417 
ckey
[
PMIX_MAX_KEYLEN
+1] = {0};

1418 
	`°∫˝y
(
ckey
, (c⁄° *)
addr
, 
PMIX_MAX_KEYLEN
+1);

1419 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1421 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
, 
ckey
, 
kvÆ
->
key
));

1423 i‡(0 !
	`°∫cmp
(
ESH_REGION_INVALIDATED
, 
ckey
, 
PMIX_MAX_KEYLEN
+1)) {

1425 
kvÆ_˙t
--;

1427 
size_t
 
size
 = *(size_à*)(
addr
 + 
PMIX_MAX_KEYLEN
 + 1);

1429 
addr
 +
	`KVAL_SIZE
(
size
);

1432 i‡(1 =
add_to_the_íd
) {

1436 (*
röfo
)->
cou¡
++;

1437 
size_t
 
‰ì_off£t
;

1438 
‰ì_off£t
 = 
	`gë_‰ì_off£t
(
d©adesc
);

1440 
off£t
 = 
	`put_d©a_to_the_íd
(
ns_öfo
, 
d©adesc
, 
kvÆ
->
key
, 
buf„r
->
ba£_±r
, 
size
);

1441 i‡(0 =
off£t
) {

1442 
	`PMIX_RELEASE
(
buf„r
);

1443 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

1444  
PMIX_ERROR
;

1451 i‡(0 =
	`°∫cmp
((c⁄° *)
addr
, 
ESH_REGION_EXTENSION
, 
PMIX_MAX_KEYLEN
+1)) {

1452 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1454 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
, 
ESH_REGION_EXTENSION
, 
off£t
));

1455 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1 + (
size_t
), &
off£t
, (size_t));

1463 i‡(
‰ì_off£t
 !
off£t
) {

1465 
size_t
 
sz
 = (size_t);

1466 
	`°∫˝y
((*)
addr
, 
ESH_REGION_EXTENSION
, 
PMIX_MAX_KEYLEN
+1);

1467 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1, &
sz
, sz);

1468 
	`mem˝y
(
addr
 + 
PMIX_MAX_KEYLEN
 + 1 + (
size_t
), &
off£t
, 
sz
);

1471 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1473 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
, 
d©a_exi°
, 
kvÆ
->
key
));

1476 
buf„r
->
ba£_±r
 = 
NULL
;

1477 
buf„r
->
byãs_u£d
 = 0;

1478 
	`PMIX_RELEASE
(
buf„r
);

1479  
rc
;

1480 
	}
}

1482 
	$_°‹e_d©a_f‹_ønk
(
ns_åack_ñem_t
 *
ns_öfo
, 
pmix_ønk_t
 
ønk
, 
pmix_buf„r_t
 *
buf
)

1484 
rc
;

1485 
öt32_t
 
˙t
;

1487 
pmix_buf„r_t
 *
b±r
;

1488 
pmix_kvÆ_t
 *
kp
;

1489 
£g_desc_t
 *
mëadesc
, *
d©adesc
;

1491 
ønk_mëa_öfo
 *
röfo
 = 
NULL
;

1492 
size_t
 
num_ñems
, 
‰ì_off£t
, 
√w_‰ì_off£t
;

1493 
d©a_exi°
;

1495 
	`PMIX_OUTPUT_VERBOSE
((10, 
pmix_globÆs
.
debug_ouçut
,

1496 "%s:%d:%s: f‹Ñ™k %u", 
__FILE__
, 
__LINE__
, 
__func__
, 
ønk
));

1498 
mëadesc
 = 
ns_öfo
->
mëa_£g
;

1499 
d©adesc
 = 
ns_öfo
->
d©a_£g
;

1501 i‡(
NULL
 =
d©adesc
 || NULL =
mëadesc
) {

1502 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

1503  
PMIX_ERROR
;

1506 
num_ñems
 = *((
size_t
*)(
mëadesc
->
£g_öfo
.
£g_ba£_addr
));

1507 
d©a_exi°
 = 0;

1510 i‡(0 < 
num_ñems
 || 0 =
_dúe˘_mode
) {

1512 
röfo
 = 
	`_gë_ønk_mëa_öfo
(
ønk
, 
mëadesc
);

1513 i‡(
NULL
 !
röfo
) {

1514 
d©a_exi°
 = 1;

1521 
˙t
 = 1;

1522 
‰ì_off£t
 = 
	`gë_‰ì_off£t
(
d©adesc
);

1523 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
b±r
, &
˙t
, 
PMIX_BUFFER
))) {

1524 
˙t
 = 1;

1525 
kp
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1526 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, 
kp
, &
˙t
, 
PMIX_KVAL
))) {

1527 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1528 "pmix: u≈acked key %s", 
kp
->
key
);

1529 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_sm_°‹e
(
ns_öfo
, 
ønk
, 
kp
, &
röfo
, 
d©a_exi°
))) {

1530 
	`PMIX_ERROR_LOG
(
rc
);

1532 
	`PMIX_RELEASE
(
kp
);

1533 
˙t
 = 1;

1534 
kp
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1536 
˙t
 = 1;

1537 
	`PMIX_RELEASE
(
kp
);

1538 
	`PMIX_RELEASE
(
b±r
);

1539 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
) {

1540 
	`PMIX_ERROR_LOG
(
rc
);

1544 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
) {

1545 
	`PMIX_ERROR_LOG
(
rc
);

1547 
rc
 = 
PMIX_SUCCESS
;

1555 
√w_‰ì_off£t
 = 
	`gë_‰ì_off£t
(
d©adesc
);

1556 i‡(
√w_‰ì_off£t
 !
‰ì_off£t
) {

1563 
rc
 = 
	`put_em±y_ext_¶Ÿ
(
ns_öfo
->
d©a_£g
);

1564 i‡(
PMIX_SUCCESS
 !
rc
) {

1565 i‡(
NULL
 !
röfo
) {

1566 
	`‰ì
(
röfo
);

1568 
	`PMIX_ERROR_LOG
(
rc
);

1569  
rc
;

1575 i‡(0 =
d©a_exi°
) {

1576 
	`£t_ønk_mëa_öfo
(
ns_öfo
, 
röfo
);

1577 i‡(
NULL
 !
röfo
) {

1578 
	`‰ì
(
röfo
);

1582  
rc
;

1583 
	}
}

1585 
ölöe
 
uöt32_t
 
	$_gë_univ_size
(c⁄° *
n•a˚
)

1587 
pmix_vÆue_t
 *
vÆ
 = 
NULL
;

1588 
uöt32_t
 
≈rocs
 = 0;

1589 
pmix_n•a˚_t
 *
ns
, *
≈å
;

1591 
≈å
 = 
NULL
;

1592 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

1593 i‡(0 =
	`°rcmp
(
n•a˚
, 
ns
->nspace)) {

1594 
≈å
 = 
ns
;

1599 i‡(
≈å
 && (
PMIX_SUCCESS
 =
	`pmix_hash_„tch
(&≈å->
öã∫Æ
, 
PMIX_RANK_WILDCARD
, 
PMIX_UNIV_SIZE
, &
vÆ
))) {

1600 i‡(
vÆ
->
ty≥
 =
PMIX_UINT32
) {

1601 
≈rocs
 = 
vÆ
->
d©a
.
uöt32
;

1603 
	`PMIX_VALUE_RELEASE
(
vÆ
);

1606  
≈rocs
;

1607 
	}
}

	@dstore/pmix_esh.h

11 #i‚de‡
PMIX_DSTORE_ESH_H


12 
	#PMIX_DSTORE_ESH_H


	)

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~"pmix_d°‹e.h
"

18 
	~"§c/sm/pmix_sm.h
"

20 
	gBEGIN_C_DECLS


22 
	#INITIAL_SEG_SIZE
 4096

	)

23 
	#NS_META_SEG_SIZE
 (1<<22)

	)

24 
	#NS_DATA_SEG_SIZE
 (1<<22)

	)

26 
	#PMIX_DSTORE_ESH_BASE_PATH
 "PMIX_DSTORE_ESH_BASE_PATH"

	)

29 
	mINITIAL_SEGMENT
,

30 
	mNS_META_SEGMENT
,

31 
	mNS_DATA_SEGMENT


32 } 
	t£gmít_ty≥
;

41 
	mns_«me
[
PMIX_MAX_NSLEN
+1];

42 
size_t
 
	mnum_mëa_£g
;

43 
size_t
 
	mnum_d©a_£g
;

44 } 
	tns_£g_öfo_t
;

52 
size_t
 
	mønk
;

53 
size_t
 
	moff£t
;

54 
size_t
 
	mcou¡
;

55 } 
	tønk_mëa_öfo
;

63 
£g_desc_t
 
	t£g_desc_t
;

64 
	s£g_desc_t
 {

65 
£gmít_ty≥
 
	mty≥
;

66 
pmix_sm_£g_t
 
	m£g_öfo
;

67 
uöt32_t
 
	mid
;

68 
£g_desc_t
 *
	m√xt
;

72 
pmix_li°_ôem_t
 
	msu≥r
;

73 
	mns_«me
[
PMIX_MAX_NSLEN
+1];

74 
size_t
 
	mnum_mëa_£g
;

75 
size_t
 
	mnum_d©a_£g
;

76 
£g_desc_t
 *
	mmëa_£g
;

77 
£g_desc_t
 *
	md©a_£g
;

78 } 
	tns_åack_ñem_t
;

79 
PMIX_CLASS_DECLARATION
(
ns_åack_ñem_t
);

81 
pmix_d°‹e_ba£_moduÀ_t
 
pmix_d°‹e_esh_moduÀ
;

83 
	gEND_C_DECLS


	@event/pmix_event.h

21 #i‚de‡
PMIX_EVENT_H


22 
	#PMIX_EVENT_H


	)

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<§c/ö˛ude/ª«me.h
>

27 
	~<pmix_comm⁄.h
>

28 
	~"§c/˛ass/pmix_li°.h
"

29 
	~"§c/utû/ouçut.h
"

31 
BEGIN_C_DECLS


36 
pmix_li°_ôem_t
 
	msu≥r
;

37 *
	m«me
;

38 
size_t
 
	mödex
;

39 
pmix_°©us_t
 
	mcode
;

40 
pmix_nŸifiˇti⁄_‚_t
 
	mevhdÃ
;

41 *
	mcbobje˘
;

42 } 
	tpmix_sögÀ_evít_t
;

43 
PMIX_CLASS_DECLARATION
(
pmix_sögÀ_evít_t
);

49 
pmix_li°_ôem_t
 
	msu≥r
;

50 *
	m«me
;

51 
size_t
 
	mödex
;

52 
pmix_°©us_t
 *
	mcodes
;

53 
size_t
 
	mncodes
;

54 
pmix_nŸifiˇti⁄_‚_t
 
	mevhdÃ
;

55 *
	mcbobje˘
;

56 } 
	tpmix_mu…i_evít_t
;

57 
PMIX_CLASS_DECLARATION
(
pmix_mu…i_evít_t
);

61 
pmix_li°_ôem_t
 
	msu≥r
;

62 *
	m«me
;

63 
size_t
 
	mödex
;

64 
pmix_nŸifiˇti⁄_‚_t
 
	mevhdÃ
;

65 *
	mcbobje˘
;

66 } 
	tpmix_deÁu…_evít_t
;

67 
PMIX_CLASS_DECLARATION
(
pmix_deÁu…_evít_t
);

72 
pmix_li°_ôem_t
 
	msu≥r
;

73 
pmix_°©us_t
 
	mcode
;

74 } 
	tpmix_a˘ive_code_t
;

75 
PMIX_CLASS_DECLARATION
(
pmix_a˘ive_code_t
);

81 
pmix_obje˘_t
 
	msu≥r
;

82 
size_t
 
	mnhdÃs
;

83 
pmix_li°_t
 
	ma˘ives
;

84 
pmix_li°_t
 
	msögÀ_evíts
;

85 
pmix_li°_t
 
	mmu…i_evíts
;

86 
pmix_li°_t
 
	mdeÁu…_evíts
;

87 } 
	tpmix_evíts_t
;

88 
PMIX_CLASS_DECLARATION
(
pmix_evíts_t
);

98 
	spmix_evít_chaö_t
 {

99 
pmix_obje˘_t
 
	msu≥r
;

100 
pmix_°©us_t
 
	m°©us
;

101 
boﬁ
 
	mn⁄deÁu…
;

102 
pmix_¥oc_t
 
	msour˚
;

103 
pmix_d©a_ønge_t
 
	mønge
;

104 
pmix_öfo_t
 *
	möfo
;

105 
size_t
 
	mnöfo
;

106 
pmix_öfo_t
 *
	mªsu…s
;

107 
size_t
 
	mƒesu…s
;

108 
pmix_sögÀ_evít_t
 *
	msög
;

109 
pmix_mu…i_evít_t
 *
	mmu…i
;

110 
pmix_deÁu…_evít_t
 *
	mdef
;

111 
pmix_›_cbfunc_t
 
	mföÆ_cbfunc
;

112 *
	mföÆ_cbd©a
;

113 } 
	tpmix_evít_chaö_t
;

114 
PMIX_CLASS_DECLARATION
(
pmix_evít_chaö_t
);

119 
pmix_övoke_loˇl_evít_hdÃ
(
pmix_evít_chaö_t
 *
chaö
);

121 
	#PMIX_REPORT_EVENT
(
e
) \

123 
pmix_evít_chaö_t
 *
_ch
; \

124 
_ch
 = 
	`PMIX_NEW
(
pmix_evít_chaö_t
); \

125 
_ch
->
°©us
 = (
e
); \

126 
	`pmix_övoke_loˇl_evít_hdÃ
(
_ch
); \

127 
	`PMIX_RELEASE
(
_ch
); \

128 } 0)

	)

131 
	gEND_C_DECLS


	@event/pmix_event_notification.c

10 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

11 
	~<§c/ö˛ude/ª«me.h
>

13 
	~"ö˛ude/pmix.h
"

14 
	~"ö˛ude/pmix_comm⁄.h
"

15 
	~"ö˛ude/pmix_£rvî.h
"

17 
	~"§c/utû/îr‹.h
"

18 
	~"§c/utû/ouçut.h
"

20 
	~"§c/˛õ¡/pmix_˛õ¡_›s.h
"

21 
	~"§c/£rvî/pmix_£rvî_›s.h
"

22 
	~"§c/ö˛ude/pmix_globÆs.h
"

24 
pmix_°©us_t
 
nŸify_£rvî_of_evít
’mix_°©us_à
°©us
,

25 c⁄° 
pmix_¥oc_t
 *
sour˚
,

26 
pmix_d©a_ønge_t
 
ønge
,

27 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

28 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
);

30 
pmix_°©us_t
 
nŸify_˛õ¡_of_evít
’mix_°©us_à
°©us
,

31 c⁄° 
pmix_¥oc_t
 *
sour˚
,

32 
pmix_d©a_ønge_t
 
ønge
,

33 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

34 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
);

39 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_NŸify_evít
(
pmix_°©us_t
 
°©us
,

40 c⁄° 
pmix_¥oc_t
 *
sour˚
,

41 
pmix_d©a_ønge_t
 
ønge
,

42 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

43 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

45 
rc
;

47 i‡(
pmix_globÆs
.
£rvî
) {

48 
rc
 = 
	`nŸify_˛õ¡_of_evít
(
°©us
, 
sour˚
, 
ønge
,

49 
öfo
, 
nöfo
,

50 
cbfunc
, 
cbd©a
);

51 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

53 
sour˚
->
n•a˚
, sour˚->
ønk
, 
°©us
, 
rc
);

55 
rc
 = 
	`nŸify_£rvî_of_evít
(
°©us
, 
sour˚
, 
ønge
,

56 
öfo
, 
nöfo
,

57 
cbfunc
, 
cbd©a
);

58 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

60 
sour˚
->
n•a˚
, sour˚->
ønk
, 
°©us
, 
rc
);

62  
rc
;

63 
	}
}

65 
	$nŸify_evít_cbfunc
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

66 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

68 
pmix_°©us_t
 
rc
, 
ªt
;

69 
öt32_t
 
˙t
 = 1;

70 
pmix_cb_t
 *
cb
 = (pmix_cb_t*)
cbd©a
;

73 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) {

74 
	`PMIX_ERROR_LOG
(
rc
);

75 
ªt
 = 
rc
;

78 i‡(
NULL
 !
cb
->
›_cbfunc
) {

79 
cb
->
	`›_cbfunc
(
ªt
, cb->
cbd©a
);

81 
	`PMIX_RELEASE
(
cb
);

82 
	}
}

85 
pmix_°©us_t
 
	$nŸify_£rvî_of_evít
(
pmix_°©us_t
 
°©us
,

86 c⁄° 
pmix_¥oc_t
 *
sour˚
,

87 
pmix_d©a_ønge_t
 
ønge
,

88 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

89 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

91 
pmix_°©us_t
 
rc
;

92 
pmix_buf„r_t
 *
msg
;

93 
pmix_cmd_t
 
cmd
 = 
PMIX_NOTIFY_CMD
;

94 
pmix_cb_t
 *
cb
;

95 
pmix_evít_chaö_t
 *
chaö
;

97 i‡(!
pmix_globÆs
.
c⁄√˘ed
) {

98  
PMIX_ERR_UNREACH
;

102 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

105 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

106 
	`PMIX_ERROR_LOG
(
rc
);

107 
˛ónup
;

110 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
°©us
, 1, 
PMIX_STATUS
))) {

111 
	`PMIX_ERROR_LOG
(
rc
);

112 
˛ónup
;

117 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
ønge
, 1, 
PMIX_DATA_RANGE
))) {

118 
	`PMIX_ERROR_LOG
(
rc
);

119 
˛ónup
;

122 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
nöfo
, 1, 
PMIX_SIZE
))) {

123 
	`PMIX_ERROR_LOG
(
rc
);

124 
˛ónup
;

126 i‡(0 < 
nöfo
) {

127 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

128 
	`PMIX_ERROR_LOG
(
rc
);

129 
˛ónup
;

134 
chaö
 = 
	`PMIX_NEW
(
pmix_evít_chaö_t
);

135 
chaö
->
°©us
 = status;

136 ()
	`°∫˝y
(
chaö
->
sour˚
.
n•a˚
, 
pmix_globÆs
.
myid
.n•a˚, 
PMIX_MAX_NSLEN
);

137 
chaö
->
sour˚
.
ønk
 = 
pmix_globÆs
.
myid
.rank;

138 i‡(0 < 
nöfo
) {

145 
cb
 = 
	`PMIX_NEW
(
pmix_cb_t
);

146 
cb
->
›_cbfunc
 = 
cbfunc
;

147 
cb
->
cbd©a
 = cbdata;

149 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
nŸify_evít_cbfunc
, 
cb
);

152 
	`pmix_övoke_loˇl_evít_hdÃ
(
chaö
);

153 
	`PMIX_RELEASE
(
chaö
);

155  
PMIX_SUCCESS
;

157 
˛ónup
:

158 
	`PMIX_RELEASE
(
msg
);

160  
rc
;

161 
	}
}

164 
	$¥ogªss_loˇl_evít_hdÃ
(
pmix_°©us_t
 
°©us
,

165 
pmix_öfo_t
 *
ªsu…s
, 
size_t
 
ƒesu…s
,

166 
pmix_›_cbfunc_t
 
cbfunc
, *
thiscbd©a
,

167 *
nŸifiˇti⁄_cbd©a
)

169 
pmix_evít_chaö_t
 *
chaö
 = (pmix_evít_chaö_t*)
nŸifiˇti⁄_cbd©a
;

170 
size_t
 
n
, 
nßve
;

171 
pmix_öfo_t
 *
√wöfo
;

172 
pmix_li°_ôem_t
 *
nxt
;

173 
pmix_sögÀ_evít_t
 *
sög
;

174 
pmix_mu…i_evít_t
 *
mu…i
;

175 
pmix_deÁu…_evít_t
 *
def
;

178 i‡(
PMIX_EVENT_ACTION_COMPLETE
 =
°©us
) {

179 
com∂ëe
;

183 
nßve
 = 
chaö
->
ƒesu…s
;

185 
	`PMIX_INFO_CREATE
(
√wöfo
, 
chaö
->
ƒesu…s
 +Çresults + 1);

187 
n
=0;Ç < 
chaö
->
ƒesu…s
;Ç++) {

188 
	`PMIX_INFO_XFER
(&
√wöfo
[
n
], &
chaö
->
ªsu…s
[n]);

191 i‡(
NULL
 !
chaö
->
sög
) {

192 i‡(
NULL
 !
chaö
->
sög
->
«me
) {

193 ()
	`°∫˝y
(
√wöfo
[
nßve
].
key
, 
chaö
->
sög
->
«me
, 
PMIX_MAX_KEYLEN
);

195 } i‡(
NULL
 !
chaö
->
mu…i
) {

196 i‡(
NULL
 !
chaö
->
mu…i
->
«me
) {

197 ()
	`°∫˝y
(
√wöfo
[
nßve
].
key
, 
chaö
->
mu…i
->
«me
, 
PMIX_MAX_KEYLEN
);

199 } i‡(
NULL
 !
chaö
->
def
) {

200 i‡(
NULL
 !
chaö
->
def
->
«me
) {

201 ()
	`°∫˝y
(
√wöfo
[
nßve
].
key
, 
chaö
->
def
->
«me
, 
PMIX_MAX_KEYLEN
);

204 ()
	`°∫˝y
(
√wöfo
[
nßve
].
key
, "UNKNOWN", 
PMIX_MAX_KEYLEN
);

206 
√wöfo
[
nßve
].
vÆue
.
ty≥
 = 
PMIX_STATUS
;

207 
√wöfo
[
nßve
].
vÆue
.
d©a
.
°©us
 = status;

209 
n
=0;Ç < 
ƒesu…s
;Ç++) {

210 
	`PMIX_INFO_XFER
(&
√wöfo
[
n
+
nßve
+1], &
ªsu…s
[n]);

213 i‡(0 < 
chaö
->
ƒesu…s
) {

214 
	`PMIX_INFO_FREE
(
chaö
->
ªsu…s
, chaö->
ƒesu…s
);

217 
chaö
->
ªsu…s
 = 
√wöfo
;

218 
chaö
->
ƒesu…s
 = 
nßve
 +Çresults;

221 i‡(
NULL
 !
chaö
->
sög
) {

224 
	`pmix_li°_gë_íd
(&
pmix_globÆs
.
evíts
.
sögÀ_evíts
Ë!(
nxt
 = 
	`pmix_li°_gë_√xt
(&
chaö
->
sög
->
su≥r
))) {

225 
sög
 = (
pmix_sögÀ_evít_t
*)
nxt
;

226 i‡(
sög
->
code
 =
chaö
->
°©us
) {

227 
	`PMIX_RETAIN
(
chaö
);

228 
chaö
->
sög
 = sing;

230 
chaö
->
öfo
[chaö->
nöfo
-1].
vÆue
.
d©a
.
±r
 = 
sög
->
cbobje˘
;

231 
sög
->
	`evhdÃ
(sög->
ödex
,

232 
chaö
->
°©us
, &chaö->
sour˚
,

233 
chaö
->
öfo
, chaö->
nöfo
,

234 
chaö
->
ªsu…s
, chaö->
ƒesu…s
,

235 
¥ogªss_loˇl_evít_hdÃ
, (*)
chaö
);

236 
com∂ëe
;

241 
chaö
->
sög
 = 
NULL
;

243 
chaö
->
mu…i
 = (
pmix_mu…i_evít_t
*)
	`pmix_li°_gë_begö
(&
pmix_globÆs
.
evíts
.
mu…i_evíts
);

247 i‡(
NULL
 !
chaö
->
mu…i
) {

248 
	`pmix_li°_gë_íd
(&
pmix_globÆs
.
evíts
.
mu…i_evíts
Ë!(
nxt
 = 
	`pmix_li°_gë_√xt
(&
chaö
->
mu…i
->
su≥r
))) {

249 
mu…i
 = (
pmix_mu…i_evít_t
*)
nxt
;

250 
n
=0;Ç < 
mu…i
->
ncodes
;Ç++) {

251 i‡(
mu…i
->
codes
[
n
] =
chaö
->
°©us
) {

254 
	`PMIX_RETAIN
(
chaö
);

255 
chaö
->
mu…i
 = multi;

257 
chaö
->
öfo
[chaö->
nöfo
-1].
vÆue
.
d©a
.
±r
 = 
mu…i
->
cbobje˘
;

258 
mu…i
->
	`evhdÃ
(mu…i->
ödex
,

259 
chaö
->
°©us
, &chaö->
sour˚
,

260 
chaö
->
öfo
, chaö->
nöfo
,

261 
chaö
->
ªsu…s
, chaö->
ƒesu…s
,

262 
¥ogªss_loˇl_evít_hdÃ
, (*)
chaö
);

263 
com∂ëe
;

269 
chaö
->
mu…i
 = 
NULL
;

271 
chaö
->
def
 = (
pmix_deÁu…_evít_t
*)
	`pmix_li°_gë_begö
(&
pmix_globÆs
.
evíts
.
deÁu…_evíts
);

275 i‡(
chaö
->
n⁄deÁu…
) {

276 
com∂ëe
;

279 i‡(
NULL
 !
chaö
->
def
) {

280 i‡(
	`pmix_li°_gë_íd
(&
pmix_globÆs
.
evíts
.
deÁu…_evíts
Ë!(
nxt
 = 
	`pmix_li°_gë_√xt
(&
chaö
->
def
->
su≥r
))) {

281 
def
 = (
pmix_deÁu…_evít_t
*)
nxt
;

282 
	`PMIX_RETAIN
(
chaö
);

283 
chaö
->
def
 = def;

285 
chaö
->
öfo
[chaö->
nöfo
-1].
vÆue
.
d©a
.
±r
 = 
def
->
cbobje˘
;

286 
def
->
	`evhdÃ
(def->
ödex
,

287 
chaö
->
°©us
, &chaö->
sour˚
,

288 
chaö
->
öfo
, chaö->
nöfo
,

289 
chaö
->
ªsu…s
, chaö->
ƒesu…s
,

290 
¥ogªss_loˇl_evít_hdÃ
, (*)
chaö
);

294 
com∂ëe
:

296 i‡(
NULL
 !
chaö
->
föÆ_cbfunc
) {

297 
chaö
->
	`föÆ_cbfunc
(
PMIX_SUCCESS
, chaö->
föÆ_cbd©a
);

300 
	`PMIX_RELEASE
(
chaö
);

302 i‡(
NULL
 !
cbfunc
) {

303 
	`cbfunc
(
PMIX_SUCCESS
, 
thiscbd©a
);

305 
	}
}

316 
	$pmix_övoke_loˇl_evít_hdÃ
(
pmix_evít_chaö_t
 *
chaö
)

320 
size_t
 
i
;

321 
pmix_sögÀ_evít_t
 *
sög
;

322 
pmix_mu…i_evít_t
 *
mu…i
;

323 
pmix_deÁu…_evít_t
 *
def
;

324 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

327 i‡(
NULL
 =
chaö
->
öfo
) {

330 
rc
 = 
PMIX_ERR_BAD_PARAM
;

331 
com∂ëe
;

335 
i
=0; i < 
chaö
->
nöfo
; i++) {

336 i‡(0 =
	`°∫cmp
(
chaö
->
öfo
[
i
].
key
, 
PMIX_EVENT_NON_DEFAULT
, 
PMIX_MAX_KEYLEN
)) {

337 
chaö
->
n⁄deÁu…
 = 
åue
;

342 
	`PMIX_LIST_FOREACH
(
sög
, &
pmix_globÆs
.
evíts
.
sögÀ_evíts
, 
pmix_sögÀ_evít_t
) {

343 i‡(
sög
->
code
 =
chaö
->
°©us
) {

346 
	`PMIX_RETAIN
(
chaö
);

347 
chaö
->
sög
 = sing;

349 
chaö
->
öfo
[chaö->
nöfo
-1].
vÆue
.
d©a
.
±r
 = 
sög
->
cbobje˘
;

350 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

352 
pmix_globÆs
.
myid
.
n•a˚
,Ömix_globÆs.myid.
ønk
);

353 
sög
->
	`evhdÃ
(sög->
ödex
,

354 
chaö
->
°©us
, &chaö->
sour˚
,

355 
chaö
->
öfo
, chaö->
nöfo
,

356 
NULL
, 0,

357 
¥ogªss_loˇl_evít_hdÃ
, (*)
chaö
);

364 
	`PMIX_LIST_FOREACH
(
mu…i
, &
pmix_globÆs
.
evíts
.
mu…i_evíts
, 
pmix_mu…i_evít_t
) {

365 
i
=0; i < 
mu…i
->
ncodes
; i++) {

366 i‡(
mu…i
->
codes
[
i
] =
chaö
->
°©us
) {

369 
	`PMIX_RETAIN
(
chaö
);

370 
chaö
->
mu…i
 = multi;

372 
chaö
->
öfo
[chaö->
nöfo
-1].
vÆue
.
d©a
.
±r
 = 
mu…i
->
cbobje˘
;

373 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

375 
pmix_globÆs
.
myid
.
n•a˚
,Ömix_globÆs.myid.
ønk
);

376 
mu…i
->
	`evhdÃ
(mu…i->
ödex
,

377 
chaö
->
°©us
, &chaö->
sour˚
,

378 
chaö
->
öfo
, chaö->
nöfo
,

379 
NULL
, 0,

380 
¥ogªss_loˇl_evít_hdÃ
, (*)
chaö
);

387 i‡(
chaö
->
n⁄deÁu…
) {

388 
com∂ëe
;

392 
	`PMIX_LIST_FOREACH
(
def
, &
pmix_globÆs
.
evíts
.
deÁu…_evíts
, 
pmix_deÁu…_evít_t
) {

393 
	`PMIX_RETAIN
(
chaö
);

394 
chaö
->
def
 = def;

396 
chaö
->
öfo
[chaö->
nöfo
-1].
vÆue
.
d©a
.
±r
 = 
def
->
cbobje˘
;

397 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

399 
pmix_globÆs
.
myid
.
n•a˚
,Ömix_globÆs.myid.
ønk
);

400 
def
->
	`evhdÃ
(def->
ödex
,

401 
chaö
->
°©us
, &chaö->
sour˚
,

402 
chaö
->
öfo
, chaö->
nöfo
,

403 
NULL
, 0,

404 
¥ogªss_loˇl_evít_hdÃ
, (*)
chaö
);

408 
com∂ëe
:

410 i‡(
NULL
 !
chaö
->
föÆ_cbfunc
) {

411 
chaö
->
	`föÆ_cbfunc
(
rc
, chaö->
föÆ_cbd©a
);

414 
	}
}

417 
	$_nŸify_˛õ¡_evít
(
sd
, 
¨gs
, *
cbd©a
)

419 
pmix_nŸify_ˇddy_t
 *
cd
 = (pmix_nŸify_ˇddy_t*)
cbd©a
;

420 
pmix_nŸify_ˇddy_t
 *
rbout
;

421 
pmix_ªgevíts_öfo_t
 *
ªgöf›å
;

422 
pmix_≥î_evíts_öfo_t
 *
¥
;

424 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

426 
cd
->
°©us
);

432 
	`PMIX_RETAIN
(
cd
);

433 
rbout
 = 
	`pmix_rög_buf„r_push
(&
pmix_£rvî_globÆs
.
nŸifiˇti⁄s
, 
cd
);

436 i‡(
NULL
 !
rbout
) {

437 
	`PMIX_RELEASE
(
rbout
);

442 
	`PMIX_LIST_FOREACH
(
ªgöf›å
, &
pmix_£rvî_globÆs
.
evíts
, 
pmix_ªgevíts_öfo_t
) {

443 i‡((
PMIX_MAX_ERR_CONSTANT
 =
ªgöf›å
->
code
 && !
cd
->
n⁄deÁu…
) ||

444 
cd
->
°©us
 =
ªgöf›å
->
code
) {

445 
	`PMIX_LIST_FOREACH
(
¥
, &
ªgöf›å
->
≥îs
, 
pmix_≥î_evíts_öfo_t
) {

448 i‡(0 =
	`°∫cmp
(
cd
->
sour˚
.
n•a˚
, 
¥
->
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
) &&

449 
cd
->
sour˚
.
ønk
 =
¥
->
≥î
->
öfo
->rank) {

452 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

454 
¥
->
≥î
->
öfo
->
≈å
->
n•a˚
,Ör->≥î->öfo->
ønk
);

455 
	`PMIX_RETAIN
(
cd
->
buf
);

456 
	`PMIX_SERVER_QUEUE_REPLY
(
¥
->
≥î
, 0, 
cd
->
buf
);

462 i‡(
NULL
 !
cd
->
cbfunc
) {

463 
cd
->
	`cbfunc
(
PMIX_SUCCESS
, cd->
cbd©a
);

465 
	`PMIX_RELEASE
(
cd
);

466 
	}
}

476 
pmix_°©us_t
 
	$nŸify_˛õ¡_of_evít
(
pmix_°©us_t
 
°©us
,

477 c⁄° 
pmix_¥oc_t
 *
sour˚
,

478 
pmix_d©a_ønge_t
 
ønge
,

479 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

480 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

482 
pmix_nŸify_ˇddy_t
 *
cd
;

483 
pmix_cmd_t
 
cmd
 = 
PMIX_NOTIFY_CMD
;

484 
pmix_°©us_t
 
rc
;

485 
size_t
 
n
;

487 
cd
 = 
	`PMIX_NEW
(
pmix_nŸify_ˇddy_t
);

488 
cd
->
°©us
 = status;

489 i‡(
NULL
 =
sour˚
) {

490 ()
	`°∫˝y
(
cd
->
sour˚
.
n•a˚
, "UNDEF", 
PMIX_MAX_NSLEN
);

491 
cd
->
sour˚
.
ønk
 = 
PMIX_RANK_UNDEF
;

493 ()
	`°∫˝y
(
cd
->
sour˚
.
n•a˚
, sour˚->n•a˚, 
PMIX_MAX_NSLEN
);

494 
cd
->
sour˚
.
ønk
 = source->rank;

496 
cd
->
ønge
 =Ñange;

499 i‡(
NULL
 !
öfo
) {

500 
n
=0;Ç < 
nöfo
;Ç++) {

501 i‡(0 =
	`°∫cmp
(
öfo
[
n
].
key
, 
PMIX_EVENT_NON_DEFAULT
, 
PMIX_MAX_KEYLEN
)) {

502 
cd
->
n⁄deÁu…
 = 
åue
;

508 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
cd
->
buf
, &
cmd
, 1, 
PMIX_CMD
))) {

509 
	`PMIX_ERROR_LOG
(
rc
);

510 
	`PMIX_RELEASE
(
cd
);

511  
rc
;

515 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
cd
->
buf
, &
°©us
, 1, 
PMIX_STATUS
))) {

516 
	`PMIX_ERROR_LOG
(
rc
);

517 
	`PMIX_RELEASE
(
cd
);

518  
rc
;

522 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
cd
->
buf
, 
sour˚
, 1, 
PMIX_PROC
))) {

523 
	`PMIX_ERROR_LOG
(
rc
);

524 
	`PMIX_RELEASE
(
cd
);

525  
rc
;

529 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
cd
->
buf
, &
nöfo
, 1, 
PMIX_SIZE
))) {

530 
	`PMIX_ERROR_LOG
(
rc
);

531 
	`PMIX_RELEASE
(
cd
);

532  
rc
;

535 i‡(0 < 
nöfo
) {

536 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
cd
->
buf
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

537 
	`PMIX_ERROR_LOG
(
rc
);

538 
	`PMIX_RELEASE
(
cd
);

539  
rc
;

544 
cd
->
cbfunc
 = cbfunc;

545 
cd
->
cbd©a
 = cbdata;

547 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

549 
°©us
, 
cd
->
sour˚
.
n•a˚
, cd->sour˚.
ønk
, 
nöfo
);

553 
	`PMIX_THREADSHIFT
(
cd
, 
_nŸify_˛õ¡_evít
);

554  
PMIX_SUCCESS
;

555 
	}
}

557 
	$£vc⁄
(
pmix_sögÀ_evít_t
 *
p
)

559 
p
->
«me
 = 
NULL
;

560 
p
->
evhdÃ
 = 
NULL
;

561 
p
->
cbobje˘
 = 
NULL
;

562 
	}
}

563 
	$£vdes
(
pmix_sögÀ_evít_t
 *
p
)

565 i‡(
NULL
 !
p
->
«me
) {

566 
	`‰ì
(
p
->
«me
);

568 
	}
}

569 
PMIX_CLASS_INSTANCE
(
pmix_sögÀ_evít_t
,

570 
pmix_li°_ôem_t
,

571 
£vc⁄
, 
£vdes
);

573 
	$mevc⁄
(
pmix_mu…i_evít_t
 *
p
)

575 
p
->
«me
 = 
NULL
;

576 
p
->
codes
 = 
NULL
;

577 
p
->
ncodes
 = 0;

578 
p
->
evhdÃ
 = 
NULL
;

579 
p
->
cbobje˘
 = 
NULL
;

580 
	}
}

581 
	$mevdes
(
pmix_mu…i_evít_t
 *
p
)

583 i‡(
NULL
 !
p
->
«me
) {

584 
	`‰ì
(
p
->
«me
);

586 i‡(
NULL
 !
p
->
codes
) {

587 
	`‰ì
(
p
->
codes
);

589 
	}
}

590 
PMIX_CLASS_INSTANCE
(
pmix_mu…i_evít_t
,

591 
pmix_li°_ôem_t
,

592 
mevc⁄
, 
mevdes
);

594 
	$devc⁄
(
pmix_deÁu…_evít_t
 *
p
)

596 
p
->
«me
 = 
NULL
;

597 
p
->
evhdÃ
 = 
NULL
;

598 
p
->
cbobje˘
 = 
NULL
;

599 
	}
}

600 
	$devdes
(
pmix_deÁu…_evít_t
 *
p
)

602 i‡(
NULL
 !
p
->
«me
) {

603 
	`‰ì
(
p
->
«me
);

605 
	}
}

606 
PMIX_CLASS_INSTANCE
(
pmix_deÁu…_evít_t
,

607 
pmix_li°_ôem_t
,

608 
devc⁄
, 
devdes
);

610 
PMIX_CLASS_INSTANCE
(
pmix_a˘ive_code_t
,

611 
pmix_li°_ôem_t
,

612 
NULL
, NULL);

614 
	$evc⁄
(
pmix_evíts_t
 *
p
)

616 
p
->
nhdÃs
 = 0;

617 
	`PMIX_CONSTRUCT
(&
p
->
a˘ives
, 
pmix_li°_t
);

618 
	`PMIX_CONSTRUCT
(&
p
->
sögÀ_evíts
, 
pmix_li°_t
);

619 
	`PMIX_CONSTRUCT
(&
p
->
mu…i_evíts
, 
pmix_li°_t
);

620 
	`PMIX_CONSTRUCT
(&
p
->
deÁu…_evíts
, 
pmix_li°_t
);

621 
	}
}

622 
	$evdes
(
pmix_evíts_t
 *
p
)

624 
	`PMIX_LIST_DESTRUCT
(&
p
->
a˘ives
);

625 
	`PMIX_LIST_DESTRUCT
(&
p
->
sögÀ_evíts
);

626 
	`PMIX_LIST_DESTRUCT
(&
p
->
mu…i_evíts
);

627 
	`PMIX_LIST_DESTRUCT
(&
p
->
deÁu…_evíts
);

628 
	}
}

629 
PMIX_CLASS_INSTANCE
(
pmix_evíts_t
,

630 
pmix_obje˘_t
,

631 
evc⁄
, 
evdes
);

633 
	$chc⁄
(
pmix_evít_chaö_t
 *
p
)

635 
	`mem£t
(
p
->
sour˚
.
n•a˚
, 0, 
PMIX_MAX_NSLEN
+1);

636 
p
->
sour˚
.
ønk
 = 
PMIX_RANK_UNDEF
;

637 
p
->
n⁄deÁu…
 = 
Ál£
;

638 
p
->
ønge
 = 
PMIX_RANGE_UNDEF
;

639 
p
->
öfo
 = 
NULL
;

640 
p
->
nöfo
 = 0;

641 
p
->
ªsu…s
 = 
NULL
;

642 
p
->
ƒesu…s
 = 0;

643 
p
->
sög
 = 
NULL
;

644 
p
->
mu…i
 = 
NULL
;

645 
p
->
def
 = 
NULL
;

646 
p
->
föÆ_cbfunc
 = 
NULL
;

647 
p
->
föÆ_cbd©a
 = 
NULL
;

648 
	}
}

649 
	$chdes
(
pmix_evít_chaö_t
 *
p
)

651 i‡(
NULL
 !
p
->
öfo
) {

652 
	`PMIX_INFO_FREE
(
p
->
öfo
,Ö->
nöfo
);

654 i‡(
NULL
 !
p
->
ªsu…s
) {

655 
	`PMIX_INFO_FREE
(
p
->
ªsu…s
,Ö->
ƒesu…s
);

657 
	}
}

658 
PMIX_CLASS_INSTANCE
(
pmix_evít_chaö_t
,

659 
pmix_obje˘_t
,

660 
chc⁄
, 
chdes
);

	@event/pmix_event_registration.c

10 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

11 
	~<§c/ö˛ude/ª«me.h
>

13 
	~<pmix.h
>

14 
	~<pmix_comm⁄.h
>

15 
	~<pmix_£rvî.h
>

17 
	~"§c/utû/îr‹.h
"

18 
	~"§c/utû/ouçut.h
"

20 
	~"§c/˛õ¡/pmix_˛õ¡_›s.h
"

21 
	~"§c/£rvî/pmix_£rvî_›s.h
"

22 
	~"§c/ö˛ude/pmix_globÆs.h
"

25 
pmix_obje˘_t
 
	msu≥r
;

26 
size_t
 
	mödex
;

27 
pmix_li°_t
 *
	mli°
;

28 
pmix_li°_ôem_t
 *
	môem
;

29 
pmix_shi·_ˇddy_t
 *
	mcd
;

30 
pmix_°©us_t
 *
	mcodes
;

31 
size_t
 
	mncodes
;

32 
pmix_öfo_t
 *
	möfo
;

33 
size_t
 
	mnöfo
;

34 } 
	tpmix_rshi·_ˇddy_t
;

35 
	$rsc⁄
(
pmix_rshi·_ˇddy_t
 *
p
)

37 
p
->
li°
 = 
NULL
;

38 
p
->
ôem
 = 
NULL
;

39 
p
->
cd
 = 
NULL
;

40 
p
->
codes
 = 
NULL
;

41 
p
->
ncodes
 = 0;

42 
p
->
öfo
 = 
NULL
;

43 
p
->
nöfo
 = 0;

44 
	}
}

45 
	$rsdes
(
pmix_rshi·_ˇddy_t
 *
p
)

47 i‡(
NULL
 !
p
->
cd
) {

48 
	`PMIX_RELEASE
(
p
->
cd
);

50 i‡(
NULL
 !
p
->
codes
) {

51 
	`‰ì
(
p
->
codes
);

53 i‡(
NULL
 !
p
->
öfo
) {

54 
	`PMIX_INFO_FREE
(
p
->
öfo
,Ö->
nöfo
);

56 
	}
}

57 
PMIX_CLASS_INSTANCE
(
pmix_rshi·_ˇddy_t
,

58 
pmix_obje˘_t
,

59 
rsc⁄
, 
rsdes
);

62 
	$ªgevíts_cbfunc
(
pmix_≥î_t
 *
≥î
, 
pmix_usock_hdr_t
 *
hdr
,

63 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

65 
pmix_rshi·_ˇddy_t
 *
rb
 = (pmix_rshi·_ˇddy_t*)
cbd©a
;

66 
pmix_°©us_t
 
rc
, 
ªt
;

67 
˙t
;

68 
size_t
 
ödex
 = 
rb
->index;

70 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

74 
˙t
 = 1;

75 i‡((
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ªt
, &
˙t
, 
PMIX_STATUS
))) ||

76 (
PMIX_SUCCESS
 !
ªt
)) {

77 
	`PMIX_ERROR_LOG
(
rc
);

79 i‡(
NULL
 !
rb
->
li°
 && NULL !rb->
ôem
) {

80 
	`pmix_li°_ªmove_ôem
(
rb
->
li°
,Ñb->
ôem
);

81 
	`PMIX_RELEASE
(
rb
->
ôem
);

83 
ªt
 = 
PMIX_ERR_SERVER_FAILED_REQUEST
;

84 
ödex
 = 
UINT_MAX
;

88 i‡(
NULL
 !
rb
->
cd
 && NULL !rb->cd->
cbfunc
.
evªgcb‚
) {

89 
rb
->
cd
->
cbfunc
.
	`evªgcb‚
(
ªt
, 
ödex
,Ñb->cd->
cbd©a
);

91 
	`PMIX_RELEASE
(
rb
);

92 
	}
}

94 
	$ªg_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

96 
pmix_rshi·_ˇddy_t
 *
rb
 = (pmix_rshi·_ˇddy_t*)
cbd©a
;

97 
pmix_°©us_t
 
rc
 = 
°©us
;

98 
size_t
 
ödex
 = 
rb
->index;

100 i‡(
PMIX_SUCCESS
 !
°©us
) {

102 i‡(
NULL
 !
rb
->
li°
 && NULL !rb->
ôem
) {

103 
	`pmix_li°_ªmove_ôem
(
rb
->
li°
,Ñb->
ôem
);

104 
	`PMIX_RELEASE
(
rb
->
ôem
);

105 
rc
 = 
PMIX_ERR_SERVER_FAILED_REQUEST
;

106 
ödex
 = 
UINT_MAX
;

110 i‡(
NULL
 !
rb
->
cd
 && NULL !rb->cd->
cbfunc
.
evªgcb‚
) {

112 
rb
->
cd
->
cbfunc
.
	`evªgcb‚
(
rc
, 
ödex
,Ñb->cd->
cbd©a
);

115 
	`PMIX_RELEASE
(
rb
);

116 
	}
}

118 
pmix_°©us_t
 
	$_£nd_to_£rvî
(
pmix_rshi·_ˇddy_t
 *
rcd
)

120 
pmix_°©us_t
 
rc
;

121 
pmix_buf„r_t
 *
msg
;

122 
pmix_cmd_t
 
cmd
=
PMIX_REGEVENTS_CMD
;

124 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

126 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

127 
	`PMIX_ERROR_LOG
(
rc
);

128  
rc
;

131 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
rcd
->
cd
->
ncodes
, 1, 
PMIX_SIZE
))) {

132 
	`PMIX_ERROR_LOG
(
rc
);

133  
rc
;

136 i‡(
NULL
 !
rcd
->
cd
->
codes
 && 0 <Ñcd->cd->
ncodes
) {

137 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
rcd
->
cd
->
codes
,Ñcd->cd->
ncodes
, 
PMIX_STATUS
))) {

138 
	`PMIX_ERROR_LOG
(
rc
);

139  
rc
;

144 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
rcd
->
nöfo
, 1, 
PMIX_SIZE
))) {

145 
	`PMIX_ERROR_LOG
(
rc
);

146  
rc
;

149 i‡(
NULL
 !
rcd
->
öfo
 && 0 <Ñcd->
nöfo
) {

150 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, 
rcd
->
öfo
,Ñcd->
nöfo
, 
PMIX_INFO
))) {

151 
	`PMIX_ERROR_LOG
(
rc
);

152  
rc
;

155 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
ªgevíts_cbfunc
, 
rcd
);

157  
PMIX_SUCCESS
;

158 
	}
}

160 
pmix_°©us_t
 
	$_add_hdÃ
(
pmix_li°_t
 *
li°
, 
pmix_li°_ôem_t
 *
ôem
,

161 
size_t
 
ödex
, 
boﬁ
 
¥ïíd
, 
pmix_li°_t
 *
x„r
,

162 
pmix_shi·_ˇddy_t
 *
cd
)

164 
pmix_rshi·_ˇddy_t
 *
cd2
;

165 
pmix_öfo_ˇddy_t
 *
ix„r
;

166 
size_t
 
n
;

167 
boﬁ
 
ªgi°îed
, 
√ed_ªgi°î
 = 
Ál£
;

168 
pmix_a˘ive_code_t
 *
a˘ive
;

169 
pmix_°©us_t
 
rc
;

171 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

174 i‡(
¥ïíd
) {

175 
	`pmix_li°_¥ïíd
(
li°
, 
ôem
);

177 
	`pmix_li°_≠≥nd
(
li°
, 
ôem
);

181 i‡(
NULL
 =
cd
->
codes
) {

182 
ªgi°îed
 = 
Ál£
;

183 
	`PMIX_LIST_FOREACH
(
a˘ive
, &
pmix_globÆs
.
evíts
.
a˘ives
, 
pmix_a˘ive_code_t
) {

184 i‡(
PMIX_MAX_ERR_CONSTANT
 =
a˘ive
->
code
) {

186 
ªgi°îed
 = 
åue
;

190 i‡(!
ªgi°îed
) {

191 
a˘ive
 = 
	`PMIX_NEW
(
pmix_a˘ive_code_t
);

192 
a˘ive
->
code
 = 
PMIX_MAX_ERR_CONSTANT
;

193 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
evíts
.
a˘ives
, &
a˘ive
->
su≥r
);

195 
√ed_ªgi°î
 = 
åue
;

198 
n
=0;Ç < 
cd
->
ncodes
;Ç++) {

199 
ªgi°îed
 = 
Ál£
;

200 
	`PMIX_LIST_FOREACH
(
a˘ive
, &
pmix_globÆs
.
evíts
.
a˘ives
, 
pmix_a˘ive_code_t
) {

201 i‡(
a˘ive
->
code
 =
cd
->
codes
[
n
]) {

202 
ªgi°îed
 = 
åue
;

206 i‡(!
ªgi°îed
) {

207 
a˘ive
 = 
	`PMIX_NEW
(
pmix_a˘ive_code_t
);

208 
a˘ive
->
code
 = 
cd
->
codes
[
n
];

209 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
evíts
.
a˘ives
, &
a˘ive
->
su≥r
);

211 
√ed_ªgi°î
 = 
åue
;

217 
cd2
 = 
	`PMIX_NEW
(
pmix_rshi·_ˇddy_t
);

218 
cd2
->
ödex
 = index;

219 
cd2
->
li°
 =Üist;

220 
cd2
->
ôem
 = item;

221 
	`PMIX_RETAIN
(
cd
);

222 
cd2
->
cd
 = cd;

223 
cd2
->
nöfo
 = 
	`pmix_li°_gë_size
(
x„r
);

224 i‡(0 < 
cd2
->
nöfo
) {

225 
	`PMIX_INFO_CREATE
(
cd2
->
öfo
, cd2->
nöfo
);

226 
n
=0;

227 
	`PMIX_LIST_FOREACH
(
ix„r
, 
x„r
, 
pmix_öfo_ˇddy_t
) {

228 ()
	`°∫˝y
(
cd2
->
öfo
[
n
].
key
, 
ix„r
->öfo[n].key, 
PMIX_MAX_KEYLEN
);

229 
	`pmix_vÆue_lﬂd
(&
cd2
->
öfo
[
n
].
vÆue
, &
ix„r
->öfo[n].vÆue.
d©a
, ix„r->öfo[n].vÆue.
ty≥
);

230 ++
n
;

237 i‡(!
pmix_globÆs
.
£rvî
 &&

238 (
√ed_ªgi°î
 || 0 < 
	`pmix_li°_gë_size
(
x„r
))) {

239 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

243 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`_£nd_to_£rvî
(
cd2
))) {

244 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

245 "pmix:ádd_hdÃ -Öack síd_to_£rvî faûed sètus=%d", 
rc
);

246 
	`PMIX_RELEASE
(
cd2
);

247 
	`pmix_li°_ªmove_ôem
(
li°
, 
ôem
);

248 
	`PMIX_RELEASE
(
ôem
);

249  
rc
;

251  
PMIX_ERR_WOULD_BLOCK
;

257 i‡(
pmix_globÆs
.
£rvî
 && 
cd
->
ívúo
 &&

258 
NULL
 !
pmix_ho°_£rvî
.
ªgi°î_evíts
) {

259 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

261 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_ho°_£rvî
.
	`ªgi°î_evíts
(
cd
->
codes
, cd->
ncodes
,

262 
cd2
->
öfo
, cd2->
nöfo
,

263 
ªg_cbfunc
, 
cd2
))) {

264 
	`PMIX_RELEASE
(
cd2
);

265 
	`pmix_li°_ªmove_ôem
(
li°
, 
ôem
);

266 
	`PMIX_RELEASE
(
ôem
);

267  
rc
;

269  
PMIX_ERR_WOULD_BLOCK
;

272  
PMIX_SUCCESS
;

273 
	}
}

275 
	$ªg_evít_hdÃ
(
sd
, 
¨gs
, *
cbd©a
)

277 
size_t
 
ödex
 = 0, 
n
;

278 
pmix_°©us_t
 
rc
;

279 
pmix_shi·_ˇddy_t
 *
cd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

280 
pmix_sögÀ_evít_t
 *
sög
;

281 
pmix_mu…i_evít_t
 *
mu…i
;

282 
pmix_deÁu…_evít_t
 *
def
;

283 
boﬁ
 
¥ïíd
 = 
Ál£
;

284 *
«me
 = 
NULL
;

285 
pmix_li°_t
 
x„r
;

286 
pmix_öfo_ˇddy_t
 *
ix„r
;

287 *
cbobje˘
 = 
NULL
;

289 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

290 "pmix:Ñegi°îÉvít_hdÃ wôh %d infos", ()
cd
->
nöfo
);

292 
	`PMIX_CONSTRUCT
(&
x„r
, 
pmix_li°_t
);

295 i‡(
NULL
 !
cd
->
öfo
) {

296 
n
=0;Ç < 
cd
->
nöfo
;Ç++) {

297 i‡(0 =
	`°rcmp
(
cd
->
öfo
[
n
].
key
, 
PMIX_EVENT_ORDER_PREPEND
)) {

300 
¥ïíd
 = 
åue
;

301 } i‡(0 =
	`°rcmp
(
cd
->
öfo
[
n
].
key
, 
PMIX_EVENT_HDLR_NAME
)) {

302 
«me
 = 
cd
->
öfo
[
n
].
vÆue
.
d©a
.
°rög
;

303 } i‡(0 =
	`°rcmp
(
cd
->
öfo
[
n
].
key
, 
PMIX_EVENT_ENVIRO_LEVEL
)) {

304 
cd
->
ívúo
 = cd->
öfo
[
n
].
vÆue
.
d©a
.
Êag
;

305 } i‡(0 =
	`°rcmp
(
cd
->
öfo
[
n
].
key
, 
PMIX_EVENT_RETURN_OBJECT
)) {

306 
cbobje˘
 = 
cd
->
öfo
[
n
].
vÆue
.
d©a
.
±r
;

308 
ix„r
 = 
	`PMIX_NEW
(
pmix_öfo_ˇddy_t
);

309 
ix„r
->
öfo
 = &
cd
->öfo[
n
];

310 
	`pmix_li°_≠≥nd
(&
x„r
, &
ix„r
->
su≥r
);

317 i‡(
NULL
 =
cd
->
codes
) {

318 
def
 = 
	`PMIX_NEW
(
pmix_deÁu…_evít_t
);

319 i‡(
NULL
 !
«me
) {

320 
def
->
«me
 = 
	`°rdup
(name);

322 
ödex
 = 
pmix_globÆs
.
evíts
.
nhdÃs
;

323 ++
pmix_globÆs
.
evíts
.
nhdÃs
;

324 
def
->
ödex
 = index;

325 
def
->
evhdÃ
 = 
cd
->evhdlr;

326 
def
->
cbobje˘
 = cbobject;

327 
rc
 = 
	`_add_hdÃ
(&
pmix_globÆs
.
evíts
.
deÁu…_evíts
, &
def
->
su≥r
,

328 
ödex
, 
¥ïíd
, &
x„r
, 
cd
);

329 
	`PMIX_LIST_DESTRUCT
(&
x„r
);

330 i‡(
PMIX_SUCCESS
 !
rc
 &&

331 
PMIX_ERR_WOULD_BLOCK
 !
rc
) {

333 --
pmix_globÆs
.
evíts
.
nhdÃs
;

334 
rc
 = 
PMIX_ERR_EVENT_REGISTRATION
;

335 
ödex
 = 
UINT_MAX
;

336 
ack
;

338 i‡(
PMIX_ERR_WOULD_BLOCK
 =
rc
) {

342 
ack
;

346 i‡(1 =
cd
->
ncodes
) {

347 
sög
 = 
	`PMIX_NEW
(
pmix_sögÀ_evít_t
);

348 i‡(
NULL
 !
«me
) {

349 
sög
->
«me
 = 
	`°rdup
(name);

351 
sög
->
code
 = 
cd
->
codes
[0];

352 
ödex
 = 
pmix_globÆs
.
evíts
.
nhdÃs
;

353 
sög
->
ödex
 = index;

354 ++
pmix_globÆs
.
evíts
.
nhdÃs
;

355 
sög
->
cbobje˘
 = cbobject;

356 
rc
 = 
	`_add_hdÃ
(&
pmix_globÆs
.
evíts
.
sögÀ_evíts
, &
sög
->
su≥r
,

357 
ödex
, 
¥ïíd
, &
x„r
, 
cd
);

358 
	`PMIX_LIST_DESTRUCT
(&
x„r
);

359 i‡(
PMIX_SUCCESS
 !
rc
 &&

360 
PMIX_ERR_WOULD_BLOCK
 !
rc
) {

362 --
pmix_globÆs
.
evíts
.
nhdÃs
;

363 
rc
 = 
PMIX_ERR_EVENT_REGISTRATION
;

364 
ödex
 = 
UINT_MAX
;

365 
ack
;

367 i‡(
PMIX_ERR_WOULD_BLOCK
 =
rc
) {

371 
ack
;

375 
mu…i
 = 
	`PMIX_NEW
(
pmix_mu…i_evít_t
);

376 i‡(
NULL
 !
«me
) {

377 
mu…i
->
«me
 = 
	`°rdup
(name);

379 
mu…i
->
codes
 = (
pmix_°©us_t
*)
	`mÆloc
(
cd
->
ncodes
 * (pmix_status_t));

380 
mu…i
->
ncodes
 = 
cd
->ncodes;

381 
	`mem˝y
(
mu…i
->
codes
, 
cd
->codes, cd->
ncodes
 * (
pmix_°©us_t
));

382 
ödex
 = 
pmix_globÆs
.
evíts
.
nhdÃs
;

383 
mu…i
->
ödex
 = index;

384 ++
pmix_globÆs
.
evíts
.
nhdÃs
;

385 
mu…i
->
cbobje˘
 = cbobject;

386 
rc
 = 
	`_add_hdÃ
(&
pmix_globÆs
.
evíts
.
mu…i_evíts
, &
mu…i
->
su≥r
,

387 
ödex
, 
¥ïíd
, &
x„r
, 
cd
);

388 
	`PMIX_LIST_DESTRUCT
(&
x„r
);

389 i‡(
PMIX_SUCCESS
 !
rc
 &&

390 
PMIX_ERR_WOULD_BLOCK
 !
rc
) {

392 --
pmix_globÆs
.
evíts
.
nhdÃs
;

393 
rc
 = 
PMIX_ERR_EVENT_REGISTRATION
;

394 
ödex
 = 
UINT_MAX
;

395 
ack
;

397 i‡(
PMIX_ERR_WOULD_BLOCK
 =
rc
) {

402 
ack
:

405 
cd
->
cbfunc
.
	`evªgcb‚
(
rc
, 
ödex
, cd->
cbd©a
);

407 
	`PMIX_RELEASE
(
cd
);

408 
	}
}

410 
PMIX_EXPORT
 
	$PMIx_Regi°î_evít_h™dÀr
(
pmix_°©us_t
 
codes
[], 
size_t
 
ncodes
,

411 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

412 
pmix_nŸifiˇti⁄_‚_t
 
evít_hdÃ
,

413 
pmix_evhdÃ_ªg_cbfunc_t
 
cbfunc
,

414 *
cbd©a
)

416 
pmix_shi·_ˇddy_t
 *
cd
;

420 
cd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

421 
cd
->
codes
 = codes;

422 
cd
->
ncodes
 =Çcodes;

423 
cd
->
öfo
 = info;

424 
cd
->
nöfo
 =Çinfo;

425 
cd
->
evhdÃ
 = 
evít_hdÃ
;

426 
cd
->
cbfunc
.
îºegcb‚
 = cbfunc;

427 
cd
->
cbd©a
 = cbdata;

429 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

432 
	`PMIX_THREADSHIFT
(
cd
, 
ªg_evít_hdÃ
);

433 
	}
}

435 
	$dîeg_evít_hdÃ
(
sd
, 
¨gs
, *
cbd©a
)

437 
pmix_shi·_ˇddy_t
 *
cd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

438 
pmix_buf„r_t
 *
msg
 = 
NULL
;

439 
pmix_sögÀ_evít_t
 *
sög
, *
s2
;

440 
pmix_mu…i_evít_t
 *
mu…i
, *
m2
;

441 
pmix_deÁu…_evít_t
 *
def
;

442 
pmix_cmd_t
 
cmd
 = 
PMIX_DEREGEVENTS_CMD
;

443 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

444 
pmix_°©us_t
 
wûdˇrd
 = 
PMIX_MAX_ERR_CONSTANT
;

445 
size_t
 
n
;

446 
boﬁ
 
found
, 
foundcode
;

450 i‡(!
pmix_globÆs
.
£rvî
) {

451 
msg
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

452 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
cmd
, 1, 
PMIX_CMD
))) {

453 
	`PMIX_RELEASE
(
msg
);

454 
˛ónup
;

459 
	`PMIX_LIST_FOREACH
(
def
, &
pmix_globÆs
.
evíts
.
deÁu…_evíts
, 
pmix_deÁu…_evít_t
) {

460 i‡(
def
->
ödex
 =
cd
->
ªf
) {

462 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
evíts
.
deÁu…_evíts
, &
def
->
su≥r
);

463 i‡(
NULL
 !
msg
) {

466 i‡(0 =
	`pmix_li°_gë_size
(&
pmix_globÆs
.
evíts
.
deÁu…_evíts
)) {

467 
n
 = 1;

468 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
n
, 1, 
PMIX_SIZE
))) {

469 
	`PMIX_RELEASE
(
msg
);

470 
˛ónup
;

472 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
wûdˇrd
, 1, 
PMIX_STATUS
))) {

473 
	`PMIX_RELEASE
(
msg
);

474 
˛ónup
;

478 
	`PMIX_RELEASE
(
def
);

479 
ªp‹t
;

482 
	`PMIX_LIST_FOREACH
(
sög
, &
pmix_globÆs
.
evíts
.
sögÀ_evíts
, 
pmix_sögÀ_evít_t
) {

483 i‡(
sög
->
ödex
 =
cd
->
ªf
) {

485 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
evíts
.
sögÀ_evíts
, &
sög
->
su≥r
);

486 i‡(
NULL
 !
msg
) {

489 
found
 = 
Ál£
;

490 
	`PMIX_LIST_FOREACH
(
s2
, &
pmix_globÆs
.
evíts
.
sögÀ_evíts
, 
pmix_sögÀ_evít_t
) {

491 i‡(
s2
->
code
 =
sög
->code) {

492 
found
 = 
åue
;

496 i‡(!
found
) {

497 
n
 = 1;

498 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
n
, 1, 
PMIX_SIZE
))) {

499 
	`PMIX_RELEASE
(
msg
);

500 
	`PMIX_RELEASE
(
sög
);

501 
˛ónup
;

503 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
sög
->
code
, 1, 
PMIX_STATUS
))) {

504 
	`PMIX_RELEASE
(
msg
);

505 
	`PMIX_RELEASE
(
sög
);

506 
˛ónup
;

510 
	`PMIX_RELEASE
(
sög
);

511 
ªp‹t
;

514 
	`PMIX_LIST_FOREACH
(
mu…i
, &
pmix_globÆs
.
evíts
.
mu…i_evíts
, 
pmix_mu…i_evít_t
) {

515 i‡(
mu…i
->
ödex
 =
cd
->
ªf
) {

517 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
evíts
.
mu…i_evíts
, &
mu…i
->
su≥r
);

518 i‡(
NULL
 !
msg
) {

521 
found
 = 
Ál£
;

522 
	`PMIX_LIST_FOREACH
(
m2
, &
pmix_globÆs
.
evíts
.
mu…i_evíts
, 
pmix_mu…i_evít_t
) {

523 i‡(
m2
->
ncodes
 !
mu…i
->ncodes) {

526 
foundcode
 = 
åue
;

527 
n
=0;Ç < 
mu…i
->
ncodes
;Ç++) {

528 i‡(
m2
->
codes
[
n
] !
mu…i
->codes[n]) {

529 
foundcode
 = 
Ál£
;

533 i‡(
foundcode
) {

534 
found
 = 
åue
;

538 i‡(!
found
) {

539 
n
 = 
mu…i
->
ncodes
;

540 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
n
, 1, 
PMIX_SIZE
))) {

541 
	`PMIX_RELEASE
(
msg
);

542 
	`PMIX_RELEASE
(
mu…i
);

543 
˛ónup
;

545 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
msg
, &
mu…i
->
codes
, 
n
, 
PMIX_STATUS
))) {

546 
	`PMIX_RELEASE
(
msg
);

547 
	`PMIX_RELEASE
(
mu…i
);

548 
˛ónup
;

552 
	`PMIX_RELEASE
(
mu…i
);

553 
ªp‹t
;

557 i‡(
NULL
 !
cd
->
cbfunc
.
›cb‚
) {

558 
cd
->
cbfunc
.
	`›cb‚
(
PMIX_ERR_NOT_FOUND
, cd->
cbd©a
);

560 
	`PMIX_RELEASE
(
cd
);

563 
ªp‹t
:

564 i‡(
NULL
 !
msg
) {

566 
	`PMIX_ACTIVATE_SEND_RECV
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
msg
, 
NULL
, NULL);

569 
˛ónup
:

571 i‡(
NULL
 !
cd
->
cbfunc
.
›cb‚
) {

572 
cd
->
cbfunc
.
	`›cb‚
(
rc
, cd->
cbd©a
);

574 
	`PMIX_RELEASE
(
cd
);

575 
	}
}

577 
PMIX_EXPORT
 
	$PMIx_Dîegi°î_evít_h™dÀr
(
size_t
 
evít_hdÃ_ªf
,

578 
pmix_›_cbfunc_t
 
cbfunc
,

579 *
cbd©a
)

581 
pmix_shi·_ˇddy_t
 *
cd
;

584 
cd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

585 
cd
->
cbfunc
.
›cb‚
 = cbfunc;

586 
cd
->
cbd©a
 = cbdata;

587 
cd
->
ªf
 = 
evít_hdÃ_ªf
;

589 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

591 
	`PMIX_THREADSHIFT
(
cd
, 
dîeg_evít_hdÃ
);

592 
	}
}

	@include/align.h

22 #i‚de‡
PMIX_ALIGN_H


23 
	#PMIX_ALIGN_H


	)

25 
	#PMIX_ALIGN
(
x
,
a
,
t
Ë(((x)+(—)◊)-1)Ë& ~((—)◊)-1)))

	)

26 
	#PMIX_ALIGN_PTR
(
x
,
a
,
t
Ë(—)
	`PMIX_ALIGN
((
uöçå_t
)x,á, uöçå_t))

	)

27 
	#PMIX_ALIGN_PAD_AMOUNT
(
x
,
s
Ë((~((
uöçå_t
)(x))+1Ë& ((uöçå_t)(s)-1))

	)

	@include/frameworks.h

4 #i‚de‡
PMIX_FRAMEWORKS_H


5 
	#PMIX_FRAMEWORKS_H


	)

7 
	~<pmix/mˇ/ba£/mˇ_ba£_‰amew‹k.h
>

9 
pmix_mˇ_ba£_‰amew‹k_t
 
pmix_§c_ba£_‰amew‹k
;

10 
pmix_mˇ_ba£_‰amew‹k_t
 
pmix_pdl_ba£_‰amew‹k
;

11 
pmix_mˇ_ba£_‰amew‹k_t
 
pmix_pö°Ældús_ba£_‰amew‹k
;

13 
pmix_mˇ_ba£_‰amew‹k_t
 *
	gpmix_‰amew‹ks
[] = {

14 &
pmix_§c_ba£_‰amew‹k
,

15 &
pmix_pdl_ba£_‰amew‹k
,

16 &
pmix_pö°Ældús_ba£_‰amew‹k
,

17 
NULL


	@include/hash_string.h

18 #i‚de‡
PMIX_HASH_STRING_H


19 
	#PMIX_HASH_STRING_H


	)

28 
	#PMIX_HASH_STRLEN
–
°r
, 
hash
, 
Àngth
 ) \

30 c⁄° *
_°r
 = (
°r
); \

31 
uöt32_t
 
_hash
 = 0; \

32 
uöt32_t
 
_Àn
 = 0; \

34  *
_°r
 ) { \

35 
_Àn
++; \

36 
_hash
 +*
_°r
++; \

37 
_hash
 += (_hash << 10); \

38 
_hash
 ^= (_hash >> 6); \

41 
_hash
 += (_hash << 3); \

42 
_hash
 ^= (_hash >> 11); \

43 (
hash
Ë(
_hash
 + (_hash << 15)); \

44 (
Àngth
Ë
_Àn
; \

45 } 0)

	)

53 
	#PMIX_HASH_STR
–
°r
, 
hash
 ) \

55 c⁄° *
_°r
 = (
°r
); \

56 
uöt32_t
 
_hash
 = 0; \

58  *
_°r
 ) { \

59 
_hash
 +*
_°r
++; \

60 
_hash
 += (_hash << 10); \

61 
_hash
 ^= (_hash >> 6); \

64 
_hash
 += (_hash << 3); \

65 
_hash
 ^= (_hash >> 11); \

66 (
hash
Ë(
_hash
 + (_hash << 15)); \

67 } 0)

	)

	@include/pmix_config.h

26 #i‚de‡
PMIX_CONFIG_H


27 
	#PMIX_CONFIG_H


	)

29 
	~<§c/ö˛ude/pmix_c⁄fig_t›.h
>

37 
	#HAVE_ARPA_INET_H
 1

	)

40 
	#HAVE_ASPRINTF
 1

	)

47 
	#HAVE_DECL_AF_INET6
 1

	)

51 
	#HAVE_DECL_AF_UNSPEC
 1

	)

55 
	#HAVE_DECL_PF_INET6
 1

	)

59 
	#HAVE_DECL_PF_UNSPEC
 1

	)

63 
	#HAVE_DECL___FUNC__
 1

	)

66 
	#HAVE_DIRENT_H
 1

	)

69 
	#HAVE_DLFCN_H
 1

	)

72 
	#HAVE_EVENT_H
 1

	)

75 
	#HAVE_FCNTL_H
 1

	)

87 
	#HAVE_HWLOC_H
 1

	)

90 
	#HAVE_INT16_T
 1

	)

93 
	#HAVE_INT32_T
 1

	)

96 
	#HAVE_INT64_T
 1

	)

99 
	#HAVE_INT8_T
 1

	)

102 
	#HAVE_INTPTR_T
 1

	)

105 
	#HAVE_INTTYPES_H
 1

	)

111 
	#HAVE_LIBEVENT
 1

	)

117 
	#HAVE_LIBEVENT_PTHREADS
 1

	)

120 
	#HAVE_LIBGEN_H
 1

	)

123 
	#HAVE_LIMITS_H
 1

	)

126 
	#HAVE_LONG_LONG
 1

	)

129 
	#HAVE_MEMORY_H
 1

	)

135 
	#HAVE_NETDB_H
 1

	)

138 
	#HAVE_NETINET_IN_H
 1

	)

144 
	#HAVE_PTRDIFF_T
 1

	)

150 
	#HAVE_SIGINFO_T_SI_BAND
 1

	)

153 
	#HAVE_SIGINFO_T_SI_FD
 1

	)

156 
	#HAVE_SIGNAL_H
 1

	)

159 
	#HAVE_SNPRINTF
 1

	)

162 
	#HAVE_SOCKETPAIR
 1

	)

165 
	#HAVE_SOCKLEN_T
 1

	)

171 
	#HAVE_STATFS
 1

	)

174 
	#HAVE_STATVFS
 1

	)

177 
	#HAVE_STDARG_H
 1

	)

180 
	#HAVE_STDBOOL_H
 1

	)

183 
	#HAVE_STDDEF_H
 1

	)

186 
	#HAVE_STDINT_H
 1

	)

189 
	#HAVE_STDLIB_H
 1

	)

192 
	#HAVE_STRINGS_H
 1

	)

195 
	#HAVE_STRING_H
 1

	)

201 
	#HAVE_STRNLEN
 1

	)

204 
	#HAVE_STRSIGNAL
 1

	)

207 
	#HAVE_STRUCT_DIRENT_D_TYPE
 1

	)

210 
	#HAVE_STRUCT_SOCKADDR_IN
 1

	)

213 
	#HAVE_STRUCT_SOCKADDR_IN6
 1

	)

219 
	#HAVE_STRUCT_SOCKADDR_STORAGE
 1

	)

222 
	#HAVE_STRUCT_SOCKADDR_UN
 1

	)

231 
	#HAVE_STRUCT_STATFS_F_TYPE
 1

	)

243 
	#HAVE_STRUCT_UCRED_UID
 1

	)

246 
	#HAVE_SYSLOG_H
 1

	)

249 
	#HAVE_SYS_PARAM_H
 1

	)

252 
	#HAVE_SYS_SELECT_H
 1

	)

255 
	#HAVE_SYS_SOCKET_H
 1

	)

258 
	#HAVE_SYS_STATFS_H
 1

	)

261 
	#HAVE_SYS_STATVFS_H
 1

	)

264 
	#HAVE_SYS_STAT_H
 1

	)

267 
	#HAVE_SYS_TIME_H
 1

	)

270 
	#HAVE_SYS_TYPES_H
 1

	)

273 
	#HAVE_SYS_UIO_H
 1

	)

276 
	#HAVE_SYS_UN_H
 1

	)

279 
	#HAVE_SYS_WAIT_H
 1

	)

282 
	#HAVE_TIME_H
 1

	)

288 
	#HAVE_UINT16_T
 1

	)

291 
	#HAVE_UINT32_T
 1

	)

294 
	#HAVE_UINT64_T
 1

	)

297 
	#HAVE_UINT8_T
 1

	)

300 
	#HAVE_UINTPTR_T
 1

	)

303 
	#HAVE_UNISTD_H
 1

	)

307 
	#HAVE_UNIX_BYTESWAP
 1

	)

310 
	#HAVE_USLEEP
 1

	)

313 
	#HAVE_VASPRINTF
 1

	)

316 
	#HAVE_VSNPRINTF
 1

	)

320 
	#LT_OBJDIR
 ".libs/"

	)

326 
	#PACKAGE_BUGREPORT
 "hâp://pmix.gôhub.io/ma°î"

	)

329 
	#PACKAGE_NAME
 "pmix"

	)

332 
	#PACKAGE_STRING
 "pmix 3.0.0a1"

	)

335 
	#PACKAGE_TARNAME
 "pmix"

	)

338 
	#PACKAGE_URL
 ""

	)

341 
	#PACKAGE_VERSION
 "3.0.0a1"

	)

344 
	#PMIX_ALIGNMENT_BOOL
 1

	)

347 
	#PMIX_ALIGNMENT_CHAR
 1

	)

350 
	#PMIX_ALIGNMENT_DOUBLE
 8

	)

353 
	#PMIX_ALIGNMENT_FLOAT
 4

	)

356 
	#PMIX_ALIGNMENT_INT
 4

	)

359 
	#PMIX_ALIGNMENT_INT16
 2

	)

362 
	#PMIX_ALIGNMENT_INT32
 4

	)

365 
	#PMIX_ALIGNMENT_INT64
 8

	)

368 
	#PMIX_ALIGNMENT_INT8
 1

	)

371 
	#PMIX_ALIGNMENT_LONG
 8

	)

377 
	#PMIX_ALIGNMENT_LONG_LONG
 8

	)

380 
	#PMIX_ALIGNMENT_SHORT
 2

	)

383 
	#PMIX_ALIGNMENT_SIZE_T
 8

	)

386 
	#PMIX_ALIGNMENT_VOID_P
 8

	)

389 
	#PMIX_ALIGNMENT_WCHAR
 4

	)

392 
	#PMIX_BUILD_PLATFORM_COMPILER_FAMILYID
 0

	)

395 
	#PMIX_BUILD_PLATFORM_COMPILER_FAMILYNAME
 
UNKNOWN


	)

398 
	#PMIX_BUILD_PLATFORM_COMPILER_VERSION
 0

	)

401 
	#PMIX_BUILD_PLATFORM_COMPILER_VERSION_STR
 
UNKNOWN


	)

404 
	#PMIX_CC
 "gcc"

	)

407 
	#PMIX_CC_USE_CONST_CHAR_IDENT
 1

	)

410 
	#PMIX_CC_USE_IDENT
 0

	)

413 
	#PMIX_CC_USE_PRAGMA_COMMENT


	)

416 
	#PMIX_CC_USE_PRAGMA_IDENT
 0

	)

419 
	#PMIX_C_HAVE_BUILTIN_CLZ
 1

	)

422 
	#PMIX_C_HAVE_BUILTIN_EXPECT
 1

	)

425 
	#PMIX_C_HAVE_BUILTIN_PREFETCH
 1

	)

428 
	#PMIX_C_HAVE_VISIBILITY
 1

	)

431 
	#PMIX_ENABLE_DEBUG
 1

	)

434 
	#PMIX_ENABLE_DSTORE
 0

	)

437 
	#PMIX_ENABLE_TIMING
 0

	)

440 
	#PMIX_EVENT2_THREAD_HEADER
 <
evít2
/
thªad
.
h
>

	)

443 
	#PMIX_EVENT_HEADER
 <
evít
.
h
>

	)

446 
	#PMIX_HAVE_ATTRIBUTE
 1

	)

449 
	#PMIX_HAVE_ATTRIBUTE_ALIGNED
 1

	)

452 
	#PMIX_HAVE_ATTRIBUTE_ALWAYS_INLINE
 1

	)

455 
	#PMIX_HAVE_ATTRIBUTE_COLD
 1

	)

458 
	#PMIX_HAVE_ATTRIBUTE_CONST
 1

	)

461 
	#PMIX_HAVE_ATTRIBUTE_DEPRECATED
 1

	)

465 
	#PMIX_HAVE_ATTRIBUTE_DEPRECATED_ARGUMENT
 1

	)

468 
	#PMIX_HAVE_ATTRIBUTE_DESTRUCTOR
 1

	)

471 
	#PMIX_HAVE_ATTRIBUTE_FORMAT
 1

	)

475 
	#PMIX_HAVE_ATTRIBUTE_FORMAT_FUNCPTR
 1

	)

478 
	#PMIX_HAVE_ATTRIBUTE_HOT
 1

	)

481 
	#PMIX_HAVE_ATTRIBUTE_MALLOC
 1

	)

484 
	#PMIX_HAVE_ATTRIBUTE_MAY_ALIAS
 1

	)

487 
	#PMIX_HAVE_ATTRIBUTE_NONNULL
 1

	)

490 
	#PMIX_HAVE_ATTRIBUTE_NORETURN
 1

	)

494 
	#PMIX_HAVE_ATTRIBUTE_NORETURN_FUNCPTR
 1

	)

497 
	#PMIX_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION
 1

	)

500 
	#PMIX_HAVE_ATTRIBUTE_PACKED
 1

	)

503 
	#PMIX_HAVE_ATTRIBUTE_PURE
 1

	)

506 
	#PMIX_HAVE_ATTRIBUTE_SENTINEL
 1

	)

509 
	#PMIX_HAVE_ATTRIBUTE_UNUSED
 1

	)

512 
	#PMIX_HAVE_ATTRIBUTE_VISIBILITY
 1

	)

515 
	#PMIX_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT
 1

	)

518 
	#PMIX_HAVE_ATTRIBUTE_WEAK_ALIAS


	)

521 
	#PMIX_HAVE_BROKEN_QSORT
 0

	)

524 
	#PMIX_HAVE_CEIL
 1

	)

527 
	#PMIX_HAVE_DIRNAME
 1

	)

530 
	#PMIX_HAVE_HWLOC
 1

	)

533 
	#PMIX_HAVE_PDL_SUPPORT
 1

	)

536 
	#PMIX_HAVE_SASL
 0

	)

539 
	#PMIX_HAVE_SA_RESTART
 1

	)

542 
	#PMIX_HAVE_SOCKET
 1

	)

545 
	#PMIX_HAVE_UNDERSCORE_VA_COPY
 1

	)

548 
	#PMIX_HAVE_VA_COPY
 1

	)

551 
	#PMIX_HWLOC_HEADER
 <
hwloc
.
h
>

	)

554 
	#PMIX_IDENT_STRING
 ""

	)

557 
	#PMIX_MAJOR_VERSION
 3

	)

560 
	#PMIX_MINOR_VERSION
 0

	)

564 
	#PMIX_NEED_C_BOOL
 1

	)

567 
	#PMIX_NO_LIB_DESTRUCTOR
 0

	)

570 
	#PMIX_PTRDIFF_TYPE
 
±rdiff_t


	)

573 
	#PMIX_RELEASE_VERSION
 0

	)

576 
	#PMIX_SYMBOL_RENAME
 "§c/ö˛ude/ª«me.h"

	)

579 
	#PMIX_USE_STDBOOL_H
 1

	)

582 
	#PMIX_VERSION
 "3.0.0a1"

	)

585 
	#PMIX_WANT_HOME_CONFIG_FILES
 1

	)

588 
	#PMIX_WANT_MUNGE
 0

	)

591 
	#PMIX_WANT_PRETTY_PRINT_STACKTRACE
 1

	)

594 
	#SIZEOF_CHAR
 1

	)

597 
	#SIZEOF_DOUBLE
 8

	)

600 
	#SIZEOF_FLOAT
 4

	)

603 
	#SIZEOF_INT
 4

	)

606 
	#SIZEOF_LONG
 8

	)

609 
	#SIZEOF_LONG_LONG
 8

	)

612 
	#SIZEOF_PID_T
 4

	)

615 
	#SIZEOF_PTRDIFF_T
 8

	)

618 
	#SIZEOF_SHORT
 2

	)

621 
	#SIZEOF_SIZE_T
 8

	)

627 
	#SIZEOF_VOID_P
 8

	)

630 
	#SIZEOF_WCHAR_T
 4

	)

633 
	#SIZEOF__BOOL
 1

	)

636 
	#STDC_HEADERS
 1

	)

639 #i‚de‡
_ALL_SOURCE


640 
	#_ALL_SOURCE
 1

	)

643 #i‚de‡
_GNU_SOURCE


644 
	#_GNU_SOURCE
 1

	)

647 #i‚de‡
_POSIX_PTHREAD_SEMANTICS


648 
	#_POSIX_PTHREAD_SEMANTICS
 1

	)

651 #i‚de‡
_TANDEM_SOURCE


652 
	#_TANDEM_SOURCE
 1

	)

655 #i‚de‡
__EXTENSIONS__


656 
	#__EXTENSIONS__
 1

	)

662 #i‡
deföed
 
AC_APPLE_UNIVERSAL_BUILD


663 #i‡
deföed
 
__BIG_ENDIAN__


664 
	#WORDS_BIGENDIAN
 1

	)

667 #i‚de‡
WORDS_BIGENDIAN


677 #i‚de‡
_GNU_SOURCE


678 
	#_GNU_SOURCE
 1

	)

693 #i‚de‡
__˝lu•lus


694 
	#ölöe
 
__ölöe__


	)

698 
	~<§c/ö˛ude/pmix_c⁄fig_bŸtom.h
>

	@include/pmix_config_bottom.h

26 #i‚de‡
PMIX_CONFIG_BOTTOM_H


27 
	#PMIX_CONFIG_BOTTOM_H


	)

34 #i‚de‡
PMIX_BUILDING


35 
	#PMIX_BUILDING
 1

	)

44 #i‚de‡
HAVE_UNISTD_H


45 
	#YY_NO_UNISTD_H


	)

56 
	#PMIX_HAVE_THREADS
 (
PMIX_HAVE_POSIX_THREADS
 || 
PMIX_HAVE_SOLARIS_THREADS
)

	)

63 #unde‡
BEGIN_C_DECLS


64 #unde‡
END_C_DECLS


65 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

66 
	#BEGIN_C_DECLS
 "C" {

	)

67 
	#END_C_DECLS
 }

	)

69 
	#BEGIN_C_DECLS


	)

70 
	#END_C_DECLS


	)

74 #unde‡
PMIX_LINUX_SYS


77 #unde‡
PMIX_HAVE_CPU_SET


80 #unde‡
PMIX_HAVE_WINDOWS_H


81 #unde‡
pmix_pid_t


82 #unde‡
pmix_thªad_t


92 #i‡
deföed
(
__˝lu•lus
) && \

93 (
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR
 >= 4))

94 
	#GXX_ABOVE_3_4
 1

	)

96 
	#GXX_ABOVE_3_4
 0

	)

99 #i‡!
deföed
(
__˝lu•lus
) && \

100 (
__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 95))

101 
	#GCC_ABOVE_2_95
 1

	)

103 
	#GCC_ABOVE_2_95
 0

	)

106 #i‡!
deföed
(
__˝lu•lus
) && \

107 (
__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96))

108 
	#GCC_ABOVE_2_96
 1

	)

110 
	#GCC_ABOVE_2_96
 0

	)

113 #i‡!
deföed
(
__˝lu•lus
) && \

114 (
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 3))

115 
	#GCC_ABOVE_3_3
 1

	)

117 
	#GCC_ABOVE_3_3
 0

	)

125 #i‡
PMIX_HAVE_ATTRIBUTE_ALIGNED


126 
	#__pmix_©åibuã_Æig√d__
(
a
Ë
	`__©åibuã__
((
	`__Æig√d__
◊)))

	)

127 
	#__pmix_©åibuã_Æig√d_max__
 
	`__©åibuã__
((
__Æig√d__
))

	)

129 
	#__pmix_©åibuã_Æig√d__
(
a
)

	)

130 
	#__pmix_©åibuã_Æig√d_max__


	)

135 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

136 
	#__pmix_ölöe
 
ölöe


	)

137 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__HP_cc
)

138 
	#__pmix_ölöe
 
__ölöe


	)

140 
	#__pmix_ölöe
 
__ölöe__


	)

143 #i‡
PMIX_HAVE_ATTRIBUTE_ALWAYS_INLINE


144 
	#__pmix_©åibuã_Æways_ölöe__
 
	`__©åibuã__
((
__Æways_ölöe__
))

	)

146 
	#__pmix_©åibuã_Æways_ölöe__


	)

149 #i‡
PMIX_HAVE_ATTRIBUTE_COLD


150 
	#__pmix_©åibuã_cﬁd__
 
	`__©åibuã__
((
__cﬁd__
))

	)

152 
	#__pmix_©åibuã_cﬁd__


	)

155 #ifde‡
PMIX_HAVE_ATTRIBUTE_CONST


156 
	#__PMIX_HAVE_ATTRIBUTE_CONST
 
PMIX_HAVE_ATTRIBUTE_CONST


	)

157 #ñi‡
deföed
(
__GNUC__
)

158 
	#__PMIX_HAVE_ATTRIBUTE_CONST
 (
GXX_ABOVE_3_4
 || 
GCC_ABOVE_2_95
)

	)

160 
	#__PMIX_HAVE_ATTRIBUTE_CONST
 0

	)

162 #i‡
__PMIX_HAVE_ATTRIBUTE_CONST


163 
	#__pmix_©åibuã_c⁄°
 
	`__©åibuã__
((
__c⁄°__
))

	)

165 
	#__pmix_©åibuã_c⁄°


	)

168 #i‡
PMIX_HAVE_ATTRIBUTE_CONST


169 
	#__pmix_©åibuã_c⁄°__
 
	`__©åibuã__
((
__c⁄°__
))

	)

171 
	#__pmix_©åibuã_c⁄°__


	)

174 #ifde‡
PMIX_HAVE_ATTRIBUTE_DEPRECATED


175 
	#__PMIX_HAVE_ATTRIBUTE_DEPRECATED
 
PMIX_HAVE_ATTRIBUTE_DEPRECATED


	)

176 #ñi‡
deföed
(
__GNUC__
)

177 
	#__PMIX_HAVE_ATTRIBUTE_DEPRECATED
 (
GXX_ABOVE_3_4
 || 
GCC_ABOVE_3_3
)

	)

179 
	#__PMIX_HAVE_ATTRIBUTE_DEPRECATED
 0

	)

181 #i‡
__PMIX_HAVE_ATTRIBUTE_DEPRECATED


182 
	#__pmix_©åibuã_dïªˇãd
 
	`__©åibuã__
((
__dïªˇãd__
))

	)

184 
	#__pmix_©åibuã_dïªˇãd


	)

187 #i‡
PMIX_HAVE_ATTRIBUTE_DEPRECATED


188 
	#__pmix_©åibuã_dïªˇãd__
 
	`__©åibuã__
((
__dïªˇãd__
))

	)

190 
	#__pmix_©åibuã_dïªˇãd__


	)

193 #i‡
PMIX_HAVE_ATTRIBUTE_FORMAT


194 
	#__pmix_©åibuã_f‹m©__
(
a
,
b
,
c
Ë
	`__©åibuã__
((
	`__f‹m©__
◊, b, c)))

	)

196 
	#__pmix_©åibuã_f‹m©__
(
a
,
b
,
c
)

	)

200 #i‡
PMIX_HAVE_ATTRIBUTE_FORMAT_FUNCPTR


201 
	#__pmix_©åibuã_f‹m©_fun˝å__
(
a
,
b
,
c
Ë
	`__©åibuã__
((
	`__f‹m©__
◊, b, c)))

	)

203 
	#__pmix_©åibuã_f‹m©_fun˝å__
(
a
,
b
,
c
)

	)

206 #i‡
PMIX_HAVE_ATTRIBUTE_HOT


207 
	#__pmix_©åibuã_hŸ__
 
	`__©åibuã__
((
__hŸ__
))

	)

209 
	#__pmix_©åibuã_hŸ__


	)

212 #ifde‡
PMIX_HAVE_ATTRIBUTE_MALLOC


213 
	#__PMIX_HAVE_ATTRIBUTE_MALLOC
 
PMIX_HAVE_ATTRIBUTE_MALLOC


	)

214 #ñi‡
deföed
(
__GNUC__
)

215 
	#__PMIX_HAVE_ATTRIBUTE_MALLOC
 (
GXX_ABOVE_3_4
 || 
GCC_ABOVE_2_96
)

	)

217 
	#__PMIX_HAVE_ATTRIBUTE_MALLOC
 0

	)

219 #i‡
__PMIX_HAVE_ATTRIBUTE_MALLOC


220 
	#__pmix_©åibuã_mÆloc
 
	`__©åibuã__
((
__mÆloc__
))

	)

222 
	#__pmix_©åibuã_mÆloc


	)

225 #i‡
PMIX_HAVE_ATTRIBUTE_MALLOC


226 
	#__pmix_©åibuã_mÆloc__
 
	`__©åibuã__
((
__mÆloc__
))

	)

228 
	#__pmix_©åibuã_mÆloc__


	)

231 #ifde‡
PMIX_HAVE_ATTRIBUTE_MAY_ALIAS


232 
	#__PMIX_HAVE_ATTRIBUTE_MAY_ALIAS
 
PMIX_HAVE_ATTRIBUTE_MAY_ALIAS


	)

233 #ñi‡
deföed
(
__GNUC__
)

234 
	#__PMIX_HAVE_ATTRIBUTE_MAY_ALIAS
 (
GXX_ABOVE_3_4
 || 
GCC_ABOVE_3_3
)

	)

236 
	#__PMIX_HAVE_ATTRIBUTE_MAY_ALIAS
 0

	)

238 #i‡
__PMIX_HAVE_ATTRIBUTE_MAY_ALIAS


239 
	#__pmix_©åibuã_may_Æüs
 
	`__©åibuã__
((
__may_Æüs__
))

	)

241 
	#__pmix_©åibuã_may_Æüs


	)

244 #i‡
PMIX_HAVE_ATTRIBUTE_MAY_ALIAS


245 
	#__pmix_©åibuã_may_Æüs__
 
	`__©åibuã__
((
__may_Æüs__
))

	)

247 
	#__pmix_©åibuã_may_Æüs__


	)

250 #i‡
PMIX_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION


251 
	#__pmix_©åibuã_no_ö°rumít_fun˘i⁄__
 
	`__©åibuã__
((
__no_ö°rumít_fun˘i⁄__
))

	)

253 
	#__pmix_©åibuã_no_ö°rumít_fun˘i⁄__


	)

256 #i‡
PMIX_HAVE_ATTRIBUTE_NONNULL


257 
	#__pmix_©åibuã_n⁄nuŒ__
(
a
Ë
	`__©åibuã__
((
	`__n⁄nuŒ__
◊)))

	)

258 
	#__pmix_©åibuã_n⁄nuŒ_Æl__
 
	`__©åibuã__
((
__n⁄nuŒ__
))

	)

260 
	#__pmix_©åibuã_n⁄nuŒ__
(
a
)

	)

261 
	#__pmix_©åibuã_n⁄nuŒ_Æl__


	)

264 #i‡
PMIX_HAVE_ATTRIBUTE_NORETURN


265 
	#__pmix_©åibuã_n‹ëu∫__
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

267 
	#__pmix_©åibuã_n‹ëu∫__


	)

271 #i‡
PMIX_HAVE_ATTRIBUTE_NORETURN_FUNCPTR


272 
	#__pmix_©åibuã_n‹ëu∫_fun˝å__
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

274 
	#__pmix_©åibuã_n‹ëu∫_fun˝å__


	)

277 #i‡
PMIX_HAVE_ATTRIBUTE_PACKED


278 
	#__pmix_©åibuã_∑cked__
 
	`__©åibuã__
((
__∑cked__
))

	)

280 
	#__pmix_©åibuã_∑cked__


	)

283 #ifde‡
PMIX_HAVE_ATTRIBUTE_PURE


284 
	#__PMIX_HAVE_ATTRIBUTE_PURE
 
PMIX_HAVE_ATTRIBUTE_PURE


	)

285 #ñi‡
deföed
(
__GNUC__
)

286 
	#__PMIX_HAVE_ATTRIBUTE_PURE
 (
GXX_ABOVE_3_4
 || 
GCC_ABOVE_2_96
)

	)

288 
	#__PMIX_HAVE_ATTRIBUTE_PURE
 0

	)

290 #i‡
__PMIX_HAVE_ATTRIBUTE_PURE


291 
	#__pmix_©åibuã_puª
 
	`__©åibuã__
((
__puª__
))

	)

293 
	#__pmix_©åibuã_puª


	)

296 #i‡
PMIX_HAVE_ATTRIBUTE_PURE


297 
	#__pmix_©åibuã_puª__
 
	`__©åibuã__
((
__puª__
))

	)

299 
	#__pmix_©åibuã_puª__


	)

302 #i‡
PMIX_HAVE_ATTRIBUTE_SENTINEL


303 
	#__pmix_©åibuã_£¡öñ__
 
	`__©åibuã__
((
__£¡öñ__
))

	)

305 
	#__pmix_©åibuã_£¡öñ__


	)

309 #ifde‡
PMIX_HAVE_ATTRIBUTE_UNUSED


310 
	#__PMIX_HAVE_ATTRIBUTE_UNUSED
 
PMIX_HAVE_ATTRIBUTE_UNUSED


	)

311 #ñi‡
deföed
(
__GNUC__
)

312 
	#__PMIX_HAVE_ATTRIBUTE_UNUSED
 (
GXX_ABOVE_3_4
 || 
GCC_ABOVE_2_95
)

	)

314 
	#__PMIX_HAVE_ATTRIBUTE_UNUSED
 0

	)

316 #i‡
__PMIX_HAVE_ATTRIBUTE_UNUSED


317 
	#__pmix_©åibuã_unu£d
 
	`__©åibuã__
((
__unu£d__
))

	)

319 
	#__pmix_©åibuã_unu£d


	)

322 #i‡
PMIX_HAVE_ATTRIBUTE_UNUSED


323 
	#__pmix_©åibuã_unu£d__
 
	`__©åibuã__
((
__unu£d__
))

	)

325 
	#__pmix_©åibuã_unu£d__


	)

328 #i‡
PMIX_HAVE_ATTRIBUTE_VISIBILITY


329 
	#__pmix_©åibuã_visibûôy__
(
a
Ë
	`__©åibuã__
((
	`__visibûôy__
◊)))

	)

331 
	#__pmix_©åibuã_visibûôy__
(
a
)

	)

334 #i‡
PMIX_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT


335 
	#__pmix_©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã__
((
__w¨n_unu£d_ªsu…__
))

	)

337 
	#__pmix_©åibuã_w¨n_unu£d_ªsu…__


	)

340 #i‡
PMIX_HAVE_ATTRIBUTE_DESTRUCTOR


341 
	#__pmix_©åibuã_de°ru˘‹__
 
	`__©åibuã__
((
__de°ru˘‹__
))

	)

343 
	#__pmix_©åibuã_de°ru˘‹__


	)

346 #ifde‡
PMIX_C_HAVE_VISIBILITY


347 #i‡
PMIX_C_HAVE_VISIBILITY


348 
	#PMIX_EXPORT
 
	`__pmix_©åibuã_visibûôy__
("deÁu…")

	)

350 
	#PMIX_EXPORT


	)

353 
	#PMIX_EXPORT


	)

359 #ifde‡
HAVE_STDINT_H


360 #i‡!
deföed
(
__STDC_LIMIT_MACROS
Ë&& (deföed(
c_∂u•lus
Ë|| deföed (
__˝lu•lus
))

364 
	#__STDC_LIMIT_MACROS


	)

366 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

367 
	~<°döt.h
>

369 
	~<§c/ö˛ude/pmix_°döt.h
>

379 #i‡
PMIX_BUILDING


381 #i‚de‡
HAVE_PTRDIFF_T


382 
PMIX_PTRDIFF_TYPE
 
	t±rdiff_t
;

388 
	~<limôs.h
>

389 #ifde‡
HAVE_SYS_PARAM_H


390 
	~<sys/∑øm.h
>

392 #i‡
deföed
(
PATH_MAX
)

393 
	#PMIX_PATH_MAX
 (
PATH_MAX
 + 1)

	)

394 #ñi‡
deföed
(
_POSIX_PATH_MAX
)

395 
	#PMIX_PATH_MAX
 (
_POSIX_PATH_MAX
 + 1)

	)

397 
	#PMIX_PATH_MAX
 256

	)

400 #i‡
deföed
(
MAXHOSTNAMELEN
)

401 
	#PMIX_MAXHOSTNAMELEN
 (
MAXHOSTNAMELEN
 + 1)

	)

402 #ñi‡
deföed
(
HOST_NAME_MAX
)

403 
	#PMIX_MAXHOSTNAMELEN
 (
HOST_NAME_MAX
 + 1)

	)

406 
	#PMIX_MAXHOSTNAMELEN
 (255 + 1)

	)

412 
	#PMIX_PATH_SEP
 "/"

	)

413 
	#PMIX_ENV_SEP
 ':'

	)

418 #i‡!
deföed
(
HAVE_VASPRINTF
Ë|| !deföed(
HAVE_VSNPRINTF
)

419 
	~<°d¨g.h
>

420 
	~<°dlib.h
>

423 #i‡!
deföed
(
HAVE_ASPRINTF
Ë|| !deföed(
HAVE_SNPRINTF
Ë|| !deföed(
HAVE_VASPRINTF
Ë|| !deföed(
HAVE_VSNPRINTF
)

424 
	~"utû/¥ötf.h
"

427 #i‚de‡
HAVE_ASPRINTF


428 
	#a•rötf
 
pmix_a•rötf


	)

431 #i‚de‡
HAVE_SNPRINTF


432 
	#¢¥ötf
 
pmix_¢¥ötf


	)

435 #i‚de‡
HAVE_VASPRINTF


436 
	#va•rötf
 
pmix_va•rötf


	)

439 #i‚de‡
HAVE_VSNPRINTF


440 
	#v¢¥ötf
 
pmix_v¢¥ötf


	)

447 #i‡
PMIX_HAVE_BROKEN_QSORT


448 #ifde‡
qs‹t


449 #unde‡
qs‹t


452 
	~"utû/qs‹t.h
"

453 
	#qs‹t
 
pmix_qs‹t


	)

463 #i‡
deföed
(
HAVE_DECL___FUNC__
) && !HAVE_DECL___FUNC__

464 
	#__func__
 
__FILE__


	)

467 
	#IOVBASE_TYPE
 

	)

469 
	~<°dboﬁ.h
>

474 
	#PMIX_INT_TO_BOOL
(
VALUE
Ë(
boﬁ
)(VALUE)

	)

476 #i‡!
deföed
(
HAVE_STRUCT_SOCKADDR_STORAGE
Ë&& deföed(
HAVE_STRUCT_SOCKADDR_IN
)

477 
	#sockaddr_°‹age
 
sockaddr


	)

478 
	#ss_Ámûy
 
ß_Ámûy


	)

483 #i‡!
deföed
(
HAVE_STRUCT_SOCKADDR_IN6
Ë&& deföed(
HAVE_STRUCT_SOCKADDR_IN
)

484 
	#sockaddr_ö6
 
sockaddr_ö


	)

485 
	#sö6_Àn
 
sö_Àn


	)

486 
	#sö6_Ámûy
 
sö_Ámûy


	)

487 
	#sö6_p‹t
 
sö_p‹t


	)

488 
	#sö6_addr
 
sö_addr


	)

491 #i‡!
HAVE_DECL_AF_UNSPEC


492 
	#AF_UNSPEC
 0

	)

494 #i‡!
HAVE_DECL_PF_UNSPEC


495 
	#PF_UNSPEC
 0

	)

497 #i‡!
HAVE_DECL_AF_INET6


498 
	#AF_INET6
 
AF_UNSPEC


	)

500 #i‡!
HAVE_DECL_PF_INET6


501 
	#PF_INET6
 
PF_UNSPEC


	)

504 #i‡
deföed
(
__APPLE__
Ë&& deföed(
HAVE_INTTYPES_H
)

512 
	~<öây≥s.h
>

513 #i‡
deföed
(
__PRI_64_LENGTH_MODIFIER__
)

514 #unde‡
__PRI_64_LENGTH_MODIFIER__


515 
	#__PRI_64_LENGTH_MODIFIER__
 "Œ"

	)

517 #i‡
deföed
(
__SCN_64_LENGTH_MODIFIER__
)

518 #unde‡
__SCN_64_LENGTH_MODIFIER__


519 
	#__SCN_64_LENGTH_MODIFIER__
 "Œ"

	)

523 #ifde‡
MCS_VXWORKS


527 #ifde‡
HAVE_IOLIB_H


529 
	~<ioLib.h
>

531 #ifde‡
HAVE_SOCKLIB_H


533 
	~<sockLib.h
>

535 #ifde‡
HAVE_HOSTLIB_H


537 
	~<ho°Lib.h
>

545 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

546 #unde‡
ª°ri˘


547 
	#ª°ri˘


	)

550 #i‡(
__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 95))

551 
	#__pmix_ª°ri˘
 
__ª°ri˘


	)

553 #i‡
__STDC_VERSION__
 >= 199901L

554 
	#__pmix_ª°ri˘
 
ª°ri˘


	)

556 
	#__pmix_ª°ri˘


	)

571 #unde‡
PACKAGE_BUGREPORT


572 #unde‡
PACKAGE_NAME


573 #unde‡
PACKAGE_STRING


574 #unde‡
PACKAGE_TARNAME


575 #unde‡
PACKAGE_VERSION


576 #unde‡
PACKAGE_URL


577 #unde‡
HAVE_CONFIG_H


	@include/pmix_config_top.h

20 #i‚de‡
PMIX_CONFIG_H


34 #unde‡
PACKAGE_BUGREPORT


35 #unde‡
PACKAGE_NAME


36 #unde‡
PACKAGE_STRING


37 #unde‡
PACKAGE_TARNAME


38 #unde‡
PACKAGE_VERSION


39 #unde‡
PACKAGE_URL


40 #unde‡
HAVE_CONFIG_H


	@include/pmix_globals.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

22 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

24 
	~"§c/ö˛ude/pmix_globÆs.h
"

26 #ifde‡
HAVE_STRING_H


27 
	~<°rög.h
>

29 
	~<f˙é.h
>

30 #ifde‡
HAVE_UNISTD_H


31 
	~<uni°d.h
>

33 #ifde‡
HAVE_SYS_TYPES_H


34 
	~<sys/ty≥s.h
>

36 
	~<˘y≥.h
>

37 #ö˛udê
PMIX_EVENT_HEADER


39 
	~"§c/buf„r_›s/ty≥s.h
"

40 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

41 
	~"§c/˛ass/pmix_li°.h
"

44 
pmix_globÆs_t
 
	gpmix_globÆs
 = {

45 .
öô_˙å
 = 0,

46 .
	gpödex
 = 0,

47 .
	gevba£
 = 
NULL
,

48 .
	gdebug_ouçut
 = -1,

49 .
	g£rvî
 = 
Ál£
,

50 .
	gc⁄√˘ed
 = 
Ál£
,

51 .
	gˇche_loˇl
 = 
NULL
,

52 .
	gˇche_ªmŸe
 = 
NULL


56 
	$pmix_globÆs_öô
()

58 
	`mem£t
(&
pmix_globÆs
.
myid
, 0, (
pmix_¥oc_t
));

59 
	`PMIX_CONSTRUCT
(&
pmix_globÆs
.
n•a˚s
, 
pmix_li°_t
);

60 
	`PMIX_CONSTRUCT
(&
pmix_globÆs
.
evíts
, 
pmix_evíts_t
);

61 
	}
}

63 
	$pmix_globÆs_föÆize
()

65 
	`PMIX_LIST_DESTRUCT
(&
pmix_globÆs
.
n•a˚s
);

66 i‡(
NULL
 !
pmix_globÆs
.
ˇche_loˇl
) {

67 
	`PMIX_RELEASE
(
pmix_globÆs
.
ˇche_loˇl
);

69 i‡(
NULL
 !
pmix_globÆs
.
ˇche_ªmŸe
) {

70 
	`PMIX_RELEASE
(
pmix_globÆs
.
ˇche_ªmŸe
);

72 
	`PMIX_DESTRUCT
(&
pmix_globÆs
.
evíts
);

73 
	}
}

76 
	$nsc⁄
(
pmix_n•a˚_t
 *
p
)

78 
	`mem£t
(
p
->
n•a˚
, 0, 
PMIX_MAX_NSLEN
);

79 
	`PMIX_CONSTRUCT
(&
p
->
nodes
, 
pmix_li°_t
);

80 
	`PMIX_CONSTRUCT
(&
p
->
öã∫Æ
, 
pmix_hash_èbÀ_t
);

81 
	`pmix_hash_èbÀ_öô
(&
p
->
öã∫Æ
, 16);

82 
	`PMIX_CONSTRUCT
(&
p
->
modex
, 
pmix_hash_èbÀ_t
);

83 
	`pmix_hash_èbÀ_öô
(&
p
->
modex
, 256);

84 
p
->
£rvî
 = 
NULL
;

85 
	}
}

86 
	$nsdes
(
pmix_n•a˚_t
 *
p
)

88 
	`PMIX_LIST_DESTRUCT
(&
p
->
nodes
);

89 
	`PMIX_DESTRUCT
(&
p
->
öã∫Æ
);

90 
	`PMIX_DESTRUCT
(&
p
->
modex
);

91 i‡(
NULL
 !
p
->
£rvî
) {

92 
	`PMIX_RELEASE
(
p
->
£rvî
);

94 
	}
}

95 
PMIX_CLASS_INSTANCE
(
pmix_n•a˚_t
,

96 
pmix_li°_ôem_t
,

97 
nsc⁄
, 
nsdes
);

99 
	$nc⁄
(
pmix_ƒec_t
 *
p
)

101 
p
->
«me
 = 
NULL
;

102 
p
->
¥ocs
 = 
NULL
;

103 
	}
}

104 
	$ndes
(
pmix_ƒec_t
 *
p
)

106 i‡(
NULL
 !
p
->
«me
) {

107 
	`‰ì
(
p
->
«me
);

109 i‡(
NULL
 !
p
->
¥ocs
) {

110 
	`‰ì
(
p
->
¥ocs
);

112 
	}
}

113 
PMIX_CLASS_INSTANCE
(
pmix_ƒec_t
,

114 
pmix_li°_ôem_t
,

115 
nc⁄
, 
ndes
);

117 
	$¢c⁄
(
pmix_£rvî_n•a˚_t
 *
p
)

119 
p
->
∆oˇÕrocs
 = 0;

120 
p
->
Æl_ªgi°îed
 = 
Ál£
;

121 
	`PMIX_CONSTRUCT
(&
p
->
job_öfo
, 
pmix_buf„r_t
);

122 
	`PMIX_CONSTRUCT
(&
p
->
ønks
, 
pmix_li°_t
);

123 
	`PMIX_CONSTRUCT
(&
p
->
myloˇl
, 
pmix_hash_èbÀ_t
);

124 
	`pmix_hash_èbÀ_öô
(&
p
->
myloˇl
, 16);

125 
	`PMIX_CONSTRUCT
(&
p
->
myªmŸe
, 
pmix_hash_èbÀ_t
);

126 
	`pmix_hash_èbÀ_öô
(&
p
->
myªmŸe
, 16);

127 
	`PMIX_CONSTRUCT
(&
p
->
ªmŸe
, 
pmix_hash_èbÀ_t
);

128 
	`pmix_hash_èbÀ_öô
(&
p
->
ªmŸe
, 256);

129 
	}
}

130 
	$¢des
(
pmix_£rvî_n•a˚_t
 *
p
)

132 
	`PMIX_DESTRUCT
(&
p
->
job_öfo
);

133 
	`PMIX_LIST_DESTRUCT
(&
p
->
ønks
);

134 
	`PMIX_DESTRUCT
(&
p
->
myloˇl
);

135 
	`PMIX_DESTRUCT
(&
p
->
myªmŸe
);

136 
	`PMIX_DESTRUCT
(&
p
->
ªmŸe
);

137 
	}
}

138 
PMIX_CLASS_INSTANCE
(
pmix_£rvî_n•a˚_t
,

139 
pmix_obje˘_t
,

140 
¢c⁄
, 
¢des
);

142 
	$öfo_c⁄
(
pmix_ønk_öfo_t
 *
öfo
)

144 
öfo
->
gid
 = info->
uid
 = 0;

145 
öfo
->
≈å
 = 
NULL
;

146 
öfo
->
ønk
 = 
PMIX_RANK_WILDCARD
;

147 
öfo
->
modex_ªcvd
 = 
Ál£
;

148 
öfo
->
¥oc_˙t
 = 0;

149 
öfo
->
£rvî_obje˘
 = 
NULL
;

150 
	}
}

151 
	$öfo_des
(
pmix_ønk_öfo_t
 *
öfo
)

153 i‡(
NULL
!
öfo
->
≈å
) {

154 
	`PMIX_RELEASE
(
öfo
->
≈å
);

156 
	}
}

157 
PMIX_CLASS_INSTANCE
(
pmix_ønk_öfo_t
,

158 
pmix_li°_ôem_t
,

159 
öfo_c⁄
, 
öfo_des
);

161 
	$sc⁄
(
pmix_shi·_ˇddy_t
 *
p
)

163 
p
->
a˘ive
 = 
Ál£
;

164 
p
->
codes
 = 
NULL
;

165 
p
->
ncodes
 = 0;

166 
p
->
n•a˚
 = 
NULL
;

167 
p
->
d©a
 = 
NULL
;

168 
p
->
nd©a
 = 0;

169 
p
->
öfo
 = 
NULL
;

170 
p
->
nöfo
 = 0;

171 
p
->
dúe˘ives
 = 
NULL
;

172 
p
->
ndús
 = 0;

173 
p
->
evhdÃ
 = 
NULL
;

174 
p
->
kv
 = 
NULL
;

175 
p
->
v±r
 = 
NULL
;

176 
p
->
cd
 = 
NULL
;

177 
p
->
åackî
 = 
NULL
;

178 
p
->
ívúo
 = 
Ál£
;

179 
p
->
cbfunc
.
ªl‚
 = 
NULL
;

180 
p
->
cbd©a
 = 
NULL
;

181 
p
->
ªf
 = 0;

182 
	}
}

183 
	$scdes
(
pmix_shi·_ˇddy_t
 *
p
)

185 i‡(
NULL
 !
p
->
kv
) {

186 
	`PMIX_RELEASE
(
p
->
kv
);

188 
	}
}

189 
PMIX_CLASS_INSTANCE
(
pmix_shi·_ˇddy_t
,

190 
pmix_obje˘_t
,

191 
sc⁄
, 
scdes
);

193 
PMIX_CLASS_INSTANCE
(
pmix_öfo_ˇddy_t
,

194 
pmix_li°_ôem_t
,

195 
NULL
, NULL);

197 
	$qc⁄
(
pmix_quîy_ˇddy_t
 *
p
)

199 
p
->
quîõs
 = 
NULL
;

200 
p
->
nquîõs
 = 0;

201 
p
->
cbfunc
 = 
NULL
;

202 
p
->
cbd©a
 = 
NULL
;

203 
p
->
ªlcbfunc
 = 
NULL
;

204 
	}
}

205 
PMIX_CLASS_INSTANCE
(
pmix_quîy_ˇddy_t
,

206 
pmix_obje˘_t
,

207 
qc⁄
, 
NULL
);

	@include/pmix_globals.h

20 #i‚de‡
PMIX_GLOBALS_H


21 
	#PMIX_GLOBALS_H


	)

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<§c/ö˛ude/ty≥s.h
>

27 
	~<uni°d.h
>

28 #ifde‡
HAVE_SYS_TYPES_H


29 
	~<sys/ty≥s.h
>

31 #ö˛udê
PMIX_EVENT_HEADER


33 
	~<pmix_comm⁄.h
>

35 
	~"§c/buf„r_›s/ty≥s.h
"

36 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

37 
	~"§c/˛ass/pmix_li°.h
"

38 
	~"§c/evít/pmix_evít.h
"

40 
	gBEGIN_C_DECLS


43 
	#PMIX_MAX_CRED_SIZE
 131072

44 
	#PMIX_MAX_ERR_CONSTANT
 
INT_MIN


	)

50 
	#PMIX_CMD
 
PMIX_UINT32


	)

54 
	mPMIX_REQ_CMD
,

55 
	mPMIX_ABORT_CMD
,

56 
	mPMIX_COMMIT_CMD
,

57 
	mPMIX_FENCENB_CMD
,

58 
	mPMIX_GETNB_CMD
,

59 
	mPMIX_FINALIZE_CMD
,

60 
	mPMIX_PUBLISHNB_CMD
,

61 
	mPMIX_LOOKUPNB_CMD
,

62 
	mPMIX_UNPUBLISHNB_CMD
,

63 
	mPMIX_SPAWNNB_CMD
,

64 
	mPMIX_CONNECTNB_CMD
,

65 
	mPMIX_DISCONNECTNB_CMD
,

66 
	mPMIX_NOTIFY_CMD
,

67 
	mPMIX_REGEVENTS_CMD
,

68 
	mPMIX_DEREGEVENTS_CMD
,

69 
	mPMIX_QUERY_CMD
,

70 
	mPMIX_LOG_CMD


71 } 
	tpmix_cmd_t
;

74 c⁄° * 
pmix_comm™d_°rög
(
pmix_cmd_t
 
cmd
);

79 
	mPMIX_COLLECT_INVALID
 = -1,

80 
	mPMIX_COLLECT_NO
,

81 
	mPMIX_COLLECT_YES
,

82 
	mPMIX_COLLECT_MAX


83 } 
	tpmix_cﬁÀ˘_t
;

87 
	mPMIX_PROC_UNDEF
,

88 
	mPMIX_PROC_CLIENT
,

89 
	mPMIX_PROC_SERVER
,

90 
	mPMIX_PROC_TOOL


91 } 
	tpmix_¥oc_ty≥_t
;

97 
	mpödex
;

98 
uöt32_t
 
	mèg
;

99 
size_t
 
	mnbyãs
;

100 } 
	tpmix_usock_hdr_t
;

106 
pmix_li°_ôem_t
 
	msu≥r
;

107 *
	mkey
;

108 
pmix_vÆue_t
 *
	mvÆue
;

109 } 
	tpmix_kvÆ_t
;

110 
PMIX_CLASS_DECLARATION
(
pmix_kvÆ_t
);

113 
	gpmix_≥î_t
;

116 (*
	tpmix_usock_cbfunc_t
)(
	tpmix_≥î_t
 *
	t≥î
, 
	tpmix_usock_hdr_t
 *
	thdr
,

117 
	tpmix_buf„r_t
 *
	tbuf
, *
	tcbd©a
);

121 
pmix_li°_ôem_t
 
su≥r
;

122 
pmix_evít_t
 
ev
;

123 
pmix_usock_hdr_t
 
hdr
;

124 
pmix_buf„r_t
 *
d©a
;

125 
boﬁ
 
hdr_£¡
;

126 *
sd±r
;

127 
size_t
 
sdbyãs
;

128 } 
	tpmix_usock_£nd_t
;

129 
	`PMIX_CLASS_DECLARATION
(
pmix_usock_£nd_t
);

133 
pmix_li°_ôem_t
 
su≥r
;

134 
pmix_evít_t
 
ev
;

135 
pmix_≥î_t
 *
≥î
;

136 
sd
;

137 
pmix_usock_hdr_t
 
hdr
;

138 *
d©a
;

139 
boﬁ
 
hdr_ªcvd
;

140 *
rd±r
;

141 
size_t
 
rdbyãs
;

142 } 
	tpmix_usock_ªcv_t
;

143 
	`PMIX_CLASS_DECLARATION
(
pmix_usock_ªcv_t
);

149 
pmix_obje˘_t
 
su≥r
;

150 
size_t
 
∆oˇÕrocs
;

151 
boﬁ
 
Æl_ªgi°îed
;

152 
pmix_buf„r_t
 
job_öfo
;

153 
pmix_li°_t
 
ønks
;

154 
pmix_hash_èbÀ_t
 
myloˇl
;

155 
pmix_hash_èbÀ_t
 
myªmŸe
;

156 
pmix_hash_èbÀ_t
 
ªmŸe
;

157 } 
	tpmix_£rvî_n•a˚_t
;

158 
	`PMIX_CLASS_DECLARATION
(
pmix_£rvî_n•a˚_t
);

161 
pmix_li°_ôem_t
 
su≥r
;

162 
n•a˚
[
PMIX_MAX_NSLEN
+1];

163 
pmix_li°_t
 
nodes
;

164 
pmix_hash_èbÀ_t
 
öã∫Æ
;

165 
pmix_hash_èbÀ_t
 
modex
;

166 
pmix_£rvî_n•a˚_t
 *
£rvî
;

167 } 
	tpmix_n•a˚_t
;

168 
	`PMIX_CLASS_DECLARATION
(
pmix_n•a˚_t
);

170 
	spmix_ønk_öfo_t
 {

171 
pmix_li°_ôem_t
 
su≥r
;

172 
pmix_n•a˚_t
 *
≈å
;

173 
pmix_ønk_t
 
ønk
;

174 
uid_t
 
uid
;

175 
gid_t
 
gid
;

176 
boﬁ
 
modex_ªcvd
;

177 
¥oc_˙t
;

178 *
£rvî_obje˘
;

179 } 
	tpmix_ønk_öfo_t
;

180 
	`PMIX_CLASS_DECLARATION
(
pmix_ønk_öfo_t
);

187 
	spmix_≥î_t
 {

188 
pmix_obje˘_t
 
su≥r
;

189 
pmix_ønk_öfo_t
 *
öfo
;

190 
¥oc_˙t
;

191 *
£rvî_obje˘
;

192 
ödex
;

193 
sd
;

194 
pmix_evít_t
 
£nd_evít
;

195 
boﬁ
 
£nd_ev_a˘ive
;

196 
pmix_evít_t
 
ªcv_evít
;

197 
boﬁ
 
ªcv_ev_a˘ive
;

198 
pmix_li°_t
 
£nd_queue
;

199 
pmix_usock_£nd_t
 *
£nd_msg
;

200 
pmix_usock_ªcv_t
 *
ªcv_msg
;

201 } 
	tpmix_≥î_t
;

202 
	`PMIX_CLASS_DECLARATION
(
pmix_≥î_t
);

206 
pmix_li°_ôem_t
 
su≥r
;

207 *
«me
;

208 *
¥ocs
;

209 } 
	tpmix_ƒec_t
;

210 
	`PMIX_CLASS_DECLARATION
(
pmix_ƒec_t
);

215 
pmix_obje˘_t
 
su≥r
;

216 
sd
;

217 } 
	tpmix_¢d_ˇddy_t
;

218 
	`PMIX_CLASS_DECLARATION
(
pmix_¢d_ˇddy_t
);

223 
pmix_li°_ôem_t
 
su≥r
;

224 
pmix_usock_hdr_t
 
hdr
;

225 
pmix_≥î_t
 *
≥î
;

226 
pmix_¢d_ˇddy_t
 
¢d
;

227 } 
	tpmix_£rvî_ˇddy_t
;

228 
	`PMIX_CLASS_DECLARATION
(
pmix_£rvî_ˇddy_t
);

232 
pmix_obje˘_t
 
su≥r
;

233 
pmix_evít_t
 
ev
;

234 vﬁ©ûê
boﬁ
 
a˘ive
;

235 
pmix_°©us_t
 
°©us
;

236 
pmix_quîy_t
 *
quîõs
;

237 
size_t
 
nquîõs
;

238 
pmix_öfo_cbfunc_t
 
cbfunc
;

239 
pmix_ªÀa£_cbfunc_t
 
ªlcbfunc
;

240 *
cbd©a
;

241 } 
	tpmix_quîy_ˇddy_t
;

242 
	`PMIX_CLASS_DECLARATION
(
pmix_quîy_ˇddy_t
);

246 
pmix_li°_ôem_t
 
su≥r
;

247 
pmix_cmd_t
 
ty≥
;

248 
pmix_¥oc_t
 *
pcs
;

249 
size_t
 
≈cs
;

250 vﬁ©ûê
boﬁ
 
a˘ive
;

251 
boﬁ
 
def_com∂ëe
;

252 
pmix_li°_t
 
ønks
;

253 
pmix_li°_t
 
loˇl_cbs
;

254 
uöt32_t
 
∆oˇl
;

255 
uöt32_t
 
loˇl_˙t
;

256 
pmix_öfo_t
 *
öfo
;

257 
size_t
 
nöfo
;

258 
pmix_cﬁÀ˘_t
 
cﬁÀ˘_ty≥
;

259 
pmix_modex_cbfunc_t
 
modexcbfunc
;

260 
pmix_›_cbfunc_t
 
›_cbfunc
;

261 } 
	tpmix_£rvî_åkr_t
;

262 
	`PMIX_CLASS_DECLARATION
(
pmix_£rvî_åkr_t
);

268 
pmix_obje˘_t
 
su≥r
;

269 
pmix_evít_t
 
ev
;

270 vﬁ©ûê
boﬁ
 
a˘ive
;

271 
pmix_°©us_t
 
°©us
;

272 
pmix_°©us_t
 *
codes
;

273 
size_t
 
ncodes
;

274 c⁄° *
n•a˚
;

275 
pmix_ønk_t
 
ønk
;

276 c⁄° *
d©a
;

277 
size_t
 
nd©a
;

278 c⁄° *
key
;

279 
pmix_öfo_t
 *
öfo
;

280 
size_t
 
nöfo
;

281 
pmix_öfo_t
 *
dúe˘ives
;

282 
size_t
 
ndús
;

283 
pmix_nŸifiˇti⁄_‚_t
 
evhdÃ
;

284 
pmix_kvÆ_t
 *
kv
;

285 
pmix_vÆue_t
 *
v±r
;

286 
pmix_£rvî_ˇddy_t
 *
cd
;

287 
pmix_£rvî_åkr_t
 *
åackî
;

288 
boﬁ
 
ívúo
;

290 
pmix_ªÀa£_cbfunc_t
 
ªl‚
;

291 
pmix_evhdÃ_ªg_cbfunc_t
 
evªgcb‚
;

292 
pmix_›_cbfunc_t
 
›cb‚
;

293 
pmix_evhdÃ_ªg_cbfunc_t
 
îºegcb‚
;

294 }
cbfunc
;

295 *
cbd©a
;

296 
size_t
 
ªf
;

297 } 
	tpmix_shi·_ˇddy_t
;

298 
	`PMIX_CLASS_DECLARATION
(
pmix_shi·_ˇddy_t
);

303 
pmix_li°_ôem_t
 
su≥r
;

304 
pmix_öfo_t
 *
öfo
;

305 } 
	tpmix_öfo_ˇddy_t
;

306 
	`PMIX_CLASS_DECLARATION
(
pmix_öfo_ˇddy_t
);

308 
	#PMIX_THREADSHIFT
(
r
, 
c
) \

310 (
r
)->
a˘ive
 = 
åue
; \

311 
	`evít_assign
(&((
r
)->
ev
), 
pmix_globÆs
.
evba£
, \

312 -1, 
EV_WRITE
, (
c
), (
r
)); \

313 
	`evít_a˘ive
(&((
r
)->
ev
), 
EV_WRITE
, 1); \

314 
	}
} 0)

	)

317 
	#PMIX_WAIT_FOR_COMPLETION
(
a
) \

319 (
a
)) { \

320 
	`u¶ìp
(10); \

322 } 0)

	)

330 
	möô_˙å
;

331 
pmix_¥oc_t
 
	mmyid
;

332 
uid_t
 
	muid
;

333 
gid_t
 
	mgid
;

334 
	mpödex
;

335 
pmix_evít_ba£_t
 *
	mevba£
;

336 
boﬁ
 
	mexã∫Æ_evba£
;

337 
	mdebug_ouçut
;

338 
pmix_evíts_t
 
	mevíts
;

339 
boﬁ
 
	m£rvî
;

340 
boﬁ
 
	mc⁄√˘ed
;

341 
pmix_li°_t
 
	mn•a˚s
;

342 
pmix_buf„r_t
 *
	mˇche_loˇl
;

343 
pmix_buf„r_t
 *
	mˇche_ªmŸe
;

344 } 
	tpmix_globÆs_t
;

348 
pmix_globÆs_öô
();

351 
pmix_globÆs_föÆize
();

353 
pmix_globÆs_t
 
pmix_globÆs
;

355 
	gEND_C_DECLS


	@include/pmix_socket_errno.h

19 #i‚de‡
PMIX_GET_SOCKET_ERROR_H


20 
	#PMIX_GET_SOCKET_ERROR_H


	)

22 
	~<î∫o.h
>

24 
	#pmix_sockë_î∫o
 
î∫o


	)

	@include/pmix_stdint.h

24 #i‚de‡
PMIX_STDINT_H


25 
	#PMIX_STDINT_H
 1

	)

30 
	~<limôs.h
>

31 
	~<°döt.h
>

33 #ifde‡
HAVE_SYS_TYPES_H


34 
	~<sys/ty≥s.h
>

39 #i‡
SIZEOF_CHAR
 == 1

41 #i‚de‡
HAVE_INT8_T


42 sig√d 
	töt8_t
;

45 #i‚de‡
HAVE_UINT8_T


46 
	tuöt8_t
;

51 #îr‹ 
Faûed
 
to
 
deföe
 8-
bô
 
ty≥s


57 #i‡
SIZEOF_SHORT
 == 2

59 #i‚de‡
HAVE_INT16_T


60 sig√d 
	töt16_t
;

63 #i‚de‡
HAVE_UINT16_T


64 
	tuöt16_t
;

69 #îr‹ 
Faûed
 
to
 
deföe
 16-
bô
 
ty≥s


75 #i‡
SIZEOF_INT
 == 4

77 #i‚de‡
HAVE_INT32_T


78 sig√d 
	töt32_t
;

81 #i‚de‡
HAVE_UINT32_T


82 
	tuöt32_t
;

85 #ñi‡
SIZEOF_LONG
 == 4

87 #i‚de‡
HAVE_INT32_T


88 sig√d 
	töt32_t
;

91 #i‚de‡
HAVE_UINT32_T


92 
	tuöt32_t
;

97 #îr‹ 
Faûed
 
to
 
deföe
 32-
bô
 
ty≥s


103 #i‡
SIZEOF_INT
 == 8

105 #i‚de‡
HAVE_INT64_T


106 sig√d 
	töt64_t
;

109 #i‚de‡
HAVE_UINT64_T


110 
	tuöt64_t
;

113 #ñi‡
SIZEOF_LONG
 == 8

115 #i‚de‡
HAVE_INT64_T


116 sig√d 
	töt64_t
;

119 #i‚de‡
HAVE_UINT64_T


120 
	tuöt64_t
;

123 #ñi‡
HAVE_LONG_LONG
 && 
SIZEOF_LONG_LONG
 == 8

125 #i‚de‡
HAVE_INT64_T


126 sig√d 
	töt64_t
;

129 #i‚de‡
HAVE_UINT64_T


130 
	tuöt64_t
;

135 #îr‹ 
Faûed
 
to
 
deföe
 64-
bô
 
ty≥s


141 #i‡
SIZEOF_VOID_P
 =
SIZEOF_INT


143 #i‚de‡
HAVE_INTPTR_T


144 sig√d 
	töçå_t
;

147 #i‚de‡
HAVE_UINTPTR_T


148 
	tuöçå_t
;

151 #ñi‡
SIZEOF_VOID_P
 =
SIZEOF_LONG


153 #i‚de‡
HAVE_INTPTR_T


154 sig√d 
	töçå_t
;

157 #i‚de‡
HAVE_UINTPTR_T


158 
	tuöçå_t
;

161 #ñi‡
HAVE_LONG_LONG
 && 
SIZEOF_VOID_P
 =
SIZEOF_LONG_LONG


163 #i‚de‡
HAVE_INTPTR_T


164 sig√d 
	töçå_t
;

166 #i‚de‡
HAVE_UINTPTR_T


167 
	tuöçå_t
;

172 #îr‹ 
Faûed
 
to
 
deföe
 
poöãr
-
sized
 
öãgî
 
ty≥s


177 #i‚de‡
SIZE_MAX


178 #i‡
SIZEOF_VOID_P
 =
SIZEOF_INT


179 
	#SIZE_MAX
 
UINT_MAX


	)

180 #ñi‡
SIZEOF_VOID_P
 =
SIZEOF_LONG


181 
	#SIZE_MAX
 
ULONG_MAX


	)

183 #îr‹ 
Faûed
 
to
 
föd
 
vÆue
 
SIZE_MAX


189 #ifde‡
HAVE_INTTYPES_H


190 
	~<öây≥s.h
>

193 #i‡
SIZEOF_LONG
 == 8

194 
	#__PRI64_PREFIX
 "l"

	)

195 
	#__PRIPTR_PREFIX
 "l"

	)

197 
	#__PRI64_PREFIX
 "Œ"

	)

198 
	#__PRIPTR_PREFIX


	)

202 
	#PRId8
 "d"

	)

203 
	#PRId16
 "d"

	)

204 
	#PRId32
 "d"

	)

205 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

207 
	#PRIdLEAST8
 "d"

	)

208 
	#PRIdLEAST16
 "d"

	)

209 
	#PRIdLEAST32
 "d"

	)

210 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

212 
	#PRIdFAST8
 "d"

	)

213 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

214 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

215 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

217 
	#PRIi8
 "i"

	)

218 
	#PRIi16
 "i"

	)

219 
	#PRIi32
 "i"

	)

220 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

222 
	#PRIiLEAST8
 "i"

	)

223 
	#PRIiLEAST16
 "i"

	)

224 
	#PRIiLEAST32
 "i"

	)

225 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

227 
	#PRIiFAST8
 "i"

	)

228 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

229 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

230 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

233 
	#PRIo8
 "o"

	)

234 
	#PRIo16
 "o"

	)

235 
	#PRIo32
 "o"

	)

236 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

238 
	#PRIoLEAST8
 "o"

	)

239 
	#PRIoLEAST16
 "o"

	)

240 
	#PRIoLEAST32
 "o"

	)

241 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

243 
	#PRIoFAST8
 "o"

	)

244 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

245 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

246 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

249 
	#PRIu8
 "u"

	)

250 
	#PRIu16
 "u"

	)

251 
	#PRIu32
 "u"

	)

252 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

254 
	#PRIuLEAST8
 "u"

	)

255 
	#PRIuLEAST16
 "u"

	)

256 
	#PRIuLEAST32
 "u"

	)

257 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

259 
	#PRIuFAST8
 "u"

	)

260 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

261 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

262 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

265 
	#PRIx8
 "x"

	)

266 
	#PRIx16
 "x"

	)

267 
	#PRIx32
 "x"

	)

268 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

270 
	#PRIxLEAST8
 "x"

	)

271 
	#PRIxLEAST16
 "x"

	)

272 
	#PRIxLEAST32
 "x"

	)

273 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

275 
	#PRIxFAST8
 "x"

	)

276 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

277 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

278 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

281 
	#PRIX8
 "X"

	)

282 
	#PRIX16
 "X"

	)

283 
	#PRIX32
 "X"

	)

284 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

286 
	#PRIXLEAST8
 "X"

	)

287 
	#PRIXLEAST16
 "X"

	)

288 
	#PRIXLEAST32
 "X"

	)

289 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

291 
	#PRIXFAST8
 "X"

	)

292 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

293 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

294 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

297 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

298 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

299 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

300 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

301 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

302 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

305 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

306 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

307 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

308 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

309 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

310 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

314 #i‚de‡
PRIsize_t


315 #i‡
deföed
(
ACCEPT_C99
)

316 
	#PRIsize_t
 "zu"

	)

317 #ñi‡
SIZEOF_SIZE_T
 =
SIZEOF_LONG


318 
	#PRIsize_t
 "lu"

	)

319 #ñi‡
SIZEOF_SIZE_T
 =
SIZEOF_LONG_LONG


320 
	#PRIsize_t
 "Œu"

	)

322 
	#PRIsize_t
 "u"

	)

	@include/prefetch.h

20 #i‚de‡
PMIX_PREFETCH_H


21 
	#PMIX_PREFETCH_H


	)

23 #i‡
PMIX_C_HAVE_BUILTIN_EXPECT


24 
	#PMIX_LIKELY
(
ex¥essi⁄
Ë
	`__buûtö_ex≥˘
(!!”x¥essi⁄), 1)

	)

25 
	#PMIX_UNLIKELY
(
ex¥essi⁄
Ë
	`__buûtö_ex≥˘
(!!”x¥essi⁄), 0)

	)

27 
	#PMIX_LIKELY
(
ex¥essi⁄
Ë”x¥essi⁄)

	)

28 
	#PMIX_UNLIKELY
(
ex¥essi⁄
Ë”x¥essi⁄)

	)

31 #i‡
PMIX_C_HAVE_BUILTIN_PREFETCH


32 
	#PMIX_PREFETCH
(
addªss
,
rw
,
loˇlôy
Ë
	`__buûtö_¥e„tch
◊ddªss,rw,loˇlôy)

	)

34 
	#PMIX_PREFETCH
(
addªss
,
rw
,
loˇlôy
)

	)

	@include/rename.h

10 #i‚de‡
PMIX_RENAME_H


11 
	#PMIX_RENAME_H


	)

	@include/types.h

22 #i‚de‡
PMIX_TYPES_H


23 
	#PMIX_TYPES_H


	)

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

27 #ifde‡
HAVE_STDINT_H


28 
	~<°döt.h
>

30 #ifde‡
HAVE_SYS_TYPES_H


31 
	~<sys/ty≥s.h
>

33 #ifde‡
HAVE_SYS_SOCKET_H


34 
	~<sys/sockë.h
>

36 #ifde‡
HAVE_SYS_SELECT_H


37 
	~<sys/£À˘.h
>

39 #ifde‡
HAVE_NETINET_IN_H


40 
	~<√töë/ö.h
>

42 #ifde‡
HAVE_ARPA_INET_H


43 
	~<¨∑/öë.h
>

45 #ö˛udê
PMIX_EVENT_HEADER


47 #i‡
PMIX_ENABLE_DEBUG


48 
	~"§c/utû/ouçut.h
"

57 
uöt64_t
 
	mlvÆ
;

58 
uöt32_t
 
	mivÆ
;

59 * 
	mpvÆ
;

61 
uöt32_t
 
	muvÆ
;

62 
uöt32_t
 
	mlvÆ
;

63 } 
	msvÆ
;

64 } 
	tpmix_±r_t
;

70 #i‡
deföed
(
__APPLE__
Ë|| deföed(
__WINDOWS__
)

71 * 
	tpmix_iov_ba£_±r_t
;

72 
	#PMIX_IOVBASE
 

	)

74 
	#PMIX_IOVBASE
 

	)

75 * 
	tpmix_iov_ba£_±r_t
;

82 #i‡
deföed
(
HAVE_SOCKLEN_T
)

83 
sockÀn_t
 
	tpmix_sockÀn_t
;

85 
	tpmix_sockÀn_t
;

89 
	#pmix_ht⁄s
 
ht⁄s


	)

90 
	#pmix_¡ohs
 
¡ohs


	)

96 
ölöe
 
uöt64_t
 
	$pmix_ht⁄64
(
uöt64_t
 
vÆ
Ë
__pmix_©åibuã_c⁄°__
;

97 
ölöe
 
uöt64_t
 
	$pmix_ht⁄64
(
uöt64_t
 
vÆ
)

99 #ifde‡
HAVE_UNIX_BYTESWAP


100 uni⁄ { 
uöt64_t
 
Œ
;

101 
uöt32_t
 
l
[2];

102 } 
w
, 
r
;

105 if(
	`ht⁄l
(1) == 1L)

106  
vÆ
;

107 
w
.
Œ
 = 
vÆ
;

108 
r
.
l
[0] = 
	`ht⁄l
(
w
.l[1]);

109 
r
.
l
[1] = 
	`ht⁄l
(
w
.l[0]);

110  
r
.
Œ
;

112  
vÆ
;

114 
	}
}

120 
ölöe
 
uöt64_t
 
	$pmix_¡oh64
(
uöt64_t
 
vÆ
Ë
__pmix_©åibuã_c⁄°__
;

121 
ölöe
 
uöt64_t
 
	$pmix_¡oh64
(
uöt64_t
 
vÆ
)

123 #ifde‡
HAVE_UNIX_BYTESWAP


124 uni⁄ { 
uöt64_t
 
Œ
;

125 
uöt32_t
 
l
[2];

126 } 
w
, 
r
;

129 if(
	`ht⁄l
(1) == 1L)

130  
vÆ
;

131 
w
.
Œ
 = 
vÆ
;

132 
r
.
l
[0] = 
	`¡ohl
(
w
.l[1]);

133 
r
.
l
[1] = 
	`¡ohl
(
w
.l[0]);

134  
r
.
Œ
;

136  
vÆ
;

138 
	}
}

144 
ölöe
 
uöt64_t
 
	$pmix_±r_±ﬁ
–* 
±r
 ) 
__pmix_©åibuã_c⁄°__
;

145 
ölöe
 
uöt64_t
 
	$pmix_±r_±ﬁ
–* 
±r
 )

147  (
uöt64_t
)(
uöçå_t
Ë
±r
;

148 
	}
}

150 
ölöe
 * 
	$pmix_±r_…›
–
uöt64_t
 
vÆue
 ) 
__pmix_©åibuã_c⁄°__
;

151 
ölöe
 * 
	$pmix_±r_…›
–
uöt64_t
 
vÆue
 )

153 #i‡
SIZEOF_VOID_P
 =4 && 
PMIX_ENABLE_DEBUG


154 i‡(
vÆue
 > ((1ULL << 32) - 1ULL)) {

155 
	`pmix_ouçut
(0, "Warning:Åruncating value inÖmix_ptr_ltop");

158  (*)(
uöçå_t
Ë
vÆue
;

159 
	}
}

161 #i‡
deföed
(
WORDS_BIGENDIAN
Ë|| !deföed(
HAVE_UNIX_BYTESWAP
)

162 
ölöe
 
uöt16_t
 
	$pmix_sw≠_byãs2
(
uöt16_t
 
vÆ
Ë
__pmix_©åibuã_c⁄°__
;

163 
ölöe
 
uöt16_t
 
	$pmix_sw≠_byãs2
(
uöt16_t
 
vÆ
)

165 uni⁄ { 
uöt16_t
 
bigvÆ
;

166 
uöt8_t
 
¨øyvÆ
[2];

167 } 
w
, 
r
;

169 
w
.
bigvÆ
 = 
vÆ
;

170 
r
.
¨øyvÆ
[0] = 
w
.arrayval[1];

171 
r
.
¨øyvÆ
[1] = 
w
.arrayval[0];

173  
r
.
bigvÆ
;

174 
	}
}

176 
ölöe
 
uöt32_t
 
	$pmix_sw≠_byãs4
(
uöt32_t
 
vÆ
Ë
__pmix_©åibuã_c⁄°__
;

177 
ölöe
 
uöt32_t
 
	$pmix_sw≠_byãs4
(
uöt32_t
 
vÆ
)

179 uni⁄ { 
uöt32_t
 
bigvÆ
;

180 
uöt8_t
 
¨øyvÆ
[4];

181 } 
w
, 
r
;

183 
w
.
bigvÆ
 = 
vÆ
;

184 
r
.
¨øyvÆ
[0] = 
w
.arrayval[3];

185 
r
.
¨øyvÆ
[1] = 
w
.arrayval[2];

186 
r
.
¨øyvÆ
[2] = 
w
.arrayval[1];

187 
r
.
¨øyvÆ
[3] = 
w
.arrayval[0];

189  
r
.
bigvÆ
;

190 
	}
}

192 
ölöe
 
uöt64_t
 
	$pmix_sw≠_byãs8
(
uöt64_t
 
vÆ
Ë
__pmix_©åibuã_c⁄°__
;

193 
ölöe
 
uöt64_t
 
	$pmix_sw≠_byãs8
(
uöt64_t
 
vÆ
)

195 uni⁄ { 
uöt64_t
 
bigvÆ
;

196 
uöt8_t
 
¨øyvÆ
[8];

197 } 
w
, 
r
;

199 
w
.
bigvÆ
 = 
vÆ
;

200 
r
.
¨øyvÆ
[0] = 
w
.arrayval[7];

201 
r
.
¨øyvÆ
[1] = 
w
.arrayval[6];

202 
r
.
¨øyvÆ
[2] = 
w
.arrayval[5];

203 
r
.
¨øyvÆ
[3] = 
w
.arrayval[4];

204 
r
.
¨øyvÆ
[4] = 
w
.arrayval[3];

205 
r
.
¨øyvÆ
[5] = 
w
.arrayval[2];

206 
r
.
¨øyvÆ
[6] = 
w
.arrayval[1];

207 
r
.
¨øyvÆ
[7] = 
w
.arrayval[0];

209  
r
.
bigvÆ
;

210 
	}
}

213 
	#pmix_sw≠_byãs2
 
ht⁄s


	)

214 
	#pmix_sw≠_byãs4
 
ht⁄l


	)

215 
	#pmix_sw≠_byãs8
 
ht⁄64


	)

218 
	#PMIX_EV_TIMEOUT
 
EV_TIMEOUT


	)

219 
	#PMIX_EV_READ
 
EV_READ


	)

220 
	#PMIX_EV_WRITE
 
EV_WRITE


	)

221 
	#PMIX_EV_SIGNAL
 
EV_SIGNAL


	)

223 
	#PMIX_EV_PERSIST
 
EV_PERSIST


	)

225 
	#PMIX_EVLOOP_ONCE
 
EVLOOP_ONCE


	)

226 
	#PMIX_EVLOOP_NONBLOCK
 
EVLOOP_NONBLOCK


	)

228 
evít_ba£
 
	tpmix_evít_ba£_t
;

229 
evít
 
	tpmix_evít_t
;

231 
	#pmix_evít_ba£_¸óã
(Ë
	`evít_ba£_√w
()

	)

233 
	#pmix_evít_ba£_‰ì
(
b
Ë
	`evít_ba£_‰ì
(b)

	)

235 
	#pmix_evít_ba£_lo›bªak
(
b
Ë
	`evít_ba£_lo›bªak
(b)

	)

237 
	#pmix_evít_ba£_lo›exô
(
b
Ë
	`evít_ba£_lo›exô
(b, 
NULL
)

	)

240 
	#pmix_evít_u£_thªads
(Ë
	`evthªad_u£_±hªads
()

	)

243 
	#pmix_evít_íabÀ_debug_mode
(Ë
	`evít_íabÀ_debug_mode
()

	)

245 
	#pmix_evít_£t
(
b
, 
x
, 
fd
, 
fg
, 
cb
, 
¨g
Ë
	`evít_assign
((x), (b), (fd), (fg), (
evít_ˇŒback_‚
Ë(cb), (¨g))

	)

247 
	#pmix_evít_add
(
ev
, 
tv
Ë
	`evít_add
(”v), (tv))

	)

249 
	#pmix_evít_dñ
(
ev
Ë
	`evít_dñ
(”v))

	)

251 
	#pmix_evít_a˘ive
(
x
, 
y
, 
z
Ë
	`evít_a˘ive
((x), (y), (z))

	)

253 
	#pmix_evít_√w
(
b
, 
fd
, 
fg
, 
cb
, 
¨g
Ë
	`evít_√w
((b), (fd), (fg), (
evít_ˇŒback_‚
Ë(cb), (¨g))

	)

255 
	#pmix_evít_lo›
(
b
, 
fg
Ë
	`evít_ba£_lo›
((b), (fg))

	)

257 #ifde‡
HAVE_LIBEVENT_GLOBAL_SHUTDOWN


258 
	#pmix_libevít_globÆ_shutdown
(Ë
	`libevít_globÆ_shutdown
()

	)

	@mca/base/base.h

26 #i‚de‡
MCA_BASE_H


27 
	#MCA_BASE_H


	)

29 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

31 
	~"§c/˛ass/pmix_obje˘.h
"

32 
	~"§c/˛ass/pmix_li°.h
"

37 
	~"§c/mˇ/mˇ.h
"

38 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨.h
"

39 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_‰amew‹k.h
"

40 
	~"§c/utû/ouçut.h
"

42 
BEGIN_C_DECLS


47 
	spmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 {

48 
pmix_li°_ôem_t
 
	msu≥r
;

49 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
	m˛i_comp⁄ít
;

51 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 
	tpmix_mˇ_ba£_comp⁄ít_li°_ôem_t
;

52 
PMIX_CLASS_DECLARATION
(
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
);

57 
	spmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
 {

58 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 
	msu≥r
;

59 
	m˝li_¥i‹ôy
;

61 
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t


62 
	tpmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
;

64 
PMIX_CLASS_DECLARATION
(
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
);

69 *
pmix_mˇ_ba£_comp⁄ít_∑th
;

70 
boﬁ
 
pmix_mˇ_ba£_comp⁄ít_show_lﬂd_îr‹s
;

71 
boﬁ
 
pmix_mˇ_ba£_comp⁄ít_dißbÀ_dl›í
;

72 *
pmix_mˇ_ba£_sy°em_deÁu…_∑th
;

73 *
pmix_mˇ_ba£_u£r_deÁu…_∑th
;

80 
	mPMIX_MCA_BASE_VERBOSE_NONE
 = -1,

82 
	mPMIX_MCA_BASE_VERBOSE_ERROR
 = 0,

84 
	mPMIX_MCA_BASE_VERBOSE_COMPONENT
 = 10,

86 
	mPMIX_MCA_BASE_VERBOSE_WARN
 = 20,

89 
	mPMIX_MCA_BASE_VERBOSE_INFO
 = 40,

92 
	mPMIX_MCA_BASE_VERBOSE_TRACE
 = 60,

94 
	mPMIX_MCA_BASE_VERBOSE_DEBUG
 = 80,

96 
	mPMIX_MCA_BASE_VERBOSE_MAX
 = 100,

117 
pmix_mˇ_ba£_›í
();

131 
pmix_mˇ_ba£_˛o£
();

137 
pmix_mˇ_ba£_£À˘
(c⁄° *
ty≥_«me
, 
ouçut_id
,

138 
pmix_li°_t
 *
comp⁄íts_avaûabÀ
,

139 
pmix_mˇ_ba£_moduÀ_t
 **
be°_moduÀ
,

140 
pmix_mˇ_ba£_comp⁄ít_t
 **
be°_comp⁄ít
,

141 *
¥i‹ôy_out
);

151 
pmix_mˇ_ba£_is_comp⁄ít_ªquúed
(
pmix_li°_t
 *
comp⁄íts_avaûabÀ
,

152 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
,

153 
boﬁ
 
ex˛usive
,

154 
boﬁ
 *
is_ªquúed
);

158 
pmix_mˇ_ba£_comp⁄ít_com∑ª_¥i‹ôy
(
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
 *
a
,

159 
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
 *
b
);

160 
pmix_mˇ_ba£_comp⁄ít_com∑ª
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
a
,

161 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
b
);

162 
pmix_mˇ_ba£_comp⁄ít_com∑tibÀ
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
a
,

163 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
b
);

164 * 
pmix_mˇ_ba£_comp⁄ít_to_°rög
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
a
);

168 
pmix_mˇ_ba£_comp⁄ít_föd
 (c⁄° *
dúe˘‹y
, 
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

169 
boﬁ
 
ign‹e_ªque°ed
, boﬁ 
›í_dso_comp⁄íts
);

175 
pmix_mˇ_ba£_comp⁄ít_∑r£_ªque°ed
 (c⁄° *
ªque°ed
, 
boﬁ
 *
ö˛ude_mode
,

176 ***
ªque°ed_comp⁄ít_«mes
);

196 
pmix_mˇ_ba£_comp⁄íts_fûãr
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
, 
uöt32_t
 
fûãr_Êags
);

203 
pmix_mˇ_ba£_comp⁄ít_föd_föÆize
();

206 
pmix_mˇ_ba£_‰amew‹k_comp⁄íts_ªgi°î
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

207 
pmix_mˇ_ba£_ªgi°î_Êag_t
 
Êags
);

210 
pmix_mˇ_ba£_‰amew‹k_comp⁄íts_›í
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

211 
pmix_mˇ_ba£_›í_Êag_t
 
Êags
);

213 
pmix_mˇ_ba£_comp⁄íts_›í
(c⁄° *
ty≥_«me
, 
ouçut_id
,

214 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 **
°©ic_comp⁄íts
,

215 
pmix_li°_t
 *
comp⁄íts_avaûabÀ
,

216 
boﬁ
 
›í_dso_comp⁄íts
);

227 
pmix_mˇ_ba£_comp⁄ít_˛o£
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
, 
ouçut_id
);

236 
pmix_mˇ_ba£_comp⁄ít_u∆ﬂd
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
, 
ouçut_id
);

238 
pmix_mˇ_ba£_comp⁄íts_˛o£
(
ouçut_id
, 
pmix_li°_t
 *
comp⁄íts_avaûabÀ
,

239 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
skù
);

241 
pmix_mˇ_ba£_‰amew‹k_comp⁄íts_˛o£
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

242 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
skù
);

244 
	gEND_C_DECLS


	@mca/base/pmix_mca_base_close.c

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~"§c/utû/ouçut.h
"

27 
	~"§c/mˇ/mˇ.h
"

28 
	~"§c/mˇ/ba£/ba£.h
"

29 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_comp⁄ít_ªposô‹y.h
"

30 
	~"pmix_comm⁄.h
"

32 
pmix_mˇ_ba£_›íed
;

37 
	$pmix_mˇ_ba£_˛o£
()

39 
	`as£π
 (
pmix_mˇ_ba£_›íed
);

40 i‡(!--
pmix_mˇ_ba£_›íed
) {

42 
group_id
 = 
	`pmix_mˇ_ba£_v¨_group_föd
 ("pmix", "mca", "base");

44 i‡(-1 < 
group_id
) {

45 
	`pmix_mˇ_ba£_v¨_group_dîegi°î
 (
group_id
);

49 i‡(
NULL
 !
pmix_mˇ_ba£_sy°em_deÁu…_∑th
) {

50 
	`‰ì
(
pmix_mˇ_ba£_sy°em_deÁu…_∑th
);

52 i‡(
NULL
 !
pmix_mˇ_ba£_u£r_deÁu…_∑th
) {

53 
	`‰ì
(
pmix_mˇ_ba£_u£r_deÁu…_∑th
);

57 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_föÆize
();

60 
	`pmix_mˇ_ba£_comp⁄ít_föd_föÆize
();

63 
	`pmix_ouçut_˛o£
(0);

67  
PMIX_SUCCESS
;

68 
	}
}

	@mca/base/pmix_mca_base_component_compare.c

20 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

22 
	~<°rög.h
>

24 
	~"§c/mˇ/mˇ.h
"

25 
	~"§c/mˇ/ba£/ba£.h
"

41 
	$pmix_mˇ_ba£_comp⁄ít_com∑ª_¥i‹ôy
(
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
 *
a
,

42 
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
 *
b
)

46 i‡(
a
->
˝li_¥i‹ôy
 > 
b
->cpli_priority) {

48 } i‡(
a
->
˝li_¥i‹ôy
 < 
b
->cpli_priority) {

51  
	`pmix_mˇ_ba£_comp⁄ít_com∑ª
(
a
->
su≥r
.
˛i_comp⁄ít
,

52 
b
->
su≥r
.
˛i_comp⁄ít
);

54 
	}
}

57 
	$pmix_mˇ_ba£_comp⁄ít_com∑ª
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
* 
Ø
,

58 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
* 
bb
)

60 
vÆ
;

62 
vÆ
 = 
	`°∫cmp
(
Ø
->
pmix_mˇ_ty≥_«me
, 
bb
->pmix_mca_type_name,

63 
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
);

64 i‡(
vÆ
 != 0) {

65  -
vÆ
;

68 
vÆ
 = 
	`°∫cmp
(
Ø
->
pmix_mˇ_comp⁄ít_«me
, 
bb
->pmix_mca_component_name,

69 
PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
);

70 i‡(
vÆ
 != 0) {

71  -
vÆ
;

76 i‡(
Ø
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
 >

77 
bb
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
) {

79 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
 <

80 
bb
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
) {

82 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
 >

83 
bb
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
) {

85 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
 <

86 
bb
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
) {

88 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_ªÀa£_vîsi⁄
 >

89 
bb
->
pmix_mˇ_comp⁄ít_ªÀa£_vîsi⁄
) {

91 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_ªÀa£_vîsi⁄
 <

92 
bb
->
pmix_mˇ_comp⁄ít_ªÀa£_vîsi⁄
) {

97 
	}
}

104 
	$pmix_mˇ_ba£_comp⁄ít_com∑tibÀ
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
* 
Ø
,

105 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
* 
bb
)

107 
vÆ
;

109 
vÆ
 = 
	`°∫cmp
(
Ø
->
pmix_mˇ_ty≥_«me
, 
bb
->pmix_mca_type_name,

110 
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
);

111 i‡(
vÆ
 != 0) {

112  -
vÆ
;

115 
vÆ
 = 
	`°∫cmp
(
Ø
->
pmix_mˇ_comp⁄ít_«me
, 
bb
->pmix_mca_component_name,

116 
PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
);

117 i‡(
vÆ
 != 0) {

118  -
vÆ
;

123 i‡(
Ø
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
 >

124 
bb
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
) {

126 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
 <

127 
bb
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
) {

129 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
 >

130 
bb
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
) {

132 } i‡(
Ø
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
 <

133 
bb
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
) {

137 
	}
}

143 * 
	$pmix_mˇ_ba£_comp⁄ít_to_°rög
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
a
) {

144 * 
°r
 = 
NULL
;

145 if(0 > 
	`a•rötf
(&
°r
, "%s.%s.%d.%d", 
a
->
pmix_mˇ_ty≥_«me
,

146 
a
->
pmix_mˇ_comp⁄ít_«me
,á->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
,

147 
a
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
)) {

148  
NULL
;

150  
°r
;

151 
	}
}

	@mca/base/pmix_mca_base_component_find.c

27 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

29 
	~<°dio.h
>

30 
	~<°rög.h
>

31 
	~<˘y≥.h
>

32 
	~<°dlib.h
>

33 #ifde‡
HAVE_SYS_TYPES_H


34 
	~<sys/ty≥s.h
>

36 #ifde‡
HAVE_SYS_STAT_H


37 
	~<sys/°©.h
>

39 #ifde‡
HAVE_UNISTD_H


40 
	~<uni°d.h
>

42 #ifde‡
HAVE_SYS_PARAM_H


43 
	~<sys/∑øm.h
>

45 #ifde‡
HAVE_NETDB_H


46 
	~<√tdb.h
>

49 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

50 
	~"§c/utû/pmix_ívú⁄.h
"

51 
	~"§c/utû/ouçut.h
"

52 
	~"§c/utû/¨gv.h
"

53 
	~"§c/utû/show_hñp.h
"

54 
	~"§c/˛ass/pmix_li°.h
"

55 
	~"§c/mˇ/mˇ.h
"

56 
	~"§c/mˇ/ba£/ba£.h
"

57 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_comp⁄ít_ªposô‹y.h
"

58 
	~"pmix_comm⁄.h
"

59 
	~"§c/mˇ/pdl/ba£/ba£.h
"

61 #i‡
PMIX_HAVE_PDL_SUPPORT


65 
föd_dyn_comp⁄íts
(c⁄° *
∑th
, 
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

66 c⁄° **
«mes
, 
boﬁ
 
ö˛ude_mode
);

70 
comp⁄ít_föd_check
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
, **
ªque°ed_comp⁄ít_«mes
);

75 
	spmix_mˇ_ba£_›í_⁄ly_dummy_comp⁄ít_t
 {

77 
pmix_mˇ_ba£_comp⁄ít_t
 
	mvîsi⁄
;

79 
pmix_mˇ_ba£_comp⁄ít_d©a_t
 
	md©a
;

81 
pmix_mˇ_ba£_›í_⁄ly_dummy_comp⁄ít_t
 
	tpmix_mˇ_ba£_›í_⁄ly_dummy_comp⁄ít_t
;

83 
	g√g©e
[] = "^";

85 
boﬁ
 
u£_comp⁄ít
(c⁄° boﬁ 
ö˛ude_mode
,

86 c⁄° **
ªque°ed_comp⁄ít_«mes
,

87 c⁄° *
comp⁄ít_«me
);

99 
	$pmix_mˇ_ba£_comp⁄ít_föd
 (c⁄° *
dúe˘‹y
, 
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

100 
boﬁ
 
ign‹e_ªque°ed
, boﬁ 
›í_dso_comp⁄íts
)

102 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 **
°©ic_comp⁄íts
 = 
‰amew‹k
->
‰amew‹k_°©ic_comp⁄íts
;

103 **
ªque°ed_comp⁄ít_«mes
 = 
NULL
;

104 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
;

105 
boﬁ
 
ö˛ude_mode
 = 
åue
;

106 
ªt
;

108 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
‰amew‹k
->
‰amew‹k_ouçut
,

110 
dúe˘‹y
, 
‰amew‹k
->
‰amew‹k_«me
);

112 i‡(!
ign‹e_ªque°ed
) {

113 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄ít_∑r£_ªque°ed
 (
‰amew‹k
->
‰amew‹k_£À˘i⁄
, &
ö˛ude_mode
,

114 &
ªque°ed_comp⁄ít_«mes
);

115 i‡(
PMIX_SUCCESS
 !
ªt
) {

116  
ªt
;

121 i‡(
°©ic_comp⁄íts
) {

122 
i
 = 0 ; 
NULL
 !
°©ic_comp⁄íts
[i]; ++i) {

123 i‡–
	`u£_comp⁄ít
(
ö˛ude_mode
,

124 (c⁄° **)
ªque°ed_comp⁄ít_«mes
,

125 
°©ic_comp⁄íts
[
i
]->
pmix_mˇ_comp⁄ít_«me
) ) {

126 
˛i
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
);

127 i‡(
NULL
 =
˛i
) {

128 
ªt
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

129 
comp⁄ít_föd_out
;

131 
˛i
->
˛i_comp⁄ít
 = 
°©ic_comp⁄íts
[
i
];

132 
	`pmix_li°_≠≥nd
(&
‰amew‹k
->
‰amew‹k_comp⁄íts
, (
pmix_li°_ôem_t
 *Ë
˛i
);

137 #i‡
PMIX_HAVE_PDL_SUPPORT


139 i‡(
›í_dso_comp⁄íts
 && !
pmix_mˇ_ba£_comp⁄ít_dißbÀ_dl›í
) {

140 
	`föd_dyn_comp⁄íts
(
dúe˘‹y
, 
‰amew‹k
, (c⁄° **)
ªque°ed_comp⁄ít_«mes
,

141 
ö˛ude_mode
);

143 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_INFO
, 0,

145 
‰amew‹k
->
‰amew‹k_«me
);

149 i‡(
ö˛ude_mode
) {

150 
ªt
 = 
	`comp⁄ít_föd_check
 (
‰amew‹k
, 
ªque°ed_comp⁄ít_«mes
);

152 
ªt
 = 
PMIX_SUCCESS
;

155 
comp⁄ít_föd_out
:

157 i‡(
NULL
 !
ªque°ed_comp⁄ít_«mes
) {

158 
	`pmix_¨gv_‰ì
(
ªque°ed_comp⁄ít_«mes
);

163  
ªt
;

164 
	}
}

166 
	$pmix_mˇ_ba£_comp⁄ít_föd_föÆize
()

168  
PMIX_SUCCESS
;

169 
	}
}

171 
	$pmix_mˇ_ba£_comp⁄íts_fûãr
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
, 
uöt32_t
 
fûãr_Êags
)

173 
pmix_li°_t
 *
comp⁄íts
 = &
‰amew‹k
->
‰amew‹k_comp⁄íts
;

174 
ouçut_id
 = 
‰amew‹k
->
‰amew‹k_ouçut
;

175 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
, *
√xt
;

176 **
ªque°ed_comp⁄ít_«mes
 = 
NULL
;

177 
boﬁ
 
ö˛ude_mode
, 
ˇn_u£
;

178 
ªt
;

180 
	`as£π
 (
NULL
 !
comp⁄íts
);

182 i‡(0 =
fûãr_Êags
 && 
NULL
 =
‰amew‹k
->
‰amew‹k_£À˘i⁄
) {

183  
PMIX_SUCCESS
;

186 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄ít_∑r£_ªque°ed
 (
‰amew‹k
->
‰amew‹k_£À˘i⁄
, &
ö˛ude_mode
,

187 &
ªque°ed_comp⁄ít_«mes
);

188 i‡(
PMIX_SUCCESS
 !
ªt
) {

189  
ªt
;

192 
	`PMIX_LIST_FOREACH_SAFE
(
˛i
, 
√xt
, 
comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

193 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
 = 
˛i
->
˛i_comp⁄ít
;

194 
pmix_mˇ_ba£_›í_⁄ly_dummy_comp⁄ít_t
 *
dummy
 =

195 (
pmix_mˇ_ba£_›í_⁄ly_dummy_comp⁄ít_t
 *Ë
˛i
->
˛i_comp⁄ít
;

197 
ˇn_u£
 = 
	`u£_comp⁄ít
(
ö˛ude_mode
, (c⁄° **Ë
ªque°ed_comp⁄ít_«mes
,

198 
˛i
->
˛i_comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

200 i‡(!
ˇn_u£
 || (
fûãr_Êags
 & 
dummy
->
d©a
.
∑øm_fõld
) != filter_flags) {

201 i‡(
ˇn_u£
 && (
fûãr_Êags
 & 
PMIX_MCA_BASE_METADATA_PARAM_CHECKPOINT
) &&

202 !(
PMIX_MCA_BASE_METADATA_PARAM_CHECKPOINT
 & 
dummy
->
d©a
.
∑øm_fõld
)) {

203 
	`pmix_ouçut_vîbo£
(
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

206 
comp⁄ít
->
ª£rved
,

207 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

210 
	`pmix_li°_ªmove_ôem
(
comp⁄íts
, &
˛i
->
su≥r
);

212 
	`pmix_mˇ_ba£_comp⁄ít_u∆ﬂd
(
comp⁄ít
, 
ouçut_id
);

214 
	`PMIX_RELEASE
(
˛i
);

215 } i‡(
fûãr_Êags
 & 
PMIX_MCA_BASE_METADATA_PARAM_CHECKPOINT
) {

216 
	`pmix_ouçut_vîbo£
(
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

219 
comp⁄ít
->
ª£rved
,

220 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

224 i‡(
ö˛ude_mode
) {

225 
ªt
 = 
	`comp⁄ít_föd_check
(
‰amew‹k
, 
ªque°ed_comp⁄ít_«mes
);

227 
ªt
 = 
PMIX_SUCCESS
;

230 i‡(
NULL
 !
ªque°ed_comp⁄ít_«mes
) {

231 
	`pmix_¨gv_‰ì
(
ªque°ed_comp⁄ít_«mes
);

234  
ªt
;

235 
	}
}

237 #i‡
PMIX_HAVE_PDL_SUPPORT


247 
	$föd_dyn_comp⁄íts
(c⁄° *
∑th
, 
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

248 c⁄° **
«mes
, 
boﬁ
 
ö˛ude_mode
)

250 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
;

251 
pmix_li°_t
 *
dy_comp⁄íts
;

252 
ªt
;

254 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
‰amew‹k
->
‰amew‹k_ouçut
,

256 
∑th
, 
‰amew‹k
->
‰amew‹k_«me
);

258 i‡(
NULL
 !
∑th
) {

259 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_add
(
∑th
);

260 i‡(
PMIX_SUCCESS
 !
ªt
) {

265 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_gë_comp⁄íts
(
‰amew‹k
, &
dy_comp⁄íts
);

266 i‡(
PMIX_SUCCESS
 !
ªt
) {

271 
	`PMIX_LIST_FOREACH
(
ri
, 
dy_comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
) {

272 i‡(
	`u£_comp⁄ít
(
ö˛ude_mode
, 
«mes
, 
ri
->
ri_«me
)) {

273 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_›í
(
‰amew‹k
, 
ri
);

276 
	}
}

280 
boﬁ
 
	$u£_comp⁄ít
(c⁄° 
boﬁ
 
ö˛ude_mode
,

281 c⁄° **
ªque°ed_comp⁄ít_«mes
,

282 c⁄° *
comp⁄ít_«me
)

284 
boﬁ
 
found
 = 
Ál£
;

285 c⁄° **
ªq_comp_«me
 = 
ªque°ed_comp⁄ít_«mes
;

291 i‡(
NULL
 =
ªq_comp_«me
) {

292  
åue
;

295  *
ªq_comp_«me
 !
NULL
 ) {

296 i‡–
	`°rcmp
(
comp⁄ít_«me
, *
ªq_comp_«me
) == 0 ) {

297 
found
 = 
åue
;

300 
ªq_comp_«me
++;

316  (
ö˛ude_mode
 && 
found
) || !(include_mode || found);

317 
	}
}

321 
	$comp⁄ít_föd_check
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
, **
ªque°ed_comp⁄ít_«mes
)

323 
pmix_li°_t
 *
comp⁄íts
 = &
‰amew‹k
->
‰amew‹k_comp⁄íts
;

324 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
;

326 i‡(
NULL
 =
ªque°ed_comp⁄ít_«mes
) {

327  
PMIX_SUCCESS
;

330 
i
 = 0; 
NULL
 !
ªque°ed_comp⁄ít_«mes
[i]; ++i) {

331 
boﬁ
 
found
 = 
Ál£
;

333 
	`PMIX_LIST_FOREACH
(
˛i
, 
comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

334 i‡(0 =
	`°rcmp
(
ªque°ed_comp⁄ít_«mes
[
i
],

335 
˛i
->
˛i_comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
)) {

336 
found
 = 
åue
;

341 i‡(!
found
) {

342 
h
[
MAXHOSTNAMELEN
];

343 
	`gëho°«me
(
h
, (h));

344 
	`pmix_show_hñp
("help-mca-base.txt",

345 "föd-avaûabÀ:nŸ-vÆid", 
åue
,

346 
h
, 
‰amew‹k
->
‰amew‹k_«me
, 
ªque°ed_comp⁄ít_«mes
[
i
]);

347  
PMIX_ERR_NOT_FOUND
;

351  
PMIX_SUCCESS
;

352 
	}
}

354 
	$pmix_mˇ_ba£_comp⁄ít_∑r£_ªque°ed
 (c⁄° *
ªque°ed
, 
boﬁ
 *
ö˛ude_mode
,

355 ***
ªque°ed_comp⁄ít_«mes
)

357 c⁄° *
ªque°ed_‹ig
 = 
ªque°ed
;

359 *
ªque°ed_comp⁄ít_«mes
 = 
NULL
;

360 *
ö˛ude_mode
 = 
åue
;

363 i‡(
NULL
 =
ªque°ed
 || 0 =
	`°æí
 (requested)) {

364  
PMIX_SUCCESS
;

370 *
ö˛ude_mode
 = 
ªque°ed
[0] !
√g©e
[0];

373 
ªque°ed
 +
	`°r•n
 (ªque°ed, 
√g©e
);

377 i‡(
NULL
 !
	`°r°r
 (
ªque°ed
, 
√g©e
)) {

378 
	`pmix_show_hñp
("help-mca-base.txt",

380 
åue
, 
ªque°ed_‹ig
);

381  
PMIX_ERROR
;

385 *
ªque°ed_comp⁄ít_«mes
 = 
	`pmix_¨gv_•lô
(
ªque°ed
, ',');

388  
PMIX_SUCCESS
;

389 
	}
}

	@mca/base/pmix_mca_base_component_repository.c

27 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 #ifde‡
HAVE_SYS_TYPES_H


29 
	~<sys/ty≥s.h
>

31 
	~<°rög.h
>

32 
	~<°dlib.h
>

33 
	~<°dio.h
>

34 #ifde‡
HAVE_UNISTD_H


35 
	~<uni°d.h
>

38 
	~"§c/˛ass/pmix_li°.h
"

39 
	~"§c/mˇ/mˇ.h
"

40 
	~"§c/mˇ/ba£/ba£.h
"

41 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_comp⁄ít_ªposô‹y.h
"

42 
	~"§c/mˇ/pdl/ba£/ba£.h
"

43 
	~"pmix_comm⁄.h
"

44 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

45 
	~"§c/utû/ba£«me.h
"

47 #i‡
PMIX_HAVE_PDL_SUPPORT


52 
ri_c⁄°ru˘‹
(
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
);

53 
ri_de°ru˘‹
(
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
);

54 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
, 
pmix_li°_ôem_t
,

55 
ri_c⁄°ru˘‹
, 
ri_de°ru˘‹
);

63 
boﬁ
 
	göôülized
 = 
Ál£
;

66 #i‡
PMIX_HAVE_PDL_SUPPORT


68 
pmix_hash_èbÀ_t
 
	gpmix_mˇ_ba£_comp⁄ít_ªposô‹y
;

71 
	#STRINGIFYX
(
x
Ë#x

	)

72 
	#STRINGIFY
(
x
Ë
	`STRINGIFYX
(x)

	)

74 
	$¥o˚ss_ªposô‹y_ôem
 (c⁄° *
fûíame
, *
d©a
)

76 
«me
[
PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
 + 1];

77 
ty≥
[
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
 + 1];

78 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
;

79 
pmix_li°_t
 *
comp⁄ít_li°
;

80 *
ba£
;

81 
ªt
;

83 
ba£
 = 
	`pmix_ba£«me
 (
fûíame
);

84 i‡(
NULL
 =
ba£
) {

85  
PMIX_ERROR
;

89 i‡(0 !
	`°∫cmp
 (
ba£
, "mca_", 4)) {

90 
	`‰ì
 (
ba£
);

91  
PMIX_SUCCESS
;

96 
ªt
 = 
	`ssˇnf
(
ba£
, "mˇ_%" 
	`STRINGIFY
(
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
) "[^_]_%"

97 
	`STRINGIFY
(
PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
Ë"s", 
ty≥
, 
«me
);

98 i‡(0 > 
ªt
) {

100 
	`‰ì
(
ba£
);

101  
PMIX_SUCCESS
;

105 
ªt
 = 
	`pmix_hash_èbÀ_gë_vÆue_±r
(&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, 
ty≥
,

106 
	`°æí
 (
ty≥
), (**Ë&
comp⁄ít_li°
);

107 i‡(
PMIX_SUCCESS
 !
ªt
) {

108 
comp⁄ít_li°
 = 
	`PMIX_NEW
(
pmix_li°_t
);

109 i‡(
NULL
 =
comp⁄ít_li°
) {

110 
	`‰ì
 (
ba£
);

112  
PMIX_ERR_OUT_OF_RESOURCE
;

115 
ªt
 = 
	`pmix_hash_èbÀ_£t_vÆue_±r
(&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, 
ty≥
,

116 
	`°æí
 (
ty≥
), (*Ë
comp⁄ít_li°
);

117 i‡(
PMIX_SUCCESS
 !
ªt
) {

118 
	`‰ì
 (
ba£
);

119 
	`PMIX_RELEASE
(
comp⁄ít_li°
);

120  
ªt
;

125 
	`PMIX_LIST_FOREACH
(
ri
, 
comp⁄ít_li°
, 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
) {

126 i‡(0 =
	`°rcmp
 (
ri
->
ri_«me
, 
«me
)) {

128 
	`‰ì
 (
ba£
);

129  
PMIX_SUCCESS
;

133 
ri
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
);

134 i‡(
NULL
 =
ri
) {

135 
	`‰ì
 (
ba£
);

136  
PMIX_ERR_OUT_OF_RESOURCE
;

139 
ri
->
ri_ba£
 = 
ba£
;

141 
ri
->
ri_∑th
 = 
	`°rdup
 (
fûíame
);

142 i‡(
NULL
 =
ri
->
ri_∑th
) {

143 
	`PMIX_RELEASE
(
ri
);

144  
PMIX_ERR_OUT_OF_RESOURCE
;

148 
ri
->
ri_ty≥
[
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
] = '\0';

149 
	`°∫˝y
 (
ri
->
ri_ty≥
, 
ty≥
, 
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
);

151 
ri
->
ri_«me
[
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
] = '\0';

152 
	`°∫˝y
 (
ri
->
ri_«me
, 
«me
, 
PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
);

154 
	`pmix_li°_≠≥nd
 (
comp⁄ít_li°
, &
ri
->
su≥r
);

156  
PMIX_SUCCESS
;

157 
	}
}

159 
	$fûe_exi°s
(c⁄° *
fûíame
, c⁄° *
ext
)

161 *
föÆ
;

162 
ªt
;

164 i‡(
NULL
 =
ext
) {

165  
	`ac˚ss
 (
fûíame
, 
F_OK
) == 0;

168 
ªt
 = 
	`a•rötf
(&
föÆ
, "%s.%s", 
fûíame
, 
ext
);

169 i‡(0 > 
ªt
 || 
NULL
 =
föÆ
) {

173 
ªt
 = 
	`ac˚ss
 (
föÆ
, 
F_OK
);

174 
	`‰ì
(
föÆ
);

175  (0 =
ªt
);

176 
	}
}

180 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_add
 (c⁄° *
∑th
)

182 #i‡
PMIX_HAVE_PDL_SUPPORT


183 *
∑th_to_u£
 = 
NULL
, *
dú
, *
˘x
;

184 c⁄° 
£p
[] = {
PMIX_ENV_SEP
, '\0'};

186 i‡(
NULL
 =
∑th
) {

188  
PMIX_SUCCESS
;

191 
∑th_to_u£
 = 
	`°rdup
 (
∑th
);

193 
dú
 = 
	`°πok_r
 (
∑th_to_u£
, 
£p
, &
˘x
);

195 i‡((0 =
	`°rcmp
(
dú
, "USER_DEFAULT") || 0 == strcmp(dir, "USR_DEFAULT"))

196 && 
NULL
 !
pmix_mˇ_ba£_u£r_deÁu…_∑th
) {

197 
dú
 = 
pmix_mˇ_ba£_u£r_deÁu…_∑th
;

198 } i‡(0 =
	`°rcmp
(
dú
, "SYS_DEFAULT") ||

199 0 =
	`°rcmp
(
dú
, "SYSTEM_DEFAULT")) {

200 
dú
 = 
pmix_mˇ_ba£_sy°em_deÁu…_∑th
;

203 i‡(0 !
	`pmix_pdl_f‹óchfûe
(
dú
, 
¥o˚ss_ªposô‹y_ôem
, 
NULL
)) {

206 } 
NULL
 !(
dú
 = 
	`°πok_r
 (NULL, 
£p
, &
˘x
)));

208 
	`‰ì
 (
∑th_to_u£
);

212  
PMIX_SUCCESS
;

213 
	}
}

219 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_öô
()

223 i‡(!
öôülized
) {

224 #i‡
PMIX_HAVE_PDL_SUPPORT


227 
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_›í
(&
pmix_pdl_ba£_‰amew‹k
, 0);

228 i‡(
PMIX_SUCCESS
 !
ªt
) {

229 
	`pmix_ouçut
(0, "%s %d:%s failed --Örocess willÜikelyábort (openÅhe dl frameworkÑeturned %d instead of PMIX_SUCCESS)\n",

230 
__FILE__
, 
__LINE__
, 
__func__
, 
ªt
);

231  
ªt
;

233 
	`pmix_pdl_ba£_£À˘
();

235 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, 
pmix_hash_èbÀ_t
);

236 
ªt
 = 
	`pmix_hash_èbÀ_öô
 (&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, 128);

237 i‡(
PMIX_SUCCESS
 !
ªt
) {

238 (Ë
	`pmix_mˇ_ba£_‰amew‹k_˛o£
(&
pmix_pdl_ba£_‰amew‹k
);

239  
ªt
;

242 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_add
(
pmix_mˇ_ba£_comp⁄ít_∑th
);

243 i‡(
PMIX_SUCCESS
 !
ªt
) {

244 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
);

245 (Ë
	`pmix_mˇ_ba£_‰amew‹k_˛o£
(&
pmix_pdl_ba£_‰amew‹k
);

246  
ªt
;

250 
öôülized
 = 
åue
;

255  
PMIX_SUCCESS
;

256 
	}
}

258 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_gë_comp⁄íts
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

259 
pmix_li°_t
 **
‰amew‹k_comp⁄íts
)

261 *
‰amew‹k_comp⁄íts
 = 
NULL
;

262 #i‡
PMIX_HAVE_PDL_SUPPORT


263  
	`pmix_hash_èbÀ_gë_vÆue_±r
 (&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, 
‰amew‹k
->
‰amew‹k_«me
,

264 
	`°æí
 (
‰amew‹k
->
‰amew‹k_«me
), (**Ë
‰amew‹k_comp⁄íts
);

266  
PMIX_ERR_NOT_FOUND
;

267 
	}
}

269 #i‡
PMIX_HAVE_PDL_SUPPORT


270 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªÀa£_öã∫Æ
(
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
) {

271 
group_id
;

273 
group_id
 = 
	`pmix_mˇ_ba£_v¨_group_föd
 (
NULL
, 
ri
->
ri_ty≥
,Ñi->
ri_«me
);

274 i‡(0 <
group_id
) {

276 
	`pmix_mˇ_ba£_v¨_group_dîegi°î
 (
group_id
);

280 i‡(
ri
->
ri_dlh™dÀ
) {

281 
	`pmix_pdl_˛o£
(
ri
->
ri_dlh™dÀ
);

282 
ri
->
ri_dlh™dÀ
 = 
NULL
;

284 
	}
}

287 #i‡
PMIX_HAVE_PDL_SUPPORT


288 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
	$föd_comp⁄ít
(c⁄° *
ty≥
, c⁄° *
«me
)

290 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
;

291 
pmix_li°_t
 *
comp⁄ít_li°
;

292 
ªt
;

294 
ªt
 = 
	`pmix_hash_èbÀ_gë_vÆue_±r
 (&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, 
ty≥
,

295 
	`°æí
 (
ty≥
), (**Ë&
comp⁄ít_li°
);

296 i‡(
PMIX_SUCCESS
 !
ªt
) {

298  
NULL
;

301 
	`PMIX_LIST_FOREACH
(
ri
, 
comp⁄ít_li°
, 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
) {

302 i‡(0 =
	`°rcmp
 (
ri
->
ri_«me
, 
«me
)) {

303  
ri
;

307  
NULL
;

308 
	}
}

311 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªÀa£
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
)

313 #i‡
PMIX_HAVE_PDL_SUPPORT


314 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
;

316 
ri
 = 
	`föd_comp⁄ít
 (
comp⁄ít
->
pmix_mˇ_ty≥_«me
, comp⁄ít->
pmix_mˇ_comp⁄ít_«me
);

317 i‡(
NULL
 !
ri
 && !(--ri->
ri_ªf˙t
)) {

318 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªÀa£_öã∫Æ
 (
ri
);

321 
	}
}

323 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªèö_comp⁄ít
(c⁄° *
ty≥
, c⁄° *
«me
)

325 #i‡
PMIX_HAVE_PDL_SUPPORT


326 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
 = 
	`föd_comp⁄ít
(
ty≥
, 
«me
);

328 i‡(
NULL
 !
ri
) {

329 ++
ri
->
ri_ªf˙t
;

330  
PMIX_SUCCESS
;

333  
PMIX_ERR_NOT_FOUND
;

335  
PMIX_ERR_NOT_SUPPORTED
;

337 
	}
}

339 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_›í
(
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

340 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
)

342 #i‡
PMIX_HAVE_PDL_SUPPORT


343 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít_°ru˘
;

344 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
môem
 = 
NULL
;

345 *
°ru˘_«me
 = 
NULL
;

346 
vl
, 
ªt
;

348 
	`pmix_ouçut_vîbo£
(
PMIX_MCA_BASE_VERBOSE_INFO
, 0, "pmix_mca_base_component_repository_open:Éxamining dynamic "

349 "%†MCA comp⁄íà\"%s\"áà∑th %s", 
ri
->
ri_ty≥
,Ñi->
ri_«me
,Ñi->
ri_∑th
);

351 
vl
 = 
pmix_mˇ_ba£_comp⁄ít_show_lﬂd_îr‹s
 ? 
PMIX_MCA_BASE_VERBOSE_ERROR
 : 
PMIX_MCA_BASE_VERBOSE_INFO
;

359 
	`PMIX_LIST_FOREACH
(
môem
, &
‰amew‹k
->
‰amew‹k_comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

360 i‡(0 =
	`°rcmp
(
môem
->
˛i_comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
, 
ri
->
ri_«me
)) {

361 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_INFO
, 0, "pmix_mca_base_component_repository_open:álreadyÜoaded (ignored)");

362  
PMIX_ERR_BAD_PARAM
;

367 
môem
 = 
NULL
;

369 i‡(
NULL
 !
ri
->
ri_dlh™dÀ
) {

370 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_INFO
, 0, "pmix_mca_base_component_repository_open:álreadyÜoaded.Ñeturning cached component");

371 
môem
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
);

372 i‡(
NULL
 =
môem
) {

373  
PMIX_ERR_OUT_OF_RESOURCE
;

376 
môem
->
˛i_comp⁄ít
 = 
ri
->
ri_comp⁄ít_°ru˘
;

377 
	`pmix_li°_≠≥nd
 (&
‰amew‹k
->
‰amew‹k_comp⁄íts
, &
môem
->
su≥r
);

379  
PMIX_SUCCESS
;

382 i‡(0 !
	`°rcmp
 (
ri
->
ri_ty≥
, 
‰amew‹k
->
‰amew‹k_«me
)) {

386 
	`as£π
 (0);

387  
PMIX_ERR_NOT_SUPPORTED
;

392 *
îr_msg
 = 
NULL
;

393 i‡(
PMIX_SUCCESS
 !
	`pmix_pdl_›í
(
ri
->
ri_∑th
, 
åue
, 
Ál£
, &ri->
ri_dlh™dÀ
, &
îr_msg
)) {

394 i‡(
NULL
 =
îr_msg
) {

395 
îr_msg
 = "pmix_dl_open()Érror message was NULL!";

403 i‡(0 =
	`°rˇ£cmp
("fûênŸ found", 
îr_msg
) &&

404 (
	`fûe_exi°s
(
ri
->
ri_∑th
, "lo") ||

405 
	`fûe_exi°s
(
ri
->
ri_∑th
, "so") ||

406 
	`fûe_exi°s
(
ri
->
ri_∑th
, "dylib") ||

407 
	`fûe_exi°s
(
ri
->
ri_∑th
, "dll"))) {

408 
îr_msg
 = "perhapsá missing symbol, or compiled forá different version of Open MPI?";

410 
	`pmix_ouçut_vîbo£
(
vl
, 0, "pmix_mca_base_component_repository_open: unableÅo open %s: %s (ignored)",

411 
ri
->
ri_ba£
, 
îr_msg
);

412  
PMIX_ERR_BAD_PARAM
;

419 
ªt
 = 
	`a•rötf
 (&
°ru˘_«me
, "mˇ_%s_%s_comp⁄ít", 
ri
->
ri_ty≥
,Ñi->
ri_«me
);

420 i‡(0 > 
ªt
) {

421 
ªt
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

425 
môem
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
);

426 i‡(
NULL
 =
môem
) {

427 
ªt
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

431 
îr_msg
 = 
NULL
;

432 
ªt
 = 
	`pmix_pdl_lookup
(
ri
->
ri_dlh™dÀ
, 
°ru˘_«me
, (**Ë&
comp⁄ít_°ru˘
, &
îr_msg
);

433 i‡(
PMIX_SUCCESS
 !
ªt
 || 
NULL
 =
comp⁄ít_°ru˘
) {

434 i‡(
NULL
 =
îr_msg
) {

435 
îr_msg
 = "pmix_dl_loookup()Érror message was NULL!";

437 
	`pmix_ouçut_vîbo£
(
vl
, 0, "pmix_mca_base_component_repository_open: \"%s\" doesÇotáppearÅo beá valid "

438 "%†MCA dy«mi¯comp⁄íà(ign‹ed): %s.Ñë %d", 
ri
->
ri_ba£
,Ñi->
ri_ty≥
, 
îr_msg
, 
ªt
);

440 
ªt
 = 
PMIX_ERR_BAD_PARAM
;

445 
	`‰ì
 (
°ru˘_«me
);

446 
°ru˘_«me
 = 
NULL
;

450 i‡(!(
PMIX_MCA_BASE_VERSION_MAJOR
 =
comp⁄ít_°ru˘
->
pmix_mˇ_maj‹_vîsi⁄
 &&

451 
PMIX_MCA_BASE_VERSION_MINOR
 =
comp⁄ít_°ru˘
->
pmix_mˇ_mö‹_vîsi⁄
)) {

452 
	`pmix_ouçut_vîbo£
(
vl
, 0, "pmix_mca_base_component_repository_open: %s \"%s\" usesán MCA interfaceÅhat is "

454 
ri
->
ri_ty≥
,Ñi->
ri_∑th
, 
comp⁄ít_°ru˘
->
pmix_mˇ_maj‹_vîsi⁄
,

455 
comp⁄ít_°ru˘
->
pmix_mˇ_mö‹_vîsi⁄
, comp⁄ít_°ru˘->
pmix_mˇ_ªÀa£_vîsi⁄
,

456 
PMIX_MCA_BASE_VERSION_MAJOR
, 
PMIX_MCA_BASE_VERSION_MINOR
, 
PMIX_MCA_BASE_VERSION_RELEASE
);

457 
ªt
 = 
PMIX_ERR_BAD_PARAM
;

463 i‡(0 !
	`°rcmp
(
comp⁄ít_°ru˘
->
pmix_mˇ_ty≥_«me
, 
ri
->
ri_ty≥
) ||

464 0 !
	`°rcmp
(
comp⁄ít_°ru˘
->
pmix_mˇ_comp⁄ít_«me
, 
ri
->
ri_«me
)) {

465 
	`pmix_ouçut_vîbo£
(
vl
, 0, "Component file data doesÇot match filename: %s (%s / %s) != %s %s -- ignored",

466 
ri
->
ri_∑th
,Ñi->
ri_ty≥
,Ñi->
ri_«me
,

467 
comp⁄ít_°ru˘
->
pmix_mˇ_ty≥_«me
,

468 
comp⁄ít_°ru˘
->
pmix_mˇ_comp⁄ít_«me
);

469 
ªt
 = 
PMIX_ERR_BAD_PARAM
;

476 
ri
->
ri_comp⁄ít_°ru˘
 = 
môem
->
˛i_comp⁄ít
 = 
comp⁄ít_°ru˘
;

477 
ri
->
ri_ªf˙t
 = 1;

478 
	`pmix_li°_≠≥nd
(&
‰amew‹k
->
‰amew‹k_comp⁄íts
, &
môem
->
su≥r
);

480 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_INFO
, 0, "pmix_mca_base_component_repository_open: opened dynamic %s MCA "

481 "comp⁄íà\"%s\"", 
ri
->
ri_ty≥
,Ñi->
ri_«me
);

483  
PMIX_SUCCESS
;

486 i‡(
môem
) {

487 
	`PMIX_RELEASE
(
môem
);

490 i‡(
°ru˘_«me
) {

491 
	`‰ì
 (
°ru˘_«me
);

494 
	`pmix_pdl_˛o£
 (
ri
->
ri_dlh™dÀ
);

495 
ri
->
ri_dlh™dÀ
 = 
NULL
;

497  
ªt
;

501  
PMIX_ERR_NOT_SUPPORTED
;

503 
	}
}

508 
	$pmix_mˇ_ba£_comp⁄ít_ªposô‹y_föÆize
()

510 i‡(!
öôülized
) {

514 
öôülized
 = 
Ál£
;

516 #i‡
PMIX_HAVE_PDL_SUPPORT


517 
pmix_li°_t
 *
comp⁄ít_li°
;

518 *
node
, *
key
;

519 
size_t
 
key_size
;

520 
ªt
;

522 
ªt
 = 
	`pmix_hash_èbÀ_gë_fú°_key_±r
 (&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, &
key
, &
key_size
,

523 (**Ë&
comp⁄ít_li°
, &
node
);

524 
PMIX_SUCCESS
 =
ªt
) {

525 
	`PMIX_LIST_RELEASE
(
comp⁄ít_li°
);

526 
ªt
 = 
	`pmix_hash_èbÀ_gë_√xt_key_±r
 (&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
, &
key
,

527 &
key_size
, (**Ë&
comp⁄ít_li°
,

528 
node
, &node);

531 (Ë
	`pmix_mˇ_ba£_‰amew‹k_˛o£
(&
pmix_pdl_ba£_‰amew‹k
);

532 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_comp⁄ít_ªposô‹y
);

534 
	}
}

536 #i‡
PMIX_HAVE_PDL_SUPPORT


541 
	$ri_c⁄°ru˘‹
 (
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
)

543 
	`mem£t
(
ri
->
ri_ty≥
, 0, (ri->ri_type));

544 
ri
->
ri_dlh™dÀ
 = 
NULL
;

545 
ri
->
ri_comp⁄ít_°ru˘
 = 
NULL
;

546 
ri
->
ri_∑th
 = 
NULL
;

547 
	}
}

553 
	$ri_de°ru˘‹
 (
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
)

556 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªÀa£_öã∫Æ
 (
ri
);

563 i‡(
ri
->
ri_∑th
) {

564 
	`‰ì
 (
ri
->
ri_∑th
);

567 i‡(
ri
->
ri_ba£
) {

568 
	`‰ì
 (
ri
->
ri_ba£
);

570 
	}
}

	@mca/base/pmix_mca_base_component_repository.h

37 #i‚de‡
MCA_BASE_COMPONENT_REPOSITORY_H


38 
	#MCA_BASE_COMPONENT_REPOSITORY_H


	)

40 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

42 
	~"§c/mˇ/pdl/pdl.h
"

43 
	~"§c/mˇ/pdl/ba£/ba£.h
"

45 
BEGIN_C_DECLS


46 
	spmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 {

47 
pmix_li°_ôem_t
 
	msu≥r
;

49 
	mri_ty≥
[
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
 + 1];

50 
	mri_«me
[
PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
 + 1];

52 *
	mri_∑th
;

53 *
	mri_ba£
;

55 
pmix_pdl_h™dÀ_t
 *
	mri_dlh™dÀ
;

56 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
	mri_comp⁄ít_°ru˘
;

58 
	mri_ªf˙t
;

60 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 
	tpmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
;

62 
PMIX_CLASS_DECLARATION
(
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
);

73 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_öô
();

80 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_add
(c⁄° *
∑th
);

92 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_gë_comp⁄íts
(
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

93 
pmix_li°_t
 **
‰amew‹k_comp⁄íts
);

98 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_föÆize
();

107 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_›í
(
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

108 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ôem_t
 *
ri
);

114 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªÀa£
(c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
);

129 
pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªèö_comp⁄ít
(c⁄° *
ty≥
, c⁄° *
«me
);

131 
	gEND_C_DECLS


	@mca/base/pmix_mca_base_components_close.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~"§c/˛ass/pmix_li°.h
"

26 
	~"§c/utû/ouçut.h
"

27 
	~"§c/mˇ/mˇ.h
"

28 
	~"§c/mˇ/ba£/ba£.h
"

29 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_comp⁄ít_ªposô‹y.h
"

30 
	~"pmix_comm⁄.h
"

32 
	$pmix_mˇ_ba£_comp⁄ít_u∆ﬂd
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
, 
ouçut_id
)

34 
ªt
;

37 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

39 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

41 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_föd
 (
comp⁄ít
->
pmix_mˇ_¥oje˘_«me
, comp⁄ít->
pmix_mˇ_ty≥_«me
,

42 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

43 i‡(0 <
ªt
) {

44 
	`pmix_mˇ_ba£_v¨_group_dîegi°î
 (
ªt
);

47 
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_ªÀa£
 (
comp⁄ít
);

48 
	}
}

50 
	$pmix_mˇ_ba£_comp⁄ít_˛o£
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
, 
ouçut_id
)

53 i‡(
NULL
 !
comp⁄ít
->
pmix_mˇ_˛o£_comp⁄ít
) {

54 
comp⁄ít
->
	`pmix_mˇ_˛o£_comp⁄ít
();

55 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

57 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

60 
	`pmix_mˇ_ba£_comp⁄ít_u∆ﬂd
 (
comp⁄ít
, 
ouçut_id
);

61 
	}
}

63 
	$pmix_mˇ_ba£_‰amew‹k_comp⁄íts_˛o£
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

64 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
skù
)

66  
	`pmix_mˇ_ba£_comp⁄íts_˛o£
 (
‰amew‹k
->
‰amew‹k_ouçut
,

67 &
‰amew‹k
->
‰amew‹k_comp⁄íts
,

68 
skù
);

69 
	}
}

71 
	$pmix_mˇ_ba£_comp⁄íts_˛o£
(
ouçut_id
, 
pmix_li°_t
 *
comp⁄íts
,

72 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
skù
)

74 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
, *
√xt
;

81 
	`PMIX_LIST_FOREACH_SAFE
(
˛i
, 
√xt
, 
comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

82 i‡(
skù
 =
˛i
->
˛i_comp⁄ít
) {

86 
	`pmix_mˇ_ba£_comp⁄ít_˛o£
 (
˛i
->
˛i_comp⁄ít
, 
ouçut_id
);

87 
	`pmix_li°_ªmove_ôem
 (
comp⁄íts
, &
˛i
->
su≥r
);

89 
	`PMIX_RELEASE
(
˛i
);

93  
PMIX_SUCCESS
;

94 
	}
}

	@mca/base/pmix_mca_base_components_open.c

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

27 
	~<°dio.h
>

28 
	~<°rög.h
>

29 
	~<°dlib.h
>

31 
	~"§c/˛ass/pmix_li°.h
"

32 
	~"§c/utû/¨gv.h
"

33 
	~"§c/utû/îr‹.h
"

34 
	~"§c/utû/ouçut.h
"

35 
	~"§c/mˇ/mˇ.h
"

36 
	~"§c/mˇ/ba£/ba£.h
"

37 
	~"pmix_comm⁄.h
"

42 
›í_comp⁄íts
(
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
);

44 
	spmix_mˇ_ba£_dummy_‰amew‹k_li°_ôem_t
 {

45 
pmix_li°_ôem_t
 
	msu≥r
;

46 
pmix_mˇ_ba£_‰amew‹k_t
 
	m‰amew‹k
;

53 
	$pmix_mˇ_ba£_‰amew‹k_comp⁄íts_›í
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

54 
pmix_mˇ_ba£_›í_Êag_t
 
Êags
)

57 i‡(
Êags
 & 
PMIX_MCA_BASE_OPEN_FIND_COMPONENTS
) {

58 
boﬁ
 
›í_dso_comp⁄íts
 = !(
Êags
 & 
PMIX_MCA_BASE_OPEN_STATIC_ONLY
);

60 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄ít_föd
(
NULL
, 
‰amew‹k
, 
Ál£
, 
›í_dso_comp⁄íts
);

61 i‡(
PMIX_SUCCESS
 !
ªt
) {

62  
ªt
;

67  
	`›í_comp⁄íts
 (
‰amew‹k
);

68 
	}
}

77 
	$›í_comp⁄íts
(
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
)

79 
pmix_li°_t
 *
comp⁄íts
 = &
‰amew‹k
->
‰amew‹k_comp⁄íts
;

80 
uöt32_t
 
›í_⁄ly_Êags
 = 
PMIX_MCA_BASE_METADATA_PARAM_NONE
;

81 
ouçut_id
 = 
‰amew‹k
->
‰amew‹k_ouçut
;

82 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
, *
√xt
;

83 
ªt
;

100 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄íts_fûãr
 (
‰amew‹k
, 
›í_⁄ly_Êags
);

101 i‡(
PMIX_SUCCESS
 !
ªt
) {

102  
ªt
;

106 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

108 
‰amew‹k
->
‰amew‹k_«me
);

111 
	`PMIX_LIST_FOREACH_SAFE
(
˛i
, 
√xt
, 
comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

112 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
 = 
˛i
->
˛i_comp⁄ít
;

114 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

116 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

118 i‡(
NULL
 !
comp⁄ít
->
pmix_mˇ_›í_comp⁄ít
) {

120 
ªt
 = 
comp⁄ít
->
	`pmix_mˇ_›í_comp⁄ít
();

122 i‡(
PMIX_SUCCESS
 =
ªt
) {

123 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

126 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

128 i‡(
PMIX_ERR_NOT_AVAILABLE
 !
ªt
) {

140 i‡(
pmix_mˇ_ba£_comp⁄ít_show_lﬂd_îr‹s
) {

141 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_ERROR
, 
ouçut_id
,

144 
comp⁄ít
->
pmix_mˇ_ty≥_«me
,

145 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

147 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

150 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

153 
	`pmix_mˇ_ba£_comp⁄ít_˛o£
 (
comp⁄ít
, 
ouçut_id
);

155 
	`pmix_li°_ªmove_ôem
 (
comp⁄íts
, &
˛i
->
su≥r
);

156 
	`PMIX_RELEASE
(
˛i
);

163  
PMIX_SUCCESS
;

164 
	}
}

	@mca/base/pmix_mca_base_components_register.c

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~<°dlib.h
>

30 
	~"§c/˛ass/pmix_li°.h
"

31 
	~"§c/utû/¨gv.h
"

32 
	~"§c/utû/îr‹.h
"

33 
	~"§c/utû/ouçut.h
"

34 
	~"§c/utû/show_hñp.h
"

35 
	~"§c/mˇ/mˇ.h
"

36 
	~"§c/mˇ/ba£/ba£.h
"

37 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_‰amew‹k.h
"

38 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_comp⁄ít_ªposô‹y.h
"

39 
	~"pmix_comm⁄.h
"

44 
ªgi°î_comp⁄íts
(
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
);

49 
	$pmix_mˇ_ba£_‰amew‹k_comp⁄íts_ªgi°î
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

50 
pmix_mˇ_ba£_ªgi°î_Êag_t
 
Êags
)

52 
boﬁ
 
›í_dso_comp⁄íts
 = !(
Êags
 & 
PMIX_MCA_BASE_REGISTER_STATIC_ONLY
);

53 
boﬁ
 
ign‹e_ªque°ed
 = !!(
Êags
 & 
PMIX_MCA_BASE_REGISTER_ALL
);

54 
ªt
;

57 
ªt
 = 
	`pmix_mˇ_ba£_comp⁄ít_föd
(
NULL
, 
‰amew‹k
, 
ign‹e_ªque°ed
, 
›í_dso_comp⁄íts
);

58 i‡(
PMIX_SUCCESS
 !
ªt
) {

59  
ªt
;

63  
	`ªgi°î_comp⁄íts
(
‰amew‹k
);

64 
	}
}

73 
	$ªgi°î_comp⁄íts
(
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
)

75 
ªt
;

76 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
;

77 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
, *
√xt
;

78 
ouçut_id
 = 
‰amew‹k
->
‰amew‹k_ouçut
;

81 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

83 
‰amew‹k
->
‰amew‹k_«me
);

87 
	`PMIX_LIST_FOREACH_SAFE
(
˛i
, 
√xt
, &
‰amew‹k
->
‰amew‹k_comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

88 
comp⁄ít
 = (
pmix_mˇ_ba£_comp⁄ít_t
 *)
˛i
->
˛i_comp⁄ít
;

90 
	`pmix_ouçut_vîbo£
(
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

92 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

95 i‡(
NULL
 =
comp⁄ít
->
pmix_mˇ_ªgi°î_comp⁄ít_∑øms
) {

96 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

99 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

100 
ªt
 = 
PMIX_SUCCESS
;

102 
ªt
 = 
comp⁄ít
->
	`pmix_mˇ_ªgi°î_comp⁄ít_∑øms
();

105 i‡(
PMIX_SUCCESS
 !
ªt
) {

106 i‡(
PMIX_ERR_NOT_AVAILABLE
 !
ªt
) {

118 i‡(
pmix_mˇ_ba£_comp⁄ít_show_lﬂd_îr‹s
) {

119 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_ERROR
, 
ouçut_id
,

122 
comp⁄ít
->
pmix_mˇ_ty≥_«me
,

123 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

126 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

129 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

132 
	`pmix_li°_ªmove_ôem
 (&
‰amew‹k
->
‰amew‹k_comp⁄íts
, &
˛i
->
su≥r
);

135 
	`PMIX_RELEASE
(
˛i
);

139 i‡(
NULL
 !
comp⁄ít
->
pmix_mˇ_ªgi°î_comp⁄ít_∑øms
) {

140 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
, "pmix:mca: base: components_register: "

142 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

146 
	`pmix_mˇ_ba£_comp⁄ít_v¨_ªgi°î
 (
comp⁄ít
, "maj‹_vîsi⁄", 
NULL
, 
PMIX_MCA_BASE_VAR_TYPE_INT
, NULL,

147 0, 
PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
 | 
PMIX_MCA_BASE_VAR_FLAG_INTERNAL
,

148 
PMIX_INFO_LVL_9
, 
PMIX_MCA_BASE_VAR_SCOPE_CONSTANT
,

149 &
comp⁄ít
->
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
);

150 
	`pmix_mˇ_ba£_comp⁄ít_v¨_ªgi°î
 (
comp⁄ít
, "mö‹_vîsi⁄", 
NULL
, 
PMIX_MCA_BASE_VAR_TYPE_INT
, NULL,

151 0, 
PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
 | 
PMIX_MCA_BASE_VAR_FLAG_INTERNAL
,

152 
PMIX_INFO_LVL_9
, 
PMIX_MCA_BASE_VAR_SCOPE_CONSTANT
,

153 &
comp⁄ít
->
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
);

154 
	`pmix_mˇ_ba£_comp⁄ít_v¨_ªgi°î
 (
comp⁄ít
, "ªÀa£_vîsi⁄", 
NULL
, 
PMIX_MCA_BASE_VAR_TYPE_INT
, NULL,

155 0, 
PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
 | 
PMIX_MCA_BASE_VAR_FLAG_INTERNAL
,

156 
PMIX_INFO_LVL_9
, 
PMIX_MCA_BASE_VAR_SCOPE_CONSTANT
,

157 &
comp⁄ít
->
pmix_mˇ_comp⁄ít_ªÀa£_vîsi⁄
);

162  
PMIX_SUCCESS
;

163 
	}
}

	@mca/base/pmix_mca_base_components_select.c

16 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 
	~<°dio.h
>

19 
	~<°rög.h
>

20 
	~<°dlib.h
>

21 #ifde‡
HAVE_SYS_TYPES_H


22 
	~<sys/ty≥s.h
>

25 
	~"§c/˛ass/pmix_li°.h
"

26 
	~"§c/utû/îr‹.h
"

27 
	~"§c/utû/ouçut.h
"

28 
	~"§c/mˇ/mˇ.h
"

29 
	~"§c/mˇ/ba£/ba£.h
"

30 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_comp⁄ít_ªposô‹y.h
"

31 
	~"pmix_comm⁄.h
"

34 
	$pmix_mˇ_ba£_£À˘
(c⁄° *
ty≥_«me
, 
ouçut_id
,

35 
pmix_li°_t
 *
comp⁄íts_avaûabÀ
,

36 
pmix_mˇ_ba£_moduÀ_t
 **
be°_moduÀ
,

37 
pmix_mˇ_ba£_comp⁄ít_t
 **
be°_comp⁄ít
,

38 *
¥i‹ôy_out
)

40 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
 = 
NULL
;

41 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
 = 
NULL
;

42 
pmix_mˇ_ba£_moduÀ_t
 *
moduÀ
 = 
NULL
;

43 
¥i‹ôy
 = 0, 
be°_¥i‹ôy
 = 
INT32_MIN
;

44 
rc
;

46 *
be°_moduÀ
 = 
NULL
;

47 *
be°_comp⁄ít
 = 
NULL
;

49 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

51 
ty≥_«me
);

57 
	`PMIX_LIST_FOREACH
(
˛i
, 
comp⁄íts_avaûabÀ
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

58 
comp⁄ít
 = (
pmix_mˇ_ba£_comp⁄ít_t
 *Ë
˛i
->
˛i_comp⁄ít
;

63 i‡(
NULL
 =
comp⁄ít
->
pmix_mˇ_quîy_comp⁄ít
) {

64 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

66 
ty≥_«me
, 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
 );

73 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

75 
ty≥_«me
, 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
);

77 
rc
 = 
comp⁄ít
->
	`pmix_mˇ_quîy_comp⁄ít
(&
moduÀ
, &
¥i‹ôy
);

78 i‡(
PMIX_ERR_FATAL
 =
rc
) {

84  
rc
;

85 } i‡(
PMIX_SUCCESS
 !
rc
) {

93 i‡(
NULL
 =
moduÀ
) {

94 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

96 
ty≥_«me
, 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
 );

103 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

105 
ty≥_«me
, 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
, 
¥i‹ôy
);

106 i‡(
¥i‹ôy
 > 
be°_¥i‹ôy
) {

107 
be°_¥i‹ôy
 = 
¥i‹ôy
;

108 *
be°_comp⁄ít
 = 
comp⁄ít
;

109 *
be°_moduÀ
 = 
moduÀ
;

113 i‡(
¥i‹ôy_out
) {

114 *
¥i‹ôy_out
 = 
be°_¥i‹ôy
;

121 i‡(
NULL
 =*
be°_comp⁄ít
) {

122 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

124 
ty≥_«me
);

128 
	`pmix_mˇ_ba£_comp⁄íts_˛o£
(0,

129 
comp⁄íts_avaûabÀ
,

130 
NULL
);

131  
PMIX_ERR_NOT_FOUND
;

134 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 
ouçut_id
,

136 
ty≥_«me
, (*
be°_comp⁄ít
)->
pmix_mˇ_comp⁄ít_«me
);

141 
	`pmix_mˇ_ba£_comp⁄íts_˛o£
(
ouçut_id
,

142 
comp⁄íts_avaûabÀ
,

143 (
pmix_mˇ_ba£_comp⁄ít_t
 *Ë(*
be°_comp⁄ít
));

146  
PMIX_SUCCESS
;

147 
	}
}

	@mca/base/pmix_mca_base_framework.c

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

16 
	~"pmix_comm⁄.h
"

17 
	~"§c/utû/ouçut.h
"

19 
	~"pmix_mˇ_ba£_‰amew‹k.h
"

20 
	~"pmix_mˇ_ba£_v¨.h
"

21 
	~"§c/mˇ/ba£/ba£.h
"

23 
boﬁ
 
	$pmix_mˇ_ba£_‰amew‹k_is_ªgi°îed
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
)

25  !!(
‰amew‹k
->
‰amew‹k_Êags
 & 
PMIX_MCA_BASE_FRAMEWORK_FLAG_REGISTERED
);

26 
	}
}

28 
boﬁ
 
	$pmix_mˇ_ba£_‰amew‹k_is_›í
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
)

30  !!(
‰amew‹k
->
‰amew‹k_Êags
 & 
PMIX_MCA_BASE_FRAMEWORK_FLAG_OPEN
);

31 
	}
}

33 
	$‰amew‹k_›í_ouçut
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
)

35 i‡(0 < 
‰amew‹k
->
‰amew‹k_vîbo£
) {

36 i‡(-1 =
‰amew‹k
->
‰amew‹k_ouçut
) {

37 
‰amew‹k
->
‰amew‹k_ouçut
 = 
	`pmix_ouçut_›í
 (
NULL
);

39 
	`pmix_ouçut_£t_vîbosôy
(
‰amew‹k
->
‰amew‹k_ouçut
,

40 
‰amew‹k
->
‰amew‹k_vîbo£
);

41 } i‡(-1 !
‰amew‹k
->
‰amew‹k_ouçut
) {

42 
	`pmix_ouçut_˛o£
 (
‰amew‹k
->
‰amew‹k_ouçut
);

43 
‰amew‹k
->
‰amew‹k_ouçut
 = -1;

45 
	}
}

47 
	$‰amew‹k_˛o£_ouçut
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
)

49 i‡(-1 !
‰amew‹k
->
‰amew‹k_ouçut
) {

50 
	`pmix_ouçut_˛o£
 (
‰amew‹k
->
‰amew‹k_ouçut
);

51 
‰amew‹k
->
‰amew‹k_ouçut
 = -1;

53 
	}
}

55 
	$pmix_mˇ_ba£_‰amew‹k_ªgi°î
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

56 
pmix_mˇ_ba£_ªgi°î_Êag_t
 
Êags
)

58 *
desc
;

59 
ªt
;

61 
	`as£π
 (
NULL
 !
‰amew‹k
);

63 
‰amew‹k
->
‰amew‹k_ªf˙t
++;

65 i‡(
	`pmix_mˇ_ba£_‰amew‹k_is_ªgi°îed
 (
‰amew‹k
)) {

66  
PMIX_SUCCESS
;

69 
	`PMIX_CONSTRUCT
(&
‰amew‹k
->
‰amew‹k_comp⁄íts
, 
pmix_li°_t
);

71 i‡(
‰amew‹k
->
‰amew‹k_Êags
 & 
PMIX_MCA_BASE_FRAMEWORK_FLAG_NO_DSO
) {

72 
Êags
 |
PMIX_MCA_BASE_REGISTER_STATIC_ONLY
;

75 i‡(!(
PMIX_MCA_BASE_FRAMEWORK_FLAG_NOREGISTER
 & 
‰amew‹k
->
‰amew‹k_Êags
)) {

77 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_ªgi°î
 (
‰amew‹k
->
‰amew‹k_¥oje˘
,

78 
‰amew‹k
->
‰amew‹k_«me
,

79 
NULL
, 
‰amew‹k
->
‰amew‹k_des¸ùti⁄
);

80 i‡(0 > 
ªt
) {

81  
ªt
;

84 
	`a•rötf
 (&
desc
, "Default selection set of components forÅhe %s framework (<none>"

85 " món†u£áŒ comp⁄ít†th© c™ bêfound)", 
‰amew‹k
->
‰amew‹k_«me
);

86 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 (
‰amew‹k
->
‰amew‹k_¥oje˘
, fømew‹k->
‰amew‹k_«me
,

87 
NULL
, NULL, 
desc
, 
PMIX_MCA_BASE_VAR_TYPE_STRING
, NULL, 0,

88 
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
, 
PMIX_INFO_LVL_2
,

89 
PMIX_MCA_BASE_VAR_SCOPE_ALL_EQ
, &
‰amew‹k
->
‰amew‹k_£À˘i⁄
);

90 
	`‰ì
 (
desc
);

91 i‡(0 > 
ªt
) {

92  
ªt
;

96 
ªt
 = 
	`a•rötf
 (&
desc
, "VerbosityÜevel forÅhe %s framework (default: 0)",

97 
‰amew‹k
->
‰amew‹k_«me
);

98 i‡(0 > 
ªt
) {

99  
PMIX_ERR_OUT_OF_RESOURCE
;

102 
‰amew‹k
->
‰amew‹k_vîbo£
 = 
PMIX_MCA_BASE_VERBOSE_ERROR
;

103 
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_v¨_ªgi°î
 (
‰amew‹k
, "vîbo£", 
desc
,

104 
PMIX_MCA_BASE_VAR_TYPE_INT
,

105 &
pmix_mˇ_ba£_v¨_íum_vîbo£
, 0,

106 
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
,

107 
PMIX_INFO_LVL_8
,

108 
PMIX_MCA_BASE_VAR_SCOPE_LOCAL
,

109 &
‰amew‹k
->
‰amew‹k_vîbo£
);

110 
	`‰ì
(
desc
);

111 i‡(0 > 
ªt
) {

112  
ªt
;

117 
	`‰amew‹k_›í_ouçut
 (
‰amew‹k
);

120 i‡(
NULL
 !
‰amew‹k
->
‰amew‹k_ªgi°î
) {

121 
ªt
 = 
‰amew‹k
->
	`‰amew‹k_ªgi°î
 (
Êags
);

122 i‡(
PMIX_SUCCESS
 !
ªt
) {

123  
ªt
;

128 
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_comp⁄íts_ªgi°î
 (
‰amew‹k
, 
Êags
);

129 i‡(
PMIX_SUCCESS
 !
ªt
) {

130  
ªt
;

134 
‰amew‹k
->
‰amew‹k_Êags
 |
PMIX_MCA_BASE_FRAMEWORK_FLAG_REGISTERED
;

137  
PMIX_SUCCESS
;

138 
	}
}

140 
	$pmix_mˇ_ba£_‰amew‹k_›í
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

141 
pmix_mˇ_ba£_›í_Êag_t
 
Êags
) {

142 
ªt
;

144 
	`as£π
 (
NULL
 !
‰amew‹k
);

147 
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_ªgi°î
 (
‰amew‹k
, 
PMIX_MCA_BASE_REGISTER_DEFAULT
);

148 i‡(
PMIX_SUCCESS
 !
ªt
) {

149  
ªt
;

153 i‡(
	`pmix_mˇ_ba£_‰amew‹k_is_›í
 (
‰amew‹k
)) {

154  
PMIX_SUCCESS
;

157 i‡(
PMIX_MCA_BASE_FRAMEWORK_FLAG_NOREGISTER
 & 
‰amew‹k
->
‰amew‹k_Êags
) {

158 
Êags
 |
PMIX_MCA_BASE_OPEN_FIND_COMPONENTS
;

160 i‡(
PMIX_MCA_BASE_FRAMEWORK_FLAG_NO_DSO
 & 
‰amew‹k
->
‰amew‹k_Êags
) {

161 
Êags
 |
PMIX_MCA_BASE_OPEN_STATIC_ONLY
;

166 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_föd
 (
‰amew‹k
->
‰amew‹k_¥oje˘
,

167 
‰amew‹k
->
‰amew‹k_«me
,

168 
NULL
);

169 
	`pmix_mˇ_ba£_v¨_group_£t_v¨_Êag
 (
ªt
, 
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
, 
Ál£
);

172 
	`‰amew‹k_›í_ouçut
 (
‰amew‹k
);

174 i‡(
NULL
 !
‰amew‹k
->
‰amew‹k_›í
) {

175 
ªt
 = 
‰amew‹k
->
	`‰amew‹k_›í
 (
Êags
);

177 
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_comp⁄íts_›í
 (
‰amew‹k
, 
Êags
);

180 i‡(
PMIX_SUCCESS
 !
ªt
) {

181 
‰amew‹k
->
‰amew‹k_ªf˙t
--;

183 
‰amew‹k
->
‰amew‹k_Êags
 |
PMIX_MCA_BASE_FRAMEWORK_FLAG_OPEN
;

186  
ªt
;

187 
	}
}

189 
	$pmix_mˇ_ba£_‰amew‹k_˛o£
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
) {

190 
boﬁ
 
is_›í
 = 
	`pmix_mˇ_ba£_‰amew‹k_is_›í
 (
‰amew‹k
);

191 
boﬁ
 
is_ªgi°îed
 = 
	`pmix_mˇ_ba£_‰amew‹k_is_ªgi°îed
 (
‰amew‹k
);

192 
ªt
, 
group_id
;

194 
	`as£π
 (
NULL
 !
‰amew‹k
);

196 i‡(!(
is_›í
 || 
is_ªgi°îed
)) {

197  
PMIX_SUCCESS
;

200 
	`as£π
 (
‰amew‹k
->
‰amew‹k_ªf˙t
);

201 i‡(--
‰amew‹k
->
‰amew‹k_ªf˙t
) {

202  
PMIX_SUCCESS
;

206 
group_id
 = 
	`pmix_mˇ_ba£_v¨_group_föd
 (
‰amew‹k
->
‰amew‹k_¥oje˘
,

207 
‰amew‹k
->
‰amew‹k_«me
, 
NULL
);

208 i‡(0 <
group_id
) {

209 (Ë
	`pmix_mˇ_ba£_v¨_group_dîegi°î
 (
group_id
);

213 i‡(
is_›í
) {

214 i‡(
NULL
 !
‰amew‹k
->
‰amew‹k_˛o£
) {

215 
ªt
 = 
‰amew‹k
->
	`‰amew‹k_˛o£
 ();

217 
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_comp⁄íts_˛o£
 (
‰amew‹k
, 
NULL
);

220 i‡(
PMIX_SUCCESS
 !
ªt
) {

221  
ªt
;

224 
pmix_li°_ôem_t
 *
ôem
;

225 
NULL
 !(
ôem
 = 
	`pmix_li°_ªmove_fú°
 (&
‰amew‹k
->
‰amew‹k_comp⁄íts
))) {

226 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
;

227 
˛i
 = (
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
*Ë
ôem
;

228 
	`pmix_mˇ_ba£_comp⁄ít_u∆ﬂd
(
˛i
->
˛i_comp⁄ít
,

229 
‰amew‹k
->
‰amew‹k_ouçut
);

230 
	`PMIX_RELEASE
(
ôem
);

232 
ªt
 = 
PMIX_SUCCESS
;

235 
‰amew‹k
->
‰amew‹k_Êags
 &~(
PMIX_MCA_BASE_FRAMEWORK_FLAG_REGISTERED
 | 
PMIX_MCA_BASE_FRAMEWORK_FLAG_OPEN
);

237 
	`PMIX_DESTRUCT
(&
‰amew‹k
->
‰amew‹k_comp⁄íts
);

239 
	`‰amew‹k_˛o£_ouçut
 (
‰amew‹k
);

241  
ªt
;

242 
	}
}

	@mca/base/pmix_mca_base_framework.h

13 #i‡!
deföed
(
PMIX_MCA_BASE_FRAMEWORK_H
)

14 
	#PMIX_MCA_BASE_FRAMEWORK_H


	)

15 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~"§c/mˇ/mˇ.h
"

18 
	~"§c/˛ass/pmix_li°.h
"

23 
	epmix_mˇ_ba£_ªgi°î_Êag_t
 {

24 
	mPMIX_MCA_BASE_REGISTER_DEFAULT
 = 0,

26 
	mPMIX_MCA_BASE_REGISTER_ALL
 = 1,

28 
	mPMIX_MCA_BASE_REGISTER_STATIC_ONLY
 = 2

31 
pmix_mˇ_ba£_ªgi°î_Êag_t
 
	tpmix_mˇ_ba£_ªgi°î_Êag_t
;

33 
	epmix_mˇ_ba£_›í_Êag_t
 {

34 
	mPMIX_MCA_BASE_OPEN_DEFAULT
 = 0,

38 
	mPMIX_MCA_BASE_OPEN_FIND_COMPONENTS
 = 1,

40 
	mPMIX_MCA_BASE_OPEN_STATIC_ONLY
 = 2,

43 
pmix_mˇ_ba£_›í_Êag_t
 
	tpmix_mˇ_ba£_›í_Êag_t
;

60 (*
	tpmix_mˇ_ba£_‰amew‹k_ªgi°î_∑øms_‚_t
Ë(
	tpmix_mˇ_ba£_ªgi°î_Êag_t
 
	tÊags
);

91 (*
	tpmix_mˇ_ba£_‰amew‹k_›í_‚_t
Ë(
	tpmix_mˇ_ba£_›í_Êag_t
 
	tÊags
);

111 (*
	tpmix_mˇ_ba£_‰amew‹k_˛o£_‚_t
) ();

114 
PMIX_MCA_BASE_FRAMEWORK_FLAG_DEFAULT
 = 0,

116 
PMIX_MCA_BASE_FRAMEWORK_FLAG_NOREGISTER
 = 1,

118 
PMIX_MCA_BASE_FRAMEWORK_FLAG_REGISTERED
 = 2,

120 
PMIX_MCA_BASE_FRAMEWORK_FLAG_NO_DSO
 = 4,

122 
PMIX_MCA_BASE_FRAMEWORK_FLAG_OPEN
 = 8,

126 } 
	tpmix_mˇ_ba£_‰amew‹k_Êags_t
;

128 
	spmix_mˇ_ba£_‰amew‹k_t
 {

130 *
‰amew‹k_¥oje˘
;

132 *
‰amew‹k_«me
;

134 c⁄° *
‰amew‹k_des¸ùti⁄
;

137 
pmix_mˇ_ba£_‰amew‹k_ªgi°î_∑øms_‚_t
 
‰amew‹k_ªgi°î
;

139 
pmix_mˇ_ba£_‰amew‹k_›í_‚_t
 
‰amew‹k_›í
;

141 
pmix_mˇ_ba£_‰amew‹k_˛o£_‚_t
 
‰amew‹k_˛o£
;

143 
pmix_mˇ_ba£_‰amew‹k_Êags_t
 
‰amew‹k_Êags
;

145 
‰amew‹k_ªf˙t
;

147 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 **
‰amew‹k_°©ic_comp⁄íts
;

151 *
‰amew‹k_£À˘i⁄
;

153 
‰amew‹k_vîbo£
;

155 
‰amew‹k_ouçut
;

158 
pmix_li°_t
 
‰amew‹k_comp⁄íts
;

159 } 
	tpmix_mˇ_ba£_‰amew‹k_t
;

172 
	`pmix_mˇ_ba£_‰amew‹k_ªgi°î
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

173 
pmix_mˇ_ba£_ªgi°î_Êag_t
 
Êags
);

185 
	`pmix_mˇ_ba£_‰amew‹k_›í
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

186 
pmix_mˇ_ba£_›í_Êag_t
 
Êags
);

198 
	`pmix_mˇ_ba£_‰amew‹k_˛o£
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
);

209 
boﬁ
 
	`pmix_mˇ_ba£_‰amew‹k_is_ªgi°îed
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
);

220 
boﬁ
 
	`pmix_mˇ_ba£_‰amew‹k_is_›í
 (
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
);

229 
	#PMIX_MCA_BASE_FRAMEWORK_DECLARE
(
¥oje˘
, 
«me
, 
des¸ùti⁄
, 
ªgi°î‚
, 
›í‚
, 
˛o£‚
, 
°©ic_comp⁄íts
, 
Êags
) \

230 
pmix_mˇ_ba£_‰amew‹k_t
 
¥oje˘
##
_
##
«me
##
_ba£_‰amew‹k
 = { \

231 .
‰amew‹k_¥oje˘
 = #project, \

232 .
‰amew‹k_«me
 = #name, \

233 .
‰amew‹k_des¸ùti⁄
 = 
des¸ùti⁄
, \

234 .
‰amew‹k_ªgi°î
 = 
ªgi°î‚
, \

235 .
‰amew‹k_›í
 = 
›í‚
, \

236 .
‰amew‹k_˛o£
 = 
˛o£‚
, \

237 .
‰amew‹k_Êags
 = 
Êags
, \

238 .
‰amew‹k_ªf˙t
 = 0, \

239 .
‰amew‹k_°©ic_comp⁄íts
 = 
°©ic_comp⁄íts
, \

240 .
‰amew‹k_£À˘i⁄
 = 
NULL
, \

241 .
‰amew‹k_vîbo£
 = 0, \

242 .
‰amew‹k_ouçut
 = -1
	}

	)
}

	@mca/base/pmix_mca_base_list.c

20 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

22 
	~"§c/˛ass/pmix_li°.h
"

23 
	~"§c/mˇ/ba£/ba£.h
"

29 
˛_c⁄°ru˘‹
(
pmix_obje˘_t
 *
obj
);

30 
˝l_c⁄°ru˘‹
(
pmix_obje˘_t
 *
obj
);

36 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
,

37 
pmix_li°_ôem_t
, 
˛_c⁄°ru˘‹
, 
NULL
);

43 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
,

44 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
, 
˝l_c⁄°ru˘‹
, 
NULL
);

50 
	$˛_c⁄°ru˘‹
(
pmix_obje˘_t
 *
obj
)

52 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
˛i
 = (pmix_mˇ_ba£_comp⁄ít_li°_ôem_à*Ë
obj
;

53 
˛i
->
˛i_comp⁄ít
 = 
NULL
;

54 
	}
}

60 
	$˝l_c⁄°ru˘‹
(
pmix_obje˘_t
 *
obj
)

62 
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
 *
˝li
 =

63 (
pmix_mˇ_ba£_comp⁄ít_¥i‹ôy_li°_ôem_t
 *Ë
obj
;

64 
˝li
->
˝li_¥i‹ôy
 = -1;

65 
	}
}

	@mca/base/pmix_mca_base_open.c

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 #ifde‡
HAVE_SYSLOG_H


29 
	~<sy¶og.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

35 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

36 
	~"§c/utû/ouçut.h
"

37 
	~"§c/utû/¥ötf.h
"

38 
	~"§c/mˇ/mˇ.h
"

39 
	~"§c/mˇ/ba£/ba£.h
"

40 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_comp⁄ít_ªposô‹y.h
"

41 
	~"pmix_comm⁄.h
"

42 
	~"§c/utû/pmix_ívú⁄.h
"

47 *
	gpmix_mˇ_ba£_comp⁄ít_∑th
 = 
NULL
;

48 
	gpmix_mˇ_ba£_›íed
 = 0;

49 *
	gpmix_mˇ_ba£_sy°em_deÁu…_∑th
 = 
NULL
;

50 *
	gpmix_mˇ_ba£_u£r_deÁu…_∑th
 = 
NULL
;

51 
boﬁ
 
	gpmix_mˇ_ba£_comp⁄ít_show_lﬂd_îr‹s
 = 
åue
;

52 
boﬁ
 
	gpmix_mˇ_ba£_comp⁄ít_dißbÀ_dl›í
 = 
Ál£
;

54 *
	gpmix_mˇ_ba£_vîbo£
 = 
NULL
;

59 
£t_deÁu…s
(
pmix_ouçut_°ªam_t
 *
lds
);

60 
∑r£_vîbo£
(*
e
, 
pmix_ouçut_°ªam_t
 *
lds
);

66 
	$pmix_mˇ_ba£_›í
()

68 *
vÆue
;

69 
pmix_ouçut_°ªam_t
 
lds
;

70 
ho°«me
[64];

71 
v¨_id
;

73 i‡(
pmix_mˇ_ba£_›íed
++) {

74  
PMIX_SUCCESS
;

78 #i‡
PMIX_WANT_HOME_CONFIG_FILES


79 
pmix_mˇ_ba£_sy°em_deÁu…_∑th
 = 
	`°rdup
(
pmix_pö°Æl_dús
.
pmixlibdú
);

80 
	`a•rötf
(&
pmix_mˇ_ba£_u£r_deÁu…_∑th
, "%s"
PMIX_PATH_SEP
".pmix"PMIX_PATH_SEP"comp⁄íts", 
	`pmix_home_dúe˘‹y
());

82 
	`a•rötf
(&
pmix_mˇ_ba£_sy°em_deÁu…_∑th
, "%s", 
pmix_pö°Æl_dús
.
pmixlibdú
);

86 i‡(
NULL
 =
pmix_mˇ_ba£_u£r_deÁu…_∑th
) {

87 
vÆue
 = 
	`°rdup
(
pmix_mˇ_ba£_sy°em_deÁu…_∑th
);

89 
	`a•rötf
(&
vÆue
, "%s%c%s", 
pmix_mˇ_ba£_sy°em_deÁu…_∑th
,

90 
PMIX_ENV_SEP
, 
pmix_mˇ_ba£_u£r_deÁu…_∑th
);

93 
pmix_mˇ_ba£_comp⁄ít_∑th
 = 
vÆue
;

94 
v¨_id
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
("pmix", "mca", "base", "component_path",

96 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0,

97 
PMIX_INFO_LVL_9
,

98 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
,

99 &
pmix_mˇ_ba£_comp⁄ít_∑th
);

100 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î_syn⁄ym
(
v¨_id
, "pmix", "mˇ", 
NULL
, "component_path",

101 
PMIX_MCA_BASE_VAR_SYN_FLAG_DEPRECATED
);

102 
	`‰ì
(
vÆue
);

104 
pmix_mˇ_ba£_comp⁄ít_show_lﬂd_îr‹s
 = 
åue
;

105 
v¨_id
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
("pmix", "mca", "base", "component_show_load_errors",

107 
PMIX_MCA_BASE_VAR_TYPE_BOOL
, 
NULL
, 0, 0,

108 
PMIX_INFO_LVL_9
,

109 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
,

110 &
pmix_mˇ_ba£_comp⁄ít_show_lﬂd_îr‹s
);

111 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î_syn⁄ym
(
v¨_id
, "pmix", "mˇ", 
NULL
, "component_show_load_errors",

112 
PMIX_MCA_BASE_VAR_SYN_FLAG_DEPRECATED
);

114 
pmix_mˇ_ba£_comp⁄ít_dißbÀ_dl›í
 = 
Ál£
;

115 
v¨_id
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
("pmix", "mca", "base", "component_disable_dlopen",

117 
PMIX_MCA_BASE_VAR_TYPE_BOOL
, 
NULL
, 0, 0,

118 
PMIX_INFO_LVL_9
,

119 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
,

120 &
pmix_mˇ_ba£_comp⁄ít_dißbÀ_dl›í
);

121 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î_syn⁄ym
(
v¨_id
, "pmix", "mˇ", 
NULL
, "component_disable_dlopen",

122 
PMIX_MCA_BASE_VAR_SYN_FLAG_DEPRECATED
);

125 
pmix_mˇ_ba£_vîbo£
 = "stderr";

126 
v¨_id
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
("pmix", "mca", "base", "verbose",

128 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0,

129 
PMIX_INFO_LVL_9
,

130 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
,

131 &
pmix_mˇ_ba£_vîbo£
);

132 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î_syn⁄ym
(
v¨_id
, "pmix", "mˇ", 
NULL
, "verbose",

133 
PMIX_MCA_BASE_VAR_SYN_FLAG_DEPRECATED
);

135 
	`mem£t
(&
lds
, 0, (lds));

136 i‡(
NULL
 !
pmix_mˇ_ba£_vîbo£
) {

137 
	`∑r£_vîbo£
(
pmix_mˇ_ba£_vîbo£
, &
lds
);

139 
	`£t_deÁu…s
(&
lds
);

141 
	`gëho°«me
(
ho°«me
, 64);

142 
	`a•rötf
(&
lds
.
lds_¥efix
, "[%s:%05d] ", 
ho°«me
, 
	`gëpid
());

143 
	`pmix_ouçut_ª›í
(0, &
lds
);

144 
	`pmix_ouçut_vîbo£
 (
PMIX_MCA_BASE_VERBOSE_COMPONENT
, 0,

145 "mˇ: ba£: o≥nög comp⁄ít†© %s", 
pmix_mˇ_ba£_comp⁄ít_∑th
);

146 
	`‰ì
(
lds
.
lds_¥efix
);

150  
	`pmix_mˇ_ba£_comp⁄ít_ªposô‹y_öô
();

151 
	}
}

157 
	$£t_deÁu…s
(
pmix_ouçut_°ªam_t
 *
lds
)

162 
	`PMIX_CONSTRUCT
(
lds
, 
pmix_ouçut_°ªam_t
);

163 
lds
->
lds_sy¶og_¥i‹ôy
 = 
LOG_INFO
;

164 
lds
->
lds_sy¶og_idít
 = "ompi";

165 
lds
->
lds_w™t_°dîr
 = 
åue
;

166 
	}
}

172 
	$∑r£_vîbo£
(*
e
, 
pmix_ouçut_°ªam_t
 *
lds
)

174 *
edup
;

175 *
±r
, *
√xt
;

176 
boﬁ
 
have_ouçut
 = 
Ál£
;

178 i‡(
NULL
 =
e
) {

182 
edup
 = 
	`°rdup
(
e
);

183 
±r
 = 
edup
;

187 
NULL
 !
±r
 && 
	`°æí
(ptr) > 0) {

188 
√xt
 = 
	`°rchr
(
±r
, ',');

189 i‡(
NULL
 !
√xt
) {

190 *
√xt
 = '\0';

193 i‡(0 =
	`°rˇ£cmp
(
±r
, "syslog")) {

194 
lds
->
lds_w™t_sy¶og
 = 
åue
;

195 
have_ouçut
 = 
åue
;

197 i‡(
	`°∫ˇ£cmp
(
±r
, "syslogpri:", 10) == 0) {

198 
lds
->
lds_w™t_sy¶og
 = 
åue
;

199 
have_ouçut
 = 
åue
;

200 i‡(
	`°rˇ£cmp
(
±r
 + 10, "notice") == 0)

201 
lds
->
lds_sy¶og_¥i‹ôy
 = 
LOG_NOTICE
;

202 i‡(
	`°rˇ£cmp
(
±r
 + 10, "INFO") == 0)

203 
lds
->
lds_sy¶og_¥i‹ôy
 = 
LOG_INFO
;

204 i‡(
	`°rˇ£cmp
(
±r
 + 10, "DEBUG") == 0)

205 
lds
->
lds_sy¶og_¥i‹ôy
 = 
LOG_DEBUG
;

206 } i‡(
	`°∫ˇ£cmp
(
±r
, "syslogid:", 9) == 0) {

207 
lds
->
lds_w™t_sy¶og
 = 
åue
;

208 
lds
->
lds_sy¶og_idít
 = 
±r
 + 9;

211 i‡(
	`°rˇ£cmp
(
±r
, "stdout") == 0) {

212 
lds
->
lds_w™t_°dout
 = 
åue
;

213 
have_ouçut
 = 
åue
;

214 } i‡(
	`°rˇ£cmp
(
±r
, "stderr") == 0) {

215 
lds
->
lds_w™t_°dîr
 = 
åue
;

216 
have_ouçut
 = 
åue
;

219 i‡(
	`°rˇ£cmp
(
±r
, "file") == 0) {

220 
lds
->
lds_w™t_fûe
 = 
åue
;

221 
have_ouçut
 = 
åue
;

222 } i‡(
	`°∫ˇ£cmp
(
±r
, "file:", 5) == 0) {

223 
lds
->
lds_w™t_fûe
 = 
åue
;

224 
lds
->
lds_fûe_suffix
 = 
±r
 + 5;

225 
have_ouçut
 = 
åue
;

226 } i‡(
	`°rˇ£cmp
(
±r
, "fileappend") == 0) {

227 
lds
->
lds_w™t_fûe
 = 
åue
;

228 
lds
->
lds_w™t_fûe_≠≥nd
 = 1;

229 
have_ouçut
 = 
åue
;

232 i‡(
	`°∫ˇ£cmp
(
±r
, "level", 5) == 0) {

233 
lds
->
lds_vîbo£_Àvñ
 = 0;

234 i‡(
±r
[5] =
PMIX_ENV_SEP
)

235 
lds
->
lds_vîbo£_Àvñ
 = 
	`©oi
(
±r
 + 6);

238 i‡(
NULL
 =
√xt
) {

241 
±r
 = 
√xt
 + 1;

246 i‡(!
have_ouçut
) {

247 
lds
->
lds_w™t_°dîr
 = 
åue
;

252 
	`‰ì
(
edup
);

253 
	}
}

	@mca/base/pmix_mca_base_parse_paramfile.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<°dio.h
>

26 
	~<°rög.h
>

28 
	~"§c/˛ass/pmix_li°.h
"

29 
	~"§c/mˇ/mˇ.h
"

30 
	~"§c/mˇ/ba£/ba£.h
"

31 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨i.h
"

32 
	~"§c/utû/keyvÆ_∑r£.h
"

34 
ßve_vÆue
(c⁄° *
«me
, c⁄° *
vÆue
);

36 * 
	gfûe_beög_ªad
;

37 
pmix_li°_t
 * 
	g_∑øm_li°
;

39 
	$pmix_mˇ_ba£_∑r£_∑ømfûe
(c⁄° *
∑ømfûe
, 
pmix_li°_t
 *
li°
)

41 
fûe_beög_ªad
 = (*)
∑ømfûe
;

42 
_∑øm_li°
 = 
li°
;

44  
	`pmix_utû_keyvÆ_∑r£
(
∑ømfûe
, 
ßve_vÆue
);

45 
	}
}

47 
	$pmix_mˇ_ba£_öã∫Æ_ív_°‹e
()

49  
	`pmix_utû_keyvÆ_ßve_öã∫Æ_ív¨s
(
ßve_vÆue
);

50 
	}
}

52 
	$ßve_vÆue
(c⁄° *
«me
, c⁄° *
vÆue
)

54 
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
fv
;

55 
boﬁ
 
found
 = 
Ál£
;

61 
	`PMIX_LIST_FOREACH
(
fv
, 
_∑øm_li°
, 
pmix_mˇ_ba£_v¨_fûe_vÆue_t
) {

62 i‡(0 =
	`°rcmp
(
«me
, 
fv
->
mbvfv_v¨
)) {

63 i‡(
NULL
 !
fv
->
mbvfv_vÆue
) {

64 
	`‰ì
 (
fv
->
mbvfv_vÆue
);

66 
found
 = 
åue
;

71 i‡(!
found
) {

73 
fv
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_v¨_fûe_vÆue_t
);

74 i‡(
NULL
 =
fv
) {

78 
fv
->
mbvfv_v¨
 = 
	`°rdup
(
«me
);

79 
	`pmix_li°_≠≥nd
(
_∑øm_li°
, &
fv
->
su≥r
);

82 
fv
->
mbvfv_vÆue
 = 
vÆue
 ? 
	`°rdup
(vÆueË: 
NULL
;

83 
fv
->
mbvfv_fûe
 = 
fûe_beög_ªad
;

84 
fv
->
mbvfv_löío
 = 
pmix_utû_keyvÆ_∑r£_löío
;

85 
	}
}

	@mca/base/pmix_mca_base_var.c

26 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 
	~<°dio.h
>

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_PARAM_H


35 
	~<sys/∑øm.h
>

37 
	~<î∫o.h
>

39 
	~"§c/ö˛ude/pmix_°döt.h
"

40 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

41 
	~"§c/utû/os_∑th.h
"

42 
	~"§c/utû/∑th.h
"

43 
	~"§c/utû/show_hñp.h
"

44 
	~"§c/utû/¥ötf.h
"

45 
	~"§c/utû/¨gv.h
"

46 
	~"§c/utû/îr‹.h
"

47 
	~"§c/mˇ/mˇ.h
"

48 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨i.h
"

49 
	~"pmix_comm⁄.h
"

50 
	~"§c/utû/ouçut.h
"

51 
	~"§c/utû/pmix_ívú⁄.h
"

56 
pmix_poöãr_¨øy_t
 
	gpmix_mˇ_ba£_v¨s
;

57 c⁄° *
	gmˇ_¥efix
 = "PMIX_MCA_";

58 *
	ghome
 = 
NULL
;

59 *
	gcwd
 = 
NULL
;

60 
boﬁ
 
	gpmix_mˇ_ba£_v¨_öôülized
 = 
Ál£
;

61 * 
	gf‹˚_agg_∑th
 = 
NULL
;

62 *
	gpmix_mˇ_ba£_v¨_fûes
 = 
NULL
;

63 *
	gpmix_mˇ_ba£_ív¨_fûes
 = 
NULL
;

64 **
	gpmix_mˇ_ba£_v¨_fûe_li°
 = 
NULL
;

65 *
	gpmix_mˇ_ba£_v¨_ovîride_fûe
 = 
NULL
;

66 *
	gpmix_mˇ_ba£_v¨_fûe_¥efix
 = 
NULL
;

67 *
	gpmix_mˇ_ba£_ív¨_fûe_¥efix
 = 
NULL
;

68 *
	gpmix_mˇ_ba£_∑øm_fûe_∑th
 = 
NULL
;

69 *
	gpmix_mˇ_ba£_ív_li°
 = 
NULL
;

70 
	#PMIX_MCA_BASE_ENV_LIST_SEP_DEFAULT
 ";"

	)

71 *
	gpmix_mˇ_ba£_ív_li°_£p
 = 
PMIX_MCA_BASE_ENV_LIST_SEP_DEFAULT
;

72 *
	gpmix_mˇ_ba£_ív_li°_öã∫Æ
 = 
NULL
;

73 
boﬁ
 
	gpmix_mˇ_ba£_v¨_suµªss_ovîride_w¨nög
 = 
Ál£
;

74 
pmix_li°_t
 
	gpmix_mˇ_ba£_v¨_fûe_vÆues
;

75 
pmix_li°_t
 
	gpmix_mˇ_ba£_ív¨_fûe_vÆues
;

76 
pmix_li°_t
 
	gpmix_mˇ_ba£_v¨_ovîride_vÆues
;

78 
	gpmix_mˇ_ba£_v¨_cou¡
 = 0;

80 
pmix_hash_èbÀ_t
 
	gpmix_mˇ_ba£_v¨_ödex_hash
;

82 c⁄° *
	gpmix_v¨_ty≥_«mes
[] = {

94 c⁄° 
size_t
 
	gpmix_v¨_ty≥_sizes
[] = {

99  (
size_t
),

102  (
boﬁ
),

106 c⁄° *
	gpmix_v¨_sour˚_«mes
[] = {

116 c⁄° *
	göfo_lvl_°rögs
[] = {

131 
fixup_fûes
(**
fûe_li°
, * 
∑th
, 
boﬁ
 
ªl_∑th_£¨ch
, 
£p
);

132 
ªad_fûes
 (*
fûe_li°
, 
pmix_li°_t
 *
fûe_vÆues
, 
£p
);

133 
v¨_£t_öôül
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
,Ömix_mˇ_ba£_v¨_à*
‹igöÆ
);

134 
v¨_gë
 (
v¨i
, 
pmix_mˇ_ba£_v¨_t
 **
v¨_out
, 
boﬁ
 
‹igöÆ
);

135 
v¨_vÆue_°rög
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
, **
vÆue_°rög
);

140 
v¨_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_t
 *
p
);

141 
v¨_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_t
 *
p
);

142 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_v¨_t
, 
pmix_obje˘_t
,

143 
v¨_c⁄°ru˘‹
, 
v¨_de°ru˘‹
);

145 
fv_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
p
);

146 
fv_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
p
);

147 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_v¨_fûe_vÆue_t
, 
pmix_li°_ôem_t
,

148 
fv_c⁄°ru˘‹
, 
fv_de°ru˘‹
);

150 c⁄° *
	$pmix_mˇ_ba£_v¨_sour˚_fûe
 (c⁄° 
pmix_mˇ_ba£_v¨_t
 *
v¨
)

152 
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
fv
 = (pmix_mˇ_ba£_v¨_fûe_vÆue_à*Ë
v¨
->
mbv_fûe_vÆue
;

154 i‡(
NULL
 !
v¨
->
mbv_sour˚_fûe
) {

155  
v¨
->
mbv_sour˚_fûe
;

158 i‡(
fv
) {

159  
fv
->
mbvfv_fûe
;

162  
NULL
;

163 
	}
}

168 
	$pmix_mˇ_ba£_v¨_gíî©e_fuŒ_«me4
 (c⁄° *
¥oje˘
, c⁄° *
‰amew‹k
, c⁄° *
comp⁄ít
,

169 c⁄° *
v¨übÀ
, **
fuŒ_«me
)

171 c⁄° * c⁄° 
«mes
[] = {
¥oje˘
, 
‰amew‹k
, 
comp⁄ít
, 
v¨übÀ
};

172 *
«me
, *
tmp
;

173 
size_t
 
i
, 
Àn
;

175 *
fuŒ_«me
 = 
NULL
;

177 
i
 = 0, 
Àn
 = 0 ; i < 4 ; ++i) {

178 i‡(
NULL
 !
«mes
[
i
]) {

180 
Àn
 +
	`°æí
 (
«mes
[
i
]) + 1;

184 
«me
 = 
	`ˇŒoc
 (1, 
Àn
);

185 i‡(
NULL
 =
«me
) {

186  
PMIX_ERR_OUT_OF_RESOURCE
;

189 
i
 = 0, 
tmp
 = 
«me
 ; i < 4 ; ++i) {

190 i‡(
NULL
 !
«mes
[
i
]) {

191 i‡(
«me
 !
tmp
) {

192 *
tmp
++ = '_';

194 
	`°∫ˇt
 (
«me
, 
«mes
[
i
], 
Àn
 - (
size_t
)(
uöçå_t
)(
tmp
 -Çame));

195 
tmp
 +
	`°æí
 (
«mes
[
i
]);

199 *
fuŒ_«me
 = 
«me
;

200  
PMIX_SUCCESS
;

201 
	}
}

203 
	$com∑ª_°rögs
 (c⁄° *
°r1
, c⁄° *
°r2
) {

204 i‡((
NULL
 !
°r1
 && 0 =
	`°rcmp
 (str1, "*")) ||

205 (
NULL
 =
°r1
 && NULL =
°r2
)) {

209 i‡(
NULL
 !
°r1
 && NULL !
°r2
) {

210  
	`°rcmp
 (
°r1
, 
°r2
);

214 
	}
}

220 *
	$≠≥nd_fûíame_to_li°
(c⁄° *
fûíame
)

222 
i
, 
cou¡
;

224 (Ë
	`pmix_¨gv_≠≥nd_unique_nosize
(&
pmix_mˇ_ba£_v¨_fûe_li°
, 
fûíame
, 
Ál£
);

226 
cou¡
 = 
	`pmix_¨gv_cou¡
(
pmix_mˇ_ba£_v¨_fûe_li°
);

228 
i
 = 
cou¡
 - 1; i >= 0; --i) {

229 i‡(0 =
	`°rcmp
 (
pmix_mˇ_ba£_v¨_fûe_li°
[
i
], 
fûíame
)) {

230  
pmix_mˇ_ba£_v¨_fûe_li°
[
i
];

235  
NULL
;

236 
	}
}

241 
	$pmix_mˇ_ba£_v¨_öô
()

243 
ªt
;

244 *
«me
 = 
NULL
;

246 i‡(!
pmix_mˇ_ba£_v¨_öôülized
) {

249 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_v¨s
, 
pmix_poöãr_¨øy_t
);

251 
ªt
 = 
	`pmix_poöãr_¨øy_öô
 (&
pmix_mˇ_ba£_v¨s
, 128, 16384, 128);

252 i‡(
PMIX_SUCCESS
 !
ªt
) {

253  
ªt
;

256 
pmix_mˇ_ba£_v¨_cou¡
 = 0;

260 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_v¨_fûe_vÆues
, 
pmix_li°_t
);

261 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_ív¨_fûe_vÆues
, 
pmix_li°_t
);

262 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_v¨_ovîride_vÆues
, 
pmix_li°_t
);

263 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_v¨_ödex_hash
, 
pmix_hash_èbÀ_t
);

265 
ªt
 = 
	`pmix_hash_èbÀ_öô
 (&
pmix_mˇ_ba£_v¨_ödex_hash
, 1024);

266 i‡(
PMIX_SUCCESS
 !
ªt
) {

267  
ªt
;

270 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_öô
 ();

271 i‡(
PMIX_SUCCESS
 !
ªt
) {

272  
ªt
;

277 
pmix_mˇ_ba£_v¨_öôülized
 = 
åue
;

279 
	`pmix_mˇ_ba£_v¨_ˇche_fûes
(
Ál£
);

282 ()
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "env_list",

284 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_3
,

285 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
pmix_mˇ_ba£_ív_li°
);

287 
pmix_mˇ_ba£_ív_li°_£p
 = 
PMIX_MCA_BASE_ENV_LIST_SEP_DEFAULT
;

288 ()
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "env_list_delimiter",

290 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_3
,

291 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
pmix_mˇ_ba£_ív_li°_£p
);

298 i‡(
NULL
 !
pmix_mˇ_ba£_ív_li°
) {

299 (Ë
	`pmix_mˇ_ba£_v¨_ív_«me
 ("pmix_mˇ_ba£_ív_li°", &
«me
);

300 i‡(
NULL
 !
«me
) {

301 
	`pmix_£ãnv
(
«me
, 
pmix_mˇ_ba£_ív_li°
, 
Ál£
, &
ívú⁄
);

302 
	`‰ì
(
«me
);

310 ()
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "env_list_internal",

312 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 
PMIX_MCA_BASE_VAR_FLAG_INTERNAL
, 
PMIX_INFO_LVL_3
,

313 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
pmix_mˇ_ba£_ív_li°_öã∫Æ
);

316  
PMIX_SUCCESS
;

317 
	}
}

319 
	$¥o˚ss_ív_li°
(*
ív_li°
, ***
¨gv
, 
£p
)

321 ** 
tokís
;

322 *
±r
, *
vÆue
;

324 
tokís
 = 
	`pmix_¨gv_•lô
(
ív_li°
, ()
£p
);

325 i‡(
NULL
 =
tokís
) {

329 
i
 = 0 ; 
NULL
 !
tokís
[i] ; ++i) {

330 i‡(
NULL
 =(
±r
 = 
	`°rchr
(
tokís
[
i
], '='))) {

331 
vÆue
 = 
	`gëív
(
tokís
[
i
]);

332 i‡(
NULL
 =
vÆue
) {

333 
	`pmix_show_hñp
("help-mca-var.txt", "incorrect-env-list-param",

334 
åue
, 
tokís
[
i
], 
ív_li°
);

339 
vÆue
 = 
	`°rdup
 (value);

340 i‡(
NULL
 =
vÆue
) {

345 i‡(
NULL
 !(
±r
 = 
	`°rchr
(
vÆue
, '='))) {

346 *
±r
 = '\0';

347 
	`pmix_£ãnv
(
vÆue
, 
±r
 + 1, 
åue
, 
¨gv
);

349 
	`pmix_£ãnv
(
tokís
[
i
], 
vÆue
, 
åue
, 
¨gv
);

352 
	`‰ì
 (
vÆue
);

354 *
±r
 = '\0';

355 
	`pmix_£ãnv
(
tokís
[
i
], 
±r
 + 1, 
åue
, 
¨gv
);

360 
	`pmix_¨gv_‰ì
(
tokís
);

361 
	}
}

363 
	$pmix_mˇ_ba£_v¨_¥o˚ss_ív_li°
(***
¨gv
)

365 
£p
;

366 
£p
 = ';';

367 i‡(
NULL
 !
pmix_mˇ_ba£_ív_li°_£p
) {

368 i‡(1 =
	`°æí
(
pmix_mˇ_ba£_ív_li°_£p
)) {

369 
£p
 = 
pmix_mˇ_ba£_ív_li°_£p
[0];

371 
	`pmix_show_hñp
("help-mca-var.txt", "incorrect-env-list-sep",

372 
åue
, 
pmix_mˇ_ba£_ív_li°_£p
);

373  
PMIX_SUCCESS
;

376 i‡(
NULL
 !
pmix_mˇ_ba£_ív_li°
) {

377 
	`¥o˚ss_ív_li°
(
pmix_mˇ_ba£_ív_li°
, 
¨gv
, 
£p
);

380  
PMIX_SUCCESS
;

381 
	}
}

383 
	$pmix_mˇ_ba£_v¨_¥o˚ss_ív_li°_‰om_fûe
(***
¨gv
)

385 i‡(
NULL
 !
pmix_mˇ_ba£_ív_li°_öã∫Æ
) {

386 
	`¥o˚ss_ív_li°
(
pmix_mˇ_ba£_ív_li°_öã∫Æ
, 
¨gv
, ';');

388  
PMIX_SUCCESS
;

389 
	}
}

391 
	$ªsﬁve_ªœtive_∑ths
(**
fûe_¥efix
, *
fûe_∑th
, 
boﬁ
 
ªl_∑th_£¨ch
, **
fûes
, 
£p
)

393 *
tmp_°r
;

398 if–
PMIX_SUCCESS
 !
	`fixup_fûes
(
fûe_¥efix
, 
fûe_∑th
, 
ªl_∑th_£¨ch
, 
£p
) ) {

401 
	`ab‹t
();

408 
	`a•rötf
(&
tmp_°r
, "%s%c%s", *
fûe_¥efix
, 
£p
, *
fûes
);

409 
	`‰ì
 (*
fûes
);

410 *
fûes
 = 
tmp_°r
;

412 
	}
}

414 
	$pmix_mˇ_ba£_v¨_ˇche_fûes
(
boﬁ
 
ªl_∑th_£¨ch
)

416 *
tmp
;

417 
ªt
;

420 
home
 = (*)
	`pmix_home_dúe˘‹y
();

422 if(
NULL
 =
cwd
) {

423 
cwd
 = (*Ë
	`mÆloc
((Ë* 
MAXPATHLEN
);

424 if–
NULL
 =(
cwd
 = 
	`gëcwd
(cwd, 
MAXPATHLEN
) )) {

425 
	`pmix_ouçut
(0, "Error: UnableÅo getÅhe current working directory\n");

426 
cwd
 = 
	`°rdup
(".");

430 #i‡
PMIX_WANT_HOME_CONFIG_FILES


431 
	`a•rötf
(&
pmix_mˇ_ba£_v¨_fûes
, "%s"
PMIX_PATH_SEP
".pmix" PMIX_PATH_SEP

432 "mˇ-∑øms.c⁄f%c%s" 
PMIX_PATH_SEP
 "pmix-mca-params.conf",

433 
home
, 
PMIX_ENV_SEP
, 
pmix_pö°Æl_dús
.
sysc⁄fdú
);

435 
	`a•rötf
(&
pmix_mˇ_ba£_v¨_fûes
, "%s" 
PMIX_PATH_SEP
 "pmix-mca-params.conf",

436 
pmix_pö°Æl_dús
.
sysc⁄fdú
);

441 
tmp
 = 
pmix_mˇ_ba£_v¨_fûes
;

442 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "param_files", "Path for MCA "

444 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_2
,

445 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
pmix_mˇ_ba£_v¨_fûes
);

446 
	`‰ì
 (
tmp
);

447 i‡(
PMIX_SUCCESS
 !
ªt
) {

448  
ªt
;

451 
pmix_mˇ_ba£_ív¨_fûes
 = 
	`°rdup
(
pmix_mˇ_ba£_v¨_fûes
);

453 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î_syn⁄ym
 (
ªt
, "pmix", "mˇ", 
NULL
, "param_files",

454 
PMIX_MCA_BASE_VAR_SYN_FLAG_DEPRECATED
);

456 
ªt
 = 
	`a•rötf
(&
pmix_mˇ_ba£_v¨_ovîride_fûe
, "%s" 
PMIX_PATH_SEP
 "pmix-mca-params-override.conf",

457 
pmix_pö°Æl_dús
.
sysc⁄fdú
);

458 i‡(0 > 
ªt
) {

459  
PMIX_ERR_OUT_OF_RESOURCE
;

462 
tmp
 = 
pmix_mˇ_ba£_v¨_ovîride_fûe
;

463 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "override_param_file",

466 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 
PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
,

467 
PMIX_INFO_LVL_2
, 
PMIX_MCA_BASE_VAR_SCOPE_CONSTANT
,

468 &
pmix_mˇ_ba£_v¨_ovîride_fûe
);

469 
	`‰ì
 (
tmp
);

470 i‡(0 > 
ªt
) {

471  
ªt
;

475 i‡(0 =
	`°rcmp
 (
pmix_mˇ_ba£_v¨_fûes
, "none")) {

476  
PMIX_SUCCESS
;

479 
pmix_mˇ_ba£_v¨_suµªss_ovîride_w¨nög
 = 
Ál£
;

480 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "suppress_override_warning",

482 
PMIX_MCA_BASE_VAR_TYPE_BOOL
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_2
,

483 
PMIX_MCA_BASE_VAR_SCOPE_LOCAL
, &
pmix_mˇ_ba£_v¨_suµªss_ovîride_w¨nög
);

484 i‡(0 > 
ªt
) {

485  
ªt
;

492 
pmix_mˇ_ba£_v¨_fûe_¥efix
 = 
NULL
;

493 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "param_file_prefix",

495 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_3
,

496 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
pmix_mˇ_ba£_v¨_fûe_¥efix
);

497 i‡(0 > 
ªt
) {

498  
ªt
;

501 
pmix_mˇ_ba£_ív¨_fûe_¥efix
 = 
NULL
;

502 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "envar_file_prefix",

504 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_3
,

505 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
pmix_mˇ_ba£_ív¨_fûe_¥efix
);

506 i‡(0 > 
ªt
) {

507  
ªt
;

510 
ªt
 = 
	`a•rötf
(&
pmix_mˇ_ba£_∑øm_fûe_∑th
, "%s" 
PMIX_PATH_SEP
 "amca-param-sets%c%s",

511 
pmix_pö°Æl_dús
.
pmixd©adú
, 
PMIX_ENV_SEP
, 
cwd
);

512 i‡(0 > 
ªt
) {

513  
PMIX_ERR_OUT_OF_RESOURCE
;

516 
tmp
 = 
pmix_mˇ_ba£_∑øm_fûe_∑th
;

517 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "param_file_path",

519 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_3
,

520 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
pmix_mˇ_ba£_∑øm_fûe_∑th
);

521 
	`‰ì
 (
tmp
);

522 i‡(0 > 
ªt
) {

523  
ªt
;

526 
f‹˚_agg_∑th
 = 
NULL
;

527 
ªt
 = 
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "mca", "base", "param_file_path_force",

529 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0, 
PMIX_INFO_LVL_3
,

530 
PMIX_MCA_BASE_VAR_SCOPE_READONLY
, &
f‹˚_agg_∑th
);

531 i‡(0 > 
ªt
) {

532  
ªt
;

535 i‡(
NULL
 !
f‹˚_agg_∑th
) {

536 i‡(
NULL
 !
pmix_mˇ_ba£_∑øm_fûe_∑th
) {

537 *
tmp_°r
 = 
pmix_mˇ_ba£_∑øm_fûe_∑th
;

539 
	`a•rötf
(&
pmix_mˇ_ba£_∑øm_fûe_∑th
, "%s%c%s", 
f‹˚_agg_∑th
, 
PMIX_ENV_SEP
, 
tmp_°r
);

540 
	`‰ì
(
tmp_°r
);

542 
pmix_mˇ_ba£_∑øm_fûe_∑th
 = 
	`°rdup
(
f‹˚_agg_∑th
);

546 i‡(
NULL
 !
pmix_mˇ_ba£_v¨_fûe_¥efix
) {

547 
	`ªsﬁve_ªœtive_∑ths
(&
pmix_mˇ_ba£_v¨_fûe_¥efix
, 
pmix_mˇ_ba£_∑øm_fûe_∑th
, 
ªl_∑th_£¨ch
, &
pmix_mˇ_ba£_v¨_fûes
, 
PMIX_ENV_SEP
);

549 
	`ªad_fûes
 (
pmix_mˇ_ba£_v¨_fûes
, &
pmix_mˇ_ba£_v¨_fûe_vÆues
, 
PMIX_ENV_SEP
);

551 i‡(
NULL
 !
pmix_mˇ_ba£_ív¨_fûe_¥efix
) {

552 
	`ªsﬁve_ªœtive_∑ths
(&
pmix_mˇ_ba£_ív¨_fûe_¥efix
, 
pmix_mˇ_ba£_∑øm_fûe_∑th
, 
ªl_∑th_£¨ch
, &
pmix_mˇ_ba£_ív¨_fûes
, ',');

554 
	`ªad_fûes
 (
pmix_mˇ_ba£_ív¨_fûes
, &
pmix_mˇ_ba£_ív¨_fûe_vÆues
, ',');

556 i‡(0 =
	`ac˚ss
(
pmix_mˇ_ba£_v¨_ovîride_fûe
, 
F_OK
)) {

557 
	`ªad_fûes
 (
pmix_mˇ_ba£_v¨_ovîride_fûe
, &
pmix_mˇ_ba£_v¨_ovîride_vÆues
, 
PMIX_ENV_SEP
);

560  
PMIX_SUCCESS
;

561 
	}
}

566 
	$pmix_mˇ_ba£_v¨_gë_vÆue
 (
v¨i
, c⁄° *
vÆue
,

567 
pmix_mˇ_ba£_v¨_sour˚_t
 *
sour˚
,

568 c⁄° **
sour˚_fûe
)

570 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

571 **
tmp
 = (**Ë
vÆue
;

572 
ªt
;

574 
ªt
 = 
	`v¨_gë
 (
v¨i
, &
v¨
, 
åue
);

575 i‡(
PMIX_SUCCESS
 !
ªt
) {

576  
ªt
;

579 i‡(!
	`PMIX_VAR_IS_VALID
(
v¨
[0])) {

580  
PMIX_ERR_NOT_FOUND
;

583 i‡(
NULL
 !
vÆue
) {

586 *
tmp
 = 
v¨
->
mbv_°‹age
;

589 i‡(
NULL
 !
sour˚
) {

590 *
sour˚
 = 
v¨
->
mbv_sour˚
;

593 i‡(
NULL
 !
sour˚_fûe
) {

594 *
sour˚_fûe
 = 
	`pmix_mˇ_ba£_v¨_sour˚_fûe
 (
v¨
);

597  
PMIX_SUCCESS
;

598 
	}
}

600 
	$v¨_£t_°rög
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
, *
vÆue
)

602 *
tmp
;

603 
ªt
;

605 i‡(
NULL
 !
v¨
->
mbv_°‹age
->
°rögvÆ
) {

606 
	`‰ì
 (
v¨
->
mbv_°‹age
->
°rögvÆ
);

609 
v¨
->
mbv_°‹age
->
°rögvÆ
 = 
NULL
;

611 i‡(
NULL
 =
vÆue
 || 0 =
	`°æí
 (value)) {

612  
PMIX_SUCCESS
;

618 i‡(0 =
	`°∫cmp
 (
vÆue
, "~/", 2)) {

619 i‡(
NULL
 !
home
) {

620 
ªt
 = 
	`a•rötf
 (&
vÆue
, "%s/%s", 
home
, value + 2);

621 i‡(0 > 
ªt
) {

622  
PMIX_ERROR
;

625 
vÆue
 = 
	`°rdup
 (value + 2);

628 
vÆue
 = 
	`°rdup
 (value);

631 i‡(
NULL
 =
vÆue
) {

632  
PMIX_ERR_OUT_OF_RESOURCE
;

635 
NULL
 !(
tmp
 = 
	`°r°r
 (
vÆue
, ":~/"))) {

636 
tmp
[0] = '\0';

637 
tmp
 += 3;

639 
ªt
 = 
	`a•rötf
 (&
tmp
, "%s:%s%s%s", 
vÆue
,

640 
home
 ? homê: "", homê? "/" : "", 
tmp
);

642 
	`‰ì
 (
vÆue
);

644 i‡(0 > 
ªt
) {

645  
PMIX_ERR_OUT_OF_RESOURCE
;

648 
vÆue
 = 
tmp
;

651 
v¨
->
mbv_°‹age
->
°rögvÆ
 = 
vÆue
;

653  
PMIX_SUCCESS
;

654 
	}
}

656 
	$öt_‰om_°rög
(c⁄° *
§c
, 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
, 
uöt64_t
 *
vÆue_out
)

658 
uöt64_t
 
vÆue
;

659 
boﬁ
 
is_öt
;

660 *
tmp
;

662 i‡(
NULL
 =
§c
 || 0 =
	`°æí
 (src)) {

663 i‡(
NULL
 =
íumî©‹
) {

664 *
vÆue_out
 = 0;

667  
PMIX_SUCCESS
;

670 i‡(
íumî©‹
) {

671 
öt_vÆ
, 
ªt
;

672 
ªt
 = 
íumî©‹
->
	`vÆue_‰om_°rög
”numî©‹, 
§c
, &
öt_vÆ
);

673 i‡(
PMIX_SUCCESS
 !
ªt
) {

674  
ªt
;

676 *
vÆue_out
 = (
uöt64_t
Ë
öt_vÆ
;

678  
PMIX_SUCCESS
;

682 
vÆue
 = 
	`°πouŒ
 (
§c
, &
tmp
, 0);

683 i‡(
tmp
[0] == '\0') {

684 
is_öt
 = 
åue
;

686 
is_öt
 = 
Ál£
;

689 i‡(!
is_öt
 && 
tmp
 !
§c
) {

690 
tmp
[0]) {

693 
vÆue
 <<= 30;

697 
vÆue
 <<= 20;

701 
vÆue
 <<= 10;

708 *
vÆue_out
 = 
vÆue
;

710  
PMIX_SUCCESS
;

711 
	}
}

713 
	$v¨_£t_‰om_°rög
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
, *
§c
)

715 
pmix_mˇ_ba£_v¨_°‹age_t
 *
d°
 = 
v¨
->
mbv_°‹age
;

716 
uöt64_t
 
öt_vÆue
 = 0;

717 
ªt
;

719 
v¨
->
mbv_ty≥
) {

720 
PMIX_MCA_BASE_VAR_TYPE_INT
:

721 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_INT
:

722 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG
:

723 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG_LONG
:

724 
PMIX_MCA_BASE_VAR_TYPE_BOOL
:

725 
PMIX_MCA_BASE_VAR_TYPE_SIZE_T
:

726 
ªt
 = 
	`öt_‰om_°rög
(
§c
, 
v¨
->
mbv_íumî©‹
, &
öt_vÆue
);

727 i‡(
PMIX_ERR_VALUE_OUT_OF_BOUNDS
 =
ªt
 ||

728 (
PMIX_MCA_BASE_VAR_TYPE_INT
 =
v¨
->
mbv_ty≥
 && ((Ë
öt_vÆue
 !(
öt64_t
) int_value)) ||

729 (
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_INT
 =
v¨
->
mbv_ty≥
 && ((Ë
öt_vÆue
 != int_value))) {

730 i‡(
v¨
->
mbv_íumî©‹
) {

731 *
vÆid_vÆues
;

732 (Ë
v¨
->
mbv_íumî©‹
->
	`dump
(v¨->mbv_íumî©‹, &
vÆid_vÆues
);

733 
	`pmix_show_hñp
("help-mca-var.txt", "invalid-value-enum",

734 
åue
, 
v¨
->
mbv_fuŒ_«me
, 
§c
, 
vÆid_vÆues
);

735 
	`‰ì
(
vÆid_vÆues
);

737 
	`pmix_show_hñp
("help-mca-var.txt", "invalid-value",

738 
åue
, 
v¨
->
mbv_fuŒ_«me
, 
§c
);

741  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

744 i‡(
PMIX_MCA_BASE_VAR_TYPE_INT
 =
v¨
->
mbv_ty≥
 ||

745 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_INT
 =
v¨
->
mbv_ty≥
) {

746 *
ˇ°me
 = (*Ë
v¨
->
mbv_°‹age
;

747 *
ˇ°me
 = 
öt_vÆue
;

748 } i‡(
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG
 =
v¨
->
mbv_ty≥
) {

749 *
ˇ°me
 = (*Ë
v¨
->
mbv_°‹age
;

750 *
ˇ°me
 = (Ë
öt_vÆue
;

751 } i‡(
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG_LONG
 =
v¨
->
mbv_ty≥
) {

752 *
ˇ°me
 = (*Ë
v¨
->
mbv_°‹age
;

753 *
ˇ°me
 = (Ë
öt_vÆue
;

754 } i‡(
PMIX_MCA_BASE_VAR_TYPE_SIZE_T
 =
v¨
->
mbv_ty≥
) {

755 
size_t
 *
ˇ°me
 = (size_t*Ë
v¨
->
mbv_°‹age
;

756 *
ˇ°me
 = (
size_t
Ë
öt_vÆue
;

757 } i‡(
PMIX_MCA_BASE_VAR_TYPE_BOOL
 =
v¨
->
mbv_ty≥
) {

758 
boﬁ
 *
ˇ°me
 = (boﬁ*Ë
v¨
->
mbv_°‹age
;

759 *
ˇ°me
 = !!
öt_vÆue
;

762  
ªt
;

763 
PMIX_MCA_BASE_VAR_TYPE_DOUBLE
:

764 
d°
->
lfvÆ
 = 
	`°πod
 (
§c
, 
NULL
);

766 
PMIX_MCA_BASE_VAR_TYPE_STRING
:

767 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
:

768 
	`v¨_£t_°rög
 (
v¨
, 
§c
);

770 
PMIX_MCA_BASE_VAR_TYPE_MAX
:

771  
PMIX_ERROR
;

774  
PMIX_SUCCESS
;

775 
	}
}

780 
	$pmix_mˇ_ba£_v¨_£t_vÆue
 (
v¨i
, c⁄° *
vÆue
, 
size_t
 
size
, 
pmix_mˇ_ba£_v¨_sour˚_t
 
sour˚
,

781 c⁄° *
sour˚_fûe
)

783 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

784 
ªt
;

786 
ªt
 = 
	`v¨_gë
 (
v¨i
, &
v¨
, 
åue
);

787 i‡(
PMIX_SUCCESS
 !
ªt
) {

788  
ªt
;

791 i‡(!
	`PMIX_VAR_IS_VALID
(
v¨
[0])) {

792  
PMIX_ERR_BAD_PARAM
;

795 i‡(!
	`PMIX_VAR_IS_SETTABLE
(
v¨
[0])) {

796  
PMIX_ERR_PERM
;

799 i‡(
NULL
 !
v¨
->
mbv_íumî©‹
) {

801 
ªt
 = 
v¨
->
mbv_íumî©‹
->
	`°rög_‰om_vÆue
(var->mbv_enumerator,

802 ((*Ë
vÆue
)[0], 
NULL
);

803 i‡(
PMIX_SUCCESS
 !
ªt
) {

804  
ªt
;

808 i‡(
PMIX_MCA_BASE_VAR_TYPE_STRING
 !
v¨
->
mbv_ty≥
 && 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
 != var->mbv_type) {

809 
	`memmove
 (
v¨
->
mbv_°‹age
, 
vÆue
, 
pmix_v¨_ty≥_sizes
[v¨->
mbv_ty≥
]);

811 
	`v¨_£t_°rög
 (
v¨
, (*Ë
vÆue
);

814 
v¨
->
mbv_sour˚
 = 
sour˚
;

816 i‡(
PMIX_MCA_BASE_VAR_SOURCE_FILE
 =
sour˚
 && 
NULL
 !
sour˚_fûe
) {

817 
v¨
->
mbv_fûe_vÆue
 = 
NULL
;

818 
v¨
->
mbv_sour˚_fûe
 = 
	`≠≥nd_fûíame_to_li°
(
sour˚_fûe
);

821  
PMIX_SUCCESS
;

822 
	}
}

827 
	$pmix_mˇ_ba£_v¨_dîegi°î
(
v¨i
)

829 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

830 
ªt
;

832 
ªt
 = 
	`v¨_gë
 (
v¨i
, &
v¨
, 
Ál£
);

833 i‡(
PMIX_SUCCESS
 !
ªt
) {

834  
ªt
;

837 i‡(!
	`PMIX_VAR_IS_VALID
(
v¨
[0])) {

838  
PMIX_ERR_BAD_PARAM
;

843 
v¨
->
mbv_Êags
 &~
PMIX_MCA_BASE_VAR_FLAG_VALID
;

846 i‡(
PMIX_MCA_BASE_VAR_FLAG_SYNONYM
 & 
v¨
->
mbv_Êags
) {

847  
PMIX_SUCCESS
;

851 i‡((
PMIX_MCA_BASE_VAR_TYPE_STRING
 =
v¨
->
mbv_ty≥
 || 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
 == var->mbv_type) &&

852 
v¨
->
mbv_°‹age
->
°rögvÆ
) {

853 
	`‰ì
 (
v¨
->
mbv_°‹age
->
°rögvÆ
);

854 
v¨
->
mbv_°‹age
->
°rögvÆ
 = 
NULL
;

855 } i‡(
v¨
->
mbv_íumî©‹
 && !v¨->mbv_íumî©‹->
íum_is_°©ic
) {

856 
	`PMIX_RELEASE
(
v¨
->
mbv_íumî©‹
);

859 
v¨
->
mbv_íumî©‹
 = 
NULL
;

861 
v¨
->
mbv_°‹age
 = 
NULL
;

863  
PMIX_SUCCESS
;

864 
	}
}

866 
	$v¨_gë
 (
v¨i
, 
pmix_mˇ_ba£_v¨_t
 **
v¨_out
, 
boﬁ
 
‹igöÆ
)

868 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

870 i‡(
v¨_out
) {

871 *
v¨_out
 = 
NULL
;

875 i‡(!
pmix_mˇ_ba£_v¨_öôülized
) {

876  
PMIX_ERROR
;

879 i‡(
v¨i
 < 0) {

880  
PMIX_ERR_BAD_PARAM
;

883 
v¨
 = 
	`pmix_poöãr_¨øy_gë_ôem
 (&
pmix_mˇ_ba£_v¨s
, 
v¨i
);

884 i‡(
NULL
 =
v¨
) {

885  
PMIX_ERR_BAD_PARAM
;

888 i‡(
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0]Ë&& 
‹igöÆ
) {

889  
	`v¨_gë
(
v¨
->
mbv_syn⁄ym_f‹
, 
v¨_out
, 
Ál£
);

892 i‡(
v¨_out
) {

893 *
v¨_out
 = 
v¨
;

896  
PMIX_SUCCESS
;

897 
	}
}

899 
	$pmix_mˇ_ba£_v¨_ív_«me
(c⁄° *
∑øm_«me
,

900 **
ív_«me
)

902 
ªt
;

904 
	`as£π
 (
NULL
 !
ív_«me
);

906 
ªt
 = 
	`a•rötf
(
ív_«me
, "%s%s", 
mˇ_¥efix
, 
∑øm_«me
);

907 i‡(0 > 
ªt
) {

908  
PMIX_ERR_OUT_OF_RESOURCE
;

911  
PMIX_SUCCESS
;

912 
	}
}

917 
	$v¨_föd_by_«me
 (c⁄° *
fuŒ_«me
, *
v¨i
, 
boﬁ
 
övÆidok
)

919 
pmix_mˇ_ba£_v¨_t
 *
v¨
 = 
NULL
;

920 *
tmp
;

921 
rc
;

923 
rc
 = 
	`pmix_hash_èbÀ_gë_vÆue_±r
 (&
pmix_mˇ_ba£_v¨_ödex_hash
, 
fuŒ_«me
, 
	`°æí
 (full_name),

924 &
tmp
);

925 i‡(
PMIX_SUCCESS
 !
rc
) {

926  
rc
;

929 (Ë
	`v¨_gë
 (()(
uöçå_t
Ë
tmp
, &
v¨
, 
Ál£
);

931 i‡(
övÆidok
 || (
v¨
 && 
	`PMIX_VAR_IS_VALID
(var[0]))) {

932 *
v¨i
 = ()(
uöçå_t
Ë
tmp
;

933  
PMIX_SUCCESS
;

936  
PMIX_ERR_NOT_FOUND
;

937 
	}
}

939 
	$v¨_föd
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

940 c⁄° *
comp⁄ít_«me
, c⁄° *
v¨übÀ_«me
,

941 
boﬁ
 
övÆidok
)

943 *
fuŒ_«me
;

944 
ªt
, 
v¨i
;

946 
ªt
 = 
	`pmix_mˇ_ba£_v¨_gíî©e_fuŒ_«me4
 (
NULL
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

947 
v¨übÀ_«me
, &
fuŒ_«me
);

948 i‡(
PMIX_SUCCESS
 !
ªt
) {

949  
PMIX_ERROR
;

952 
ªt
 = 
	`v¨_föd_by_«me
(
fuŒ_«me
, &
v¨i
, 
övÆidok
);

956 
	`‰ì
 (
fuŒ_«me
);

958 i‡(
PMIX_SUCCESS
 !
ªt
) {

959  
ªt
;

962  
v¨i
;

963 
	}
}

968 
	$pmix_mˇ_ba£_v¨_föd
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

969 c⁄° *
comp⁄ít_«me
, c⁄° *
v¨übÀ_«me
)

971  
	`v¨_föd
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
, 
v¨übÀ_«me
, 
Ál£
);

972 
	}
}

977 
	$pmix_mˇ_ba£_v¨_föd_by_«me
 (c⁄° *
fuŒ_«me
, *
v¨i
)

979  
	`v¨_föd_by_«me
 (
fuŒ_«me
, 
v¨i
, 
Ál£
);

980 
	}
}

982 
	$pmix_mˇ_ba£_v¨_£t_Êag
 (
v¨i
, 
pmix_mˇ_ba£_v¨_Êag_t
 
Êag
, 
boﬁ
 
£t
)

984 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

985 
ªt
;

987 
ªt
 = 
	`v¨_gë
 (
v¨i
, &
v¨
, 
åue
);

988 i‡(
PMIX_SUCCESS
 !
ªt
 || 
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0])) {

989  
PMIX_ERR_BAD_PARAM
;

992 
v¨
->
mbv_Êags
 = (v¨->mbv_Êag†& ~
Êag
Ë| (
£t
 ? flag : 0);

995  
PMIX_SUCCESS
;

996 
	}
}

1001 
	$pmix_mˇ_ba£_v¨_gë
 (
v¨i
, c⁄° 
pmix_mˇ_ba£_v¨_t
 **
v¨
)

1003 
ªt
;

1004 
ªt
 = 
	`v¨_gë
 (
v¨i
, (
pmix_mˇ_ba£_v¨_t
 **Ë
v¨
, 
Ál£
);

1006 i‡(
PMIX_SUCCESS
 !
ªt
) {

1007  
ªt
;

1010 i‡(!
	`PMIX_VAR_IS_VALID
(*(
v¨
[0]))) {

1011  
PMIX_ERR_NOT_FOUND
;

1014  
PMIX_SUCCESS
;

1015 
	}
}

1020 
	$pmix_mˇ_ba£_v¨_buûd_ív
(***
ív
, *
num_ív
, 
boﬁ
 
öã∫Æ
)

1022 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

1023 
size_t
 
i
, 
Àn
;

1024 
ªt
;

1028 i‡(!
pmix_mˇ_ba£_v¨_öôülized
) {

1029  
PMIX_ERROR
;

1034 
Àn
 = 
	`pmix_poöãr_¨øy_gë_size
(&
pmix_mˇ_ba£_v¨s
);

1035 
i
 = 0; i < 
Àn
; ++i) {

1036 *
vÆue_°rög
;

1037 *
°r
 = 
NULL
;

1039 
v¨
 = 
	`pmix_poöãr_¨øy_gë_ôem
 (&
pmix_mˇ_ba£_v¨s
, 
i
);

1040 i‡(
NULL
 =
v¨
) {

1046 i‡(
PMIX_MCA_BASE_VAR_SOURCE_DEFAULT
 =
v¨
->
mbv_sour˚
 ||

1047 (!
öã∫Æ
 && 
	`PMIX_VAR_IS_INTERNAL
(
v¨
[0]))) {

1051 i‡((
PMIX_MCA_BASE_VAR_TYPE_STRING
 =
v¨
->
mbv_ty≥
 || 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
 == var->mbv_type) &&

1052 
NULL
 =
v¨
->
mbv_°‹age
->
°rögvÆ
) {

1056 
ªt
 = 
	`v¨_vÆue_°rög
 (
v¨
, &
vÆue_°rög
);

1057 i‡(
PMIX_SUCCESS
 !
ªt
) {

1058 
˛ónup
;

1061 
ªt
 = 
	`a•rötf
 (&
°r
, "%s%s=%s", 
mˇ_¥efix
, 
v¨
->
mbv_fuŒ_«me
,

1062 
vÆue_°rög
);

1063 
	`‰ì
 (
vÆue_°rög
);

1064 i‡(0 > 
ªt
) {

1065 
˛ónup
;

1068 
	`pmix_¨gv_≠≥nd
(
num_ív
, 
ív
, 
°r
);

1069 
	`‰ì
(
°r
);

1071 
v¨
->
mbv_sour˚
) {

1072 
PMIX_MCA_BASE_VAR_SOURCE_FILE
:

1073 
PMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
:

1074 
	`a•rötf
 (&
°r
, "%sSOURCE_%s=FILE:%s", 
mˇ_¥efix
, 
v¨
->
mbv_fuŒ_«me
,

1075 
	`pmix_mˇ_ba£_v¨_sour˚_fûe
 (
v¨
));

1077 
PMIX_MCA_BASE_VAR_SOURCE_COMMAND_LINE
:

1078 
	`a•rötf
 (&
°r
, "%sSOURCE_%s=COMMAND_LINE", 
mˇ_¥efix
, 
v¨
->
mbv_fuŒ_«me
);

1080 
PMIX_MCA_BASE_VAR_SOURCE_ENV
:

1081 
PMIX_MCA_BASE_VAR_SOURCE_SET
:

1082 
PMIX_MCA_BASE_VAR_SOURCE_DEFAULT
:

1083 
°r
 = 
NULL
;

1085 
PMIX_MCA_BASE_VAR_SOURCE_MAX
:

1086 
˛ónup
;

1089 i‡(
NULL
 !
°r
) {

1090 
	`pmix_¨gv_≠≥nd
(
num_ív
, 
ív
, 
°r
);

1091 
	`‰ì
(
°r
);

1097  
PMIX_SUCCESS
;

1101 
˛ónup
:

1102 i‡(*
num_ív
 > 0) {

1103 
	`pmix_¨gv_‰ì
(*
ív
);

1104 *
num_ív
 = 0;

1105 *
ív
 = 
NULL
;

1107  
PMIX_ERR_NOT_FOUND
;

1108 
	}
}

1114 
	$pmix_mˇ_ba£_v¨_föÆize
()

1116 
pmix_obje˘_t
 *
pmixe˘
;

1117 
pmix_li°_ôem_t
 *
ôem
;

1118 
size
, 
i
;

1120 i‡(
pmix_mˇ_ba£_v¨_öôülized
) {

1121 
size
 = 
	`pmix_poöãr_¨øy_gë_size
(&
pmix_mˇ_ba£_v¨s
);

1122 
i
 = 0 ; i < 
size
 ; ++i) {

1123 
pmixe˘
 = 
	`pmix_poöãr_¨øy_gë_ôem
 (&
pmix_mˇ_ba£_v¨s
, 
i
);

1124 i‡(
NULL
 !
pmixe˘
) {

1125 
	`PMIX_RELEASE
(
pmixe˘
);

1128 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_v¨s
);

1130 
NULL
 !=

1131 (
ôem
 = 
	`pmix_li°_ªmove_fú°
(&
pmix_mˇ_ba£_v¨_fûe_vÆues
))) {

1132 
	`PMIX_RELEASE
(
ôem
);

1134 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_v¨_fûe_vÆues
);

1136 
NULL
 !=

1137 (
ôem
 = 
	`pmix_li°_ªmove_fú°
(&
pmix_mˇ_ba£_ív¨_fûe_vÆues
))) {

1138 
	`PMIX_RELEASE
(
ôem
);

1140 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_ív¨_fûe_vÆues
);

1142 
NULL
 !=

1143 (
ôem
 = 
	`pmix_li°_ªmove_fú°
(&
pmix_mˇ_ba£_v¨_ovîride_vÆues
))) {

1144 
	`PMIX_RELEASE
(
ôem
);

1146 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_v¨_ovîride_vÆues
);

1148 if–
NULL
 !
cwd
 ) {

1149 
	`‰ì
(
cwd
);

1150 
cwd
 = 
NULL
;

1153 
pmix_mˇ_ba£_v¨_öôülized
 = 
Ál£
;

1154 
pmix_mˇ_ba£_v¨_cou¡
 = 0;

1156 i‡(
NULL
 !
pmix_mˇ_ba£_v¨_fûe_li°
) {

1157 
	`pmix_¨gv_‰ì
(
pmix_mˇ_ba£_v¨_fûe_li°
);

1159 
pmix_mˇ_ba£_v¨_fûe_li°
 = 
NULL
;

1161 (Ë
	`pmix_mˇ_ba£_v¨_group_föÆize
 ();

1163 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_v¨_ödex_hash
);

1165 
	`‰ì
 (
pmix_mˇ_ba£_ív¨_fûes
);

1166 
pmix_mˇ_ba£_ív¨_fûes
 = 
NULL
;

1171  
PMIX_SUCCESS
;

1172 
	}
}

1176 
	$fixup_fûes
(**
fûe_li°
, * 
∑th
, 
boﬁ
 
ªl_∑th_£¨ch
, 
£p
) {

1177 
exô_°©us
 = 
PMIX_SUCCESS
;

1178 **
fûes
 = 
NULL
;

1179 **
£¨ch_∑th
 = 
NULL
;

1180 * 
tmp_fûe
 = 
NULL
;

1181 **
¨gv
 = 
NULL
;

1182 *
ªl_∑th
;

1183 
mode
 = 
R_OK
;

1184 
cou¡
, 
i
, 
¨gc
 = 0;

1186 
£¨ch_∑th
 = 
	`pmix_¨gv_•lô
(
∑th
, 
PMIX_ENV_SEP
);

1187 
fûes
 = 
	`pmix_¨gv_•lô
(*
fûe_li°
, 
£p
);

1188 
cou¡
 = 
	`pmix_¨gv_cou¡
(
fûes
);

1190 
ªl_∑th
 = 
f‹˚_agg_∑th
 ? f‹˚_agg_∑th : 
cwd
;

1193 
i
 = 0 ; i < 
cou¡
; ++i) {

1194 *
msg_∑th
 = 
∑th
;

1195 i‡(
	`pmix_∑th_is_absﬁuã
(
fûes
[
i
])) {

1197 
tmp_fûe
 = 
	`pmix_∑th_ac˚ss
(
fûes
[
i
], 
NULL
, 
mode
);

1198 } i‡(!
ªl_∑th_£¨ch
 && 
NULL
 !
	`°rchr
(
fûes
[
i
], 
PMIX_PATH_SEP
[0])) {

1205 
msg_∑th
 = 
ªl_∑th
;

1206 
tmp_fûe
 = 
	`pmix_∑th_ac˚ss
(
fûes
[
i
], 
ªl_∑th
, 
mode
);

1213 
tmp_fûe
 = 
	`pmix_∑th_föd
 (
fûes
[
i
], 
£¨ch_∑th
, 
mode
, 
NULL
);

1216 i‡(
NULL
 =
tmp_fûe
) {

1217 
	`pmix_show_hñp
("help-mca-var.txt", "missing-param-file",

1218 
åue
, 
	`gëpid
(), 
fûes
[
i
], 
msg_∑th
);

1219 
exô_°©us
 = 
PMIX_ERROR
;

1223 
	`pmix_¨gv_≠≥nd
(&
¨gc
, &
¨gv
, 
tmp_fûe
);

1225 
	`‰ì
(
tmp_fûe
);

1226 
tmp_fûe
 = 
NULL
;

1229 i‡(
PMIX_SUCCESS
 =
exô_°©us
) {

1230 
	`‰ì
(*
fûe_li°
);

1231 *
fûe_li°
 = 
	`pmix_¨gv_joö
(
¨gv
, 
£p
);

1234 if–
NULL
 !
fûes
 ) {

1235 
	`pmix_¨gv_‰ì
(
fûes
);

1236 
fûes
 = 
NULL
;

1239 if–
NULL
 !
¨gv
 ) {

1240 
	`pmix_¨gv_‰ì
(
¨gv
);

1241 
¨gv
 = 
NULL
;

1244 if–
NULL
 !
£¨ch_∑th
 ) {

1245 
	`pmix_¨gv_‰ì
(
£¨ch_∑th
);

1246 
£¨ch_∑th
 = 
NULL
;

1249  
exô_°©us
;

1250 
	}
}

1252 
	$ªad_fûes
(*
fûe_li°
, 
pmix_li°_t
 *
fûe_vÆues
, 
£p
)

1254 **
tmp
 = 
	`pmix_¨gv_•lô
(
fûe_li°
, 
£p
);

1255 
i
, 
cou¡
;

1257 i‡(!
tmp
) {

1258  
PMIX_ERR_OUT_OF_RESOURCE
;

1261 
cou¡
 = 
	`pmix_¨gv_cou¡
(
tmp
);

1267 
i
 = 
cou¡
 - 1; i >= 0; --i) {

1268 *
fûe_«me
 = 
	`≠≥nd_fûíame_to_li°
 (
tmp
[
i
]);

1269 
	`pmix_mˇ_ba£_∑r£_∑ømfûe
(
fûe_«me
, 
fûe_vÆues
);

1272 
	`pmix_¨gv_‰ì
 (
tmp
);

1274 
	`pmix_mˇ_ba£_öã∫Æ_ív_°‹e
();

1276  
PMIX_SUCCESS
;

1277 
	}
}

1280 
	$ªgi°î_v¨übÀ
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

1281 c⁄° *
comp⁄ít_«me
, c⁄° *
v¨übÀ_«me
,

1282 c⁄° *
des¸ùti⁄
, 
pmix_mˇ_ba£_v¨_ty≥_t
 
ty≥
,

1283 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
, 
böd
,

1284 
pmix_mˇ_ba£_v¨_Êag_t
 
Êags
, 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
öfo_lvl
,

1285 
pmix_mˇ_ba£_v¨_sc›e_t
 
sc›e
, 
syn⁄ym_f‹
,

1286 *
°‹age
)

1288 
ªt
, 
v¨_ödex
, 
group_ödex
, 
tmp
;

1289 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

1290 
pmix_mˇ_ba£_v¨_t
 *
v¨
, *
‹igöÆ
 = 
NULL
;

1293 
	`as£π
 (((
Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_SYNONYM
Ë|| 
NULL
 !
°‹age
Ë&& 
ty≥
 >0 &&Åy≥ < 
PMIX_MCA_BASE_VAR_TYPE_MAX
);

1295 #i‡
PMIX_ENABLE_DEBUG


1297 
uöçå_t
 
Æign
 = 0;

1298 
ty≥
) {

1299 
PMIX_MCA_BASE_VAR_TYPE_INT
:

1300 
Æign
 = 
PMIX_ALIGNMENT_INT
;

1302 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_INT
:

1303 
Æign
 = 
PMIX_ALIGNMENT_INT
;

1305 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG
:

1306 
Æign
 = 
PMIX_ALIGNMENT_LONG
;

1308 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG_LONG
:

1309 
Æign
 = 
PMIX_ALIGNMENT_LONG_LONG
;

1311 
PMIX_MCA_BASE_VAR_TYPE_SIZE_T
:

1312 
Æign
 = 
PMIX_ALIGNMENT_SIZE_T
;

1314 
PMIX_MCA_BASE_VAR_TYPE_BOOL
:

1315 
Æign
 = 
PMIX_ALIGNMENT_BOOL
;

1317 
PMIX_MCA_BASE_VAR_TYPE_DOUBLE
:

1318 
Æign
 = 
PMIX_ALIGNMENT_DOUBLE
;

1320 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
:

1321 
PMIX_MCA_BASE_VAR_TYPE_STRING
:

1323 
Æign
 = 0;

1327 i‡(0 !
Æign
) {

1328 
	`as£π
(((
uöçå_t
Ë
°‹age
Ë% 
Æign
 == 0);

1333 i‡(
Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_SYNONYM
 && 
syn⁄ym_f‹
 < 0) {

1334 
	`as£π
((
Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_SYNONYM
Ë&& 
syn⁄ym_f‹
 >= 0);

1338 i‡(
Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_SYNONYM
) {

1339 i‡(
syn⁄ym_f‹
 < 0) {

1340  
PMIX_ERR_BAD_PARAM
;

1342 
‹igöÆ
 = 
	`pmix_poöãr_¨øy_gë_ôem
 (&
pmix_mˇ_ba£_v¨s
, 
syn⁄ym_f‹
);

1343 i‡(
NULL
 =
‹igöÆ
) {

1346 
	`as£π
 (
NULL
 !
‹igöÆ
);

1347  
PMIX_ERR_NOT_FOUND
;

1352 i‡(!
pmix_mˇ_ba£_v¨_öôülized
) {

1353 
	`pmix_mˇ_ba£_v¨_öô
();

1357 
v¨_ödex
 = 
	`v¨_föd
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
, 
v¨übÀ_«me
,

1358 
åue
);

1360 i‡(0 > 
v¨_ödex
) {

1362 
group_ödex
 = 
	`pmix_mˇ_ba£_v¨_group_ªgi°î
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

1363 
NULL
);

1364 i‡(-1 > 
group_ödex
) {

1365  
group_ödex
;

1369 i‡(
sc›e
 < 
PMIX_MCA_BASE_VAR_SCOPE_LOCAL
 || (
Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
)) {

1370 i‡((
Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
Ë&& (Êag†& 
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
)) {

1371 
	`pmix_show_hñp
("help-mca-var.txt", "invalid-flag-combination",

1372 
åue
, "PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY", "PMIX_MCA_BASE_VAR_FLAG_SETTABLE");

1373  
PMIX_ERROR
;

1377 
Êags
 &~
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
;

1380 
v¨
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_v¨_t
);

1382 
v¨
->
mbv_ty≥
 = 
ty≥
;

1383 
v¨
->
mbv_Êags
 = 
Êags
;

1384 
v¨
->
mbv_group_ödex
 = 
group_ödex
;

1385 
v¨
->
mbv_öfo_lvl
 = 
öfo_lvl
;

1386 
v¨
->
mbv_sc›e
 = 
sc›e
;

1387 
v¨
->
mbv_syn⁄ym_f‹
 = 
syn⁄ym_f‹
;

1388 
v¨
->
mbv_böd
 = 
böd
;

1390 i‡(
NULL
 !
des¸ùti⁄
) {

1391 
v¨
->
mbv_des¸ùti⁄
 = 
	`°rdup
(
des¸ùti⁄
);

1394 i‡(
NULL
 !
v¨übÀ_«me
) {

1395 
v¨
->
mbv_v¨übÀ_«me
 = 
	`°rdup
(
v¨übÀ_«me
);

1396 i‡(
NULL
 =
v¨
->
mbv_v¨übÀ_«me
) {

1397 
	`PMIX_RELEASE
(
v¨
);

1398  
PMIX_ERR_OUT_OF_RESOURCE
;

1402 
ªt
 = 
	`pmix_mˇ_ba£_v¨_gíî©e_fuŒ_«me4
 (
NULL
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

1403 
v¨übÀ_«me
, &
v¨
->
mbv_fuŒ_«me
);

1404 i‡(
PMIX_SUCCESS
 !
ªt
) {

1405 
	`PMIX_RELEASE
(
v¨
);

1406  
PMIX_ERROR
;

1409 
ªt
 = 
	`pmix_mˇ_ba£_v¨_gíî©e_fuŒ_«me4
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

1410 
v¨übÀ_«me
, &
v¨
->
mbv_l⁄g_«me
);

1411 i‡(
PMIX_SUCCESS
 !
ªt
) {

1412 
	`PMIX_RELEASE
(
v¨
);

1413  
PMIX_ERROR
;

1420 
v¨_ödex
 = 
	`pmix_poöãr_¨øy_add
 (&
pmix_mˇ_ba£_v¨s
, 
v¨
);

1421 i‡(0 > 
v¨_ödex
) {

1422 
	`PMIX_RELEASE
(
v¨
);

1423  
PMIX_ERROR
;

1426 
v¨
->
mbv_ödex
 = 
v¨_ödex
;

1428 i‡(0 <
group_ödex
) {

1429 
	`pmix_mˇ_ba£_v¨_group_add_v¨
 (
group_ödex
, 
v¨_ödex
);

1432 
pmix_mˇ_ba£_v¨_cou¡
++;

1433 i‡(0 <
	`v¨_föd_by_«me
 (
v¨
->
mbv_fuŒ_«me
, &
tmp
, 0)) {

1435 
	`as£π
 (0);

1438 
	`pmix_hash_èbÀ_£t_vÆue_±r
 (&
pmix_mˇ_ba£_v¨_ödex_hash
, 
v¨
->
mbv_fuŒ_«me
, 
	`°æí
 (var->mbv_full_name),

1439 (*)(
uöçå_t
Ë
v¨_ödex
);

1441 
ªt
 = 
	`v¨_gë
 (
v¨_ödex
, &
v¨
, 
Ál£
);

1442 i‡(
PMIX_SUCCESS
 !
ªt
) {

1444  
PMIX_ERROR
;

1447 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (
v¨
->
mbv_group_ödex
, &
group
, 
åue
);

1448 i‡(
PMIX_SUCCESS
 !
ªt
) {

1450  
PMIX_ERROR
;

1453 i‡(!
group
->
group_isvÆid
) {

1454 
group
->
group_isvÆid
 = 
åue
;

1458 i‡(0 !
	`com∑ª_°rögs
(
‰amew‹k_«me
, 
group
->
group_‰amew‹k
) ||

1459 0 !
	`com∑ª_°rögs
(
comp⁄ít_«me
, 
group
->
group_comp⁄ít
) ||

1460 0 !
	`com∑ª_°rögs
(
v¨übÀ_«me
, 
v¨
->
mbv_v¨übÀ_«me
)) {

1461 
	`pmix_show_hñp
("help-mca-var.txt", "var-name-conflict",

1462 
åue
, 
v¨
->
mbv_fuŒ_«me
, 
‰amew‹k_«me
,

1463 
comp⁄ít_«me
, 
v¨übÀ_«me
,

1464 
group
->
group_‰amew‹k
, group->
group_comp⁄ít
,

1465 
v¨
->
mbv_v¨übÀ_«me
);

1467 
	`as£π
 (0);

1468  
PMIX_ERROR
;

1471 i‡(
v¨
->
mbv_ty≥
 !
ty≥
) {

1472 #i‡
PMIX_ENABLE_DEBUG


1473 
	`pmix_show_hñp
("help-mca-var.txt",

1475 
åue
, 
v¨
->
mbv_fuŒ_«me
);

1477  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

1481 i‡(
PMIX_MCA_BASE_VAR_TYPE_BOOL
 =
v¨
->
mbv_ty≥
) {

1482 
íumî©‹
 = &
pmix_mˇ_ba£_v¨_íum_boﬁ
;

1483 } i‡(
NULL
 !
íumî©‹
) {

1484 i‡(
v¨
->
mbv_íumî©‹
) {

1485 
	`PMIX_RELEASE
 (
v¨
->
mbv_íumî©‹
);

1488 i‡(!
íumî©‹
->
íum_is_°©ic
) {

1489 
	`PMIX_RETAIN
(
íumî©‹
);

1493 
v¨
->
mbv_íumî©‹
 = 
íumî©‹
;

1495 i‡(!
‹igöÆ
) {

1496 
v¨
->
mbv_°‹age
 = 
°‹age
;

1499 i‡((
PMIX_MCA_BASE_VAR_TYPE_STRING
 =
ty≥
 || 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
 =ty≥Ë&& 
NULL
 !((**)
°‹age
)[0]) {

1500 ((**)
°‹age
)[0] = 
	`°rdup
 (((**)storage)[0]);

1504 
	`pmix_vÆue_¨øy_≠≥nd_ôem
(&
‹igöÆ
->
mbv_syn⁄yms
, &
v¨_ödex
);

1508 
v¨
->
mbv_Êags
 |
PMIX_MCA_BASE_VAR_FLAG_VALID
;

1510 
ªt
 = 
	`v¨_£t_öôül
 (
v¨
, 
‹igöÆ
);

1511 i‡(
PMIX_SUCCESS
 !
ªt
) {

1512  
ªt
;

1516  
v¨_ödex
;

1517 
	}
}

1519 
	$pmix_mˇ_ba£_v¨_ªgi°î
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

1520 c⁄° *
comp⁄ít_«me
, c⁄° *
v¨übÀ_«me
,

1521 c⁄° *
des¸ùti⁄
, 
pmix_mˇ_ba£_v¨_ty≥_t
 
ty≥
,

1522 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
, 
böd
,

1523 
pmix_mˇ_ba£_v¨_Êag_t
 
Êags
,

1524 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
öfo_lvl
,

1525 
pmix_mˇ_ba£_v¨_sc›e_t
 
sc›e
, *
°‹age
)

1528 
	`as£π
 (
NULL
 =
íumî©‹
 || (
PMIX_MCA_BASE_VAR_TYPE_INT
 =
ty≥
 || 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_INT
 ==Åype));

1530  
	`ªgi°î_v¨übÀ
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

1531 
v¨übÀ_«me
, 
des¸ùti⁄
, 
ty≥
, 
íumî©‹
,

1532 
böd
, 
Êags
, 
öfo_lvl
, 
sc›e
, -1, 
°‹age
);

1533 
	}
}

1535 
	$pmix_mˇ_ba£_comp⁄ít_v¨_ªgi°î
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
,

1536 c⁄° *
v¨übÀ_«me
, c⁄° *
des¸ùti⁄
,

1537 
pmix_mˇ_ba£_v¨_ty≥_t
 
ty≥
, 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
,

1538 
böd
, 
pmix_mˇ_ba£_v¨_Êag_t
 
Êags
,

1539 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
öfo_lvl
,

1540 
pmix_mˇ_ba£_v¨_sc›e_t
 
sc›e
, *
°‹age
)

1542  
	`pmix_mˇ_ba£_v¨_ªgi°î
 (
comp⁄ít
->
pmix_mˇ_¥oje˘_«me
,

1543 
comp⁄ít
->
pmix_mˇ_ty≥_«me
,

1544 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
,

1545 
v¨übÀ_«me
, 
des¸ùti⁄
, 
ty≥
, 
íumî©‹
,

1546 
böd
, 
Êags
 | 
PMIX_MCA_BASE_VAR_FLAG_DWG
,

1547 
öfo_lvl
, 
sc›e
, 
°‹age
);

1548 
	}
}

1550 
	$pmix_mˇ_ba£_‰amew‹k_v¨_ªgi°î
 (c⁄° 
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

1551 c⁄° *
v¨übÀ_«me
,

1552 c⁄° *
hñp_msg
, 
pmix_mˇ_ba£_v¨_ty≥_t
 
ty≥
,

1553 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
, 
böd
,

1554 
pmix_mˇ_ba£_v¨_Êag_t
 
Êags
,

1555 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
öfo_Àvñ
,

1556 
pmix_mˇ_ba£_v¨_sc›e_t
 
sc›e
, *
°‹age
)

1558  
	`pmix_mˇ_ba£_v¨_ªgi°î
 (
‰amew‹k
->
‰amew‹k_¥oje˘
, fømew‹k->
‰amew‹k_«me
,

1559 "ba£", 
v¨übÀ_«me
, 
hñp_msg
, 
ty≥
, 
íumî©‹
, 
böd
,

1560 
Êags
 | 
PMIX_MCA_BASE_VAR_FLAG_DWG
, 
öfo_Àvñ
, 
sc›e
, 
°‹age
);

1561 
	}
}

1563 
	$pmix_mˇ_ba£_v¨_ªgi°î_syn⁄ym
 (
syn⁄ym_f‹
, c⁄° *
¥oje˘_«me
,

1564 c⁄° *
‰amew‹k_«me
,

1565 c⁄° *
comp⁄ít_«me
,

1566 c⁄° *
syn⁄ym_«me
,

1567 
pmix_mˇ_ba£_v¨_syn_Êag_t
 
Êags
)

1569 
pmix_mˇ_ba£_v¨_Êag_t
 
v¨_Êags
 = (pmix_mˇ_ba£_v¨_Êag_tË
PMIX_MCA_BASE_VAR_FLAG_SYNONYM
;

1570 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

1571 
ªt
;

1573 
ªt
 = 
	`v¨_gë
 (
syn⁄ym_f‹
, &
v¨
, 
Ál£
);

1574 i‡(
PMIX_SUCCESS
 !
ªt
 || 
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0])) {

1575  
PMIX_ERR_BAD_PARAM
;

1578 i‡(
Êags
 & 
PMIX_MCA_BASE_VAR_SYN_FLAG_DEPRECATED
) {

1579 
v¨_Êags
 |
PMIX_MCA_BASE_VAR_FLAG_DEPRECATED
;

1581 i‡(
Êags
 & 
PMIX_MCA_BASE_VAR_SYN_FLAG_INTERNAL
) {

1582 
v¨_Êags
 |
PMIX_MCA_BASE_VAR_FLAG_INTERNAL
;

1585  
	`ªgi°î_v¨übÀ
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

1586 
syn⁄ym_«me
, 
v¨
->
mbv_des¸ùti⁄
, v¨->
mbv_ty≥
, v¨->
mbv_íumî©‹
,

1587 
v¨
->
mbv_böd
, 
v¨_Êags
, v¨->
mbv_öfo_lvl
, v¨->
mbv_sc›e
,

1588 
syn⁄ym_f‹
, 
NULL
);

1589 
	}
}

1591 
	$v¨_gë_ív
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
, c⁄° *
«me
, **
sour˚
, **
vÆue
)

1593 *
sour˚_ív
, *
vÆue_ív
;

1594 
ªt
;

1596 
ªt
 = 
	`a•rötf
 (&
sour˚_ív
, "%sSOURCE_%s", 
mˇ_¥efix
, 
«me
);

1597 i‡(0 > 
ªt
) {

1598  
PMIX_ERROR
;

1601 
ªt
 = 
	`a•rötf
 (&
vÆue_ív
, "%s%s", 
mˇ_¥efix
, 
«me
);

1602 i‡(0 > 
ªt
) {

1603 
	`‰ì
 (
sour˚_ív
);

1604  
PMIX_ERROR
;

1607 *
sour˚
 = 
	`gëív
 (
sour˚_ív
);

1608 *
vÆue
 = 
	`gëív
 (
vÆue_ív
);

1610 
	`‰ì
 (
sour˚_ív
);

1611 
	`‰ì
 (
vÆue_ív
);

1613 i‡(
NULL
 =*
vÆue
) {

1614 *
sour˚
 = 
NULL
;

1615  
PMIX_ERR_NOT_FOUND
;

1618  
PMIX_SUCCESS
;

1619 
	}
}

1624 
	$v¨_£t_‰om_ív
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
,Ömix_mˇ_ba£_v¨_à*
‹igöÆ
)

1626 c⁄° *
v¨_fuŒ_«me
 = 
v¨
->
mbv_fuŒ_«me
;

1627 c⁄° *
v¨_l⁄g_«me
 = 
v¨
->
mbv_l⁄g_«me
;

1628 
boﬁ
 
dïªˇãd
 = 
	`PMIX_VAR_IS_DEPRECATED
(
v¨
[0]);

1629 
boﬁ
 
is_syn⁄ym
 = 
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0]);

1630 *
sour˚_ív
, *
vÆue_ív
;

1631 
ªt
;

1633 
ªt
 = 
	`v¨_gë_ív
 (
v¨
, 
v¨_l⁄g_«me
, &
sour˚_ív
, &
vÆue_ív
);

1634 i‡(
PMIX_SUCCESS
 !
ªt
) {

1635 
ªt
 = 
	`v¨_gë_ív
 (
v¨
, 
v¨_fuŒ_«me
, &
sour˚_ív
, &
vÆue_ív
);

1638 i‡(
PMIX_SUCCESS
 !
ªt
) {

1639  
ªt
;

1644 i‡(
	`PMIX_VAR_IS_DEFAULT_ONLY
(
‹igöÆ
[0])) {

1645 
	`pmix_show_hñp
("help-mca-var.txt", "default-only-param-set",

1646 
åue
, 
v¨_fuŒ_«me
);

1648  
PMIX_ERR_NOT_FOUND
;

1651 i‡(
PMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
 =
‹igöÆ
->
mbv_sour˚
) {

1652 i‡(!
pmix_mˇ_ba£_v¨_suµªss_ovîride_w¨nög
) {

1653 
	`pmix_show_hñp
("help-mca-var.txt", "overridden-param-set",

1654 
åue
, 
v¨_fuŒ_«me
);

1657  
PMIX_ERR_NOT_FOUND
;

1660 
‹igöÆ
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_ENV
;

1662 i‡(
NULL
 !
sour˚_ív
) {

1663 i‡(0 =
	`°∫ˇ£cmp
 (
sour˚_ív
, "file:", 5)) {

1664 
‹igöÆ
->
mbv_sour˚_fûe
 = 
	`≠≥nd_fûíame_to_li°
(
sour˚_ív
 + 5);

1665 i‡(0 =
	`°rcmp
 (
v¨
->
mbv_sour˚_fûe
, 
pmix_mˇ_ba£_v¨_ovîride_fûe
)) {

1666 
‹igöÆ
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
;

1668 
‹igöÆ
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_FILE
;

1670 } i‡(0 =
	`°rˇ£cmp
 (
sour˚_ív
, "command")) {

1671 
v¨
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_COMMAND_LINE
;

1675 i‡(
dïªˇãd
) {

1676 c⁄° *
√w_v¨übÀ
 = "None (goingáway)";

1678 i‡(
is_syn⁄ym
) {

1679 
√w_v¨übÀ
 = 
v¨
->
mbv_fuŒ_«me
;

1682 
v¨
->
mbv_sour˚
) {

1683 
PMIX_MCA_BASE_VAR_SOURCE_ENV
:

1684 
	`pmix_show_hñp
("help-mca-var.txt", "deprecated-mca-env",

1685 
åue
, 
v¨_fuŒ_«me
, 
√w_v¨übÀ
);

1687 
PMIX_MCA_BASE_VAR_SOURCE_COMMAND_LINE
:

1688 
	`pmix_show_hñp
("help-mca-var.txt", "deprecated-mca-cli",

1689 
åue
, 
v¨_fuŒ_«me
, 
√w_v¨übÀ
);

1691 
PMIX_MCA_BASE_VAR_SOURCE_FILE
:

1692 
PMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
:

1693 
	`pmix_show_hñp
("help-mca-var.txt", "deprecated-mca-file",

1694 
åue
, 
v¨_fuŒ_«me
, 
	`pmix_mˇ_ba£_v¨_sour˚_fûe
 (
v¨
),

1695 
√w_v¨übÀ
);

1698 
PMIX_MCA_BASE_VAR_SOURCE_DEFAULT
:

1699 
PMIX_MCA_BASE_VAR_SOURCE_MAX
:

1700 
PMIX_MCA_BASE_VAR_SOURCE_SET
:

1706  
	`v¨_£t_‰om_°rög
 (
‹igöÆ
, 
vÆue_ív
);

1707 
	}
}

1712 
	$v¨_£t_‰om_fûe
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
,Ömix_mˇ_ba£_v¨_à*
‹igöÆ
, 
pmix_li°_t
 *
fûe_vÆues
)

1714 c⁄° *
v¨_fuŒ_«me
 = 
v¨
->
mbv_fuŒ_«me
;

1715 c⁄° *
v¨_l⁄g_«me
 = 
v¨
->
mbv_l⁄g_«me
;

1716 
boﬁ
 
dïªˇãd
 = 
	`PMIX_VAR_IS_DEPRECATED
(
v¨
[0]);

1717 
boﬁ
 
is_syn⁄ym
 = 
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0]);

1718 
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
fv
;

1724 
	`PMIX_LIST_FOREACH
(
fv
, 
fûe_vÆues
, 
pmix_mˇ_ba£_v¨_fûe_vÆue_t
) {

1725 i‡(0 !
	`°rcmp
(
fv
->
mbvfv_v¨
, 
v¨_fuŒ_«me
) &&

1726 0 !
	`°rcmp
(
fv
->
mbvfv_v¨
, 
v¨_l⁄g_«me
)) {

1731 i‡(
	`PMIX_VAR_IS_DEFAULT_ONLY
(
v¨
[0])) {

1732 
	`pmix_show_hñp
("help-mca-var.txt", "default-only-param-set",

1733 
åue
, 
v¨_fuŒ_«me
);

1735  
PMIX_ERR_NOT_FOUND
;

1738 i‡(
PMIX_MCA_BASE_VAR_FLAG_ENVIRONMENT_ONLY
 & 
‹igöÆ
->
mbv_Êags
) {

1739 
	`pmix_show_hñp
("help-mca-var.txt", "environment-only-param",

1740 
åue
, 
v¨_fuŒ_«me
, 
fv
->
mbvfv_vÆue
,

1741 
fv
->
mbvfv_fûe
);

1743  
PMIX_ERR_NOT_FOUND
;

1746 i‡(
PMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
 =
‹igöÆ
->
mbv_sour˚
) {

1747 i‡(!
pmix_mˇ_ba£_v¨_suµªss_ovîride_w¨nög
) {

1748 
	`pmix_show_hñp
("help-mca-var.txt", "overridden-param-set",

1749 
åue
, 
v¨_fuŒ_«me
);

1752  
PMIX_ERR_NOT_FOUND
;

1755 i‡(
dïªˇãd
) {

1756 c⁄° *
√w_v¨übÀ
 = "None (goingáway)";

1758 i‡(
is_syn⁄ym
) {

1759 
√w_v¨übÀ
 = 
‹igöÆ
->
mbv_fuŒ_«me
;

1762 
	`pmix_show_hñp
("help-mca-var.txt", "deprecated-mca-file",

1763 
åue
, 
v¨_fuŒ_«me
, 
fv
->
mbvfv_fûe
,

1764 
√w_v¨übÀ
);

1767 
‹igöÆ
->
mbv_fûe_vÆue
 = (*Ë
fv
;

1768 
‹igöÆ
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_FILE
;

1769 i‡(
is_syn⁄ym
) {

1770 
v¨
->
mbv_fûe_vÆue
 = (*Ë
fv
;

1771 
v¨
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_FILE
;

1774  
	`v¨_£t_‰om_°rög
 (
‹igöÆ
, 
fv
->
mbvfv_vÆue
);

1777  
PMIX_ERR_NOT_FOUND
;

1778 
	}
}

1783 
	$v¨_£t_öôül
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
,Ömix_mˇ_ba£_v¨_à*
‹igöÆ
)

1785 
ªt
;

1787 i‡(
‹igöÆ
) {

1789 
v¨
->
mbv_sour˚
 = 
‹igöÆ
->mbv_source;

1790 
v¨
->
mbv_fûe_vÆue
 = 
‹igöÆ
->mbv_file_value;

1791 
v¨
->
mbv_sour˚_fûe
 = 
‹igöÆ
->mbv_source_file;

1793 
v¨
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_DEFAULT
;

1794 
‹igöÆ
 = 
v¨
;

1801 
ªt
 = 
	`v¨_£t_‰om_fûe
 (
v¨
, 
‹igöÆ
, &
pmix_mˇ_ba£_v¨_ovîride_vÆues
);

1802 i‡(
PMIX_SUCCESS
 =
ªt
) {

1803 
v¨
->
mbv_Êags
 = ~
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
 & (v¨->mbv_Êag†| 
PMIX_MCA_BASE_VAR_FLAG_OVERRIDE
);

1804 
v¨
->
mbv_sour˚
 = 
PMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
;

1807 
ªt
 = 
	`v¨_£t_‰om_ív
 (
v¨
, 
‹igöÆ
);

1808 i‡(
PMIX_ERR_NOT_FOUND
 !
ªt
) {

1809  
ªt
;

1812 
ªt
 = 
	`v¨_£t_‰om_fûe
 (
v¨
, 
‹igöÆ
, &
pmix_mˇ_ba£_ív¨_fûe_vÆues
);

1813 i‡(
PMIX_ERR_NOT_FOUND
 !
ªt
) {

1814  
ªt
;

1817 
ªt
 = 
	`v¨_£t_‰om_fûe
 (
v¨
, 
‹igöÆ
, &
pmix_mˇ_ba£_v¨_fûe_vÆues
);

1818 i‡(
PMIX_ERR_NOT_FOUND
 !
ªt
) {

1819  
ªt
;

1822  
PMIX_SUCCESS
;

1823 
	}
}

1828 
	$v¨_c⁄°ru˘‹
(
pmix_mˇ_ba£_v¨_t
 *
v¨
)

1830 
	`mem£t
 ((*Ë
v¨
 +  (v¨->
su≥r
), 0,  (*var) -  (var->super));

1832 
v¨
->
mbv_ty≥
 = 
PMIX_MCA_BASE_VAR_TYPE_MAX
;

1833 
	`PMIX_CONSTRUCT
(&
v¨
->
mbv_syn⁄yms
, 
pmix_vÆue_¨øy_t
);

1834 
	`pmix_vÆue_¨øy_öô
 (&
v¨
->
mbv_syn⁄yms
,  ());

1835 
	}
}

1841 
	$v¨_de°ru˘‹
(
pmix_mˇ_ba£_v¨_t
 *
v¨
)

1843 i‡((
PMIX_MCA_BASE_VAR_TYPE_STRING
 =
v¨
->
mbv_ty≥
 ||

1844 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
 =
v¨
->
mbv_ty≥
) &&

1845 
NULL
 !
v¨
->
mbv_°‹age
 &&

1846 
NULL
 !
v¨
->
mbv_°‹age
->
°rögvÆ
) {

1847 
	`‰ì
 (
v¨
->
mbv_°‹age
->
°rögvÆ
);

1848 
v¨
->
mbv_°‹age
->
°rögvÆ
 = 
NULL
;

1852 i‡(
v¨
->
mbv_íumî©‹
 && !v¨->mbv_íumî©‹->
íum_is_°©ic
) {

1853 
	`PMIX_RELEASE
(
v¨
->
mbv_íumî©‹
);

1856 i‡(
NULL
 !
v¨
->
mbv_v¨übÀ_«me
) {

1857 
	`‰ì
(
v¨
->
mbv_v¨übÀ_«me
);

1859 i‡(
NULL
 !
v¨
->
mbv_fuŒ_«me
) {

1860 
	`‰ì
(
v¨
->
mbv_fuŒ_«me
);

1862 i‡(
NULL
 !
v¨
->
mbv_l⁄g_«me
) {

1863 
	`‰ì
(
v¨
->
mbv_l⁄g_«me
);

1866 i‡(
NULL
 !
v¨
->
mbv_des¸ùti⁄
) {

1867 
	`‰ì
(
v¨
->
mbv_des¸ùti⁄
);

1871 
	`PMIX_DESTRUCT
(&
v¨
->
mbv_syn⁄yms
);

1874 
v¨
->
mbv_ty≥
 = 
PMIX_MCA_BASE_VAR_TYPE_MAX
;

1876 #i‡
PMIX_ENABLE_DEBUG


1878 
	`mem£t
 ((*Ë
v¨
 +  (v¨->
su≥r
), 0,  (*var) -  (var->super));

1880 
	}
}

1883 
	$fv_c⁄°ru˘‹
(
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
f
)

1885 
	`mem£t
 ((*Ë
f
 +  (f->
su≥r
), 0,  (*f) -  (f->super));

1886 
	}
}

1889 
	$fv_de°ru˘‹
(
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
f
)

1891 i‡(
NULL
 !
f
->
mbvfv_v¨
) {

1892 
	`‰ì
(
f
->
mbvfv_v¨
);

1894 i‡(
NULL
 !
f
->
mbvfv_vÆue
) {

1895 
	`‰ì
(
f
->
mbvfv_vÆue
);

1898 
	`fv_c⁄°ru˘‹
(
f
);

1899 
	}
}

1901 *
	$sour˚_«me
(
pmix_mˇ_ba£_v¨_t
 *
v¨
)

1903 *
ªt
;

1905 i‡(
PMIX_MCA_BASE_VAR_SOURCE_FILE
 =
v¨
->
mbv_sour˚
 || 
PMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
 == var->mbv_source) {

1906 
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 *
fv
 = 
v¨
->
mbv_fûe_vÆue
;

1907 
rc
;

1909 i‡(
fv
) {

1910 
rc
 = 
	`a•rötf
(&
ªt
, "fûê(%s:%d)", 
fv
->
mbvfv_fûe
, fv->
mbvfv_löío
);

1912 
rc
 = 
	`a•rötf
(&
ªt
, "fûê(%s)", 
v¨
->
mbv_sour˚_fûe
);

1916 i‡(0 > 
rc
) {

1917  
NULL
;

1919  
ªt
;

1920 } i‡(
PMIX_MCA_BASE_VAR_SOURCE_MAX
 <
v¨
->
mbv_sour˚
) {

1921  
	`°rdup
 ("unknown(!!)");

1924  
	`°rdup
 (
pmix_v¨_sour˚_«mes
[
v¨
->
mbv_sour˚
]);

1925 
	}
}

1927 
	$v¨_vÆue_°rög
 (
pmix_mˇ_ba£_v¨_t
 *
v¨
, **
vÆue_°rög
)

1929 c⁄° 
pmix_mˇ_ba£_v¨_°‹age_t
 *
vÆue
;

1930 
ªt
;

1932 
	`as£π
 (
PMIX_MCA_BASE_VAR_TYPE_MAX
 > 
v¨
->
mbv_ty≥
);

1934 
ªt
 = 
	`pmix_mˇ_ba£_v¨_gë_vÆue
(
v¨
->
mbv_ödex
, &
vÆue
, 
NULL
, NULL);

1935 i‡(
PMIX_SUCCESS
 !=
ªt
) {

1936  
ªt
;

1939 i‡(
NULL
 =
v¨
->
mbv_íumî©‹
) {

1940 
v¨
->
mbv_ty≥
) {

1941 
PMIX_MCA_BASE_VAR_TYPE_INT
:

1942 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%d", 
vÆue
->
ötvÆ
);

1944 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_INT
:

1945 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%u", 
vÆue
->
uötvÆ
);

1947 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG
:

1948 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%lu", 
vÆue
->
ulvÆ
);

1950 
PMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG_LONG
:

1951 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%Œu", 
vÆue
->
uŒvÆ
);

1953 
PMIX_MCA_BASE_VAR_TYPE_SIZE_T
:

1954 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%" 
PRIsize_t
, 
vÆue
->
sizëvÆ
);

1956 
PMIX_MCA_BASE_VAR_TYPE_STRING
:

1957 
PMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
:

1958 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%s",

1959 
vÆue
->
°rögvÆ
 ? value->stringval : "");

1961 
PMIX_MCA_BASE_VAR_TYPE_BOOL
:

1962 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%d", 
vÆue
->
boﬁvÆ
);

1964 
PMIX_MCA_BASE_VAR_TYPE_DOUBLE
:

1965 
ªt
 = 
	`a•rötf
 (
vÆue_°rög
, "%lf", 
vÆue
->
lfvÆ
);

1968 
ªt
 = -1;

1972 
ªt
 = (0 >ÑëË? 
PMIX_ERR_OUT_OF_RESOURCE
 : 
PMIX_SUCCESS
;

1975 i‡(
PMIX_MCA_BASE_VAR_TYPE_BOOL
 =
v¨
->
mbv_ty≥
) {

1976 
ªt
 = 
v¨
->
mbv_íumî©‹
->
	`°rög_‰om_vÆue
(v¨->mbv_íumî©‹, 
vÆue
->
boﬁvÆ
, 
vÆue_°rög
);

1978 
ªt
 = 
v¨
->
mbv_íumî©‹
->
	`°rög_‰om_vÆue
(v¨->mbv_íumî©‹, 
vÆue
->
ötvÆ
, 
vÆue_°rög
);

1981 i‡(
PMIX_SUCCESS
 !
ªt
) {

1982  
ªt
;

1986  
ªt
;

1987 
	}
}

1989 
	$pmix_mˇ_ba£_v¨_check_ex˛usive
 (c⁄° *
¥oje˘
,

1990 c⁄° *
ty≥_a
,

1991 c⁄° *
comp⁄ít_a
,

1992 c⁄° *
∑øm_a
,

1993 c⁄° *
ty≥_b
,

1994 c⁄° *
comp⁄ít_b
,

1995 c⁄° *
∑øm_b
)

1997 
pmix_mˇ_ba£_v¨_t
 *
v¨_a
 = 
NULL
, *
v¨_b
 = NULL;

1998 
v¨_ai
, 
v¨_bi
;

2001 
¥oje˘
 = 
NULL
;

2003 
v¨_ai
 = 
	`pmix_mˇ_ba£_v¨_föd
 (
¥oje˘
, 
ty≥_a
, 
comp⁄ít_a
, 
∑øm_a
);

2004 
v¨_bi
 = 
	`pmix_mˇ_ba£_v¨_föd
 (
¥oje˘
, 
ty≥_b
, 
comp⁄ít_b
, 
∑øm_b
);

2005 i‡(
v¨_bi
 < 0 || 
v¨_ai
 < 0) {

2006  
PMIX_ERR_NOT_FOUND
;

2009 (Ë
	`v¨_gë
 (
v¨_ai
, &
v¨_a
, 
åue
);

2010 (Ë
	`v¨_gë
 (
v¨_bi
, &
v¨_b
, 
åue
);

2011 i‡(
NULL
 =
v¨_a
 || NULL =
v¨_b
) {

2012  
PMIX_ERR_NOT_FOUND
;

2015 i‡(
PMIX_MCA_BASE_VAR_SOURCE_DEFAULT
 !
v¨_a
->
mbv_sour˚
 &&

2016 
PMIX_MCA_BASE_VAR_SOURCE_DEFAULT
 !
v¨_b
->
mbv_sour˚
) {

2017 *
°r_a
, *
°r_b
;

2020 
°r_a
 = 
	`sour˚_«me
(
v¨_a
);

2023 
°r_b
 = 
	`sour˚_«me
(
v¨_b
);

2026 
	`pmix_show_hñp
("help-mca-var.txt",

2028 
åue
, 
v¨_a
->
mbv_fuŒ_«me
,

2029 
°r_a
, 
v¨_b
->
mbv_fuŒ_«me
,

2030 
°r_b
);

2033 
	`‰ì
(
°r_a
);

2034 
	`‰ì
(
°r_b
);

2036  
PMIX_ERR_BAD_PARAM
;

2039  
PMIX_SUCCESS
;

2040 
	}
}

2042 
	$pmix_mˇ_ba£_v¨_gë_cou¡
 ()

2044  
pmix_mˇ_ba£_v¨_cou¡
;

2045 
	}
}

2047 
	$pmix_mˇ_ba£_v¨_dump
(
v¨i
, ***
out
, 
pmix_mˇ_ba£_v¨_dump_ty≥_t
 
ouçut_ty≥
)

2049 c⁄° *
‰amew‹k
, *
comp⁄ít
, *
fuŒ_«me
;

2050 
i
, 
löe_cou¡
, 
löe
 = 0, 
íum_cou¡
 = 0;

2051 *
vÆue_°rög
, *
sour˚_°rög
, *
tmp
;

2052 
syn⁄ym_cou¡
, 
ªt
, *
syn⁄yms
 = 
NULL
;

2053 
pmix_mˇ_ba£_v¨_t
 *
v¨
, *
‹igöÆ
=
NULL
;

2054 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

2056 
ªt
 = 
	`v¨_gë
(
v¨i
, &
v¨
, 
Ál£
);

2057 i‡(
PMIX_SUCCESS
 !
ªt
) {

2058  
ªt
;

2061 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
(
v¨
->
mbv_group_ödex
, &
group
, 
Ál£
);

2062 i‡(
PMIX_SUCCESS
 !
ªt
) {

2063  
ªt
;

2066 i‡(
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0])) {

2067 
ªt
 = 
	`v¨_gë
(
v¨
->
mbv_syn⁄ym_f‹
, &
‹igöÆ
, 
Ál£
);

2068 i‡(
PMIX_SUCCESS
 !
ªt
) {

2069  
ªt
;

2072 i‡(
NULL
 =
‹igöÆ
) {

2073  
PMIX_ERR_NOT_FOUND
;

2077 
‰amew‹k
 = 
group
->
group_‰amew‹k
;

2078 
comp⁄ít
 = 
group
->
group_comp⁄ít
 ? group->group_component : "base";

2079 
fuŒ_«me
 = 
v¨
->
mbv_fuŒ_«me
;

2081 
syn⁄ym_cou¡
 = 
	`pmix_vÆue_¨øy_gë_size
(&
v¨
->
mbv_syn⁄yms
);

2082 i‡(
syn⁄ym_cou¡
) {

2083 
syn⁄yms
 = 
	`PMIX_VALUE_ARRAY_GET_BASE
(&
v¨
->
mbv_syn⁄yms
, );

2086 
ªt
 = 
	`v¨_vÆue_°rög
 (
v¨
, &
vÆue_°rög
);

2087 i‡(
PMIX_SUCCESS
 !
ªt
) {

2088  
ªt
;

2091 
sour˚_°rög
 = 
	`sour˚_«me
(
v¨
);

2092 i‡(
NULL
 =
sour˚_°rög
) {

2093 
	`‰ì
 (
vÆue_°rög
);

2094  
PMIX_ERR_OUT_OF_RESOURCE
;

2097 i‡(
PMIX_MCA_BASE_VAR_DUMP_PARSABLE
 =
ouçut_ty≥
) {

2098 i‡(
NULL
 !
v¨
->
mbv_íumî©‹
) {

2099 (Ë
v¨
->
mbv_íumî©‹
->
	`gë_cou¡
(v¨->mbv_íumî©‹, &
íum_cou¡
);

2102 
löe_cou¡
 = 8 + (
v¨
->
mbv_des¸ùti⁄
 ? 1 : 0Ë+ (
	`PMIX_VAR_IS_SYNONYM
(v¨[0]Ë? 1 : 
syn⁄ym_cou¡
) +

2103 
íum_cou¡
;

2105 *
out
 = (**Ë
	`ˇŒoc
 (
löe_cou¡
 + 1,  (*));

2106 i‡(
NULL
 =*
out
) {

2107 
	`‰ì
 (
vÆue_°rög
);

2108 
	`‰ì
 (
sour˚_°rög
);

2109  
PMIX_ERR_OUT_OF_RESOURCE
;

2113 
	`a•rötf
(&
tmp
, "mˇ:%s:%s:∑øm:%s:", 
‰amew‹k
, 
comp⁄ít
,

2114 
fuŒ_«me
);

2117 *
cﬁ⁄
 = 
	`°rchr
(
vÆue_°rög
, ':');

2118 i‡(
NULL
 !
cﬁ⁄
) {

2119 
	`a•rötf
(
out
[0] + 
löe
++, "%svÆue:\"%s\"", 
tmp
, 
vÆue_°rög
);

2121 
	`a•rötf
(
out
[0] + 
löe
++, "%svÆue:%s", 
tmp
, 
vÆue_°rög
);

2125 
	`a•rötf
(
out
[0] + 
löe
++, "%ssour˚:%s", 
tmp
, 
sour˚_°rög
);

2128 
	`a•rötf
(
out
[0] + 
löe
++, "%s°©us:%s", 
tmp
, 
	`PMIX_VAR_IS_DEFAULT_ONLY
(
v¨
[0]) ? "read-only" : "writeable");

2131 
	`a•rötf
(
out
[0] + 
löe
++, "%¶evñ:%d", 
tmp
, 
v¨
->
mbv_öfo_lvl
 + 1);

2134 i‡(
v¨
->
mbv_des¸ùti⁄
) {

2135 
	`a•rötf
(
out
[0] + 
löe
++, "%shñp:%s", 
tmp
, 
v¨
->
mbv_des¸ùti⁄
);

2138 i‡(
NULL
 !
v¨
->
mbv_íumî©‹
) {

2139 
i
 = 0 ; i < 
íum_cou¡
 ; ++i) {

2140 c⁄° *
íum_°rög
 = 
NULL
;

2141 
íum_vÆue
;

2143 
ªt
 = 
v¨
->
mbv_íumî©‹
->
	`gë_vÆue
(v¨->mbv_íumî©‹, 
i
, &
íum_vÆue
,

2144 &
íum_°rög
);

2145 i‡(
PMIX_SUCCESS
 !
ªt
) {

2149 
	`a•rötf
(
out
[0] + 
löe
++, "%£numî©‹:vÆue:%d:%s", 
tmp
, 
íum_vÆue
, 
íum_°rög
);

2154 
	`a•rötf
(
out
[0] + 
löe
++, "%sdïªˇãd:%s", 
tmp
, 
	`PMIX_VAR_IS_DEPRECATED
(
v¨
[0]) ? "yes" : "no");

2156 
	`a•rötf
(
out
[0] + 
löe
++, "%°y≥:%s", 
tmp
, 
pmix_v¨_ty≥_«mes
[
v¨
->
mbv_ty≥
]);

2159 i‡(
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0])) {

2160 
	`a•rötf
(
out
[0] + 
löe
++, "%ssyn⁄ym_of:«me:%s", 
tmp
, 
‹igöÆ
->
mbv_fuŒ_«me
);

2161 } i‡(
	`pmix_vÆue_¨øy_gë_size
(&
v¨
->
mbv_syn⁄yms
)) {

2162 
i
 = 0 ; i < 
syn⁄ym_cou¡
 ; ++i) {

2163 
pmix_mˇ_ba£_v¨_t
 *
syn⁄ym
;

2165 
ªt
 = 
	`v¨_gë
(
syn⁄yms
[
i
], &
syn⁄ym
, 
Ál£
);

2166 i‡(
PMIX_SUCCESS
 !
ªt
) {

2170 
	`a•rötf
(
out
[0] + 
löe
++, "%ssyn⁄ym:«me:%s", 
tmp
, 
syn⁄ym
->
mbv_fuŒ_«me
);

2174 
	`‰ì
 (
tmp
);

2175 } i‡(
PMIX_MCA_BASE_VAR_DUMP_READABLE
 =
ouçut_ty≥
) {

2177 *
out
 = (**Ë
	`ˇŒoc
 (4,  (*));

2178 i‡(
NULL
 =*
out
) {

2179 
	`‰ì
 (
vÆue_°rög
);

2180 
	`‰ì
 (
sour˚_°rög
);

2181  
PMIX_ERR_OUT_OF_RESOURCE
;

2184 
	`a•rötf
 (
out
[0], "%s \"%s\" (current value: \"%s\", data source: %s,Üevel: %d %s,Åype: %s",

2185 
	`PMIX_VAR_IS_DEFAULT_ONLY
(
v¨
[0]) ? "informational" : "parameter",

2186 
fuŒ_«me
, 
vÆue_°rög
, 
sour˚_°rög
, 
v¨
->
mbv_öfo_lvl
 + 1,

2187 
öfo_lvl_°rögs
[
v¨
->
mbv_öfo_lvl
], 
pmix_v¨_ty≥_«mes
[v¨->
mbv_ty≥
]);

2189 
tmp
 = 
out
[0][0];

2190 i‡(
	`PMIX_VAR_IS_DEPRECATED
(
v¨
[0])) {

2191 
	`a•rötf
 (
out
[0], "%s, dïªˇãd", 
tmp
);

2192 
	`‰ì
 (
tmp
);

2193 
tmp
 = 
out
[0][0];

2197 i‡(
	`PMIX_VAR_IS_SYNONYM
(
v¨
[0])) {

2198 
	`a•rötf
(
out
[0], "%s, syn⁄ym of: %s)", 
tmp
, 
‹igöÆ
->
mbv_fuŒ_«me
);

2199 
	`‰ì
 (
tmp
);

2200 } i‡(
syn⁄ym_cou¡
) {

2201 
	`a•rötf
(
out
[0], "%s, syn⁄yms: ", 
tmp
);

2202 
	`‰ì
 (
tmp
);

2204 
i
 = 0 ; i < 
syn⁄ym_cou¡
 ; ++i) {

2205 
pmix_mˇ_ba£_v¨_t
 *
syn⁄ym
;

2207 
ªt
 = 
	`v¨_gë
(
syn⁄yms
[
i
], &
syn⁄ym
, 
Ál£
);

2208 i‡(
PMIX_SUCCESS
 !
ªt
) {

2212 
tmp
 = 
out
[0][0];

2213 i‡(
syn⁄ym_cou¡
 =
i
+1) {

2214 
	`a•rötf
(
out
[0], "%s%s)", 
tmp
, 
syn⁄ym
->
mbv_fuŒ_«me
);

2216 
	`a•rötf
(
out
[0], "%s%s, ", 
tmp
, 
syn⁄ym
->
mbv_fuŒ_«me
);

2218 
	`‰ì
(
tmp
);

2221 
	`a•rötf
(
out
[0], "%s)", 
tmp
);

2222 
	`‰ì
(
tmp
);

2225 
löe
++;

2227 i‡(
v¨
->
mbv_des¸ùti⁄
) {

2228 
	`a•rötf
(
out
[0] + 
löe
++, "%s", 
v¨
->
mbv_des¸ùti⁄
);

2231 i‡(
NULL
 !
v¨
->
mbv_íumî©‹
) {

2232 *
vÆues
;

2234 
ªt
 = 
v¨
->
mbv_íumî©‹
->
	`dump
(v¨->mbv_íumî©‹, &
vÆues
);

2235 i‡(
PMIX_SUCCESS
 =
ªt
) {

2236 
	`a•rötf
 (
out
[0] + 
löe
++, "VÆid vÆues: %s", 
vÆues
);

2237 
	`‰ì
 (
vÆues
);

2240 } i‡(
PMIX_MCA_BASE_VAR_DUMP_SIMPLE
 =
ouçut_ty≥
) {

2241 *
out
 = (**Ë
	`ˇŒoc
 (2,  (*));

2242 i‡(
NULL
 =*
out
) {

2243 
	`‰ì
 (
vÆue_°rög
);

2244 
	`‰ì
 (
sour˚_°rög
);

2245  
PMIX_ERR_OUT_OF_RESOURCE
;

2248 
	`a•rötf
(
out
[0], "%s=%†(%s)", 
v¨
->
mbv_fuŒ_«me
, 
vÆue_°rög
, 
sour˚_°rög
);

2251 
	`‰ì
 (
vÆue_°rög
);

2252 
	`‰ì
 (
sour˚_°rög
);

2254  
PMIX_SUCCESS
;

2255 
	}
}

	@mca/base/pmix_mca_base_var.h

60 #i‚de‡
PMIX_MCA_BASE_VAR_H


61 
	#PMIX_MCA_BASE_VAR_H


	)

63 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

65 
	~"§c/˛ass/pmix_li°.h
"

66 
	~"§c/˛ass/pmix_vÆue_¨øy.h
"

67 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨_íum.h
"

68 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨_group.h
"

69 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_‰amew‹k.h
"

70 
	~"§c/mˇ/mˇ.h
"

77 
	mPMIX_MCA_BASE_VAR_TYPE_INT
,

79 
	mPMIX_MCA_BASE_VAR_TYPE_UNSIGNED_INT
,

81 
	mPMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG
,

83 
	mPMIX_MCA_BASE_VAR_TYPE_UNSIGNED_LONG_LONG
,

85 
	mPMIX_MCA_BASE_VAR_TYPE_SIZE_T
,

87 
	mPMIX_MCA_BASE_VAR_TYPE_STRING
,

89 
	mPMIX_MCA_BASE_VAR_TYPE_VERSION_STRING
,

91 
	mPMIX_MCA_BASE_VAR_TYPE_BOOL
,

93 
	mPMIX_MCA_BASE_VAR_TYPE_DOUBLE
,

95 
	mPMIX_MCA_BASE_VAR_TYPE_MAX


96 } 
	tpmix_mˇ_ba£_v¨_ty≥_t
;

98 c⁄° *
pmix_v¨_ty≥_«mes
[];

105 
	mPMIX_MCA_BASE_VAR_SOURCE_DEFAULT
,

107 
	mPMIX_MCA_BASE_VAR_SOURCE_COMMAND_LINE
,

109 
	mPMIX_MCA_BASE_VAR_SOURCE_ENV
,

111 
	mPMIX_MCA_BASE_VAR_SOURCE_FILE
,

113 
	mPMIX_MCA_BASE_VAR_SOURCE_SET
,

115 
	mPMIX_MCA_BASE_VAR_SOURCE_OVERRIDE
,

118 
	mPMIX_MCA_BASE_VAR_SOURCE_MAX


119 } 
	tpmix_mˇ_ba£_v¨_sour˚_t
;

132 
	mPMIX_MCA_BASE_VAR_SCOPE_CONSTANT
,

136 
	mPMIX_MCA_BASE_VAR_SCOPE_READONLY
,

138 
	mPMIX_MCA_BASE_VAR_SCOPE_LOCAL
,

141 
	mPMIX_MCA_BASE_VAR_SCOPE_GROUP
,

144 
	mPMIX_MCA_BASE_VAR_SCOPE_GROUP_EQ
,

147 
	mPMIX_MCA_BASE_VAR_SCOPE_ALL
,

150 
	mPMIX_MCA_BASE_VAR_SCOPE_ALL_EQ
,

151 
	mPMIX_MCA_BASE_VAR_SCOPE_MAX


152 } 
	tpmix_mˇ_ba£_v¨_sc›e_t
;

155 
	mPMIX_INFO_LVL_1
,

156 
	mPMIX_INFO_LVL_2
,

157 
	mPMIX_INFO_LVL_3
,

158 
	mPMIX_INFO_LVL_4
,

159 
	mPMIX_INFO_LVL_5
,

160 
	mPMIX_INFO_LVL_6
,

161 
	mPMIX_INFO_LVL_7
,

162 
	mPMIX_INFO_LVL_8
,

163 
	mPMIX_INFO_LVL_9
,

164 
	mPMIX_INFO_LVL_MAX


165 } 
	tpmix_mˇ_ba£_v¨_öfo_lvl_t
;

168 
	mPMIX_MCA_BASE_VAR_SYN_FLAG_DEPRECATED
 = 0x0001,

169 
	mPMIX_MCA_BASE_VAR_SYN_FLAG_INTERNAL
 = 0x0002

170 } 
	tpmix_mˇ_ba£_v¨_syn_Êag_t
;

174 
	mPMIX_MCA_BASE_VAR_FLAG_INTERNAL
 = 0x0001,

177 
	mPMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
 = 0x0002,

179 
	mPMIX_MCA_BASE_VAR_FLAG_SETTABLE
 = 0x0004,

181 
	mPMIX_MCA_BASE_VAR_FLAG_DEPRECATED
 = 0x0008,

183 
	mPMIX_MCA_BASE_VAR_FLAG_OVERRIDE
 = 0x0010,

185 
	mPMIX_MCA_BASE_VAR_FLAG_ENVIRONMENT_ONLY
 = 0x0020,

193 
	mPMIX_MCA_BASE_VAR_FLAG_DWG
 = 0x0040

194 } 
	tpmix_mˇ_ba£_v¨_Êag_t
;

202 
	mötvÆ
;

204 
	muötvÆ
;

206 *
	m°rögvÆ
;

208 
boﬁ
 
	mboﬁvÆ
;

210 
	mulvÆ
;

212 
	muŒvÆ
;

214 
size_t
 
	msizëvÆ
;

216 
	mlfvÆ
;

217 } 
	tpmix_mˇ_ba£_v¨_°‹age_t
;

223 
	spmix_mˇ_ba£_v¨_t
 {

225 
pmix_obje˘_t
 
	msu≥r
;

229 
	mmbv_ödex
;

233 
	mmbv_group_ödex
;

236 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
	mmbv_öfo_lvl
;

239 
pmix_mˇ_ba£_v¨_ty≥_t
 
	mmbv_ty≥
;

242 *
	mmbv_v¨übÀ_«me
;

244 *
	mmbv_fuŒ_«me
;

246 *
	mmbv_l⁄g_«me
;

255 
pmix_vÆue_¨øy_t
 
	mmbv_syn⁄yms
;

258 
pmix_mˇ_ba£_v¨_Êag_t
 
	mmbv_Êags
;

261 
pmix_mˇ_ba£_v¨_sc›e_t
 
	mmbv_sc›e
;

264 
pmix_mˇ_ba£_v¨_sour˚_t
 
	mmbv_sour˚
;

267 
	mmbv_syn⁄ym_f‹
;

270 *
	mmbv_des¸ùti⁄
;

273 *
	mmbv_sour˚_fûe
;

276 
pmix_mˇ_ba£_v¨_íum_t
 *
	mmbv_íumî©‹
;

279 
	mmbv_böd
;

282 
pmix_mˇ_ba£_v¨_°‹age_t
 *
	mmbv_°‹age
;

285 *
	mmbv_fûe_vÆue
;

290 
pmix_mˇ_ba£_v¨_t
 
	tpmix_mˇ_ba£_v¨_t
;

296 
BEGIN_C_DECLS


301 
PMIX_CLASS_DECLARATION
(
pmix_mˇ_ba£_v¨_t
);

312 
pmix_mˇ_ba£_v¨_öô
();

403 
pmix_mˇ_ba£_v¨_ªgi°î
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

404 c⁄° *
comp⁄ít_«me
, c⁄° *
v¨übÀ_«me
,

405 c⁄° *
des¸ùti⁄
, 
pmix_mˇ_ba£_v¨_ty≥_t
 
ty≥
,

406 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
, 
böd
, 
pmix_mˇ_ba£_v¨_Êag_t
 
Êags
,

407 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
öfo_lvl
,

408 
pmix_mˇ_ba£_v¨_sc›e_t
 
sc›e
, *
°‹age
);

419 
pmix_mˇ_ba£_comp⁄ít_v¨_ªgi°î
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
,

420 c⁄° *
v¨übÀ_«me
, c⁄° *
des¸ùti⁄
,

421 
pmix_mˇ_ba£_v¨_ty≥_t
 
ty≥
, 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
,

422 
böd
, 
pmix_mˇ_ba£_v¨_Êag_t
 
Êags
,

423 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
öfo_lvl
,

424 
pmix_mˇ_ba£_v¨_sc›e_t
 
sc›e
, *
°‹age
);

431 
pmix_mˇ_ba£_‰amew‹k_v¨_ªgi°î
 (c⁄° 
pmix_mˇ_ba£_‰amew‹k_t
 *
‰amew‹k
,

432 c⁄° *
v¨übÀ_«me
,

433 c⁄° *
hñp_msg
, 
pmix_mˇ_ba£_v¨_ty≥_t
 
ty≥
,

434 
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
, 
böd
,

435 
pmix_mˇ_ba£_v¨_Êag_t
 
Êags
,

436 
pmix_mˇ_ba£_v¨_öfo_lvl_t
 
öfo_Àvñ
,

437 
pmix_mˇ_ba£_v¨_sc›e_t
 
sc›e
, *
°‹age
);

474 
pmix_mˇ_ba£_v¨_ªgi°î_syn⁄ym
 (
syn⁄ym_f‹
, c⁄° *
¥oje˘_«me
,

475 c⁄° *
‰amew‹k_«me
,

476 c⁄° *
comp⁄ít_«me
,

477 c⁄° *
syn⁄ym_«me
,

478 
pmix_mˇ_ba£_v¨_syn_Êag_t
 
Êags
);

492 
pmix_mˇ_ba£_v¨_dîegi°î
(
v¨i
);

515 
pmix_mˇ_ba£_v¨_gë_vÆue
 (
v¨i
, c⁄° *
vÆue
,

516 
pmix_mˇ_ba£_v¨_sour˚_t
 *
sour˚
,

517 c⁄° **
sour˚_fûe
);

540 
pmix_mˇ_ba£_v¨_£t_vÆue
 (
v¨i
, c⁄° *
vÆue
, 
size_t
 
size
,

541 
pmix_mˇ_ba£_v¨_sour˚_t
 
sour˚
,

542 c⁄° *
sour˚_fûe
);

557 
pmix_mˇ_ba£_v¨_ív_«me
(c⁄° *
∑øm_«me
,

558 **
ív_«me
);

577 
pmix_mˇ_ba£_v¨_föd
 (c⁄° *
¥oje˘_«me
,

578 c⁄° *
ty≥_«me
,

579 c⁄° *
comp⁄ít_«me
,

580 c⁄° *
∑øm_«me
);

590 
pmix_mˇ_ba£_v¨_föd_by_«me
 (c⁄° *
fuŒ_«me
, *
v¨i
);

620 
pmix_mˇ_ba£_v¨_check_ex˛usive
 (c⁄° *
¥oje˘
,

621 c⁄° *
ty≥_a
,

622 c⁄° *
comp⁄ít_a
,

623 c⁄° *
∑øm_a
,

624 c⁄° *
ty≥_b
,

625 c⁄° *
comp⁄ít_b
,

626 c⁄° *
∑øm_b
);

639 
pmix_mˇ_ba£_v¨_£t_Êag
(
v¨i
, 
pmix_mˇ_ba£_v¨_Êag_t
 
Êag
,

640 
boﬁ
 
£t
);

654 
pmix_mˇ_ba£_v¨_gë
 (
v¨i
, c⁄° 
pmix_mˇ_ba£_v¨_t
 **
v¨
);

667 
pmix_mˇ_ba£_v¨_gë_cou¡
 ();

686 
pmix_mˇ_ba£_v¨_buûd_ív
(***
ív
, *
num_ív
,

687 
boﬁ
 
öã∫Æ
);

703 
pmix_mˇ_ba£_v¨_föÆize
();

707 
	mPMIX_MCA_BASE_VAR_DUMP_READABLE
 = 0,

709 
	mPMIX_MCA_BASE_VAR_DUMP_PARSABLE
 = 1,

711 
	mPMIX_MCA_BASE_VAR_DUMP_SIMPLE
 = 2

712 } 
	tpmix_mˇ_ba£_v¨_dump_ty≥_t
;

724 
pmix_mˇ_ba£_v¨_dump
(
v¨i
, ***
out
, 
pmix_mˇ_ba£_v¨_dump_ty≥_t
 
ouçut_ty≥
);

726 
	#MCA_COMPILETIME_VER
 "¥öt_compûëime_vîsi⁄"

	)

727 
	#MCA_RUNTIME_VER
 "¥öt_ru¡ime_vîsi⁄"

	)

729 
pmix_mˇ_ba£_v¨_ˇche_fûes
 (
boﬁ
 
ªl_∑th_£¨ch
);

735 
pmix_mˇ_ba£_v¨_¥o˚ss_ív_li°
(***
¨gv
);

736 
pmix_mˇ_ba£_v¨_¥o˚ss_ív_li°_‰om_fûe
(***
¨gv
);

738 
	gEND_C_DECLS


	@mca/base/pmix_mca_base_var_enum.c

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨_íum.h
"

27 
	~"§c/mˇ/ba£/ba£.h
"

28 
	~"§c/utû/¨gv.h
"

29 
	~"§c/utû/îr‹.h
"

31 
	~<°dio.h
>

32 
	~<°rög.h
>

33 
	~<î∫o.h
>

35 
pmix_mˇ_ba£_v¨_íum_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
);

36 
pmix_mˇ_ba£_v¨_íum_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
);

37 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_v¨_íum_t
, 
pmix_obje˘_t
, 
pmix_mˇ_ba£_v¨_íum_c⁄°ru˘‹
,

38 
pmix_mˇ_ba£_v¨_íum_de°ru˘‹
);

40 
pmix_mˇ_ba£_v¨_íum_Êag_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
íumî©‹
);

41 
pmix_mˇ_ba£_v¨_íum_Êag_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
íumî©‹
);

42 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_v¨_íum_Êag_t
, 
pmix_obje˘_t
, 
pmix_mˇ_ba£_v¨_íum_Êag_c⁄°ru˘‹
,

43 
pmix_mˇ_ba£_v¨_íum_Êag_de°ru˘‹
);

45 
íum_dump
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, **
out
);

46 
íum_gë_cou¡
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, *
cou¡
);

47 
íum_gë_vÆue
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, 
ödex
, *
vÆue
, c⁄° **
°rög_vÆue
);

49 
	$pmix_mˇ_ba£_v¨_íum_boﬁ_gë_cou¡
 (
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
, *
cou¡
)

51 *
cou¡
 = 2;

52  
PMIX_SUCCESS
;

53 
	}
}

55 
	$pmix_mˇ_ba£_v¨_íum_boﬁ_gë_vÆue
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, 
ödex
,

56 *
vÆue
, c⁄° **
°rög_vÆue
)

58 i‡(1 < 
ödex
) {

59  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

62 *
vÆue
 = 
ödex
 ? 1 : 0;

63 *
°rög_vÆue
 = 
ödex
 ? "true" : "false";

65  
PMIX_SUCCESS
;

66 
	}
}

68 
	$pmix_mˇ_ba£_v¨_íum_boﬁ_vfs
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° *
°rög_vÆue
,

69 *
vÆue
)

71 *
tmp
;

72 
v
;

75 
°rög_vÆue
 +
	`°r•n
 (string_value, " \t\n\v\f\r");

77 
v
 = 
	`°πﬁ
 (
°rög_vÆue
, &
tmp
, 10);

78 i‡(*
tmp
 != '\0') {

79 i‡(0 =
	`°rcmp
 (
°rög_vÆue
, "true") || 0 == strcmp (string_value, "t") ||

80 0 =
	`°rcmp
 (
°rög_vÆue
, "enabled") || 0 == strcmp (string_value, "yes")) {

81 
v
 = 1;

82 } i‡(0 =
	`°rcmp
 (
°rög_vÆue
, "false") || 0 == strcmp (string_value, "f") ||

83 0 =
	`°rcmp
 (
°rög_vÆue
, "disabled") || 0 == strcmp (string_value, "no")) {

84 
v
 = 0;

86  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

90 *
vÆue
 = !!
v
;

92  
PMIX_SUCCESS
;

93 
	}
}

95 
	$pmix_mˇ_ba£_v¨_íum_boﬁ_sfv
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° 
vÆue
,

96 **
°rög_vÆue
)

98 i‡(
°rög_vÆue
) {

99 *
°rög_vÆue
 = 
	`°rdup
 (
vÆue
 ? "true" : "false");

102  
PMIX_SUCCESS
;

103 
	}
}

105 
	$pmix_mˇ_ba£_v¨_íum_boﬁ_dump
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, **
out
)

107 *
out
 = 
	`°rdup
 ("0: f|false|disabled|no, 1:Å|true|enabled|yes");

108  *
out
 ? 
PMIX_SUCCESS
 : 
PMIX_ERR_OUT_OF_RESOURCE
;

109 
	}
}

111 
pmix_mˇ_ba£_v¨_íum_t
 
	gpmix_mˇ_ba£_v¨_íum_boﬁ
 = {

112 .
su≥r
 = 
PMIX_OBJ_STATIC_INIT
(
pmix_obje˘_t
),

113 .
	gíum_is_°©ic
 = 
åue
,

114 .
	gíum_«me
 = "boolean",

115 .
	ggë_cou¡
 = 
pmix_mˇ_ba£_v¨_íum_boﬁ_gë_cou¡
,

116 .
	ggë_vÆue
 = 
pmix_mˇ_ba£_v¨_íum_boﬁ_gë_vÆue
,

117 .
	gvÆue_‰om_°rög
 = 
pmix_mˇ_ba£_v¨_íum_boﬁ_vfs
,

118 .
	g°rög_‰om_vÆue
 = 
pmix_mˇ_ba£_v¨_íum_boﬁ_sfv
,

119 .
	gdump
 = 
pmix_mˇ_ba£_v¨_íum_boﬁ_dump


123 
pmix_mˇ_ba£_v¨_íum_vÆue_t
 
	gvîbo£_vÆues
[] = {

124 {
PMIX_MCA_BASE_VERBOSE_NONE
, "none"},

125 {
PMIX_MCA_BASE_VERBOSE_ERROR
, "error"},

126 {
PMIX_MCA_BASE_VERBOSE_COMPONENT
, "component"},

127 {
PMIX_MCA_BASE_VERBOSE_WARN
, "warn"},

128 {
PMIX_MCA_BASE_VERBOSE_INFO
, "info"},

129 {
PMIX_MCA_BASE_VERBOSE_TRACE
, "trace"},

130 {
PMIX_MCA_BASE_VERBOSE_DEBUG
, "debug"},

131 {
PMIX_MCA_BASE_VERBOSE_MAX
, "max"},

132 {-1, 
NULL
}

135 
	$pmix_mˇ_ba£_v¨_íum_vîbo£_vfs
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° *
°rög_vÆue
,

136 *
vÆue
)

138 *
tmp
;

139 
v
;

142 
°rög_vÆue
 +
	`°r•n
 (string_value, " \t\n\v\f\r");

144 
v
 = 
	`°πﬁ
 (
°rög_vÆue
, &
tmp
, 10);

145 i‡(*
tmp
 != '\0') {

146 
i
 = 0 ; 
vîbo£_vÆues
[i].
°rög
 ; ++i) {

147 i‡(0 =
	`°rcmp
 (
vîbo£_vÆues
[
i
].
°rög
, 
°rög_vÆue
)) {

148 *
vÆue
 = 
vîbo£_vÆues
[
i
].value;

149  
PMIX_SUCCESS
;

153  
PMIX_ERR_NOT_FOUND
;

154 } i‡(
v
 < 
PMIX_MCA_BASE_VERBOSE_NONE
) {

155 
v
 = 
PMIX_MCA_BASE_VERBOSE_NONE
;

156 } i‡(
v
 > 
PMIX_MCA_BASE_VERBOSE_MAX
) {

157 
v
 = 
PMIX_MCA_BASE_VERBOSE_MAX
;

160 *
vÆue
 = 
v
;

162  
PMIX_SUCCESS
;

163 
	}
}

165 
	$pmix_mˇ_ba£_v¨_íum_vîbo£_sfv
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° 
vÆue
,

166 **
°rög_vÆue
)

168 
ªt
;

170 i‡(
vÆue
 < 0 || value > 100) {

171  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

174 
i
 = 0 ; 
vîbo£_vÆues
[i].
°rög
 ; ++i) {

175 i‡(
vîbo£_vÆues
[
i
].
vÆue
 == value) {

176 *
°rög_vÆue
 = 
	`°rdup
 (
vîbo£_vÆues
[
i
].
°rög
);

177  
PMIX_SUCCESS
;

181 i‡(
°rög_vÆue
) {

182 
ªt
 = 
	`a•rötf
 (
°rög_vÆue
, "%d", 
vÆue
);

183 i‡(0 > 
ªt
) {

184  
PMIX_ERR_OUT_OF_RESOURCE
;

188  
PMIX_SUCCESS
;

189 
	}
}

191 
	$pmix_mˇ_ba£_v¨_íum_vîbo£_dump
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, **
out
)

193 *
tmp
;

194 
ªt
;

196 
ªt
 = 
	`íum_dump
 (
£lf
, 
out
);

197 i‡(
PMIX_SUCCESS
 !
ªt
) {

198  
ªt
;

201 
ªt
 = 
	`a•rötf
 (&
tmp
, "%s, 0 - 100", *
out
);

202 
	`‰ì
 (*
out
);

203 i‡(0 > 
ªt
) {

204 *
out
 = 
NULL
;

205  
PMIX_ERR_OUT_OF_RESOURCE
;

208 *
out
 = 
tmp
;

210  
PMIX_SUCCESS
;

211 
	}
}

213 
pmix_mˇ_ba£_v¨_íum_t
 
	gpmix_mˇ_ba£_v¨_íum_vîbo£
 = {

214 .
su≥r
 = 
PMIX_OBJ_STATIC_INIT
(
pmix_obje˘_t
),

215 .
	gíum_is_°©ic
 = 
åue
,

216 .
	gíum_«me
 = "verbosity",

217 .
	ggë_cou¡
 = 
íum_gë_cou¡
,

218 .
	ggë_vÆue
 = 
íum_gë_vÆue
,

219 .
	gvÆue_‰om_°rög
 = 
pmix_mˇ_ba£_v¨_íum_vîbo£_vfs
,

220 .
	g°rög_‰om_vÆue
 = 
pmix_mˇ_ba£_v¨_íum_vîbo£_sfv
,

221 .
	gdump
 = 
pmix_mˇ_ba£_v¨_íum_vîbo£_dump
,

222 .
	gíum_vÆue_cou¡
 = 8,

223 .
	gíum_vÆues
 = 
vîbo£_vÆues
,

227 
	$pmix_mˇ_ba£_v¨_íum_¸óã
 (c⁄° *
«me
, c⁄° 
pmix_mˇ_ba£_v¨_íum_vÆue_t
 *
vÆues
, 
pmix_mˇ_ba£_v¨_íum_t
 **
íumî©‹
)

229 
pmix_mˇ_ba£_v¨_íum_t
 *
√w_íum
;

230 
i
;

232 *
íumî©‹
 = 
NULL
;

234 
√w_íum
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_v¨_íum_t
);

235 i‡(
NULL
 =
√w_íum
) {

236  
PMIX_ERR_OUT_OF_RESOURCE
;

239 
√w_íum
->
íum_«me
 = 
	`°rdup
 (
«me
);

240 i‡(
NULL
 =
√w_íum
->
íum_«me
) {

241  
PMIX_ERR_OUT_OF_RESOURCE
;

244 
i
 = 0 ; 
vÆues
[i].
°rög
 ; ++i);

245 
√w_íum
->
íum_vÆue_cou¡
 = 
i
;

248 
√w_íum
->
íum_vÆues
 = 
	`ˇŒoc
 (√w_íum->
íum_vÆue_cou¡
 + 1,  (*new_enum->enum_values));

249 i‡(
NULL
 =
√w_íum
->
íum_vÆues
) {

250 
	`PMIX_RELEASE
(
√w_íum
);

251  
PMIX_ERR_OUT_OF_RESOURCE
;

254 
i
 = 0 ; i < 
√w_íum
->
íum_vÆue_cou¡
 ; ++i) {

255 
√w_íum
->
íum_vÆues
[
i
].
vÆue
 = 
vÆues
[i].value;

256 
√w_íum
->
íum_vÆues
[
i
].
°rög
 = 
	`°rdup
 (
vÆues
[i].string);

259 *
íumî©‹
 = 
√w_íum
;

261  
PMIX_SUCCESS
;

262 
	}
}

264 
	$pmix_mˇ_ba£_v¨_íum_¸óã_Êag
 (c⁄° *
«me
, c⁄° 
pmix_mˇ_ba£_v¨_íum_vÆue_Êag_t
 *
Êags
, 
pmix_mˇ_ba£_v¨_íum_Êag_t
 **
íumî©‹
)

266 
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
√w_íum
;

267 
i
;

269 *
íumî©‹
 = 
NULL
;

271 
√w_íum
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_v¨_íum_Êag_t
);

272 i‡(
NULL
 =
√w_íum
) {

273  
PMIX_ERR_OUT_OF_RESOURCE
;

276 
√w_íum
->
su≥r
.
íum_«me
 = 
	`°rdup
 (
«me
);

277 i‡(
NULL
 =
√w_íum
->
su≥r
.
íum_«me
) {

278  
PMIX_ERR_OUT_OF_RESOURCE
;

281 
i
 = 0 ; 
Êags
[i].
°rög
 ; ++i);

282 
√w_íum
->
su≥r
.
íum_vÆue_cou¡
 = 
i
;

285 
√w_íum
->
íum_Êags
 = 
	`ˇŒoc
 (√w_íum->
su≥r
.
íum_vÆue_cou¡
 + 1,  (*new_enum->enum_flags));

286 i‡(
NULL
 =
√w_íum
->
íum_Êags
) {

287 
	`PMIX_RELEASE
(
√w_íum
);

288  
PMIX_ERR_OUT_OF_RESOURCE
;

291 
Æl_Êags
 = 0;

292 
i
 = 0 ; i < 
√w_íum
->
su≥r
.
íum_vÆue_cou¡
 ; ++i) {

293 
√w_íum
->
íum_Êags
[
i
].
Êag
 = 
Êags
[i].flag;

294 
√w_íum
->
íum_Êags
[
i
].
°rög
 = 
	`°rdup
 (
Êags
[i].string);

295 
√w_íum
->
íum_Êags
[
i
].
c⁄Êi˘ög_Êag
 = 
Êags
[i].conflicting_flag;

298 
	`as£π
 (!(
Êags
[
i
].
Êag
 & (flags[i].flag - 1)));

299 
	`as£π
 (!(
Êags
[
i
].
Êag
 & fœgs[i].
c⁄Êi˘ög_Êag
));

300 
	`as£π
 (!(
Æl_Êags
 & 
Êags
[
i
].
Êag
));

301 
	`as£π
 (
Êags
[
i
].
Êag
);

302 
Æl_Êags
 |
Êags
[
i
].
Êag
;

305 *
íumî©‹
 = 
√w_íum
;

307  
PMIX_SUCCESS
;

308 
	}
}

310 
	$íum_dump
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, **
out
)

312 
i
;

313 *
tmp
;

314 
ªt
;

316 *
out
 = 
NULL
;

318 i‡(
NULL
 =
£lf
) {

319  
PMIX_ERROR
;

322 
tmp
 = 
NULL
;

323 
i
 = 0; i < 
£lf
->
íum_vÆue_cou¡
 && sñf->
íum_vÆues
[i].
°rög
 ; ++i) {

324 
ªt
 = 
	`a•rötf
 (
out
, "%s%s%d:\"%s\"", 
tmp
 ?Åm∞: "",Åm∞? ", " : "", 
£lf
->
íum_vÆues
[
i
].
vÆue
,

325 
£lf
->
íum_vÆues
[
i
].
°rög
);

326 i‡(
tmp
Ë
	`‰ì
 (tmp);

327 i‡(0 > 
ªt
) {

328  
PMIX_ERR_OUT_OF_RESOURCE
;

330 
tmp
 = *
out
;

333  
PMIX_SUCCESS
;

334 
	}
}

336 
	$íum_gë_cou¡
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, *
cou¡
)

338 *
cou¡
 = 
£lf
->
íum_vÆue_cou¡
;

339  
PMIX_SUCCESS
;

340 
	}
}

342 
	$íum_gë_vÆue
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, 
ödex
, *
vÆue
, c⁄° **
°rög_vÆue
)

344 
cou¡
, 
ªt
;

346 
ªt
 = 
£lf
->
	`gë_cou¡
(£lf, &
cou¡
);

347 i‡(
PMIX_SUCCESS
 !
ªt
) {

348  
ªt
;

351 i‡(
ödex
 >
cou¡
) {

352  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

355 i‡(
vÆue
) {

356 *
vÆue
 = 
£lf
->
íum_vÆues
[
ödex
].value;

359 i‡(
°rög_vÆue
) {

360 *
°rög_vÆue
 = 
	`°rdup
 (
£lf
->
íum_vÆues
[
ödex
].
°rög
);

363  
PMIX_SUCCESS
;

364 
	}
}

366 
	$íum_vÆue_‰om_°rög
(
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° *
°rög_vÆue
, *
vÆue_out
) {

367 
vÆue
, 
cou¡
, 
ªt
, 
i
;

368 
boﬁ
 
is_öt
;

369 *
tmp
;

371 
ªt
 = 
£lf
->
	`gë_cou¡
(£lf, &
cou¡
);

372 i‡(
PMIX_SUCCESS
 !
ªt
) {

373  
ªt
;

376 
vÆue
 = 
	`°πﬁ
(
°rög_vÆue
, &
tmp
, 0);

379 
is_öt
 = 
tmp
[0] == '\0';

381 
i
 = 0 ; i < 
cou¡
 ; ++i) {

382 i‡((
is_öt
 && 
vÆue
 =
£lf
->
íum_vÆues
[
i
].value) ||

383 0 =
	`°rˇ£cmp
 (
°rög_vÆue
, 
£lf
->
íum_vÆues
[
i
].
°rög
)) {

388 i‡(
i
 =
cou¡
) {

389  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

392 *
vÆue_out
 = 
£lf
->
íum_vÆues
[
i
].
vÆue
;

394  
PMIX_SUCCESS
;

395 
	}
}

397 
	$íum_°rög_‰om_vÆue
(
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° 
vÆue
, **
°rög_vÆue
) {

398 
cou¡
, 
ªt
, 
i
;

400 
ªt
 = 
£lf
->
	`gë_cou¡
(£lf, &
cou¡
);

401 i‡(
PMIX_SUCCESS
 !
ªt
) {

402  
ªt
;

405 
i
 = 0 ; i < 
cou¡
 ; ++i) {

406 i‡(
vÆue
 =
£lf
->
íum_vÆues
[
i
].value) {

411 i‡(
i
 =
cou¡
) {

412  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

415 i‡(
°rög_vÆue
) {

416 *
°rög_vÆue
 = 
	`°rdup
 (
£lf
->
íum_vÆues
[
i
].
°rög
);

419  
PMIX_SUCCESS
;

420 
	}
}

422 
	$pmix_mˇ_ba£_v¨_íum_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
)

424 
	`mem£t
 ((*Ë
íumî©‹
 +  (íumî©‹->
su≥r
), 0 , (*enumerator) - (enumerator->super));

426 
íumî©‹
->
gë_vÆue
 = 
íum_gë_vÆue
;

427 
íumî©‹
->
gë_cou¡
 = 
íum_gë_cou¡
;

428 
íumî©‹
->
vÆue_‰om_°rög
 = 
íum_vÆue_‰om_°rög
;

429 
íumî©‹
->
°rög_‰om_vÆue
 = 
íum_°rög_‰om_vÆue
;

430 
íumî©‹
->
dump
 = 
íum_dump
;

431 
íumî©‹
->
íum_is_°©ic
 = 
Ál£
;

432 
	}
}

434 
	$pmix_mˇ_ba£_v¨_íum_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_t
 *
íumî©‹
)

436 i‡(
íumî©‹
->
íum_«me
) {

437 
	`‰ì
 (
íumî©‹
->
íum_«me
);

441 i‡(
íumî©‹
->
íum_vÆues
) {

442 
i
 = 0 ; i < 
íumî©‹
->
íum_vÆue_cou¡
 ; ++i) {

443 
	`‰ì
 ((*Ë
íumî©‹
->
íum_vÆues
[
i
].
°rög
);

445 
	`‰ì
 (
íumî©‹
->
íum_vÆues
);

447 
	}
}

449 
	$íum_gë_vÆue_Êag
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, 
ödex
, *
vÆue
, c⁄° **
°rög_vÆue
)

451 
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
Êag_íum
 = (pmix_mˇ_ba£_v¨_íum_Êag_à*Ë
£lf
;

452 
cou¡
, 
ªt
;

454 
ªt
 = 
£lf
->
	`gë_cou¡
(£lf, &
cou¡
);

455 i‡(
PMIX_SUCCESS
 !
ªt
) {

456  
ªt
;

459 i‡(
ödex
 >
cou¡
) {

460  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

463 i‡(
vÆue
) {

464 *
vÆue
 = 
Êag_íum
->
íum_Êags
[
ödex
].
Êag
;

467 i‡(
°rög_vÆue
) {

468 *
°rög_vÆue
 = 
	`°rdup
 (
Êag_íum
->
íum_Êags
[
ödex
].
°rög
);

471  
PMIX_SUCCESS
;

472 
	}
}

474 
	$íum_vÆue_‰om_°rög_Êag
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° *
°rög_vÆue
, *
vÆue_out
) {

475 
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
Êag_íum
 = (pmix_mˇ_ba£_v¨_íum_Êag_à*Ë
£lf
;

476 
vÆue
, 
cou¡
, 
ªt
, 
Êag
;

477 **
Êags
;

478 
boﬁ
 
is_öt
;

479 *
tmp
;

481 
ªt
 = 
£lf
->
	`gë_cou¡
(£lf, &
cou¡
);

482 i‡(
PMIX_SUCCESS
 !
ªt
) {

483  
ªt
;

486 
Êags
 = 
	`pmix_¨gv_•lô
 (
°rög_vÆue
, ',');

487 i‡(
NULL
 =
Êags
) {

488  
PMIX_ERR_BAD_PARAM
;

491 
Êag
 = 0;

493 
i
 = 0 ; 
Êags
[i] ; ++i) {

494 
vÆue
 = 
	`°πﬁ
 (
Êags
[
i
], &
tmp
, 0);

495 
is_öt
 = 
tmp
[0] == '\0';

497 
boﬁ
 
found
 = 
Ál£
, 
c⁄Êi˘
 = false;

498 
j
 = 0 ; j < 
cou¡
 ; ++j) {

499 i‡((
is_öt
 && (
vÆue
 =
Êag_íum
->
íum_Êags
[
i
].
Êag
)) ||

500 0 =
	`°rˇ£cmp
 (
Êags
[
i
], 
Êag_íum
->
íum_Êags
[i].
°rög
)) {

501 
found
 = 
åue
;

503 i‡(
Êag
 & 
Êag_íum
->
íum_Êags
[
i
].
c⁄Êi˘ög_Êag
) {

504 
c⁄Êi˘
 = 
åue
;

506 
Êag
 |
Êag_íum
->
íum_Êags
[
i
].flag;

513 i‡(!
found
 || 
c⁄Êi˘
) {

514 
	`pmix_¨gv_‰ì
 (
Êags
);

515  !
found
 ? 
PMIX_ERR_VALUE_OUT_OF_BOUNDS
 : 
PMIX_ERR_BAD_PARAM
;

519 
	`pmix_¨gv_‰ì
 (
Êags
);

520 *
vÆue_out
 = 
Êag
;

522  
PMIX_SUCCESS
;

523 
	}
}

525 
	$íum_°rög_‰om_vÆue_Êag
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, c⁄° 
vÆue
, **
°rög_vÆue
) {

526 
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
Êag_íum
 = (pmix_mˇ_ba£_v¨_íum_Êag_à*Ë
£lf
;

527 
cou¡
, 
ªt
, 
cuºít
;

528 *
out
 = 
NULL
, *
tmp
;

530 
ªt
 = 
£lf
->
	`gë_cou¡
(£lf, &
cou¡
);

531 i‡(
PMIX_SUCCESS
 !
ªt
) {

532  
ªt
;

535 
cuºít
 = 
vÆue
;

536 
i
 = 0 ; i < 
cou¡
 ; ++i) {

537 i‡(!(
Êag_íum
->
íum_Êags
[
i
].
Êag
 & 
cuºít
)) {

541 
tmp
 = 
out
;

543 
ªt
 = 
	`a•rötf
 (&
out
, "%s%s%s", 
tmp
 ?Åm∞: "",Åm∞? "," : "", 
Êag_íum
->
íum_Êags
[
i
].
°rög
);

544 
	`‰ì
 (
tmp
);

546 i‡(0 > 
ªt
) {

547  
PMIX_ERR_OUT_OF_RESOURCE
;

550 i‡(
vÆue
 & 
Êag_íum
->
íum_Êags
[
i
].
c⁄Êi˘ög_Êag
) {

551 
	`‰ì
 (
out
);

552  
PMIX_ERR_BAD_PARAM
;

555 
cuºít
 &~
Êag_íum
->
íum_Êags
[
i
].
Êag
;

558 i‡(
cuºít
) {

559 
	`‰ì
 (
out
);

560  
PMIX_ERR_VALUE_OUT_OF_BOUNDS
;

563 i‡(
°rög_vÆue
) {

564 *
°rög_vÆue
 = 
out
 ? ouà: 
	`°rdup
 ("");

566 
	`‰ì
 (
out
);

569  
PMIX_SUCCESS
;

570 
	}
}

572 
	$íum_dump_Êag
 (
pmix_mˇ_ba£_v¨_íum_t
 *
£lf
, **
out
)

574 
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
Êag_íum
 = (pmix_mˇ_ba£_v¨_íum_Êag_à*Ë
£lf
;

575 *
tmp
;

576 
ªt
;

578 *
out
 = 
NULL
;

580 i‡(
NULL
 =
£lf
) {

581  
PMIX_ERROR
;

584 *
out
 = 
	`°rdup
 ("Comma-delimitedÜist of: ");

585 i‡(
NULL
 =*
out
) {

586  
PMIX_ERR_OUT_OF_RESOURCE
;

589 
i
 = 0; i < 
£lf
->
íum_vÆue_cou¡
 ; ++i) {

590 
tmp
 = *
out
;

592 
ªt
 = 
	`a•rötf
 (
out
, "%s%s0x%x:\"%s\"", 
tmp
, 
i
 ? ", " : " ", 
Êag_íum
->
íum_Êags
[i].
Êag
,

593 
Êag_íum
->
íum_Êags
[
i
].
°rög
);

594 
	`‰ì
 (
tmp
);

595 i‡(0 > 
ªt
) {

596  
PMIX_ERR_OUT_OF_RESOURCE
;

600  
PMIX_SUCCESS
;

601 
	}
}

603 
	$pmix_mˇ_ba£_v¨_íum_Êag_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
íumî©‹
)

605 
íumî©‹
->
íum_Êags
 = 
NULL
;

606 
íumî©‹
->
su≥r
.
gë_vÆue
 = 
íum_gë_vÆue_Êag
;

607 
íumî©‹
->
su≥r
.
gë_cou¡
 = 
íum_gë_cou¡
;

608 
íumî©‹
->
su≥r
.
vÆue_‰om_°rög
 = 
íum_vÆue_‰om_°rög_Êag
;

609 
íumî©‹
->
su≥r
.
°rög_‰om_vÆue
 = 
íum_°rög_‰om_vÆue_Êag
;

610 
íumî©‹
->
su≥r
.
dump
 = 
íum_dump_Êag
;

611 
íumî©‹
->
su≥r
.
íum_is_°©ic
 = 
Ál£
;

612 
	}
}

614 
	$pmix_mˇ_ba£_v¨_íum_Êag_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_íum_Êag_t
 *
íumî©‹
)

617 i‡(
íumî©‹
->
íum_Êags
) {

618 
i
 = 0 ; i < 
íumî©‹
->
su≥r
.
íum_vÆue_cou¡
 ; ++i) {

619 
	`‰ì
 ((*Ë
íumî©‹
->
íum_Êags
[
i
].
°rög
);

621 
	`‰ì
 (
íumî©‹
->
íum_Êags
);

623 
	}
}

	@mca/base/pmix_mca_base_var_enum.h

24 #i‡!
deföed
(
PMIX_MCA_BASE_VAR_ENUM_H
)

25 
	#PMIX_MCA_BASE_VAR_ENUM_H


	)

27 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

29 
	~"§c/˛ass/pmix_obje˘.h
"

30 
	~"pmix_comm⁄.h
"

32 
pmix_mˇ_ba£_v¨_íum_t
 
	tpmix_mˇ_ba£_v¨_íum_t
;

40 (*
	tpmix_mˇ_ba£_v¨_íum_gë_cou¡_‚_t
)(
	tpmix_mˇ_ba£_v¨_íum_t
 *
	t£lf
, *
	tcou¡
);

50 (*
	tpmix_mˇ_ba£_v¨_íum_gë_vÆue_‚_t
)(
	tpmix_mˇ_ba£_v¨_íum_t
 *
	t£lf
, 
	tödex
,

51 *
	tvÆue
, c⁄° **
	t°rög_vÆue
);

63 (*
	tpmix_mˇ_ba£_v¨_íum_vfs_‚_t
)(
	tpmix_mˇ_ba£_v¨_íum_t
 *
	t£lf
, c⁄° *
	t°rög_vÆue
,

64 *
	tvÆue
);

75 (*
	tpmix_mˇ_ba£_v¨_íum_dump_‚_t
)(
	tpmix_mˇ_ba£_v¨_íum_t
 *
	t£lf
, **
	tout
);

92 (*
	tpmix_mˇ_ba£_v¨_íum_sfv_‚_t
)(
	tpmix_mˇ_ba£_v¨_íum_t
 *
	t£lf
, c⁄° 
	tvÆue
,

93 **
	t°rög_vÆue
);

100 
	spmix_mˇ_ba£_v¨_íum_vÆue_t
 {

101 
vÆue
;

102 c⁄° *
°rög
;

105 
pmix_mˇ_ba£_v¨_íum_vÆue_t
 
	tpmix_mˇ_ba£_v¨_íum_vÆue_t
;

110 
	spmix_mˇ_ba£_v¨_íum_t
 {

111 
pmix_obje˘_t
 
su≥r
;

114 
boﬁ
 
íum_is_°©ic
;

118 *
íum_«me
;

122 
pmix_mˇ_ba£_v¨_íum_gë_cou¡_‚_t
 
gë_cou¡
;

125 
pmix_mˇ_ba£_v¨_íum_gë_vÆue_‚_t
 
gë_vÆue
;

128 
pmix_mˇ_ba£_v¨_íum_vfs_‚_t
 
vÆue_‰om_°rög
;

131 
pmix_mˇ_ba£_v¨_íum_sfv_‚_t
 
°rög_‰om_vÆue
;

134 
pmix_mˇ_ba£_v¨_íum_dump_‚_t
 
dump
;

136 
íum_vÆue_cou¡
;

139 
pmix_mˇ_ba£_v¨_íum_vÆue_t
 *
íum_vÆues
;

149 
	spmix_mˇ_ba£_v¨_íum_vÆue_Êag_t
 {

151 
Êag
;

153 c⁄° *
°rög
;

155 
c⁄Êi˘ög_Êag
;

158 
pmix_mˇ_ba£_v¨_íum_vÆue_Êag_t
 
	tpmix_mˇ_ba£_v¨_íum_vÆue_Êag_t
;

163 
	spmix_mˇ_ba£_v¨_íum_Êag_t
 {

165 
pmix_mˇ_ba£_v¨_íum_t
 
su≥r
;

167 
pmix_mˇ_ba£_v¨_íum_vÆue_Êag_t
 *
íum_Êags
;

170 
pmix_mˇ_ba£_v¨_íum_Êag_t
 
	tpmix_mˇ_ba£_v¨_íum_Êag_t
;

175 
	`PMIX_CLASS_DECLARATION
(
pmix_mˇ_ba£_v¨_íum_t
);

201 
	`pmix_mˇ_ba£_v¨_íum_¸óã
 (c⁄° *
«me
, c⁄° 
pmix_mˇ_ba£_v¨_íum_vÆue_t
 
vÆues
[],

202 
pmix_mˇ_ba£_v¨_íum_t
 **
íumî©‹
);

228 
	`pmix_mˇ_ba£_v¨_íum_¸óã_Êag
 (c⁄° *
«me
, c⁄° 
pmix_mˇ_ba£_v¨_íum_vÆue_Êag_t
 
Êags
[],

229 
pmix_mˇ_ba£_v¨_íum_Êag_t
 **
íumî©‹
);

239 
pmix_mˇ_ba£_v¨_íum_t
 
pmix_mˇ_ba£_v¨_íum_boﬁ
;

244 
pmix_mˇ_ba£_v¨_íum_t
 
pmix_mˇ_ba£_v¨_íum_vîbo£
;

	@mca/base/pmix_mca_base_var_group.c

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~<°dlib.h
>

29 #ifde‡
HAVE_UNISTD_H


30 
	~<uni°d.h
>

32 #ifde‡
HAVE_SYS_PARAM_H


33 
	~<sys/∑øm.h
>

35 
	~<î∫o.h
>

37 
	~"§c/ö˛ude/pmix_°döt.h
"

38 
	~"§c/utû/show_hñp.h
"

39 
	~"§c/mˇ/mˇ.h
"

40 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨i.h
"

41 
	~"pmix_comm⁄.h
"

42 
	~"§c/utû/ouçut.h
"

43 
	~"§c/utû/pmix_ívú⁄.h
"

45 
pmix_poöãr_¨øy_t
 
	gpmix_mˇ_ba£_v¨_groups
;

46 
pmix_hash_èbÀ_t
 
	gpmix_mˇ_ba£_v¨_group_ödex_hash
;

47 
	gpmix_mˇ_ba£_v¨_group_cou¡
 = 0;

48 
	gpmix_mˇ_ba£_v¨_groups_time°amp
 = 0;

49 
boﬁ
 
	gpmix_mˇ_ba£_v¨_group_öôülized
 = 
Ál£
;

51 
pmix_mˇ_ba£_v¨_group_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_group_t
 *
group
);

52 
pmix_mˇ_ba£_v¨_group_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_group_t
 *
group
);

53 
PMIX_CLASS_INSTANCE
(
pmix_mˇ_ba£_v¨_group_t
, 
pmix_obje˘_t
,

54 
pmix_mˇ_ba£_v¨_group_c⁄°ru˘‹
,

55 
pmix_mˇ_ba£_v¨_group_de°ru˘‹
);

57 
	$pmix_mˇ_ba£_v¨_group_öô
 ()

59 
ªt
;

61 i‡(!
pmix_mˇ_ba£_v¨_group_öôülized
) {

62 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_v¨_groups
, 
pmix_poöãr_¨øy_t
);

65 
ªt
 = 
	`pmix_poöãr_¨øy_öô
 (&
pmix_mˇ_ba£_v¨_groups
, 128, 16384, 128);

66 i‡(
PMIX_SUCCESS
 !
ªt
) {

67  
ªt
;

70 
	`PMIX_CONSTRUCT
(&
pmix_mˇ_ba£_v¨_group_ödex_hash
, 
pmix_hash_èbÀ_t
);

71 
ªt
 = 
	`pmix_hash_èbÀ_öô
 (&
pmix_mˇ_ba£_v¨_group_ödex_hash
, 256);

72 i‡(
PMIX_SUCCESS
 !
ªt
) {

73  
ªt
;

76 
pmix_mˇ_ba£_v¨_group_öôülized
 = 
åue
;

77 
pmix_mˇ_ba£_v¨_group_cou¡
 = 0;

80  
PMIX_SUCCESS
;

81 
	}
}

83 
	$pmix_mˇ_ba£_v¨_group_föÆize
 ()

85 
pmix_obje˘_t
 *
obje˘
;

86 
size
, 
i
;

88 i‡(
pmix_mˇ_ba£_v¨_group_öôülized
) {

89 
size
 = 
	`pmix_poöãr_¨øy_gë_size
(&
pmix_mˇ_ba£_v¨_groups
);

90 
i
 = 0 ; i < 
size
 ; ++i) {

91 
obje˘
 = 
	`pmix_poöãr_¨øy_gë_ôem
 (&
pmix_mˇ_ba£_v¨_groups
, 
i
);

92 i‡(
NULL
 !
obje˘
) {

93 
	`PMIX_RELEASE
(
obje˘
);

96 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_v¨_groups
);

97 
	`PMIX_DESTRUCT
(&
pmix_mˇ_ba£_v¨_group_ödex_hash
);

98 
pmix_mˇ_ba£_v¨_group_cou¡
 = 0;

99 
pmix_mˇ_ba£_v¨_group_öôülized
 = 
Ál£
;

102  
PMIX_SUCCESS
;

103 
	}
}

105 
	$pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (c⁄° 
group_ödex
, 
pmix_mˇ_ba£_v¨_group_t
 **
group
, 
boﬁ
 
övÆidok
)

107 i‡(
group_ödex
 < 0) {

108  
PMIX_ERR_NOT_FOUND
;

111 *
group
 = (
pmix_mˇ_ba£_v¨_group_t
 *Ë
	`pmix_poöãr_¨øy_gë_ôem
 (&
pmix_mˇ_ba£_v¨_groups
,

112 
group_ödex
);

113 i‡(
NULL
 =*
group
 || (!
övÆidok
 && !(*group)->
group_isvÆid
)) {

114 *
group
 = 
NULL
;

115  
PMIX_ERR_NOT_FOUND
;

118  
PMIX_SUCCESS
;

119 
	}
}

121 
	$group_föd_by_«me
 (c⁄° *
fuŒ_«me
, *
ödex
, 
boﬁ
 
övÆidok
)

123 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

124 *
tmp
;

125 
rc
;

127 
rc
 = 
	`pmix_hash_èbÀ_gë_vÆue_±r
 (&
pmix_mˇ_ba£_v¨_group_ödex_hash
, 
fuŒ_«me
,

128 
	`°æí
 (
fuŒ_«me
), &
tmp
);

129 i‡(
PMIX_SUCCESS
 !
rc
) {

130  
rc
;

133 
rc
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (()(
uöçå_t
Ë
tmp
, &
group
, 
övÆidok
);

134 i‡(
PMIX_SUCCESS
 !
rc
) {

135  
rc
;

138 i‡(
övÆidok
 || 
group
->
group_isvÆid
) {

139 *
ödex
 = ()(
uöçå_t
Ë
tmp
;

140  
PMIX_SUCCESS
;

143  
PMIX_ERR_NOT_FOUND
;

144 
	}
}

146 
boﬁ
 
	$com∑ª_°rögs
 (c⁄° *
°r1
, c⁄° *
°r2
) {

147 i‡((
NULL
 !
°r1
 && 0 =
	`°rcmp
 (str1, "*")) ||

148 (
NULL
 =
°r1
 && NULL =
°r2
)) {

149  
åue
;

152 i‡(
NULL
 !
°r1
 && NULL !
°r2
) {

153  0 =
	`°rcmp
 (
°r1
, 
°r2
);

156  
Ál£
;

157 
	}
}

159 
	$group_föd_löór
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

160 c⁄° *
comp⁄ít_«me
, 
boﬁ
 
övÆidok
)

162 
i
 = 0 ; i < 
pmix_mˇ_ba£_v¨_group_cou¡
 ; ++i) {

163 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

165 
rc
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (
i
, &
group
, 
övÆidok
);

166 i‡(
PMIX_SUCCESS
 !
rc
) {

170 i‡(
	`com∑ª_°rögs
 (
¥oje˘_«me
, 
group
->
group_¥oje˘
) &&

171 
	`com∑ª_°rögs
 (
‰amew‹k_«me
, 
group
->
group_‰amew‹k
) &&

172 
	`com∑ª_°rögs
 (
comp⁄ít_«me
, 
group
->
group_comp⁄ít
)) {

173  
i
;

177  
PMIX_ERR_NOT_FOUND
;

178 
	}
}

180 
	$group_föd
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

181 c⁄° *
comp⁄ít_«me
, 
boﬁ
 
övÆidok
)

183 *
fuŒ_«me
;

184 
ªt
, 
ödex
=0;

186 i‡(!
pmix_mˇ_ba£_v¨_öôülized
) {

187  
PMIX_ERR_NOT_FOUND
;

191 i‡((
¥oje˘_«me
 && '*' =¥oje˘_«me[0]Ë|| (
‰amew‹k_«me
 && '*' == framework_name[0]) ||

192 (
comp⁄ít_«me
 && '*' == component_name[0])) {

193  
	`group_föd_löór
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
, 
övÆidok
);

196 
ªt
 = 
	`pmix_mˇ_ba£_v¨_gíî©e_fuŒ_«me4
(
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

197 
NULL
, &
fuŒ_«me
);

198 i‡(
PMIX_SUCCESS
 !
ªt
) {

199  
PMIX_ERROR
;

202 
ªt
 = 
	`group_föd_by_«me
(
fuŒ_«me
, &
ödex
, 
övÆidok
);

203 
	`‰ì
 (
fuŒ_«me
);

205  (0 > 
ªt
Ë?Ñë : 
ödex
;

206 
	}
}

208 
	$group_ªgi°î
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

209 c⁄° *
comp⁄ít_«me
, c⁄° *
des¸ùti⁄
)

211 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

212 
group_id
, 
∑ª¡_id
 = -1;

213 
ªt
;

215 i‡(
NULL
 =
¥oje˘_«me
 && NULL =
‰amew‹k_«me
 && NULL =
comp⁄ít_«me
) {

221 i‡(
NULL
 !
¥oje˘_«me
 && NULL !
‰amew‹k_«me
 &&

222 (0 =
	`°rcmp
 (
¥oje˘_«me
, 
‰amew‹k_«me
))) {

223 
¥oje˘_«me
 = 
NULL
;

226 
group_id
 = 
	`group_föd
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
, 
åue
);

227 i‡(0 <
group_id
) {

228 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (
group_id
, &
group
, 
åue
);

229 i‡(
PMIX_SUCCESS
 !
ªt
) {

231 
	`as£π
 (
NULL
 !
group
);

232  
ªt
;

234 
group
->
group_isvÆid
 = 
åue
;

235 
pmix_mˇ_ba£_v¨_groups_time°amp
++;

238  
group_id
;

241 
group
 = 
	`PMIX_NEW
(
pmix_mˇ_ba£_v¨_group_t
);

243 
group
->
group_isvÆid
 = 
åue
;

245 i‡(
NULL
 !
¥oje˘_«me
) {

246 
group
->
group_¥oje˘
 = 
	`°rdup
 (
¥oje˘_«me
);

247 i‡(
NULL
 =
group
->
group_¥oje˘
) {

248 
	`PMIX_RELEASE
(
group
);

249  
PMIX_ERR_OUT_OF_RESOURCE
;

252 i‡(
NULL
 !
‰amew‹k_«me
) {

253 
group
->
group_‰amew‹k
 = 
	`°rdup
 (
‰amew‹k_«me
);

254 i‡(
NULL
 =
group
->
group_‰amew‹k
) {

255 
	`PMIX_RELEASE
(
group
);

256  
PMIX_ERR_OUT_OF_RESOURCE
;

259 i‡(
NULL
 !
comp⁄ít_«me
) {

260 
group
->
group_comp⁄ít
 = 
	`°rdup
 (
comp⁄ít_«me
);

261 i‡(
NULL
 =
group
->
group_comp⁄ít
) {

262 
	`PMIX_RELEASE
(
group
);

263  
PMIX_ERR_OUT_OF_RESOURCE
;

266 i‡(
NULL
 !
des¸ùti⁄
) {

267 
group
->
group_des¸ùti⁄
 = 
	`°rdup
 (
des¸ùti⁄
);

268 i‡(
NULL
 =
group
->
group_des¸ùti⁄
) {

269 
	`PMIX_RELEASE
(
group
);

270  
PMIX_ERR_OUT_OF_RESOURCE
;

274 i‡(
NULL
 !
‰amew‹k_«me
 && NULL !
comp⁄ít_«me
) {

275 
∑ª¡_id
 = 
	`group_ªgi°î
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
NULL
, NULL);

279 
ªt
 = 
	`pmix_mˇ_ba£_v¨_gíî©e_fuŒ_«me4
 (
NULL
, 
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
,

280 &
group
->
group_fuŒ_«me
);

281 i‡(
PMIX_SUCCESS
 !
ªt
) {

282 
	`PMIX_RELEASE
(
group
);

283  
ªt
;

286 
group_id
 = 
	`pmix_poöãr_¨øy_add
 (&
pmix_mˇ_ba£_v¨_groups
, 
group
);

287 i‡(0 > 
group_id
) {

288 
	`PMIX_RELEASE
(
group
);

289  
PMIX_ERROR
;

292 
	`pmix_hash_èbÀ_£t_vÆue_±r
 (&
pmix_mˇ_ba£_v¨_group_ödex_hash
, 
group
->
group_fuŒ_«me
,

293 
	`°æí
 (
group
->
group_fuŒ_«me
), (*)(
uöçå_t
Ë
group_id
);

295 
pmix_mˇ_ba£_v¨_group_cou¡
++;

296 
pmix_mˇ_ba£_v¨_groups_time°amp
++;

298 i‡(0 <
∑ª¡_id
) {

299 
pmix_mˇ_ba£_v¨_group_t
 *
∑ª¡_group
;

301 (Ë
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
(
∑ª¡_id
, &
∑ª¡_group
, 
Ál£
);

302 
	`pmix_vÆue_¨øy_≠≥nd_ôem
 (&
∑ª¡_group
->
group_subgroups
, &
group_id
);

305  
group_id
;

306 
	}
}

308 
	$pmix_mˇ_ba£_v¨_group_ªgi°î
 (c⁄° *
¥oje˘_«me
, c⁄° *
‰amew‹k_«me
,

309 c⁄° *
comp⁄ít_«me
, c⁄° *
des¸ùti⁄
)

311  
	`group_ªgi°î
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
, 
des¸ùti⁄
);

312 
	}
}

314 
	$pmix_mˇ_ba£_v¨_group_comp⁄ít_ªgi°î
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
,

315 c⁄° *
des¸ùti⁄
)

318  
	`group_ªgi°î
 (
NULL
, 
comp⁄ít
->
pmix_mˇ_ty≥_«me
,

319 
comp⁄ít
->
pmix_mˇ_comp⁄ít_«me
, 
des¸ùti⁄
);

320 
	}
}

323 
	$pmix_mˇ_ba£_v¨_group_dîegi°î
 (
group_ödex
)

325 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

326 
size
, 
ªt
;

327 *
∑øms
, *
subgroups
;

329 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (
group_ödex
, &
group
, 
Ál£
);

330 i‡(
PMIX_SUCCESS
 !
ªt
) {

331  
ªt
;

334 
group
->
group_isvÆid
 = 
Ál£
;

337 
size
 = 
	`pmix_vÆue_¨øy_gë_size
(&
group
->
group_v¨s
);

338 
∑øms
 = 
	`PMIX_VALUE_ARRAY_GET_BASE
(&
group
->
group_v¨s
, );

340 
i
 = 0 ; i < 
size
 ; ++i) {

341 c⁄° 
pmix_mˇ_ba£_v¨_t
 *
v¨
;

343 
ªt
 = 
	`pmix_mˇ_ba£_v¨_gë
 (
∑øms
[
i
], &
v¨
);

344 i‡(
PMIX_SUCCESS
 !
ªt
 || !(
v¨
->
mbv_Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_DWG
)) {

348 (Ë
	`pmix_mˇ_ba£_v¨_dîegi°î
 (
∑øms
[
i
]);

351 
size
 = 
	`pmix_vÆue_¨øy_gë_size
(&
group
->
group_subgroups
);

352 
subgroups
 = 
	`PMIX_VALUE_ARRAY_GET_BASE
(&
group
->
group_subgroups
, );

353 
i
 = 0 ; i < 
size
 ; ++i) {

354 (Ë
	`pmix_mˇ_ba£_v¨_group_dîegi°î
 (
subgroups
[
i
]);

359 
pmix_mˇ_ba£_v¨_groups_time°amp
++;

361  
PMIX_SUCCESS
;

362 
	}
}

364 
	$pmix_mˇ_ba£_v¨_group_föd
 (c⁄° *
¥oje˘_«me
,

365 c⁄° *
‰amew‹k_«me
,

366 c⁄° *
comp⁄ít_«me
)

368  
	`group_föd
 (
¥oje˘_«me
, 
‰amew‹k_«me
, 
comp⁄ít_«me
, 
Ál£
);

369 
	}
}

371 
	$pmix_mˇ_ba£_v¨_group_föd_by_«me
 (c⁄° *
fuŒ_«me
, *
ödex
)

373  
	`group_föd_by_«me
 (
fuŒ_«me
, 
ödex
, 
Ál£
);

374 
	}
}

376 
	$pmix_mˇ_ba£_v¨_group_add_v¨
 (c⁄° 
group_ödex
, c⁄° 
∑øm_ödex
)

378 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

379 
size
, 
i
, 
ªt
;

380 *
∑øms
;

382 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (
group_ödex
, &
group
, 
Ál£
);

383 i‡(
PMIX_SUCCESS
 !
ªt
) {

384  
ªt
;

387 
size
 = 
	`pmix_vÆue_¨øy_gë_size
(&
group
->
group_v¨s
);

388 
∑øms
 = 
	`PMIX_VALUE_ARRAY_GET_BASE
(&
group
->
group_v¨s
, );

389 
i
 = 0 ; i < 
size
 ; ++i) {

390 i‡(
∑øms
[
i
] =
∑øm_ödex
) {

391  
i
;

395 i‡(
PMIX_SUCCESS
 !=

396 (
ªt
 = 
	`pmix_vÆue_¨øy_≠≥nd_ôem
 (&
group
->
group_v¨s
, &
∑øm_ödex
))) {

397  
ªt
;

400 
pmix_mˇ_ba£_v¨_groups_time°amp
++;

403  (Ë
	`pmix_vÆue_¨øy_gë_size
 (&
group
->
group_v¨s
) - 1;

404 
	}
}

406 
	$pmix_mˇ_ba£_v¨_group_gë
 (c⁄° 
group_ödex
, c⁄° 
pmix_mˇ_ba£_v¨_group_t
 **
group
)

408  
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (
group_ödex
, (
pmix_mˇ_ba£_v¨_group_t
 **Ë
group
, 
Ál£
);

409 
	}
}

411 
	$pmix_mˇ_ba£_v¨_group_£t_v¨_Êag
 (c⁄° 
group_ödex
, 
Êags
, 
boﬁ
 
£t
)

413 
pmix_mˇ_ba£_v¨_group_t
 *
group
;

414 
size
, 
i
, 
ªt
;

415 *
v¨s
;

417 
ªt
 = 
	`pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (
group_ödex
, &
group
, 
Ál£
);

418 i‡(
PMIX_SUCCESS
 !
ªt
) {

419  
ªt
;

423 
size
 = 
	`pmix_vÆue_¨øy_gë_size
(&
group
->
group_v¨s
);

424 
v¨s
 = 
	`PMIX_VALUE_ARRAY_GET_BASE
(&
group
->
group_v¨s
, );

426 
i
 = 0 ; i < 
size
 ; ++i) {

427 i‡(0 <
v¨s
[
i
]) {

428 (Ë
	`pmix_mˇ_ba£_v¨_£t_Êag
 (
v¨s
[
i
], 
Êags
, 
£t
);

432  
PMIX_SUCCESS
;

433 
	}
}

436 
	$pmix_mˇ_ba£_v¨_group_c⁄°ru˘‹
 (
pmix_mˇ_ba£_v¨_group_t
 *
group
)

438 
	`mem£t
 ((*Ë
group
 +  (group->
su≥r
), 0,  (*group) -  (group->super));

440 
	`PMIX_CONSTRUCT
(&
group
->
group_subgroups
, 
pmix_vÆue_¨øy_t
);

441 
	`pmix_vÆue_¨øy_öô
 (&
group
->
group_subgroups
,  ());

443 
	`PMIX_CONSTRUCT
(&
group
->
group_v¨s
, 
pmix_vÆue_¨øy_t
);

444 
	`pmix_vÆue_¨øy_öô
 (&
group
->
group_v¨s
,  ());

446 
	}
}

448 
	$pmix_mˇ_ba£_v¨_group_de°ru˘‹
 (
pmix_mˇ_ba£_v¨_group_t
 *
group
)

450 
	`‰ì
 (
group
->
group_fuŒ_«me
);

451 
group
->
group_fuŒ_«me
 = 
NULL
;

453 
	`‰ì
 (
group
->
group_des¸ùti⁄
);

454 
group
->
group_des¸ùti⁄
 = 
NULL
;

456 
	`‰ì
 (
group
->
group_¥oje˘
);

457 
group
->
group_¥oje˘
 = 
NULL
;

459 
	`‰ì
 (
group
->
group_‰amew‹k
);

460 
group
->
group_‰amew‹k
 = 
NULL
;

462 
	`‰ì
 (
group
->
group_comp⁄ít
);

463 
group
->
group_comp⁄ít
 = 
NULL
;

465 
	`PMIX_DESTRUCT
(&
group
->
group_subgroups
);

466 
	`PMIX_DESTRUCT
(&
group
->
group_v¨s
);

467 
	}
}

469 
	$pmix_mˇ_ba£_v¨_group_gë_cou¡
 ()

471  
pmix_mˇ_ba£_v¨_group_cou¡
;

472 
	}
}

474 
	$pmix_mˇ_ba£_v¨_group_gë_°amp
 ()

476  
pmix_mˇ_ba£_v¨_groups_time°amp
;

477 
	}
}

	@mca/base/pmix_mca_base_var_group.h

24 #i‚de‡
PMIX_MCA_BASE_VAR_GROUP_H


25 
	#PMIX_MCA_BASE_VAR_GROUP_H


	)

27 
	~"§c/mˇ/mˇ.h
"

29 
	spmix_mˇ_ba£_v¨_group_t
 {

30 
pmix_li°_ôem_t
 
	msu≥r
;

33 
	mgroup_ödex
;

36 
boﬁ
 
	mgroup_isvÆid
;

39 *
	mgroup_fuŒ_«me
;

41 *
	mgroup_¥oje˘
;

42 *
	mgroup_‰amew‹k
;

43 *
	mgroup_comp⁄ít
;

46 *
	mgroup_des¸ùti⁄
;

49 
pmix_vÆue_¨øy_t
 
	mgroup_subgroups
;

52 
pmix_vÆue_¨øy_t
 
	mgroup_v¨s
;

56 
pmix_mˇ_ba£_v¨_group_t
 
	tpmix_mˇ_ba£_v¨_group_t
;

61 
PMIX_CLASS_DECLARATION
(
pmix_mˇ_ba£_v¨_group_t
);

77 
pmix_mˇ_ba£_v¨_group_ªgi°î
(c⁄° *
¥oje˘_«me
,

78 c⁄° *
‰amew‹k_«me
,

79 c⁄° *
comp⁄ít_«me
,

80 c⁄° *
des¸ùti⁄
);

92 
pmix_mˇ_ba£_v¨_group_comp⁄ít_ªgi°î
 (c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
comp⁄ít
,

93 c⁄° *
des¸ùti⁄
);

103 
pmix_mˇ_ba£_v¨_group_dîegi°î
 (
group_ödex
);

115 
pmix_mˇ_ba£_v¨_group_föd
 (c⁄° *
¥oje˘_«me
,

116 c⁄° *
‰amew‹k_«me
,

117 c⁄° *
comp⁄ít_«me
);

128 
pmix_mˇ_ba£_v¨_group_föd_by_«me
 (c⁄° *
fuŒ_«me
, *
ödex
);

142 
pmix_mˇ_ba£_v¨_group_gë
 (c⁄° 
group_ödex
,

143 c⁄° 
pmix_mˇ_ba£_v¨_group_t
 **
group
);

154 
pmix_mˇ_ba£_v¨_group_£t_v¨_Êag
 (c⁄° 
group_ödex
, 
Êags
,

155 
boﬁ
 
£t
);

162 
pmix_mˇ_ba£_v¨_group_gë_cou¡
 ();

171 
pmix_mˇ_ba£_v¨_group_gë_°amp
 ();

	@mca/base/pmix_mca_base_vari.h

37 #i‚de‡
PMIX_MCA_BASE_VAR_INTERNAL_H


38 
	#PMIX_MCA_BASE_VAR_INTERNAL_H


	)

40 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

42 
	~"§c/˛ass/pmix_obje˘.h
"

43 
	~"§c/˛ass/pmix_li°.h
"

44 
	~"§c/˛ass/pmix_vÆue_¨øy.h
"

45 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

46 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

47 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨.h
"

49 
	gBEGIN_C_DECLS


52 
	#PMIX_MCA_BASE_VAR_FLAG_EXTERNAL_MASK
 0x0000ffff

	)

56 
	mPMIX_MCA_BASE_VAR_FLAG_VALID
 = 0x00010000,

58 
	mPMIX_MCA_BASE_VAR_FLAG_SYNONYM
 = 0x00020000,

60 
	mPMIX_MCA_BASE_VAR_FLAG_SOURCE_FILE_NEEDS_FREE
 = 0x00040000

61 } 
	tpmix_mˇ_ba£_v¨_Êag_öã∫Æ_t
;

63 
	#PMIX_VAR_FLAG_ISSET
(
v¨
, 
Êag
Ë(!!((v¨).
mbp_Êags
 & (Êag)))

	)

65 
	#PMIX_VAR_IS_VALID
(
v¨
Ë(!!((v¨).
mbv_Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_VALID
))

	)

66 
	#PMIX_VAR_IS_SYNONYM
(
v¨
Ë(!!((v¨).
mbv_Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_SYNONYM
))

	)

67 
	#PMIX_VAR_IS_INTERNAL
(
v¨
Ë(!!((v¨).
mbv_Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_INTERNAL
))

	)

68 
	#PMIX_VAR_IS_DEFAULT_ONLY
(
v¨
Ë(!!((v¨).
mbv_Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_DEFAULT_ONLY
))

	)

69 
	#PMIX_VAR_IS_SETTABLE
(
v¨
Ë(!!((v¨).
mbv_Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
))

	)

70 
	#PMIX_VAR_IS_DEPRECATED
(
v¨
Ë(!!((v¨).
mbv_Êags
 & 
PMIX_MCA_BASE_VAR_FLAG_DEPRECATED
))

	)

72 c⁄° *
pmix_v¨_ty≥_«mes
[];

73 c⁄° 
size_t
 
pmix_v¨_ty≥_sizes
[];

74 
boﬁ
 
pmix_mˇ_ba£_v¨_öôülized
;

81 
	spmix_mˇ_ba£_v¨_fûe_vÆue_t
 {

83 
pmix_li°_ôem_t
 
	msu≥r
;

86 *
	mmbvfv_v¨
;

88 *
	mmbvfv_vÆue
;

90 *
	mmbvfv_fûe
;

92 
	mmbvfv_löío
;

100 
pmix_mˇ_ba£_v¨_fûe_vÆue_t
 
	tpmix_mˇ_ba£_v¨_fûe_vÆue_t
;

105 
PMIX_CLASS_DECLARATION
(
pmix_mˇ_ba£_v¨_fûe_vÆue_t
);

116 
pmix_mˇ_ba£_v¨_group_gë_öã∫Æ
 (c⁄° 
group_ödex
, 
pmix_mˇ_ba£_v¨_group_t
 **
group
, 
boﬁ
 
övÆidok
);

123 
pmix_mˇ_ba£_∑r£_∑ømfûe
(c⁄° *
∑ømfûe
, 
pmix_li°_t
 *
li°
);

130 
pmix_mˇ_ba£_v¨_group_add_v¨
 (c⁄° 
group_ödex
, c⁄° 
∑øm_ödex
);

137 
pmix_mˇ_ba£_v¨_group_add_pv¨
 (c⁄° 
group_ödex
, c⁄° 
∑øm_ödex
);

144 
pmix_mˇ_ba£_v¨_gíî©e_fuŒ_«me4
 (c⁄° *
¥oje˘
, c⁄° *
‰amew‹k
,

145 c⁄° *
comp⁄ít
, c⁄° *
v¨übÀ
,

146 **
fuŒ_«me
);

153 
pmix_mˇ_ba£_öã∫Æ_ív_°‹e
();

160 
pmix_mˇ_ba£_v¨_group_öô
 ();

161 
pmix_mˇ_ba£_v¨_group_föÆize
 ();

163 
	gEND_C_DECLS


	@mca/mca.h

29 #i‚de‡
PMIX_MCA_H


30 
	#PMIX_MCA_H


	)

32 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

42 
	spmix_mˇ_ba£_moduÀ_2_0_0_t
 {

43 
	mdummy_vÆue
;

47 
pmix_mˇ_ba£_moduÀ_2_0_0_t
 
	tpmix_mˇ_ba£_moduÀ_t
;

49 
pmix_mˇ_ba£_moduÀ_2_0_0_t
 
	tpmix_mˇ_ba£_moduÀ_2_0_0_t
;

91 (*
	tpmix_mˇ_ba£_›í_comp⁄ít_1_0_0_‚_t
)();

114 (*
	tpmix_mˇ_ba£_˛o£_comp⁄ít_1_0_0_‚_t
)();

133 (*
	tpmix_mˇ_ba£_quîy_comp⁄ít_2_0_0_‚_t
)(
	tpmix_mˇ_ba£_moduÀ_2_0_0_t
 **
	tmoduÀ
, *
	t¥i‹ôy
);

182 (*
	tpmix_mˇ_ba£_ªgi°î_comp⁄ít_∑øms_2_0_0_‚_t
)();

188 
	#PMIX_MCA_BASE_MAX_PROJECT_NAME_LEN
 15

	)

192 
	#PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
 31

	)

196 
	#PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
 63

	)

206 
	spmix_mˇ_ba£_comp⁄ít_2_1_0_t
 {

208 
pmix_mˇ_maj‹_vîsi⁄
;

210 
pmix_mˇ_mö‹_vîsi⁄
;

212 
pmix_mˇ_ªÀa£_vîsi⁄
;

215 
pmix_mˇ_¥oje˘_«me
[
PMIX_MCA_BASE_MAX_PROJECT_NAME_LEN
 + 1];

217 
pmix_mˇ_¥oje˘_maj‹_vîsi⁄
;

220 
pmix_mˇ_¥oje˘_mö‹_vîsi⁄
;

223 
pmix_mˇ_¥oje˘_ªÀa£_vîsi⁄
;

227 
pmix_mˇ_ty≥_«me
[
PMIX_MCA_BASE_MAX_TYPE_NAME_LEN
 + 1];

229 
pmix_mˇ_ty≥_maj‹_vîsi⁄
;

232 
pmix_mˇ_ty≥_mö‹_vîsi⁄
;

235 
pmix_mˇ_ty≥_ªÀa£_vîsi⁄
;

239 
pmix_mˇ_comp⁄ít_«me
[
PMIX_MCA_BASE_MAX_COMPONENT_NAME_LEN
 + 1];

241 
pmix_mˇ_comp⁄ít_maj‹_vîsi⁄
;

243 
pmix_mˇ_comp⁄ít_mö‹_vîsi⁄
;

245 
pmix_mˇ_comp⁄ít_ªÀa£_vîsi⁄
;

248 
pmix_mˇ_ba£_›í_comp⁄ít_1_0_0_‚_t
 
pmix_mˇ_›í_comp⁄ít
;

250 
pmix_mˇ_ba£_˛o£_comp⁄ít_1_0_0_‚_t
 
pmix_mˇ_˛o£_comp⁄ít
;

252 
pmix_mˇ_ba£_quîy_comp⁄ít_2_0_0_‚_t
 
pmix_mˇ_quîy_comp⁄ít
;

254 
pmix_mˇ_ba£_ªgi°î_comp⁄ít_∑øms_2_0_0_‚_t
 
pmix_mˇ_ªgi°î_comp⁄ít_∑øms
;

259 
ª£rved
[32];

263 
pmix_mˇ_ba£_comp⁄ít_2_1_0_t
 
	tpmix_mˇ_ba£_comp⁄ít_t
;

265 
pmix_mˇ_ba£_comp⁄ít_2_1_0_t
 
	tpmix_mˇ_ba£_comp⁄ít_2_1_0_t
;

270 
	#PMIX_MCA_BASE_METADATA_PARAM_NONE
 (
uöt32_t
)0x00

	)

271 
	#PMIX_MCA_BASE_METADATA_PARAM_CHECKPOINT
 (
uöt32_t
)0x02

	)

272 
	#PMIX_MCA_BASE_METADATA_PARAM_DEBUG
 (
uöt32_t
)0x04

	)

277 
	spmix_mˇ_ba£_comp⁄ít_d©a_2_0_0_t
 {

278 
uöt32_t
 
∑øm_fõld
;

284 
ª£rved
[32];

288 
pmix_mˇ_ba£_comp⁄ít_d©a_2_0_0_t
 
	tpmix_mˇ_ba£_comp⁄ít_d©a_t
;

290 
pmix_mˇ_ba£_comp⁄ít_d©a_2_0_0_t
 
	tpmix_mˇ_ba£_comp⁄ít_d©a_2_0_0_t
;

299 
	#PMIX_MCA_BASE_VERSION_MAJOR
 2

	)

300 
	#PMIX_MCA_BASE_VERSION_MINOR
 1

	)

301 
	#PMIX_MCA_BASE_VERSION_RELEASE
 0

	)

303 
	#PMIX_MCA_BASE_MAKE_VERSION
(
Àvñ
, 
MAJOR
, 
MINOR
, 
RELEASE
) \

304 .
pmix_mˇ_
## 
Àvñ
 ##
_maj‹_vîsi⁄
 = 
MAJOR
, \

305 .
pmix_mˇ_
## 
Àvñ
 ##
_mö‹_vîsi⁄
 = 
MINOR
, \

306 .
pmix_mˇ_
## 
Àvñ
 ##
_ªÀa£_vîsi⁄
 = 
RELEASE


	)

309 
	#PMIX_MCA_BASE_VERSION_2_1_0
(
PROJECT
, 
¥oje˘_maj‹
, 
¥oje˘_mö‹
, 
¥oje˘_ªÀa£
, 
TYPE
, 
ty≥_maj‹
, 
ty≥_mö‹
, 
ty≥_ªÀa£
) \

310 .
pmix_mˇ_maj‹_vîsi⁄
 = 
PMIX_MCA_BASE_VERSION_MAJOR
, \

311 .
pmix_mˇ_mö‹_vîsi⁄
 = 
PMIX_MCA_BASE_VERSION_MINOR
, \

312 .
pmix_mˇ_ªÀa£_vîsi⁄
 = 
PMIX_MCA_BASE_VERSION_RELEASE
, \

313 .
pmix_mˇ_¥oje˘_«me
 = 
PROJECT
, \

314 
	`PMIX_MCA_BASE_MAKE_VERSION
(
¥oje˘
, 
¥oje˘_maj‹
, 
¥oje˘_mö‹
, 
¥oje˘_ªÀa£
), \

315 .
pmix_mˇ_ty≥_«me
 = 
TYPE
, \

316 
	`PMIX_MCA_BASE_MAKE_VERSION
(
ty≥
, 
ty≥_maj‹
, 
ty≥_mö‹
, 
ty≥_ªÀa£
)

	)

319 
	#PMIX_MCA_BASE_VERSION_1_0_0
(
ty≥
, 
ty≥_maj‹
, 
ty≥_mö‹
, 
ty≥_ªÀa£
) \

320 
	`PMIX_MCA_BASE_VERSION_2_1_0
("pmix", 
PMIX_MAJOR_VERSION
, 
PMIX_MINOR_VERSION
, \

321 
PMIX_RELEASE_VERSION
, 
ty≥
, 
ty≥_maj‹
, 
ty≥_mö‹
, \

322 
ty≥_ªÀa£
)

	)

	@mca/pdl/base/base.h

14 #i‚de‡
PMIX_PDL_BASE_H


15 
	#PMIX_PDL_BASE_H


	)

17 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 
	~"§c/mˇ/pdl/pdl.h
"

19 
	~"§c/utû/pmix_ívú⁄.h
"

21 
	~"§c/mˇ/ba£/ba£.h
"

24 
BEGIN_C_DECLS


29 
pmix_mˇ_ba£_‰amew‹k_t
 
pmix_pdl_ba£_‰amew‹k
;

30 
pmix_pdl_ba£_comp⁄ít_t


31 *
pmix_pdl_ba£_£À˘ed_comp⁄ít
;

32 
pmix_pdl_ba£_moduÀ_t
 *
pmix_pdl
;

43 
pmix_pdl_ba£_›í
(
pmix_mˇ_ba£_›í_Êag_t
 
Êags
);

53 
pmix_pdl_ba£_£À˘
();

63 
pmix_pdl_ba£_˛o£
();

71 
pmix_pdl_›í
(c⁄° *
‚ame
,

72 
boﬁ
 
u£_ext
, boﬁ 
¥iv©e_«me•a˚
,

73 
pmix_pdl_h™dÀ_t
 **
h™dÀ
, **
îr_msg
);

81 
pmix_pdl_lookup
(
pmix_pdl_h™dÀ_t
 *
h™dÀ
,

82 c⁄° *
symbﬁ
,

83 **
±r
, **
îr_msg
);

91 
pmix_pdl_˛o£
(
pmix_pdl_h™dÀ_t
 *
h™dÀ
);

99 
pmix_pdl_f‹óchfûe
(c⁄° *
£¨ch_∑th
,

100 (*
cb_func
)(c⁄° *
fûíame
, *
c⁄ãxt
),

101 *
c⁄ãxt
);

103 
END_C_DECLS


	@mca/pdl/base/pdl_base_close.c

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

15 
	~"§c/mˇ/mˇ.h
"

16 
	~"§c/mˇ/ba£/ba£.h
"

18 
	~"§c/mˇ/pdl/pdl.h
"

19 
	~"§c/mˇ/pdl/ba£/ba£.h
"

22 
	$pmix_pdl_ba£_˛o£
()

25  
	`pmix_mˇ_ba£_‰amew‹k_comp⁄íts_˛o£
(&
pmix_pdl_ba£_‰amew‹k
, 
NULL
);

26 
	}
}

	@mca/pdl/base/pdl_base_fns.c

19 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

21 
	~"pmix_comm⁄.h
"

23 
	~"§c/utû/ouçut.h
"

24 
	~"§c/mˇ/pdl/ba£/ba£.h
"

27 
	$pmix_pdl_›í
(c⁄° *
‚ame
,

28 
boﬁ
 
u£_ext
, boﬁ 
¥iv©e_«me•a˚
,

29 
pmix_pdl_h™dÀ_t
 **
h™dÀ
, **
îr_msg
)

31 *
h™dÀ
 = 
NULL
;

33 i‡(
NULL
 !
pmix_pdl
 && NULL !pmix_pdl->
›í
) {

34  
pmix_pdl
->
	`›í
(
‚ame
, 
u£_ext
, 
¥iv©e_«me•a˚
,

35 
h™dÀ
, 
îr_msg
);

38  
PMIX_ERR_NOT_SUPPORTED
;

39 
	}
}

41 
	$pmix_pdl_lookup
(
pmix_pdl_h™dÀ_t
 *
h™dÀ
,

42 c⁄° *
symbﬁ
,

43 **
±r
, **
îr_msg
)

45 i‡(
NULL
 !
pmix_pdl
 && NULL !pmix_pdl->
lookup
) {

46  
pmix_pdl
->
	`lookup
(
h™dÀ
, 
symbﬁ
, 
±r
, 
îr_msg
);

49  
PMIX_ERR_NOT_SUPPORTED
;

50 
	}
}

52 
	$pmix_pdl_˛o£
(
pmix_pdl_h™dÀ_t
 *
h™dÀ
)

54 i‡(
NULL
 !
pmix_pdl
 && NULL !pmix_pdl->
˛o£
) {

55  
pmix_pdl
->
	`˛o£
(
h™dÀ
);

58  
PMIX_ERR_NOT_SUPPORTED
;

59 
	}
}

61 
pmix_pdl_f‹óchfûe
(c⁄° *
£¨ch_∑th
,

62 (*
cb_func
)(c⁄° *
fûíame
, *
c⁄ãxt
),

63 *
c⁄ãxt
)

65 i‡(
NULL
 !
pmix_pdl
 && NULL !pmix_pdl->
f‹óchfûe
) {

66  
pmix_pdl
->
	`f‹óchfûe
(
£¨ch_∑th
, 
cb_func
, 
c⁄ãxt
);

69  
PMIX_ERR_NOT_SUPPORTED
;

70 
	}
}

	@mca/pdl/base/pdl_base_open.c

15 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~"§c/mˇ/pdl/ba£/ba£.h
"

19 
	~"§c/mˇ/pdl/ba£/°©ic-comp⁄íts.h
"

25 
pmix_pdl_ba£_moduÀ_t
 *
	gpmix_pdl
 = 
NULL
;

26 
pmix_pdl_ba£_comp⁄ít_t
 *
	gpmix_pdl_ba£_£À˘ed_comp⁄ít
 = 
NULL
;

39 
	$pmix_pdl_ba£_›í
(
pmix_mˇ_ba£_›í_Êag_t
 
Êags
)

42  
	`pmix_mˇ_ba£_‰amew‹k_comp⁄íts_›í
(&
pmix_pdl_ba£_‰amew‹k
, 
Êags
);

43 
	}
}

50 
PMIX_MCA_BASE_FRAMEWORK_DECLARE
(
pmix
, 
pdl
, "DynamicÜoader framework",

51 
NULL
 ,

52 
pmix_pdl_ba£_›í
 ,

53 
NULL
 ,

54 
mˇ_pdl_ba£_°©ic_comp⁄íts
,

55 
PMIX_MCA_BASE_FRAMEWORK_FLAG_NO_DSO
);

	@mca/pdl/base/pdl_base_select.c

16 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 #ifde‡
HAVE_UNISTD_H


19 
	~"uni°d.h
"

22 
	~"pmix_comm⁄.h
"

23 
	~"§c/utû/ouçut.h
"

24 
	~"§c/mˇ/mˇ.h
"

25 
	~"§c/mˇ/ba£/ba£.h
"

26 
	~"§c/mˇ/pdl/pdl.h
"

27 
	~"§c/mˇ/pdl/ba£/ba£.h
"

30 
	$pmix_pdl_ba£_£À˘
()

32 
exô_°©us
 = 
PMIX_SUCCESS
;

33 
pmix_pdl_ba£_comp⁄ít_t
 *
be°_comp⁄ít
 = 
NULL
;

34 
pmix_pdl_ba£_moduÀ_t
 *
be°_moduÀ
 = 
NULL
;

39 i‡(
PMIX_SUCCESS
 !
	`pmix_mˇ_ba£_£À˘
("pdl",

40 
pmix_pdl_ba£_‰amew‹k
.
‰amew‹k_ouçut
,

41 &
pmix_pdl_ba£_‰amew‹k
.
‰amew‹k_comp⁄íts
,

42 (
pmix_mˇ_ba£_moduÀ_t
 **Ë&
be°_moduÀ
,

43 (
pmix_mˇ_ba£_comp⁄ít_t
 **Ë&
be°_comp⁄ít
, 
NULL
) ) {

45 
exô_°©us
 = 
PMIX_ERROR
;

46 
˛ónup
;

50 
pmix_pdl_ba£_£À˘ed_comp⁄ít
 = 
be°_comp⁄ít
;

51 
pmix_pdl
 = 
be°_moduÀ
;

53 
˛ónup
:

54  
exô_°©us
;

55 
	}
}

	@mca/pdl/base/static-components.h

4 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

8 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 
mˇ_pdl_pdl›í_comp⁄ít
;

10 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
	gmˇ_pdl_ba£_°©ic_comp⁄íts
[] = {

11 &
mˇ_pdl_pdl›í_comp⁄ít
,

12 
NULL


15 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

	@mca/pdl/pdl.h

47 #i‚de‡
PMIX_MCA_PDL_PDL_H


48 
	#PMIX_MCA_PDL_PDL_H


	)

50 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

52 
	~"§c/mˇ/mˇ.h
"

53 
	~"§c/mˇ/ba£/ba£.h
"

55 
BEGIN_C_DECLS


60 
	gpmix_pdl_h™dÀ_t
;

61 
pmix_pdl_h™dÀ_t
 
	tpmix_pdl_h™dÀ_t
;

88 (*
	tpmix_pdl_ba£_moduÀ_›í_‚_t
)

89 (c⁄° *
	t‚ame
, 
	tboﬁ
 
	tu£_ext
, boﬁ 
	t¥iv©e_«me•a˚
,

90 
	tpmix_pdl_h™dÀ_t
 **
	th™dÀ
, **
	tîr_msg
);

109 (*
	tpmix_pdl_ba£_moduÀ_lookup_‚_t
)

110 (
	tpmix_pdl_h™dÀ_t
 *
	th™dÀ
, c⁄° *
	tsymbﬁ
, **
	t±r
, **
	tîr_msg
);

123 (*
	tpmix_pdl_ba£_moduÀ_˛o£_‚_t
)

124 (
	tpmix_pdl_h™dÀ_t
 *
	th™dÀ
);

139 (*
	tpmix_pdl_ba£_moduÀ_f‹óchfûe_‚_t
)

140 (c⁄° *
	t£¨ch_∑th
,

141 (*
	tcb_func
)(c⁄° *
	tfûíame
, *
	tc⁄ãxt
),

142 *
	tc⁄ãxt
);

147 
	spmix_pdl_ba£_comp⁄ít_1_0_0_t
 {

149 
pmix_mˇ_ba£_comp⁄ít_t
 
ba£_vîsi⁄
;

151 
pmix_mˇ_ba£_comp⁄ít_d©a_t
 
ba£_d©a
;

154 
¥i‹ôy
;

156 
pmix_pdl_ba£_comp⁄ít_1_0_0_t
 
	tpmix_pdl_ba£_comp⁄ít_1_0_0_t
;

157 
pmix_pdl_ba£_comp⁄ít_1_0_0_t
 
	tpmix_pdl_ba£_comp⁄ít_t
;

162 
	spmix_pdl_ba£_moduÀ_1_0_0_t
 {

163 
pmix_mˇ_ba£_moduÀ_2_0_0_t
 
su≥r
;

166 
pmix_pdl_ba£_moduÀ_›í_‚_t
 
›í
;

167 
pmix_pdl_ba£_moduÀ_˛o£_‚_t
 
˛o£
;

170 
pmix_pdl_ba£_moduÀ_lookup_‚_t
 
lookup
;

173 
pmix_pdl_ba£_moduÀ_f‹óchfûe_‚_t
 
f‹óchfûe
;

175 
pmix_pdl_ba£_moduÀ_1_0_0_t
 
	tpmix_pdl_ba£_moduÀ_1_0_0_t
;

176 
pmix_pdl_ba£_moduÀ_1_0_0_t
 
	tpmix_pdl_ba£_moduÀ_t
;

181 
	#PMIX_PDL_BASE_VERSION_1_0_0
 \

182 
	`PMIX_MCA_BASE_VERSION_1_0_0
("pdl", 1, 0, 0)

	)

184 
END_C_DECLS


	@mca/pdl/pdlopen/pdl_pdlopen.h

11 #i‚de‡
PMIX_PDL_PDLOPEN


12 
	#PMIX_PDL_PDLOPEN


	)

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

16 
	~"§c/mˇ/pdl/pdl.h
"

18 
pmix_pdl_ba£_moduÀ_t
 
pmix_pdl_pdl›í_moduÀ
;

25 
	spmix_pdl_h™dÀ_t
 {

26 *
	mdl›í_h™dÀ
;

27 #i‡
PMIX_ENABLE_DEBUG


28 *
	mfûíame
;

33 
pmix_pdl_ba£_comp⁄ít_t
 
	mba£
;

35 *
	mfûíame_suffixes_mˇ_°‹age
;

36 **
	mfûíame_suffixes
;

37 } 
	tpmix_pdl_pdl›í_comp⁄ít_t
;

39 
pmix_pdl_pdl›í_comp⁄ít_t
 
mˇ_pdl_pdl›í_comp⁄ít
;

	@mca/pdl/pdlopen/pdl_pdlopen_component.c

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

15 
	~"pmix_comm⁄.h
"

16 
	~"§c/mˇ/pdl/pdl.h
"

17 
	~"§c/utû/¨gv.h
"

19 
	~"pdl_pdl›í.h
"

25 c⁄° *
	gpmix_pdl_pdl›í_comp⁄ít_vîsi⁄_°rög
 =

26 "PMIXÖd»pdl›í MCA comp⁄íàvîsi⁄ " 
PMIX_VERSION
;

32 
pdl›í_comp⁄ít_ªgi°î
();

33 
pdl›í_comp⁄ít_›í
();

34 
pdl›í_comp⁄ít_˛o£
();

35 
pdl›í_comp⁄ít_quîy
(
pmix_mˇ_ba£_moduÀ_t
 **
moduÀ
, *
¥i‹ôy
);

42 
pmix_pdl_pdl›í_comp⁄ít_t
 
	gmˇ_pdl_pdl›í_comp⁄ít
 = {

45 .
ba£
 = {

49 .
ba£_vîsi⁄
 = {

50 
PMIX_PDL_BASE_VERSION_1_0_0
,

53 .
pmix_mˇ_comp⁄ít_«me
 = "pdlopen",

54 
PMIX_MCA_BASE_MAKE_VERSION
(
comp⁄ít
, 
PMIX_MAJOR_VERSION
, 
PMIX_MINOR_VERSION
,

55 
PMIX_RELEASE_VERSION
),

58 .
	gpmix_mˇ_ªgi°î_comp⁄ít_∑øms
 = 
pdl›í_comp⁄ít_ªgi°î
,

59 .
	gpmix_mˇ_›í_comp⁄ít
 = 
pdl›í_comp⁄ít_›í
,

60 .
	gpmix_mˇ_˛o£_comp⁄ít
 = 
pdl›í_comp⁄ít_˛o£
,

61 .
	gpmix_mˇ_quîy_comp⁄ít
 = 
pdl›í_comp⁄ít_quîy
,

64 .
	gba£_d©a
 = {

66 
PMIX_MCA_BASE_METADATA_PARAM_CHECKPOINT


70 .
	g¥i‹ôy
 = 80

75 
	$pdl›í_comp⁄ít_ªgi°î
()

77 
ªt
;

79 
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes_mˇ_°‹age
 = ".so,.dylib,.dll,.sl";

80 
ªt
 =

81 
	`pmix_mˇ_ba£_comp⁄ít_v¨_ªgi°î
(&
mˇ_pdl_pdl›í_comp⁄ít
.
ba£
.
ba£_vîsi⁄
,

84 
PMIX_MCA_BASE_VAR_TYPE_STRING
,

85 
NULL
,

87 
PMIX_MCA_BASE_VAR_FLAG_SETTABLE
,

88 
PMIX_INFO_LVL_5
,

89 
PMIX_MCA_BASE_VAR_SCOPE_LOCAL
,

90 &
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes_mˇ_°‹age
);

91 i‡(
ªt
 < 0) {

92  
ªt
;

94 
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes
 =

95 
	`pmix_¨gv_•lô
(
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes_mˇ_°‹age
,

98  
PMIX_SUCCESS
;

99 
	}
}

101 
	$pdl›í_comp⁄ít_›í
()

103  
PMIX_SUCCESS
;

104 
	}
}

107 
	$pdl›í_comp⁄ít_˛o£
()

109 i‡(
NULL
 !
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes
) {

110 
	`pmix_¨gv_‰ì
(
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes
);

111 
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes
 = 
NULL
;

114  
PMIX_SUCCESS
;

115 
	}
}

118 
	$pdl›í_comp⁄ít_quîy
(
pmix_mˇ_ba£_moduÀ_t
 **
moduÀ
, *
¥i‹ôy
)

123 *
¥i‹ôy
 = 
mˇ_pdl_pdl›í_comp⁄ít
.
ba£
.priority;

124 *
moduÀ
 = &
pmix_pdl_pdl›í_moduÀ
.
su≥r
;

126  
PMIX_SUCCESS
;

127 
	}
}

	@mca/pdl/pdlopen/pdl_pdlopen_module.c

15 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~<°dlib.h
>

18 
	~<dlf˙.h
>

19 
	~<sys/ty≥s.h
>

20 
	~<dúít.h
>

21 
	~<sys/°©.h
>

22 
	~<uni°d.h
>

24 
	~"pmix_comm⁄.h
"

25 
	~"§c/mˇ/pdl/pdl.h
"

26 
	~"§c/utû/¨gv.h
"

27 
	~"§c/utû/îr‹.h
"

29 
	~"pdl_pdl›í.h
"

35 
	$do_pdl›í
(c⁄° *
‚ame
, 
Êags
,

36 **
h™dÀ
, **
îr_msg
)

38 
	`as£π
(
h™dÀ
);

40 *
h™dÀ
 = 
	`dl›í
(
‚ame
, 
Êags
);

42 i‡(
NULL
 !
îr_msg
) {

43 i‡(
NULL
 !*
h™dÀ
) {

44 *
îr_msg
 = 
NULL
;

46 *
îr_msg
 = 
	`dÀº‹
();

49 
	}
}

52 
	$pdl›í_›í
(c⁄° *
‚ame
, 
boﬁ
 
u£_ext
, boﬁ 
¥iv©e_«me•a˚
,

53 
pmix_pdl_h™dÀ_t
 **
h™dÀ
, **
îr_msg
)

55 
	`as£π
(
h™dÀ
);

57 *
h™dÀ
 = 
NULL
;

60 
Êags
 = 
RTLD_LAZY
;

61 i‡(
¥iv©e_«me•a˚
) {

62 
Êags
 |
RTLD_LOCAL
;

64 
Êags
 |
RTLD_GLOBAL
;

69 *
loˇl_h™dÀ
 = 
NULL
;

70 i‡(
u£_ext
 && 
NULL
 !
‚ame
) {

71 
i
;

72 *
ext
;

74 
i
 = 0, 
ext
 = 
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes
[i];

75 
NULL
 !
ext
;

76 
ext
 = 
mˇ_pdl_pdl›í_comp⁄ít
.
fûíame_suffixes
[++
i
]) {

77 *
«me
;

79 
	`a•rötf
(&
«me
, "%s%s", 
‚ame
, 
ext
);

80 i‡(
NULL
 =
«me
) {

81  
PMIX_ERR_IN_ERRNO
;

85 
°©
 
buf
;

86 i‡(
	`°©
(
«me
, &
buf
) < 0) {

87 
	`‰ì
(
«me
);

88 i‡(
NULL
 !
îr_msg
) {

89 *
îr_msg
 = "FileÇot found";

96 
	`do_pdl›í
(
«me
, 
Êags
, &
loˇl_h™dÀ
, 
îr_msg
);

97 
	`‰ì
(
«me
);

105 
	`do_pdl›í
(
‚ame
, 
Êags
, &
loˇl_h™dÀ
, 
îr_msg
);

108 i‡(
NULL
 !
loˇl_h™dÀ
) {

109 *
h™dÀ
 = 
	`ˇŒoc
(1, (
pmix_pdl_h™dÀ_t
));

110 (*
h™dÀ
)->
dl›í_h™dÀ
 = 
loˇl_h™dÀ
;

112 #i‡
PMIX_ENABLE_DEBUG


113 if–
NULL
 !
‚ame
 ) {

114 (*
h™dÀ
)->
fûíame
 = 
	`°rdup
(
‚ame
);

117 (*
h™dÀ
)->
fûíame
 = 
	`°rdup
("(null)");

121  (
NULL
 !
loˇl_h™dÀ
Ë? 
PMIX_SUCCESS
 : 
PMIX_ERROR
;

122 
	}
}

125 
	$pdl›í_lookup
(
pmix_pdl_h™dÀ_t
 *
h™dÀ
, c⁄° *
symbﬁ
,

126 **
±r
, **
îr_msg
)

128 
	`as£π
(
h™dÀ
);

129 
	`as£π
(
h™dÀ
->
dl›í_h™dÀ
);

130 
	`as£π
(
symbﬁ
);

131 
	`as£π
(
±r
);

133 *
±r
 = 
	`dlsym
(
h™dÀ
->
dl›í_h™dÀ
, 
symbﬁ
);

134 i‡(
NULL
 !*
±r
) {

135  
PMIX_SUCCESS
;

138 i‡(
NULL
 !
îr_msg
) {

139 *
îr_msg
 = 
	`dÀº‹
();

141  
PMIX_ERROR
;

142 
	}
}

145 
	$pdl›í_˛o£
(
pmix_pdl_h™dÀ_t
 *
h™dÀ
)

147 
	`as£π
(
h™dÀ
);

149 
ªt
;

150 
ªt
 = 
	`dl˛o£
(
h™dÀ
->
dl›í_h™dÀ
);

152 #i‡
PMIX_ENABLE_DEBUG


153 
	`‰ì
(
h™dÀ
->
fûíame
);

155 
	`‰ì
(
h™dÀ
);

157  
ªt
;

158 
	}
}

164 
pdl›í_f‹óchfûe
(c⁄° *
£¨ch_∑th
,

165 (*
func
)(c⁄° *
fûíame
, *
d©a
),

166 *
d©a
)

168 
ªt
;

169 
DIR
 *
dp
 = 
NULL
;

170 **
dús
 = 
NULL
;

171 **
good_fûes
 = 
NULL
;

173 
dús
 = 
	`pmix_¨gv_•lô
(
£¨ch_∑th
, 
PMIX_ENV_SEP
);

174 
i
 = 0; 
NULL
 !
dús
 && NULL != dirs[i]; ++i) {

176 
dp
 = 
	`›ídú
(
dús
[
i
]);

177 i‡(
NULL
 =
dp
) {

178 
ªt
 = 
PMIX_ERR_IN_ERRNO
;

179 
îr‹
;

182 
dúít
 *
de
;

183 
NULL
 !(
de
 = 
	`ªaddú
(
dp
))) {

186 *
abs_«me
 = 
NULL
;

187 
	`a•rötf
(&
abs_«me
, "%s/%s", 
dús
[
i
], 
de
->
d_«me
);

188 i‡(
NULL
 =
abs_«me
) {

189 
ªt
 = 
PMIX_ERR_IN_ERRNO
;

190 
îr‹
;

194 
°©
 
buf
;

195 i‡(
	`°©
(
abs_«me
, &
buf
) < 0) {

196 
	`‰ì
(
abs_«me
);

197 
ªt
 = 
PMIX_ERR_IN_ERRNO
;

198 
îr‹
;

202 i‡(!
	`S_ISREG
(
buf
.
°_mode
)) {

203 
	`‰ì
(
abs_«me
);

208 *
±r
 = 
	`°ºchr
(
abs_«me
, '.');

209 i‡(
NULL
 !
±r
) {

212 i‡(
	`°rcmp
(
±r
, ".la") == 0 ||

213 
	`°rcmp
(
±r
, ".lo") == 0) {

214 
	`‰ì
 (
abs_«me
);

218 *
±r
 = '\0';

223 
boﬁ
 
found
 = 
Ál£
;

224 
j
 = 0; 
NULL
 !
good_fûes
 &&

225 
NULL
 !
good_fûes
[
j
]; ++j) {

226 i‡(
	`°rcmp
(
good_fûes
[
j
], 
abs_«me
) == 0) {

227 
found
 = 
åue
;

232 i‡(!
found
) {

233 
	`pmix_¨gv_≠≥nd_nosize
(&
good_fûes
, 
abs_«me
);

235 
	`‰ì
(
abs_«me
);

237 
	`˛o£dú
(
dp
);

239 
dp
 = 
NULL
;

242 i‡(
NULL
 !
good_fûes
) {

243 
i
 = 0; 
NULL
 !
good_fûes
[i]; ++i) {

244 
ªt
 = 
	`func
(
good_fûes
[
i
], 
d©a
);

245 i‡(
PMIX_SUCCESS
 !
ªt
) {

246 
îr‹
;

251 
ªt
 = 
PMIX_SUCCESS
;

253 
îr‹
:

254 i‡(
NULL
 !
dp
) {

255 
	`˛o£dú
(
dp
);

257 i‡(
NULL
 !
dús
) {

258 
	`pmix_¨gv_‰ì
(
dús
);

260 i‡(
NULL
 !
good_fûes
) {

261 
	`pmix_¨gv_‰ì
(
good_fûes
);

264  
ªt
;

265 
	}
}

271 
pmix_pdl_ba£_moduÀ_t
 
	gpmix_pdl_pdl›í_moduÀ
 = {

272 .
›í
 = 
pdl›í_›í
,

273 .
	glookup
 = 
pdl›í_lookup
,

274 .
	g˛o£
 = 
pdl›í_˛o£
,

275 .
	gf‹óchfûe
 = 
pdl›í_f‹óchfûe


	@mca/pinstalldirs/base/base.h

15 #i‚de‡
PMIX_PINSTALLDIRS_BASE_H


16 
	#PMIX_PINSTALLDIRS_BASE_H


	)

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

19 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_‰amew‹k.h
"

20 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

25 
BEGIN_C_DECLS


30 
pmix_mˇ_ba£_‰amew‹k_t
 
pmix_pö°Ældús_ba£_‰amew‹k
;

36 * 
pmix_pö°Æl_dús_ex∑nd_£tup
(c⁄° * 
öput
);

38 
	gEND_C_DECLS


	@mca/pinstalldirs/base/pinstalldirs_base_components.c

17 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

19 
	~"pmix_comm⁄.h
"

20 
	~"§c/mˇ/mˇ.h
"

21 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

22 
	~"§c/mˇ/pö°Ældús/ba£/ba£.h
"

23 
	~"§c/mˇ/pö°Ældús/ba£/°©ic-comp⁄íts.h
"

25 
pmix_pö°Æl_dús_t
 
	gpmix_pö°Æl_dús
 = {0};

27 
	#CONDITIONAL_COPY
(
èrgë
, 
‹igö
, 
fõld
) \

29 i‡(
‹igö
.
fõld
 !
NULL
 && 
èrgë
.field == NULL) { \

30 
èrgë
.
fõld
 = 
‹igö
.field; \

32 } 0)

	)

35 
	$pmix_pö°Ældús_ba£_›í
(
pmix_mˇ_ba£_›í_Êag_t
 
Êags
)

37 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
 *
comp⁄ít_ôem
;

38 
ªt
;

40 
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_comp⁄íts_›í
(&
pmix_pö°Ældús_ba£_‰amew‹k
, 
Êags
);

41 i‡(
PMIX_SUCCESS
 !
ªt
) {

42  
ªt
;

45 
	`PMIX_LIST_FOREACH
(
comp⁄ít_ôem
, &
pmix_pö°Ældús_ba£_‰amew‹k
.
‰amew‹k_comp⁄íts
, 
pmix_mˇ_ba£_comp⁄ít_li°_ôem_t
) {

46 c⁄° 
pmix_pö°Ældús_ba£_comp⁄ít_t
 *
comp⁄ít
 =

47 (c⁄° 
pmix_pö°Ældús_ba£_comp⁄ít_t
 *Ë
comp⁄ít_ôem
->
˛i_comp⁄ít
;

50 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

51 
¥efix
);

52 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

53 
exec_¥efix
);

54 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

55 
bödú
);

56 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

57 
sbödú
);

58 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

59 
libexecdú
);

60 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

61 
d©¨oŸdú
);

62 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

63 
d©adú
);

64 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

65 
sysc⁄fdú
);

66 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

67 
sh¨ed°©edú
);

68 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

69 
loˇl°©edú
);

70 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

71 
libdú
);

72 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

73 
ö˛udedú
);

74 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

75 
öfodú
);

76 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

77 
m™dú
);

78 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

79 
pmixd©adú
);

80 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

81 
pmixlibdú
);

82 
	`CONDITIONAL_COPY
(
pmix_pö°Æl_dús
, 
comp⁄ít
->
ö°Æl_dús_d©a
,

83 
pmixö˛udedú
);

87 
pmix_pö°Æl_dús
.
¥efix
 =

88 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
¥efix
);

89 
pmix_pö°Æl_dús
.
exec_¥efix
 =

90 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
exec_¥efix
);

91 
pmix_pö°Æl_dús
.
bödú
 =

92 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
bödú
);

93 
pmix_pö°Æl_dús
.
sbödú
 =

94 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
sbödú
);

95 
pmix_pö°Æl_dús
.
libexecdú
 =

96 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
libexecdú
);

97 
pmix_pö°Æl_dús
.
d©¨oŸdú
 =

98 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
d©¨oŸdú
);

99 
pmix_pö°Æl_dús
.
d©adú
 =

100 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
d©adú
);

101 
pmix_pö°Æl_dús
.
sysc⁄fdú
 =

102 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
sysc⁄fdú
);

103 
pmix_pö°Æl_dús
.
sh¨ed°©edú
 =

104 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
sh¨ed°©edú
);

105 
pmix_pö°Æl_dús
.
loˇl°©edú
 =

106 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
loˇl°©edú
);

107 
pmix_pö°Æl_dús
.
libdú
 =

108 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
libdú
);

109 
pmix_pö°Æl_dús
.
ö˛udedú
 =

110 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
ö˛udedú
);

111 
pmix_pö°Æl_dús
.
öfodú
 =

112 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
öfodú
);

113 
pmix_pö°Æl_dús
.
m™dú
 =

114 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
m™dú
);

115 
pmix_pö°Æl_dús
.
pmixd©adú
 =

116 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
pmixd©adú
);

117 
pmix_pö°Æl_dús
.
pmixlibdú
 =

118 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
pmixlibdú
);

119 
pmix_pö°Æl_dús
.
pmixö˛udedú
 =

120 
	`pmix_pö°Æl_dús_ex∑nd_£tup
(
pmix_pö°Æl_dús
.
pmixö˛udedú
);

123 
	`Ârötf
(
°dîr
, "¥efix: %s\n", 
pmix_pö°Æl_dús
.
¥efix
);

124 
	`Ârötf
(
°dîr
, "exec_¥efix: %s\n", 
pmix_pö°Æl_dús
.
exec_¥efix
);

125 
	`Ârötf
(
°dîr
, "bödú: %s\n", 
pmix_pö°Æl_dús
.
bödú
);

126 
	`Ârötf
(
°dîr
, "sbödú: %s\n", 
pmix_pö°Æl_dús
.
sbödú
);

127 
	`Ârötf
(
°dîr
, "libexecdú: %s\n", 
pmix_pö°Æl_dús
.
libexecdú
);

128 
	`Ârötf
(
°dîr
, "d©¨oŸdú: %s\n", 
pmix_pö°Æl_dús
.
d©¨oŸdú
);

129 
	`Ârötf
(
°dîr
, "d©adú: %s\n", 
pmix_pö°Æl_dús
.
d©adú
);

130 
	`Ârötf
(
°dîr
, "sysc⁄fdú: %s\n", 
pmix_pö°Æl_dús
.
sysc⁄fdú
);

131 
	`Ârötf
(
°dîr
, "sh¨ed°©edú: %s\n", 
pmix_pö°Æl_dús
.
sh¨ed°©edú
);

132 
	`Ârötf
(
°dîr
, "loˇl°©edú: %s\n", 
pmix_pö°Æl_dús
.
loˇl°©edú
);

133 
	`Ârötf
(
°dîr
, "libdú: %s\n", 
pmix_pö°Æl_dús
.
libdú
);

134 
	`Ârötf
(
°dîr
, "ö˛udedú: %s\n", 
pmix_pö°Æl_dús
.
ö˛udedú
);

135 
	`Ârötf
(
°dîr
, "öfodú: %s\n", 
pmix_pö°Æl_dús
.
öfodú
);

136 
	`Ârötf
(
°dîr
, "m™dú: %s\n", 
pmix_pö°Æl_dús
.
m™dú
);

137 
	`Ârötf
(
°dîr
, "pkgd©adú: %s\n", 
pmix_pö°Æl_dús
.
pkgd©adú
);

138 
	`Ârötf
(
°dîr
, "pkglibdú: %s\n", 
pmix_pö°Æl_dús
.
pkglibdú
);

139 
	`Ârötf
(
°dîr
, "pkgö˛udedú: %s\n", 
pmix_pö°Æl_dús
.
pkgö˛udedú
);

145  
PMIX_SUCCESS
;

146 
	}
}

150 
	$pmix_pö°Ældús_ba£_˛o£
()

152 
	`‰ì
(
pmix_pö°Æl_dús
.
¥efix
);

153 
	`‰ì
(
pmix_pö°Æl_dús
.
exec_¥efix
);

154 
	`‰ì
(
pmix_pö°Æl_dús
.
bödú
);

155 
	`‰ì
(
pmix_pö°Æl_dús
.
sbödú
);

156 
	`‰ì
(
pmix_pö°Æl_dús
.
libexecdú
);

157 
	`‰ì
(
pmix_pö°Æl_dús
.
d©¨oŸdú
);

158 
	`‰ì
(
pmix_pö°Æl_dús
.
d©adú
);

159 
	`‰ì
(
pmix_pö°Æl_dús
.
sysc⁄fdú
);

160 
	`‰ì
(
pmix_pö°Æl_dús
.
sh¨ed°©edú
);

161 
	`‰ì
(
pmix_pö°Æl_dús
.
loˇl°©edú
);

162 
	`‰ì
(
pmix_pö°Æl_dús
.
libdú
);

163 
	`‰ì
(
pmix_pö°Æl_dús
.
ö˛udedú
);

164 
	`‰ì
(
pmix_pö°Æl_dús
.
öfodú
);

165 
	`‰ì
(
pmix_pö°Æl_dús
.
m™dú
);

166 
	`‰ì
(
pmix_pö°Æl_dús
.
pmixd©adú
);

167 
	`‰ì
(
pmix_pö°Æl_dús
.
pmixlibdú
);

168 
	`‰ì
(
pmix_pö°Æl_dús
.
pmixö˛udedú
);

169 
	`mem£t
 (&
pmix_pö°Æl_dús
, 0,  (pmix_pinstall_dirs));

171  
	`pmix_mˇ_ba£_‰amew‹k_comp⁄íts_˛o£
 (&
pmix_pö°Ældús_ba£_‰amew‹k
, 
NULL
);

172 
	}
}

175 
PMIX_MCA_BASE_FRAMEWORK_DECLARE
(
pmix
, 
pö°Ældús
, 
NULL
, NULL, 
pmix_pö°Ældús_ba£_›í
,

176 
pmix_pö°Ældús_ba£_˛o£
, 
mˇ_pö°Ældús_ba£_°©ic_comp⁄íts
,

177 
PMIX_MCA_BASE_FRAMEWORK_FLAG_NOREGISTER
 | 
PMIX_MCA_BASE_FRAMEWORK_FLAG_NO_DSO
);

	@mca/pinstalldirs/base/pinstalldirs_base_expand.c

16 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 
	~<°rög.h
>

20 
	~"§c/utû/os_∑th.h
"

21 
	~"§c/mˇ/pö°Ældús/ba£/ba£.h
"

22 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

28 
	#EXPAND_STRING
(
«me
Ë
	`EXPAND_STRING2
“ame,Çame)

	)

30 
	#EXPAND_STRING2
(
ompöame
, 
fõld«me
) \

32 i‡(
NULL
 !(
°¨t_pos
 = 
	`°r°r
(
ªtvÆ
, "${" #fieldname "}"))) { \

33 
tmp
 = 
ªtvÆ
; \

34 *
°¨t_pos
 = '\0'; \

35 
íd_pos
 = 
°¨t_pos
 + 
	`°æí
("${" #fieldname "}"); \

36 
	`a•rötf
(&
ªtvÆ
, "%s%s%s", 
tmp
, \

37 
pmix_pö°Æl_dús
.
ompöame
 + 
de°dú_off£t
, \

38 
íd_pos
); \

39 
	`‰ì
(
tmp
); \

40 
ch™ged
 = 
åue
; \

41 } i‡(
NULL
 !(
°¨t_pos
 = 
	`°r°r
(
ªtvÆ
, "@{" #fieldname "}"))) { \

42 
tmp
 = 
ªtvÆ
; \

43 *
°¨t_pos
 = '\0'; \

44 
íd_pos
 = 
°¨t_pos
 + 
	`°æí
("@{" #fieldname "}"); \

45 
	`a•rötf
(&
ªtvÆ
, "%s%s%s", 
tmp
, \

46 
pmix_pö°Æl_dús
.
ompöame
 + 
de°dú_off£t
, \

47 
íd_pos
); \

48 
	`‰ì
(
tmp
); \

49 
ch™ged
 = 
åue
; \

51 } 0)

	)

59 
	$pmix_pö°Æl_dús_ex∑nd_öã∫Æ
(c⁄° * 
öput
, 
boﬁ
 
is_£tup
)

61 
size_t
 
Àn
, 
i
;

62 
boﬁ
 
√eds_ex∑nd
 = 
Ál£
;

63 *
ªtvÆ
 = 
NULL
;

64 *
de°dú
 = 
NULL
;

65 
size_t
 
de°dú_off£t
 = 0;

107 i‡(
is_£tup
) {

108 
de°dú
 = 
	`gëív
("PMIX_DESTDIR");

109 i‡(
NULL
 !
de°dú
 && 
	`°æí
(destdir) > 0) {

110 
de°dú_off£t
 = 
	`°æí
(
de°dú
);

114 
Àn
 = 
	`°æí
(
öput
);

115 
i
 = 0 ; i < 
Àn
 ; ++i) {

116 i‡('$' =
öput
[
i
] || '@' == input[i]) {

117 
√eds_ex∑nd
 = 
åue
;

122 
ªtvÆ
 = 
	`°rdup
(
öput
);

123 i‡(
NULL
 =
ªtvÆ
)  NULL;

125 i‡(
√eds_ex∑nd
) {

126 
boﬁ
 
ch™ged
 = 
Ál£
;

127 *
°¨t_pos
, *
íd_pos
, *
tmp
;

130 
ch™ged
 = 
Ál£
;

131 
	`EXPAND_STRING
(
¥efix
);

132 
	`EXPAND_STRING
(
exec_¥efix
);

133 
	`EXPAND_STRING
(
bödú
);

134 
	`EXPAND_STRING
(
sbödú
);

135 
	`EXPAND_STRING
(
libexecdú
);

136 
	`EXPAND_STRING
(
d©¨oŸdú
);

137 
	`EXPAND_STRING
(
d©adú
);

138 
	`EXPAND_STRING
(
sysc⁄fdú
);

139 
	`EXPAND_STRING
(
sh¨ed°©edú
);

140 
	`EXPAND_STRING
(
loˇl°©edú
);

141 
	`EXPAND_STRING
(
libdú
);

142 
	`EXPAND_STRING
(
ö˛udedú
);

143 
	`EXPAND_STRING
(
öfodú
);

144 
	`EXPAND_STRING
(
m™dú
);

145 
	`EXPAND_STRING2
(
pmixd©adú
, 
pkgd©adú
);

146 
	`EXPAND_STRING2
(
pmixlibdú
, 
pkglibdú
);

147 
	`EXPAND_STRING2
(
pmixö˛udedú
, 
pkgö˛udedú
);

148 } 
ch™ged
);

151 i‡(
NULL
 !
de°dú
) {

152 *
tmp
 = 
ªtvÆ
;

153 
ªtvÆ
 = 
	`pmix_os_∑th
(
Ál£
, 
de°dú
, 
tmp
, 
NULL
);

154 
	`‰ì
(
tmp
);

157  
ªtvÆ
;

158 
	}
}

162 
	$pmix_pö°Æl_dús_ex∑nd
(c⁄° * 
öput
)

165  
	`pmix_pö°Æl_dús_ex∑nd_öã∫Æ
(
öput
, 
Ál£
);

166 
	}
}

170 
	$pmix_pö°Æl_dús_ex∑nd_£tup
(c⁄° * 
öput
)

173  
	`pmix_pö°Æl_dús_ex∑nd_öã∫Æ
(
öput
, 
åue
);

174 
	}
}

	@mca/pinstalldirs/base/static-components.h

4 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

8 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 
mˇ_pö°Ældús_ív_comp⁄ít
;

9 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 
mˇ_pö°Ældús_c⁄fig_comp⁄ít
;

11 c⁄° 
pmix_mˇ_ba£_comp⁄ít_t
 *
	gmˇ_pö°Ældús_ba£_°©ic_comp⁄íts
[] = {

12 &
mˇ_pö°Ældús_ív_comp⁄ít
,

13 &
mˇ_pö°Ældús_c⁄fig_comp⁄ít
,

14 
NULL


17 #i‡
deföed
(
c_∂u•lus
Ë|| deföed(
__˝lu•lus
)

	@mca/pinstalldirs/config/pinstall_dirs.h

37 #i‚de‡
PMIX_INST_DIRS_H


38 
	#PMIX_INST_DIRS_H


	)

40 
	#PMIX_INSTALL_PREFIX
 "/u/dsﬁt/WORKSPACE/pmix-gë_ch™ges/exp‹ts"

	)

41 
	#PMIX_EXEC_PREFIX
 "${¥efix}"

	)

45 
	#PMIX_BINDIR
 "${exec_¥efix}/bö"

	)

50 
	#PMIX_SBINDIR
 "${exec_¥efix}/sbö"

	)

60 
	#PMIX_LIBEXECDIR
 "${exec_¥efix}/libexec"

	)

68 
	#PMIX_DATAROOTDIR
 "${¥efix}/sh¨e"

	)

76 
	#PMIX_DATADIR
 "${d©¨oŸdú}"

	)

80 
	#PMIX_PKGDATADIR
 "${d©adú}/pmix"

	)

93 
	#PMIX_SYSCONFDIR
 "${¥efix}/ëc"

	)

97 
	#PMIX_SHAREDSTATEDIR
 "${¥efix}/com"

	)

105 
	#PMIX_LOCALSTATEDIR
 "${¥efix}/v¨"

	)

110 
	#PMIX_LIBDIR
 "${exec_¥efix}/lib"

	)

113 
	#PMIX_PKGLIBDIR
 "${libdú}/pmix"

	)

117 
	#PMIX_INCLUDEDIR
 "${¥efix}/ö˛ude"

	)

120 
	#PMIX_PKGINCLUDEDIR
 "${ö˛udedú}/pmix"

	)

123 
	#PMIX_INFODIR
 "${d©¨oŸdú}/öfo"

	)

127 
	#PMIX_MANDIR
 "${d©¨oŸdú}/m™"

	)

	@mca/pinstalldirs/config/pmix_pinstalldirs_config.c

12 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

14 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

15 
	~"§c/mˇ/pö°Ældús/c⁄fig/pö°Æl_dús.h
"

17 c⁄° 
pmix_pö°Ældús_ba£_comp⁄ít_t
 
	gmˇ_pö°Ældús_c⁄fig_comp⁄ít
 = {

21 
PMIX_PINSTALLDIRS_BASE_VERSION_1_0_0
,

25 
PMIX_MAJOR_VERSION
,

26 
PMIX_MINOR_VERSION
,

27 
PMIX_RELEASE_VERSION
,

30 
NULL
,

31 
NULL


35 
PMIX_MCA_BASE_METADATA_PARAM_CHECKPOINT


39 
PMIX_INSTALL_PREFIX
,

40 
PMIX_EXEC_PREFIX
,

41 
PMIX_BINDIR
,

42 
PMIX_SBINDIR
,

43 
PMIX_LIBEXECDIR
,

44 
PMIX_DATAROOTDIR
,

45 
PMIX_DATADIR
,

46 
PMIX_SYSCONFDIR
,

47 
PMIX_SHAREDSTATEDIR
,

48 
PMIX_LOCALSTATEDIR
,

49 
PMIX_LIBDIR
,

50 
PMIX_INCLUDEDIR
,

51 
PMIX_INFODIR
,

52 
PMIX_MANDIR
,

53 
PMIX_PKGDATADIR
,

54 
PMIX_PKGLIBDIR
,

55 
PMIX_PKGINCLUDEDIR


	@mca/pinstalldirs/env/pmix_pinstalldirs_env.c

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"pmix_comm⁄.h
"

19 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

21 
pö°Ældús_ív_›í
();

24 
pmix_pö°Ældús_ba£_comp⁄ít_t
 
	gmˇ_pö°Ældús_ív_comp⁄ít
 = {

28 
PMIX_PINSTALLDIRS_BASE_VERSION_1_0_0
,

32 
PMIX_MAJOR_VERSION
,

33 
PMIX_MINOR_VERSION
,

34 
PMIX_RELEASE_VERSION
,

37 
pö°Ældús_ív_›í
,

38 
NULL


42 
PMIX_MCA_BASE_METADATA_PARAM_CHECKPOINT


47 
NULL
,

52 
	#SET_FIELD
(
fõld
, 
ív«me
) \

54 *
tmp
 = 
	`gëív
(
ív«me
); \

55 i‡(
NULL
 !
tmp
 && 0 =
	`°æí
(tmp)) { \

56 
tmp
 = 
NULL
; \

58 
mˇ_pö°Ældús_ív_comp⁄ít
.
ö°Æl_dús_d©a
.
fõld
 = 
tmp
; \

59 } 0)

	)

63 
	$pö°Ældús_ív_›í
()

65 
	`SET_FIELD
(
¥efix
, "PMIX_INSTALL_PREFIX");

66 
	`SET_FIELD
(
exec_¥efix
, "PMIX_EXEC_PREFIX");

67 
	`SET_FIELD
(
bödú
, "PMIX_BINDIR");

68 
	`SET_FIELD
(
sbödú
, "PMIX_SBINDIR");

69 
	`SET_FIELD
(
libexecdú
, "PMIX_LIBEXECDIR");

70 
	`SET_FIELD
(
d©¨oŸdú
, "PMIX_DATAROOTDIR");

71 
	`SET_FIELD
(
d©adú
, "PMIX_DATADIR");

72 
	`SET_FIELD
(
sysc⁄fdú
, "PMIX_SYSCONFDIR");

73 
	`SET_FIELD
(
sh¨ed°©edú
, "PMIX_SHAREDSTATEDIR");

74 
	`SET_FIELD
(
loˇl°©edú
, "PMIX_LOCALSTATEDIR");

75 
	`SET_FIELD
(
libdú
, "PMIX_LIBDIR");

76 
	`SET_FIELD
(
ö˛udedú
, "PMIX_INCLUDEDIR");

77 
	`SET_FIELD
(
öfodú
, "PMIX_INFODIR");

78 
	`SET_FIELD
(
m™dú
, "PMIX_MANDIR");

79 
	`SET_FIELD
(
pmixd©adú
, "PMIX_PKGDATADIR");

80 
	`SET_FIELD
(
pmixlibdú
, "PMIX_PKGLIBDIR");

81 
	`SET_FIELD
(
pmixö˛udedú
, "PMIX_PKGINCLUDEDIR");

83  
PMIX_SUCCESS
;

84 
	}
}

	@mca/pinstalldirs/pinstalldirs.h

13 #i‚de‡
PMIX_MCA_PINSTALLDIRS_PINSTALLDIRS_H


14 
	#PMIX_MCA_PINSTALLDIRS_PINSTALLDIRS_H


	)

16 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 
	~"§c/mˇ/mˇ.h
"

19 
	~"§c/mˇ/ba£/ba£.h
"

21 
BEGIN_C_DECLS


27 
	spmix_pö°Æl_dús_t
 {

28 * 
	m¥efix
;

29 * 
	mexec_¥efix
;

30 * 
	mbödú
;

31 * 
	msbödú
;

32 * 
	mlibexecdú
;

33 * 
	md©¨oŸdú
;

34 * 
	md©adú
;

35 * 
	msysc⁄fdú
;

36 * 
	msh¨ed°©edú
;

37 * 
	mloˇl°©edú
;

38 * 
	mlibdú
;

39 * 
	mö˛udedú
;

40 * 
	möfodú
;

41 * 
	mm™dú
;

59 * 
	mpmixd©adú
;

60 * 
	mpmixlibdú
;

61 * 
	mpmixö˛udedú
;

63 
pmix_pö°Æl_dús_t
 
	tpmix_pö°Æl_dús_t
;

66 
pmix_pö°Æl_dús_t
 
pmix_pö°Æl_dús
;

71 * 
pmix_pö°Æl_dús_ex∑nd
(c⁄° * 
öput
);

77 
	spmix_pö°Ældús_ba£_comp⁄ít_2_0_0_t
 {

79 
pmix_mˇ_ba£_comp⁄ít_t
 
	mcomp⁄ít
;

81 
pmix_mˇ_ba£_comp⁄ít_d©a_t
 
	mcomp⁄ít_d©a
;

83 
pmix_pö°Æl_dús_t
 
	mö°Æl_dús_d©a
;

88 
pmix_pö°Ældús_ba£_comp⁄ít_2_0_0_t
 
	tpmix_pö°Ældús_ba£_comp⁄ít_t
;

93 
	#PMIX_PINSTALLDIRS_BASE_VERSION_1_0_0
 \

94 
	`PMIX_MCA_BASE_VERSION_1_0_0
("pö°Ældús", 1, 0, 0)

	)

96 
	gEND_C_DECLS


	@runtime/pmix_finalize.c

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

29 
	~"§c/˛ass/pmix_obje˘.h
"

30 
	~"§c/˛õ¡/pmix_˛õ¡_›s.h
"

31 
	~"§c/usock/usock.h
"

32 
	~"§c/utû/ouçut.h
"

33 
	~"§c/utû/keyvÆ_∑r£.h
"

34 
	~"§c/utû/show_hñp.h
"

35 
	~"§c/mˇ/ba£/ba£.h
"

36 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨.h
"

37 
	~"§c/mˇ/pö°Ældús/ba£/ba£.h
"

38 
	~"§c/mˇ/b‰›s/ba£/ba£.h
"

39 
	~"§c/mˇ/p£c/ba£/ba£.h
"

40 #ö˛udê
PMIX_EVENT_HEADER


42 
	~"§c/ru¡ime/pmix_πe.h
"

43 
	~"§c/ru¡ime/pmix_¥ogªss_thªads.h
"

45 
pmix_öôülized
;

46 
boﬁ
 
pmix_öô_ˇŒed
;

48 
__pmix_©åibuã_de°ru˘‹__
 
	$pmix_˛ónup
 ()

50 i‡(!
pmix_öôülized
) {

56 
	`pmix_˛ass_föÆize
();

57 
	}
}

59 
	$pmix_πe_föÆize
()

61 if–--
pmix_öôülized
 != 0 ) {

62 if–
pmix_öôülized
 < 0 ) {

63 
	`Ârötf
(
°dîr
, "PMIx Finalize calledÅoo manyÅimes\n");

70 
	`pmix_usock_föÆize
();

71 i‡(
PMIX_PROC_CLIENT
 =
pmix_globÆs
.
¥oc_ty≥
 &&

72 0 <
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
) {

73 
	`CLOSE_THE_SOCKET
(
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
);

75 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

76 
	`pmix_d°‹e_föÆize
();

80 ()
	`pmix_mˇ_ba£_‰amew‹k_˛o£
(&
pmix_p£c_ba£_‰amew‹k
);

83 
	`pmix_dîegi°î_∑øms
();

84 
	`pmix_mˇ_ba£_v¨_föÆize
();

87 
	`pmix_utû_keyvÆ_∑r£_föÆize
();

89 ()
	`pmix_mˇ_ba£_‰amew‹k_˛o£
(&
pmix_pö°Ældús_ba£_‰amew‹k
);

92 
	`pmix_show_hñp_föÆize
();

98 
	`pmix_ouçut_föÆize
();

101 ()
	`pmix_mˇ_ba£_‰amew‹k_˛o£
(&
pmix_b‰›s_ba£_‰amew‹k
);

103 i‡(!
pmix_globÆs
.
exã∫Æ_evba£
) {

105 ()
	`pmix_¥ogªss_thªad_föÆize
(
NULL
);

106 #ifde‡
HAVE_LIBEVENT_GLOBAL_SHUTDOWN


107 
	`pmix_libevít_globÆ_shutdown
();

112 
	`PMIX_RELEASE
(
pmix_globÆs
.
my≥î
);

113 
	`PMIX_LIST_DESTRUCT
(&
pmix_globÆs
.
n•a˚s
);

114 i‡(
NULL
 !
pmix_globÆs
.
ˇche_loˇl
) {

115 
	`PMIX_RELEASE
(
pmix_globÆs
.
ˇche_loˇl
);

117 i‡(
NULL
 !
pmix_globÆs
.
ˇche_ªmŸe
) {

118 
	`PMIX_RELEASE
(
pmix_globÆs
.
ˇche_ªmŸe
);

120 
	`PMIX_DESTRUCT
(&
pmix_globÆs
.
evíts
);

122 #i‡
PMIX_NO_LIB_DESTRUCTOR


123 
	`pmix_˛ónup
();

125 
	}
}

	@runtime/pmix_init.c

30 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

34 #ifde‡
HAVE_UNISTD_H


35 
	~<uni°d.h
>

38 
	~"§c/utû/ouçut.h
"

39 
	~"§c/utû/show_hñp.h
"

40 
	~"§c/mˇ/ba£/ba£.h
"

41 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨.h
"

42 
	~"§c/mˇ/pö°Ældús/ba£/ba£.h
"

43 
	~"§c/mˇ/b‰›s/ba£/ba£.h
"

44 
	~"§c/mˇ/p£c/ba£/ba£.h
"

46 
	~"§c/evít/pmix_evít.h
"

47 
	~"§c/ö˛ude/ty≥s.h
"

48 
	~"§c/usock/usock.h
"

49 
	~"§c/utû/îr‹.h
"

50 
	~"§c/utû/keyvÆ_∑r£.h
"

52 
	~"§c/ru¡ime/pmix_πe.h
"

53 
	~"§c/ru¡ime/pmix_¥ogªss_thªads.h
"

55 #i‡
PMIX_CC_USE_PRAGMA_IDENT


56 #¥agm®
idít
 
PMIX_IDENT_STRING


57 #ñi‡
PMIX_CC_USE_IDENT


58 #idíà
PMIX_IDENT_STRING


60 c⁄° 
	gpmix_vîsi⁄_°rög
[] = 
PMIX_IDENT_STRING
;

62 
	gpmix_öôülized
 = 0;

63 
boﬁ
 
	gpmix_öô_ˇŒed
 = 
Ál£
;

64 
pmix_globÆs_t
 
	gpmix_globÆs
 = {

65 .
öô_˙å
 = 0,

66 .
	gmy≥î
 = 
NULL
,

67 .
	gpödex
 = 0,

68 .
	gevba£
 = 
NULL
,

69 .
	gexã∫Æ_evba£
 = 
Ál£
,

70 .
	gdebug_ouçut
 = -1,

71 .
	g¥oc_ty≥
 = 
PMIX_PROC_UNDEF
,

72 .
	gc⁄√˘ed
 = 
Ál£
,

73 .
	gˇche_loˇl
 = 
NULL
,

74 .
	gˇche_ªmŸe
 = 
NULL


78 
	$pmix_πe_öô
(
pmix_¥oc_ty≥_t
 
ty≥
,

79 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

81 
ªt
, 
debug_Àvñ
;

82 *
îr‹
 = 
NULL
, *
ev¨
;

83 *
∑øm
;

84 
size_t
 
n
;

86 if–++
pmix_öôülized
 != 1 ) {

87 if–
pmix_öôülized
 < 1 ) {

88  
PMIX_ERROR
;

90  
PMIX_SUCCESS
;

93 #i‡
PMIX_NO_LIB_DESTRUCTOR


94 i‡(
pmix_öô_ˇŒed
) {

96 
	`Ârötf
 (
°dîr
, "pmix_init:áttemptedÅo initializeáfter finalize without compiler "

99  
PMIX_ERR_NOT_SUPPORTED
;

103 
pmix_öô_ˇŒed
 = 
åue
;

106 i‡(!
	`pmix_ouçut_öô
()) {

107  
PMIX_ERROR
;

111 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_›í
(&
pmix_pö°Ældús_ba£_‰amew‹k
, 0))) {

112 
	`Ârötf
(
°dîr
, "pmix_pinstalldirs_base_open() failed --Örocess willÜikelyábort (%s:%d,Ñeturned %d instead of PMIX_SUCCESS)\n",

113 
__FILE__
, 
__LINE__
, 
ªt
);

114  
ªt
;

118 
	`pmix_show_hñp_öô
();

121 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_utû_keyvÆ_∑r£_öô
())) {

122 
îr‹
 = "pmix_util_keyval_parse_init";

123 
ªtu∫_îr‹
;

127 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_v¨_öô
())) {

128 
îr‹
 = "mca_base_var_init";

129 
ªtu∫_îr‹
;

133 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_v¨_ˇche_fûes
(
Ál£
))) {

134 
îr‹
 = "failedÅo cache files";

135 
ªtu∫_îr‹
;

139 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_ªgi°î_∑øms
())) {

140 
îr‹
 = "pmix_register_params";

141 
ªtu∫_îr‹
;

145 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_›í
())) {

146 
îr‹
 = "mca_base_open";

147 
ªtu∫_îr‹
;

151 
pmix_globÆs
.
¥oc_ty≥
 = 
ty≥
;

152 
	`mem£t
(&
pmix_globÆs
.
myid
, 0, (
pmix_¥oc_t
));

153 
	`PMIX_CONSTRUCT
(&
pmix_globÆs
.
n•a˚s
, 
pmix_li°_t
);

154 
	`PMIX_CONSTRUCT
(&
pmix_globÆs
.
evíts
, 
pmix_evíts_t
);

156 
pmix_globÆs
.
uid
 = 
	`gëeuid
();

157 
pmix_globÆs
.
gid
 = 
	`gëegid
();

159 i‡(
NULL
 !(
ev¨
 = 
	`gëív
("PMIX_DEBUG"))) {

160 
debug_Àvñ
 = 
	`°πﬁ
(
ev¨
, 
NULL
, 10);

161 
pmix_globÆs
.
debug_ouçut
 = 
	`pmix_ouçut_›í
(
NULL
);

162 
	`pmix_ouçut_£t_vîbosôy
(
pmix_globÆs
.
debug_ouçut
, 
debug_Àvñ
);

165 
pmix_globÆs
.
my≥î
 = 
	`PMIX_NEW
(
pmix_≥î_t
);

168 i‡(
NULL
 !
öfo
) {

169 
n
=0;Ç < 
nöfo
;Ç++) {

170 i‡(0 =
	`°rcmp
(
PMIX_EVENT_BASE
, 
öfo
[
n
].
key
)) {

171 
pmix_globÆs
.
evba£
 = (
pmix_evít_ba£_t
*)
öfo
[
n
].
vÆue
.
d©a
.
±r
;

172 
pmix_globÆs
.
exã∫Æ_evba£
 = 
åue
;

178 if–
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_›í
(&
pmix_b‰›s_ba£_‰amew‹k
, 0)) ) {

179 
îr‹
 = "pmix_bfrops_base_open";

180 
ªtu∫_îr‹
;

182 if–
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_b‰›_ba£_£À˘
()) ) {

183 
îr‹
 = "pmix_bfrops_base_select";

184 
ªtu∫_îr‹
;

188 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_›í
(&
pmix_p£c_ba£_‰amew‹k
, 0))) {

189 
îr‹
 = "pmix_psec_base_open";

190 
ªtu∫_îr‹
;

192 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_p£c_ba£_£À˘
())) {

193 
îr‹
 = "pmix_psec_base_select";

194 
ªtu∫_îr‹
;

196 
∑øm
 = 
	`gëív
("PMIX_SEC_MODULE");

197 
pmix_globÆs
.
my≥î
->
comm
.
£c
 = 
	`pmix_p£c_ba£_assign_moduÀ
(
∑øm
);

200 
	`pmix_evít_u£_thªads
();

201 i‡(!
pmix_globÆs
.
exã∫Æ_evba£
) {

203 i‡(
NULL
 =(
pmix_globÆs
.
evba£
 = 
	`pmix_¥ogªss_thªad_öô
(NULL))) {

204 
îr‹
 = "progressÅhread";

205 
ªt
 = 
PMIX_ERROR
;

206 
ªtu∫_îr‹
;

212 if–
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_›í
(&
pmix_±l_ba£_‰amew‹k
, 0)) ) {

213 
îr‹
 = "pmix_ptl_base_open";

214 
ªtu∫_îr‹
;

216 if–
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_±l_ba£_£À˘
()) ) {

217 
îr‹
 = "pmix_ptl_base_select";

218 
ªtu∫_îr‹
;

223 if–
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_›í
(&
pmix_pd°‹_ba£_‰amew‹k
, 0)) ) {

224 
îr‹
 = "pmix_pdstor_base_open";

225 
ªtu∫_îr‹
;

227 if–
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_pd°‹_ba£_£À˘
()) ) {

228 
îr‹
 = "pmix_pdstor_base_select";

229 
ªtu∫_îr‹
;

233 i‡(
PMIX_PROC_SERVER
 =
ty≥
) {

234 
	`pmix_usock_öô
(
NULL
);

236 
	`pmix_usock_öô
(
pmix_˛õ¡_nŸify_ªcv
);

239  
PMIX_SUCCESS
;

241 
ªtu∫_îr‹
:

242 
	`pmix_show_hñp
( "help-pmix-runtime.txt",

243 "pmix_öô:°¨tup:öã∫Æ-Áûuª", 
åue
,

244 
îr‹
, 
ªt
 );

245  
ªt
;

246 
	}
}

	@runtime/pmix_params.c

32 
	~"pmix_c⁄fig.h
"

34 
	~"§c/ö˛ude/ty≥s.h
"

35 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨.h
"

36 
	~"§c/ru¡ime/pmix_πe.h
"

37 
	~"§c/utû/timögs.h
"

39 #i‡
PMIX_ENABLE_TIMING


40 *
	gpmix_timög_sync_fûe
 = 
NULL
;

41 *
	gpmix_timög_ouçut
 = 
NULL
;

42 
boﬁ
 
	gpmix_timög_ovîhód
 = 
åue
;

45 
boﬁ
 
	gpmix_ªgi°î_d⁄e
 = 
Ál£
;

47 
pmix_°©us_t
 
	$pmix_ªgi°î_∑øms
()

49 i‡(
pmix_ªgi°î_d⁄e
) {

50  
PMIX_SUCCESS
;

53 
pmix_ªgi°î_d⁄e
 = 
åue
;

55 #i‡
PMIX_ENABLE_TIMING


56 
pmix_timög_sync_fûe
 = 
NULL
;

57 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "pmix", 
NULL
, "timing_sync_file",

59 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0,

60 
PMIX_INFO_LVL_9
, 
PMIX_MCA_BASE_VAR_SCOPE_ALL
,

61 &
pmix_timög_sync_fûe
);

62 if–
	`pmix_timög_˛ocksync_ªad
(
pmix_timög_sync_fûe
) ){

63 
	`pmix_ouçut
(0, "C™nŸÑód fûê%†c⁄èöög clock synchr⁄ißti⁄ inf‹m©i⁄\n", 
pmix_timög_sync_fûe
);

66 
pmix_timög_ouçut
 = 
NULL
;

67 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "pmix", 
NULL
, "timing_output",

69 
PMIX_MCA_BASE_VAR_TYPE_STRING
, 
NULL
, 0, 0,

70 
PMIX_INFO_LVL_9
, 
PMIX_MCA_BASE_VAR_SCOPE_ALL
,

71 &
pmix_timög_ouçut
);

73 
pmix_timög_ovîhód
 = 
åue
;

74 (Ë
	`pmix_mˇ_ba£_v¨_ªgi°î
 ("pmix", "pmix", 
NULL
, "timing_overhead",

78 
PMIX_MCA_BASE_VAR_TYPE_BOOL
, 
NULL
, 0, 0,

79 
PMIX_INFO_LVL_9
, 
PMIX_MCA_BASE_VAR_SCOPE_ALL
,

80 &
pmix_timög_ovîhód
);

83  
PMIX_SUCCESS
;

84 
	}
}

86 
pmix_°©us_t
 
	$pmix_dîegi°î_∑øms
()

88 
pmix_ªgi°î_d⁄e
 = 
Ál£
;

90  
PMIX_SUCCESS
;

91 
	}
}

	@runtime/pmix_progress_threads.c

11 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

12 
	~"§c/ö˛ude/ty≥s.h
"

14 #ifde‡
HAVE_UNISTD_H


15 
	~<uni°d.h
>

17 
	~<°rög.h
>

18 
	~<±hªad.h
>

19 #ö˛udê
PMIX_EVENT_HEADER


21 
	~"§c/˛ass/pmix_li°.h
"

22 
	~"§c/utû/îr‹.h
"

23 
	~"§c/utû/fd.h
"

25 
	~"§c/ru¡ime/pmix_¥ogªss_thªads.h
"

28 
	#PMIX_THREAD_CANCELLED
 ((*)1);

	)

29 *(*
	tpmix_thªad_‚_t
Ë(
	tpmix_obje˘_t
 *);

31 
	spmix_thªad_t
 {

32 
pmix_obje˘_t
 
	msu≥r
;

33 
pmix_thªad_‚_t
 
	mt_run
;

34 * 
	mt_¨g
;

35 
±hªad_t
 
	mt_h™dÀ
;

36 } 
	tpmix_thªad_t
;

37 
	$±c⁄
(
pmix_thªad_t
 *
p
)

39 
p
->
t_¨g
 = 
NULL
;

40 
p
->
t_h™dÀ
 = (
±hªad_t
) -1;

41 
	}
}

42 
PMIX_CLASS_INSTANCE
(
pmix_thªad_t
,

43 
pmix_obje˘_t
,

44 
±c⁄
, 
NULL
);

46 
	$pmix_thªad_°¨t
(
pmix_thªad_t
 *
t
)

48 
rc
;

50 i‡(
PMIX_ENABLE_DEBUG
) {

51 i‡(
NULL
 =
t
->
t_run
 ||Å->
t_h™dÀ
 !(
±hªad_t
) -1) {

52  
PMIX_ERR_BAD_PARAM
;

56 
rc
 = 
	`±hªad_¸óã
(&
t
->
t_h™dÀ
, 
NULL
, (*(*)(*)Ët->
t_run
,Å);

58  (
rc
 =0Ë? 
PMIX_SUCCESS
 : 
PMIX_ERROR
;

59 
	}
}

62 
	$pmix_thªad_joö
(
pmix_thªad_t
 *
t
, **
thr_ªtu∫
)

64 
rc
 = 
	`±hªad_joö
(
t
->
t_h™dÀ
, 
thr_ªtu∫
);

65 
t
->
t_h™dÀ
 = (
±hªad_t
) -1;

66  (
rc
 =0Ë? 
PMIX_SUCCESS
 : 
PMIX_ERROR
;

67 
	}
}

72 
pmix_li°_ôem_t
 
	msu≥r
;

74 
	mªfcou¡
;

75 *
	m«me
;

77 
pmix_evít_ba£_t
 *
	mev_ba£
;

81 vﬁ©ûê
boﬁ
 
	mev_a˘ive
;

85 
pmix_evít_t
 
	mblock
;

87 
boﬁ
 
	mígöe_c⁄°ru˘ed
;

88 
pmix_thªad_t
 
	mígöe
;

89 } 
	tpmix_¥ogªss_åackî_t
;

91 
	$åackî_c⁄°ru˘‹
(
pmix_¥ogªss_åackî_t
 *
p
)

93 
p
->
ªfcou¡
 = 1;

94 
p
->
«me
 = 
NULL
;

95 
p
->
ev_ba£
 = 
NULL
;

96 
p
->
ev_a˘ive
 = 
Ál£
;

97 
p
->
ígöe_c⁄°ru˘ed
 = 
Ál£
;

98 
	}
}

100 
	$åackî_de°ru˘‹
(
pmix_¥ogªss_åackî_t
 *
p
)

102 
	`pmix_evít_dñ
(&
p
->
block
);

104 i‡(
NULL
 !
p
->
«me
) {

105 
	`‰ì
(
p
->
«me
);

107 i‡(
NULL
 !
p
->
ev_ba£
) {

108 
	`pmix_evít_ba£_‰ì
(
p
->
ev_ba£
);

110 i‡(
p
->
ígöe_c⁄°ru˘ed
) {

111 
	`PMIX_DESTRUCT
(&
p
->
ígöe
);

113 
	}
}

115 
PMIX_CLASS_INSTANCE
(
pmix_¥ogªss_åackî_t
,

116 
pmix_li°_ôem_t
,

117 
åackî_c⁄°ru˘‹
,

118 
åackî_de°ru˘‹
);

120 
boﬁ
 
	göôed
 = 
Ál£
;

121 
pmix_li°_t
 
	gåackög
;

122 
timevÆ
 
	gl⁄g_timeout
 = {

123 .
tv_£c
 = 3600,

124 .
	gtv_u£c
 = 0

126 c⁄° *
	gsh¨ed_thªad_«me
 = "PMIX-wideásyncÖrogressÅhread";

132 
	$dummy_timeout_cb
(
fd
, 
¨gs
, *
cbd©a
)

134 
pmix_¥ogªss_åackî_t
 *
åk
 = (pmix_¥ogªss_åackî_t*)
cbd©a
;

136 
	`pmix_evít_add
(&
åk
->
block
, &
l⁄g_timeout
);

137 
	}
}

142 * 
	$¥ogªss_ígöe
(
pmix_obje˘_t
 *
obj
)

144 
pmix_thªad_t
 *
t
 = (pmix_thªad_t*)
obj
;

145 
pmix_¥ogªss_åackî_t
 *
åk
 = (pmix_¥ogªss_åackî_t*)
t
->
t_¨g
;

147 
åk
->
ev_a˘ive
) {

149 
	`pmix_evít_lo›
(
åk
->
ev_ba£
, 
PMIX_EVLOOP_ONCE
);

152  
PMIX_THREAD_CANCELLED
;

153 
	}
}

155 
	$°›_¥ogªss_ígöe
(
pmix_¥ogªss_åackî_t
 *
åk
)

157 
	`as£π
(
åk
->
ev_a˘ive
);

158 
åk
->
ev_a˘ive
 = 
Ál£
;

162 
	`pmix_evít_ba£_lo›bªak
(
åk
->
ev_ba£
);

164 
	`pmix_thªad_joö
(&
åk
->
ígöe
, 
NULL
);

165 
	}
}

167 
	$°¨t_¥ogªss_ígöe
(
pmix_¥ogªss_åackî_t
 *
åk
)

169 
	`as£π
(!
åk
->
ev_a˘ive
);

170 
åk
->
ev_a˘ive
 = 
åue
;

173 
åk
->
ígöe
.
t_run
 = 
¥ogªss_ígöe
;

174 
åk
->
ígöe
.
t_¨g
 =Årk;

176 
rc
 = 
	`pmix_thªad_°¨t
(&
åk
->
ígöe
);

177 i‡(
PMIX_SUCCESS
 !
rc
) {

178 
	`PMIX_ERROR_LOG
(
rc
);

181  
rc
;

182 
	}
}

184 
pmix_evít_ba£_t
 *
	$pmix_¥ogªss_thªad_öô
(c⁄° *
«me
)

186 
pmix_¥ogªss_åackî_t
 *
åk
;

187 
rc
;

189 i‡(!
öôed
) {

190 
	`PMIX_CONSTRUCT
(&
åackög
, 
pmix_li°_t
);

191 
öôed
 = 
åue
;

194 i‡(
NULL
 =
«me
) {

195 
«me
 = 
sh¨ed_thªad_«me
;

199 
	`PMIX_LIST_FOREACH
(
åk
, &
åackög
, 
pmix_¥ogªss_åackî_t
) {

200 i‡(0 =
	`°rcmp
(
«me
, 
åk
->name)) {

202 ++
åk
->
ªfcou¡
;

204  
åk
->
ev_ba£
;

208 
åk
 = 
	`PMIX_NEW
(
pmix_¥ogªss_åackî_t
);

209 i‡(
NULL
 =
åk
) {

210 
	`PMIX_ERROR_LOG
(
PMIX_ERR_OUT_OF_RESOURCE
);

211  
NULL
;

214 
åk
->
«me
 = 
	`°rdup
(name);

215 i‡(
NULL
 =
åk
->
«me
) {

216 
	`PMIX_ERROR_LOG
(
PMIX_ERR_OUT_OF_RESOURCE
);

217 
	`PMIX_RELEASE
(
åk
);

218  
NULL
;

221 i‡(
NULL
 =(
åk
->
ev_ba£
 = 
	`pmix_evít_ba£_¸óã
())) {

222 
	`PMIX_ERROR_LOG
(
PMIX_ERR_OUT_OF_RESOURCE
);

223 
	`PMIX_RELEASE
(
åk
);

224  
NULL
;

229 
	`pmix_evít_£t
(
åk
->
ev_ba£
, &åk->
block
, -1, 
PMIX_EV_PERSIST
,

230 
dummy_timeout_cb
, 
åk
);

231 
	`pmix_evít_add
(&
åk
->
block
, &
l⁄g_timeout
);

234 
	`PMIX_CONSTRUCT
(&
åk
->
ígöe
, 
pmix_thªad_t
);

235 
åk
->
ígöe_c⁄°ru˘ed
 = 
åue
;

236 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`°¨t_¥ogªss_ígöe
(
åk
))) {

237 
	`PMIX_ERROR_LOG
(
rc
);

238 
	`PMIX_RELEASE
(
åk
);

239  
NULL
;

241 
	`pmix_li°_≠≥nd
(&
åackög
, &
åk
->
su≥r
);

243  
åk
->
ev_ba£
;

244 
	}
}

246 
	$pmix_¥ogªss_thªad_föÆize
(c⁄° *
«me
)

248 
pmix_¥ogªss_åackî_t
 *
åk
;

250 i‡(!
öôed
) {

252  
PMIX_ERR_NOT_FOUND
;

255 i‡(
NULL
 =
«me
) {

256 
«me
 = 
sh¨ed_thªad_«me
;

260 
	`PMIX_LIST_FOREACH
(
åk
, &
åackög
, 
pmix_¥ogªss_åackî_t
) {

261 i‡(0 =
	`°rcmp
(
«me
, 
åk
->name)) {

263 --
åk
->
ªfcou¡
;

266 i‡(
åk
->
ªfcou¡
 > 0) {

267  
PMIX_SUCCESS
;

271 i‡(
åk
->
ev_a˘ive
) {

272 
	`°›_¥ogªss_ígöe
(
åk
);

275 
	`pmix_li°_ªmove_ôem
(&
åackög
, &
åk
->
su≥r
);

276 
	`PMIX_RELEASE
(
åk
);

277  
PMIX_SUCCESS
;

281  
PMIX_ERR_NOT_FOUND
;

282 
	}
}

287 
	$pmix_¥ogªss_thªad_∑u£
(c⁄° *
«me
)

289 
pmix_¥ogªss_åackî_t
 *
åk
;

291 i‡(!
öôed
) {

293  
PMIX_ERR_NOT_FOUND
;

296 i‡(
NULL
 =
«me
) {

297 
«me
 = 
sh¨ed_thªad_«me
;

301 
	`PMIX_LIST_FOREACH
(
åk
, &
åackög
, 
pmix_¥ogªss_åackî_t
) {

302 i‡(0 =
	`°rcmp
(
«me
, 
åk
->name)) {

303 i‡(
åk
->
ev_a˘ive
) {

304 
	`°›_¥ogªss_ígöe
(
åk
);

307  
PMIX_SUCCESS
;

311  
PMIX_ERR_NOT_FOUND
;

312 
	}
}

314 
	$pmix_¥ogªss_thªad_ªsume
(c⁄° *
«me
)

316 
pmix_¥ogªss_åackî_t
 *
åk
;

318 i‡(!
öôed
) {

320  
PMIX_ERR_NOT_FOUND
;

323 i‡(
NULL
 =
«me
) {

324 
«me
 = 
sh¨ed_thªad_«me
;

328 
	`PMIX_LIST_FOREACH
(
åk
, &
åackög
, 
pmix_¥ogªss_åackî_t
) {

329 i‡(0 =
	`°rcmp
(
«me
, 
åk
->name)) {

330 i‡(
åk
->
ev_a˘ive
) {

331  
PMIX_ERR_RESOURCE_BUSY
;

334  
	`°¨t_¥ogªss_ígöe
(
åk
);

338  
PMIX_ERR_NOT_FOUND
;

339 
	}
}

	@runtime/pmix_progress_threads.h

11 #i‚de‡
PMIX_PROGRESS_THREADS_H


12 
	#PMIX_PROGRESS_THREADS_H


	)

14 
	~"pmix_c⁄fig.h
"

30 
pmix_evít_ba£_t
 *
pmix_¥ogªss_thªad_öô
(c⁄° *
«me
);

43 
pmix_¥ogªss_thªad_föÆize
(c⁄° *
«me
);

56 
pmix_¥ogªss_thªad_∑u£
(c⁄° *
«me
);

65 
pmix_¥ogªss_thªad_ªsume
(c⁄° *
«me
);

	@runtime/pmix_rte.h

24 #i‚de‡
PMIX_RTE_H


25 
	#PMIX_RTE_H


	)

27 
	~"pmix_c⁄fig.h
"

28 
	~"pmix_comm⁄.h
"

29 
	~"§c/˛ass/pmix_obje˘.h
"

31 
	~<°dio.h
>

32 
	~<uni°d.h
>

33 
	~<sys/ty≥s.h
>

34 #ö˛udê
PMIX_EVENT_HEADER


36 
	~"§c/ö˛ude/pmix_globÆs.h
"

38 
	gBEGIN_C_DECLS


40 #i‡
PMIX_ENABLE_TIMING


41 *
pmix_timög_sync_fûe
;

42 *
pmix_timög_ouçut
;

43 
boﬁ
 
pmix_timög_ovîhód
;

46 
pmix_öôülized
;

49 c⁄° 
pmix_vîsi⁄_°rög
[];

58 
pmix_°©us_t
 
pmix_πe_öô
(
pmix_¥oc_ty≥_t
 
ty≥
,

59 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
);

65 
pmix_πe_föÆize
();

70 
pmix_°©us_t
 
pmix_ªgi°î_∑øms
();

71 
pmix_°©us_t
 
pmix_dîegi°î_∑øms
();

73 
pmix_˛õ¡_nŸify_ªcv
(
pmix_≥î_t
 *
≥î
, 
pmix_usock_hdr_t
 *
hdr
,

74 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

76 
	gEND_C_DECLS


	@sec/pmix_munge.c

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

15 
	~<pmix_comm⁄.h
>

17 
	~"§c/ö˛ude/pmix_globÆs.h
"

18 
	~"§c/utû/¨gv.h
"

19 
	~"§c/utû/ouçut.h
"

20 
	~"§c/usock/usock.h
"

22 
	~<uni°d.h
>

23 #ifde‡
HAVE_SYS_TYPES_H


24 
	~<sys/ty≥s.h
>

26 
	~<munge.h
>

28 
	~"pmix_£c.h
"

29 
	~"pmix_munge.h
"

31 
munge_öô
();

32 
munge_föÆize
();

33 * 
¸óã_¸ed
();

34 
vÆid©e_¸ed
(
pmix_≥î_t
 *
≥î
, *
¸ed
);

36 
pmix_£c_ba£_moduÀ_t
 
	gpmix_munge_moduÀ
 = {

38 
munge_öô
,

39 
munge_föÆize
,

40 
¸óã_¸ed
,

41 
NULL
,

42 
vÆid©e_¸ed
,

43 
NULL


46 *
	gmy¸ed
 = 
NULL
;

47 
boﬁ
 
	göôülized
 = 
Ál£
;

48 
boﬁ
 
	gª‰esh
 = 
Ál£
;

50 
	$munge_öô
()

52 
rc
;

54 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

61 i‡(
EMUNGE_SUCCESS
 !(
rc
 = 
	`munge_ícode
(&
my¸ed
, 
NULL
, NULL, 0))) {

62 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

64 
	`munge_°ªº‹
(
rc
));

65  
PMIX_ERR_SERVER_NOT_AVAIL
;

67 
öôülized
 = 
åue
;

69  
PMIX_SUCCESS
;

70 
	}
}

72 
	$munge_föÆize
()

74 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

76 i‡(
öôülized
) {

77 i‡(
NULL
 !
my¸ed
) {

78 
	`‰ì
(
my¸ed
);

79 
my¸ed
 = 
NULL
;

82 
	}
}

84 * 
	$¸óã_¸ed
()

86 
rc
;

87 *
ª•
=
NULL
;

89 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

92 i‡(
öôülized
) {

93 i‡(!
ª‰esh
) {

94 
ª‰esh
 = 
åue
;

95 
ª•
 = 
	`°rdup
(
my¸ed
);

99 i‡(
NULL
 !
my¸ed
) {

100 
	`‰ì
(
my¸ed
);

102 i‡(
EMUNGE_SUCCESS
 !(
rc
 = 
	`munge_ícode
(&
my¸ed
, 
NULL
, NULL, 0))) {

103 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

105 
	`munge_°ªº‹
(
rc
));

106  
NULL
;

108 
ª•
 = 
	`°rdup
(
my¸ed
);

111  
ª•
;

112 
	}
}

114 
	$vÆid©e_¸ed
(
pmix_≥î_t
 *
≥î
, *
¸ed
)

116 
uid_t
 
uid
;

117 
gid_t
 
gid
;

118 
munge_îr_t
 
rc
;

120 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

121 "£c: mungêvÆid©e_¸ed %s", 
¸ed
 ? cred : "NULL");

124 i‡(
EMUNGE_SUCCESS
 !(
rc
 = 
	`munge_decode
(
¸ed
, 
NULL
, NULL, NULL, &
uid
, &
gid
))) {

125 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

127 
	`munge_°ªº‹
(
rc
));

128  
PMIX_ERR_INVALID_CRED
;

132 i‡(
uid
 !
≥î
->
öfo
->uid) {

133  
PMIX_ERR_INVALID_CRED
;

137 i‡(
gid
 !
≥î
->
öfo
->gid) {

138  
PMIX_ERR_INVALID_CRED
;

141 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

143  
PMIX_SUCCESS
;

144 
	}
}

	@sec/pmix_munge.h

11 #i‚de‡
PMIX_MUNGE_H


12 
	#PMIX_MUNGE_H


	)

14 
	gBEGIN_C_DECLS


16 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

19 
pmix_£c_ba£_moduÀ_t
 
pmix_munge_moduÀ
;

21 
	gEND_C_DECLS


	@sec/pmix_native.c

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

16 
	~<pmix_comm⁄.h
>

18 
	~"§c/ö˛ude/pmix_sockë_î∫o.h
"

19 
	~"§c/ö˛ude/pmix_globÆs.h
"

20 
	~"§c/utû/¨gv.h
"

21 
	~"§c/utû/îr‹.h
"

22 
	~"§c/utû/ouçut.h
"

23 
	~"§c/usock/usock.h
"

25 
	~<uni°d.h
>

26 #ifde‡
HAVE_SYS_TYPES_H


27 
	~<sys/ty≥s.h
>

29 #ifde‡
HAVE_UCRED_H


30 
	~<u¸ed.h
>

33 
	~"pmix_£c.h
"

34 
	~"pmix_«tive.h
"

36 
«tive_öô
();

37 
«tive_föÆize
();

38 
pmix_°©us_t
 
vÆid©e_¸ed
(
pmix_≥î_t
 *
≥î
, *
¸ed
);

40 
pmix_£c_ba£_moduÀ_t
 
	gpmix_«tive_moduÀ
 = {

42 
«tive_öô
,

43 
«tive_föÆize
,

44 
NULL
,

45 
NULL
,

46 
vÆid©e_¸ed
,

47 
NULL


50 
	$«tive_öô
()

52 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

54  
PMIX_SUCCESS
;

55 
	}
}

57 
	$«tive_föÆize
()

59 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

61 
	}
}

63 
pmix_°©us_t
 
	$vÆid©e_¸ed
(
pmix_≥î_t
 *
≥î
, *
¸ed
)

65 #i‡
	`deföed
(
SO_PEERCRED
)

66 #ifde‡
HAVE_STRUCT_SOCKPEERCRED_UID


67 
	#HAVE_STRUCT_UCRED_UID


	)

68 
sock≥î¸ed
 
u¸ed
;

70 
u¸ed
 ucred;

72 
sockÀn_t
 
¸Àn
 =  (
u¸ed
);

74 #ifde‡
HAVE_GETPEERUCRED


75 
u¸ed_t
 *
u¸ed
 = 
NULL
;

77 
uid_t
 
euid
;

78 
gid_t
 
gid
;

80 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

81 "£c:Ç©ivêvÆid©e_¸ed %s", 
¸ed
 ? cred : "NULL");

83 #i‡
	`deföed
(
SO_PEERCRED
Ë&& (deföed(
HAVE_STRUCT_UCRED_UID
Ë|| deföed(
HAVE_STRUCT_UCRED_CR_UID
))

85 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

87 i‡(
	`gësock›t
 (
≥î
->
sd
, 
SOL_SOCKET
, 
SO_PEERCRED
, &
u¸ed
, &
¸Àn
) < 0) {

88 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

90 
	`°ªº‹
 (
pmix_sockë_î∫o
));

91  
PMIX_ERR_INVALID_CRED
;

93 #i‡
	`deföed
(
HAVE_STRUCT_UCRED_UID
)

94 
euid
 = 
u¸ed
.
uid
;

95 
gid
 = 
u¸ed
.gid;

97 
euid
 = 
u¸ed
.
¸_uid
;

98 
gid
 = 
u¸ed
.
¸_gid
;

101 #ñi‡
	`deföed
(
HAVE_GETPEEREID
)

102 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

104 i‡(0 !
	`gë≥îeid
(
≥î
->
sd
, &
euid
, &
gid
)) {

105 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

107 
	`°ªº‹
 (
pmix_sockë_î∫o
));

108  
PMIX_ERR_INVALID_CRED
;

110 #ñi‡
	`deföed
(
HAVE_GETPEERUCRED
)

111 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

113 i‡(0 !
	`gë≥îu¸ed
(
≥î
->
sd
, &
u¸ed
)) {

114 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

116 
	`°ªº‹
 (
pmix_sockë_î∫o
));

117 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

119 
	`°ªº‹
 (
î∫o
));

120  
PMIX_ERR_INVALID_CRED
;

122 
euid
 = 
	`u¸ed_gëeuid
(
u¸ed
);

123 
gid
 = 
	`u¸ed_gërgid
(
u¸ed
);

124 
	`u¸ed_‰ì
(
u¸ed
);

126 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

128  
PMIX_ERR_NOT_SUPPORTED
;

132 i‡(
euid
 !
≥î
->
öfo
->
uid
) {

133 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

134 "£c: sockë cªd c⁄èö†övÆid uid %u", 
euid
);

135  
PMIX_ERR_INVALID_CRED
;

139 i‡(
gid
 !
≥î
->
öfo
->gid) {

140 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

141 "£c: sockë cªd c⁄èö†övÆid gid %u", 
gid
);

142  
PMIX_ERR_INVALID_CRED
;

145 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

147 
euid
, 
gid
);

148  
PMIX_SUCCESS
;

149 
	}
}

	@sec/pmix_native.h

11 #i‚de‡
PMIX_NATIVE_H


12 
	#PMIX_NATIVE_H


	)

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~"§c/£c/pmix_£c.h
"

19 
BEGIN_C_DECLS


21 
pmix_£c_ba£_moduÀ_t
 
pmix_«tive_moduÀ
;

23 
	gEND_C_DECLS


	@sec/pmix_sasl.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

22 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

24 
	~"§c/ö˛ude/pmix_globÆs.h
"

26 #ifde‡
HAVE_STRING_H


27 
	~<°rög.h
>

29 
	~<f˙é.h
>

30 #ifde‡
HAVE_UNISTD_H


31 
	~<uni°d.h
>

33 #ifde‡
HAVE_SYS_SOCKET_H


34 
	~<sys/sockë.h
>

36 #ifde‡
HAVE_SYS_UN_H


37 
	~<sys/un.h
>

39 #ifde‡
HAVE_SYS_UIO_H


40 
	~<sys/uio.h
>

42 #ifde‡
HAVE_SYS_TYPES_H


43 
	~<sys/ty≥s.h
>

45 #ö˛udê
PMIX_EVENT_HEADER


46 
	~<ß¶/ß¶.h
>

48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/ouçut.h
"

53 
	~"§c/utû/pmix_ívú⁄.h
"

54 
	~"§c/usock/usock.h
"

56 
	~"pmix_ß¶.h
"

58 
ß¶_öô
();

59 
ß¶_föÆize
();

60 
˛õ¡_h™dshake
(
sd
);

61 
£rvî_h™dshake
(
pmix_≥î_t
 *
≥î
);

63 
pmix_£c_ba£_moduÀ_t
 
	gpmix_ß¶_moduÀ
 = {

65 
ß¶_öô
,

66 
ß¶_föÆize
,

67 
NULL
,

68 
˛õ¡_h™dshake
,

69 
NULL
,

70 
£rvî_h™dshake


74 
	$ß¶_öô
()

76 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

79  
PMIX_ERR_NOT_SUPPORTED
;

80 
	}
}

82 
	$ß¶_föÆize
()

84 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

86 
	}
}

88 
	$˛õ¡_h™dshake
(
sd
)

90  
PMIX_ERR_NOT_SUPPORTED
;

91 
	}
}

94 
	$£rvî_h™dshake
(
pmix_≥î_t
 *
≥î
)

96  
PMIX_ERR_NOT_IMPLEMENTED
;

97 
	}
}

	@sec/pmix_sasl.h

11 #i‚de‡
PMIX_SASL_H


12 
	#PMIX_SASL_H


	)

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~"§c/£c/pmix_£c.h
"

19 
BEGIN_C_DECLS


21 
pmix_£c_ba£_moduÀ_t
 
pmix_ß¶_moduÀ
;

23 
	gEND_C_DECLS


	@sec/pmix_sec.c

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

16 
	~<§c/ö˛ude/ty≥s.h
>

17 
	~<§c/ö˛ude/pmix_°döt.h
>

19 
	~<pmix_comm⁄.h
>

20 
	~"§c/ö˛ude/pmix_globÆs.h
"

22 #ifde‡
HAVE_STRING_H


23 
	~<°rög.h
>

25 
	~<f˙é.h
>

26 #ifde‡
HAVE_UNISTD_H


27 
	~<uni°d.h
>

29 #ifde‡
HAVE_SYS_SOCKET_H


30 
	~<sys/sockë.h
>

32 #ifde‡
HAVE_SYS_UN_H


33 
	~<sys/un.h
>

35 #ifde‡
HAVE_SYS_UIO_H


36 
	~<sys/uio.h
>

38 #ifde‡
HAVE_SYS_TYPES_H


39 
	~<sys/ty≥s.h
>

41 #ö˛udê
PMIX_EVENT_HEADER


43 
	~"§c/utû/¨gv.h
"

44 
	~"§c/utû/ouçut.h
"

45 
	~"pmix_£c.h
"

47 
	~"§c/£c/pmix_«tive.h
"

48 #i‡
PMIX_WANT_MUNGE


49 
	~"§c/£c/pmix_munge.h
"

60 
	#PMIX_SEC_NAVAIL
 3

	)

62 
pmix_£c_ba£_moduÀ_t
 *
	gÆl
[] = {

63 #i‡
PMIX_WANT_MUNGE


64 &
pmix_munge_moduÀ
,

66 &
pmix_«tive_moduÀ
,

69 
NULL


72 
pmix_£c_ba£_moduÀ_t
 
	gpmix_£c
 = {0};

74 
	$pmix_£c_öô
()

76 
pmix_£c_ba£_moduÀ_t
 *
avaûabÀ
[
PMIX_SEC_NAVAIL
];

77 
i
, 
j
, 
«vaû
=0;

78 *
ev¨
, **
›ti⁄s
;

79 
boﬁ
 
ex˛ude
;

82 i‡(
NULL
 !(
ev¨
 = 
	`gëív
("PMIX_SECURITY_MODE"))) {

84 i‡('^' =
ev¨
[0]) {

85 
›ti⁄s
 = 
	`pmix_¨gv_•lô
(&
ev¨
[1], ',');

88 
i
 = 0; 
NULL
 !
Æl
[i]; ++i) {

89 
ex˛ude
 = 
Ál£
;

90 
j
 = 0; 
NULL
 !
›ti⁄s
[j]; ++j) {

91 i‡(0 =
	`°rcmp
(
›ti⁄s
[
j
], 
Æl
[
i
]->
«me
)) {

92 
	`pmix_ouçut_vîbo£
(30, 
pmix_globÆs
.
debug_ouçut
,

93 "Securôy modê%†ex˛uded", 
Æl
[
i
]->
«me
);

94 
ex˛ude
 = 
åue
;

98 i‡(!
ex˛ude
) {

99 
avaûabÀ
[
«vaû
] = 
Æl
[
i
];

100 ++
«vaû
;

104 
›ti⁄s
 = 
	`pmix_¨gv_•lô
(
ev¨
, ',');

107 
j
 = 0; 
NULL
 !
›ti⁄s
[j]; ++j) {

108 
i
 = 0; 
NULL
 !
Æl
[i]; ++i) {

109 i‡(0 =
	`°rcmp
(
›ti⁄s
[
j
], 
Æl
[
i
]->
«me
)) {

110 
	`pmix_ouçut_vîbo£
(30, 
pmix_globÆs
.
debug_ouçut
,

111 "Securôy SPC in˛ude: %s", 
Æl
[
i
]->
«me
);

112 
avaûabÀ
[
«vaû
] = 
Æl
[
i
];

113 ++
«vaû
;

117 i‡(
NULL
 =
Æl
[
i
]) {

119 
	`pmix_ouçut
(0, "Securôy modê%†i†nŸávaûabÀ", 
›ti⁄s
[
j
]);

120 
	`pmix_¨gv_‰ì
(
›ti⁄s
);

121  
PMIX_ERR_NOT_FOUND
;

125 
	`pmix_¨gv_‰ì
(
›ti⁄s
);

128 
i
=0; 
NULL
 !
Æl
[i]; i++) {

129 
avaûabÀ
[
i
] = 
Æl
[i];

130 
«vaû
++;

136 i‡(0 =
«vaû
) {

137 
	`pmix_ouçut
(0, "No Security modesáreávailable");

138  
PMIX_ERR_NOT_FOUND
;

143 
i
=0; i < 
«vaû
; i++) {

144 i‡(
NULL
 =
avaûabÀ
[
i
]->
öô
) {

146 
pmix_£c
 = *
avaûabÀ
[
i
];

147 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

148 "£c: SPC %†a˘ive", 
pmix_£c
.
«me
);

149  
PMIX_SUCCESS
;

151 i‡(
PMIX_SUCCESS
 =
avaûabÀ
[
i
]->
	`öô
()) {

152 
pmix_£c
 = *
avaûabÀ
[
i
];

153 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

154 "£c: SPC %†a˘ive", 
pmix_£c
.
«me
);

155  
PMIX_SUCCESS
;

160  
PMIX_ERR_NOT_FOUND
;

161 
	}
}

163 
	$pmix_£c_föÆize
()

166 i‡(
NULL
 !
pmix_£c
.
föÆize
) {

167 
pmix_£c
.
	`föÆize
();

169 
	}
}

	@sec/pmix_sec.h

67 #i‚de‡
PMIX_SEC_H


68 
	#PMIX_SEC_H


	)

70 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

73 
	~"§c/usock/usock.h
"

75 
BEGIN_C_DECLS


83 (*
	tpmix_£c_ba£_moduÀ_öô_‚_t
)();

89 (*
	tpmix_£c_ba£_moduÀ_föi_‚_t
)();

96 * (*
	tpmix_£c_ba£_moduÀ_¸óã_¸ed_‚_t
)();

103 
	$pmix_°©us_t
 (*
	tpmix_£c_ba£_moduÀ_˛õ¡_hndshk_‚_t
)(
	tsd
);

110 
	$pmix_°©us_t
 (*
	tpmix_£c_ba£_moduÀ_vÆid©e_¸ed_‚_t
)(
	tpmix_≥î_t
 *
	t≥î
, *
	t¸ed
);

117 
	$pmix_°©us_t
 (*
	tpmix_£c_ba£_moduÀ_£rvî_hndshk_‚_t
)(
	tpmix_≥î_t
 *
	t≥î
);

123 *
«me
;

125 
pmix_£c_ba£_moduÀ_öô_‚_t
 
öô
;

126 
pmix_£c_ba£_moduÀ_föi_‚_t
 
föÆize
;

128 
pmix_£c_ba£_moduÀ_¸óã_¸ed_‚_t
 
¸óã_¸ed
;

129 
pmix_£c_ba£_moduÀ_˛õ¡_hndshk_‚_t
 
˛õ¡_h™dshake
;

131 
pmix_£c_ba£_moduÀ_vÆid©e_¸ed_‚_t
 
vÆid©e_¸ed
;

132 
pmix_£c_ba£_moduÀ_£rvî_hndshk_‚_t
 
£rvî_h™dshake
;

133 } 
	tpmix_£c_ba£_moduÀ_t
;

135 
pmix_£c_ba£_moduÀ_t
 
pmix_£c
;

138 
	`pmix_£c_öô
();

139 
	`pmix_£c_föÆize
();

141 
END_C_DECLS


	@server/pmix_server.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

22 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

24 
	~<pmix_£rvî.h
>

25 
	~<pmix_comm⁄.h
>

26 
	~"§c/ö˛ude/pmix_globÆs.h
"

28 #ifde‡
HAVE_STRING_H


29 
	~<°rög.h
>

31 
	~<f˙é.h
>

32 #ifde‡
HAVE_UNISTD_H


33 
	~<uni°d.h
>

35 #ifde‡
HAVE_SYS_SOCKET_H


36 
	~<sys/sockë.h
>

38 #ifde‡
HAVE_SYS_UN_H


39 
	~<sys/un.h
>

41 #ifde‡
HAVE_SYS_UIO_H


42 
	~<sys/uio.h
>

44 #ifde‡
HAVE_SYS_TYPES_H


45 
	~<sys/ty≥s.h
>

47 
	~<˘y≥.h
>

48 
	~<sys/°©.h
>

49 #ö˛udê
PMIX_EVENT_HEADER


50 #ö˛udê
PMIX_EVENT2_THREAD_HEADER


52 
	~"§c/utû/¨gv.h
"

53 
	~"§c/utû/îr‹.h
"

54 
	~"§c/utû/ouçut.h
"

55 
	~"§c/utû/pmix_ívú⁄.h
"

56 
	~"§c/utû/show_hñp.h
"

57 
	~"§c/mˇ/ba£/ba£.h
"

58 
	~"§c/mˇ/ba£/pmix_mˇ_ba£_v¨.h
"

59 
	~"§c/mˇ/pö°Ældús/ba£/ba£.h
"

60 
	~"§c/ru¡ime/pmix_¥ogªss_thªads.h
"

61 
	~"§c/usock/usock.h
"

62 
	~"§c/£c/pmix_£c.h
"

63 #i‡
deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

64 
	~"§c/d°‹e/pmix_d°‹e.h
"

67 
	~"pmix_£rvî_›s.h
"

70 
pmix_£rvî_globÆs_t
 
	gpmix_£rvî_globÆs
 = {{{0}}};

73 *
	g£curôy_mode
 = 
NULL
;

74 
pid_t
 
	gmypid
;

75 *
	gmytmpdú
 = 
NULL
;

76 *
	gsy°mpdú
 = 
NULL
;

79 
£rvî_mesßge_h™dÀr
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

80 
pmix_buf„r_t
 *
buf
, *
cbd©a
);

81 
ölöe
 
_my_˛õ¡
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
);

90 
	$pmix_£rvî_queue_mesßge
(
fd
, 
¨gs
, *
cbd©a
)

92 
pmix_usock_queue_t
 *
queue
 = (pmix_usock_queue_t*)
cbd©a
;

93 
pmix_usock_£nd_t
 *
¢d
;

94 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

96 
__FILE__
, 
__LINE__
,

97 (
queue
->
≥î
)->
öfo
->
≈å
->
n•a˚
,

98 (
queue
->
≥î
)->
öfo
->
ønk
, (queue->
èg
));

99 
¢d
 = 
	`PMIX_NEW
(
pmix_usock_£nd_t
);

100 
¢d
->
hdr
.
pödex
 = 
pmix_globÆs
.pindex;

101 
¢d
->
hdr
.
èg
 = (
queue
->tag);

102 
¢d
->
hdr
.
nbyãs
 = (
queue
->
buf
)->
byãs_u£d
;

103 
¢d
->
d©a
 = (
queue
->
buf
);

105 
¢d
->
sd±r
 = (*)&¢d->
hdr
;

106 
¢d
->
sdbyãs
 = (
pmix_usock_hdr_t
);

109 i‡(
NULL
 =(
queue
->
≥î
)->
£nd_msg
) {

110 (
queue
->
≥î
)->
£nd_msg
 = 
¢d
;

113 
	`pmix_li°_≠≥nd
(&(
queue
->
≥î
)->
£nd_queue
, &
¢d
->
su≥r
);

116 i‡(!(
queue
->
≥î
)->
£nd_ev_a˘ive
) {

117 
	`evít_add
(&(
queue
->
≥î
)->
£nd_evít
, 0);

118 (
queue
->
≥î
)->
£nd_ev_a˘ive
 = 
åue
;

120 
	`PMIX_RELEASE
(
queue
);

121 
	}
}

123 
pmix_°©us_t
 
	$öôülize_£rvî_ba£
(
pmix_£rvî_moduÀ_t
 *
moduÀ
)

125 
debug_Àvñ
;

126 *
tdú
, *
ev¨
;

127 * 
pmix_pid
;

128 
pmix_li°íî_t
 *
li°íî
;

129 
pmix_°©us_t
 
ªt
;

132 i‡(!
	`pmix_ouçut_öô
()) {

133 
	`Ârötf
(
°dîr
, "PMIx server was unableÅo initialize its output system\n");

134  
PMIX_ERR_INIT
;

137 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_mˇ_ba£_‰amew‹k_›í
(&
pmix_pö°Ældús_ba£_‰amew‹k
, 0))) {

138 
	`Ârötf
(
°dîr
, "pmix_pinstalldirs_base_open() failed --Örocess willÜikelyábort (%s:%d,Ñeturned %d instead of PMIX_SUCCESS)\n",

139 
__FILE__
, 
__LINE__
, 
ªt
);

140  
ªt
;

143 i‡(
PMIX_SUCCESS
 !
	`pmix_show_hñp_öô
()) {

144 
	`Ârötf
(
°dîr
, "PMIx server was unableÅo initialize its show_help system\n");

145  
PMIX_ERR_INIT
;

149 
	`pmix_globÆs_öô
();

150 
	`mem£t
(&
pmix_£rvî_globÆs
, 0, (pmix_server_globals));

153 
pmix_globÆs
.
£rvî
 = 
åue
;

156 i‡(
NULL
 =(
ev¨
 = 
	`gëív
("PMIX_SERVER_NAMESPACE"))) {

158 ()
	`°∫˝y
(
pmix_globÆs
.
myid
.
n•a˚
, "pmix-£rvî", 
PMIX_MAX_NSLEN
);

160 ()
	`°∫˝y
(
pmix_globÆs
.
myid
.
n•a˚
, 
ev¨
, 
PMIX_MAX_NSLEN
);

163 
mypid
 = 
	`gëpid
();

164 i‡(
NULL
 =(
ev¨
 = 
	`gëív
("PMIX_SERVER_RANK"))) {

166 
pmix_globÆs
.
myid
.
ønk
 = 
mypid
;

168 
pmix_globÆs
.
myid
.
ønk
 = 
	`°πﬁ
(
ev¨
, 
NULL
, 10);

172 
	`pmix_b‰›_›í
();

175 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
pmix_poöãr_¨øy_t
);

176 
	`pmix_poöãr_¨øy_öô
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 1, 
INT_MAX
, 1);

177 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, 
pmix_li°_t
);

178 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
ªmŸe_≤d
, 
pmix_li°_t
);

179 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
gd©a
, 
pmix_buf„r_t
);

180 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
evíts
, 
pmix_li°_t
);

181 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
loˇl_ªqs
, 
pmix_li°_t
);

182 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
nŸifiˇti⁄s
, 
pmix_rög_buf„r_t
);

183 
	`PMIX_CONSTRUCT
(&
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°_t
);

184 
	`pmix_rög_buf„r_öô
(&
pmix_£rvî_globÆs
.
nŸifiˇti⁄s
, 256);

187 i‡(
NULL
 !(
ev¨
 = 
	`gëív
("PMIX_DEBUG"))) {

188 
debug_Àvñ
 = 
	`°πﬁ
(
ev¨
, 
NULL
, 10);

189 
pmix_globÆs
.
debug_ouçut
 = 
	`pmix_ouçut_›í
(
NULL
);

190 
	`pmix_ouçut_£t_vîbosôy
(
pmix_globÆs
.
debug_ouçut
, 
debug_Àvñ
);

193 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

197 
	`mem£t
(&
pmix_ho°_£rvî
, 0, (
pmix_£rvî_moduÀ_t
));

198 
pmix_ho°_£rvî
 = *
moduÀ
;

201 
	`pmix_£c_öô
();

202 
£curôy_mode
 = 
	`°rdup
(
pmix_£c
.
«me
);

205 i‡(
NULL
 !
mytmpdú
) {

206 
tdú
 = 
mytmpdú
;

207 } i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMPDIR"))) {

208 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TEMP"))) {

209 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMP"))) {

210 
tdú
 = "/tmp";

217 i‡(0 > 
	`a•rötf
(&
pmix_pid
, "%s/pmix-%d", 
tdú
, 
mypid
)) {

218  
PMIX_ERR_NOMEM
;

221 i‡((
	`°æí
(
pmix_pid
Ë+ 1Ë> (
li°íî
->
addªss
.
sun_∑th
)-1) {

222 
	`pmix_show_hñp
("hñp-pmix-£rvî.txt", "∫d-∑th-too-l⁄g", 
åue
, 
tdú
, 
pmix_pid
);

223 
	`‰ì
(
pmix_pid
);

224  
PMIX_ERR_INVALID_LENGTH
;

227 
li°íî
 = 
	`PMIX_NEW
(
pmix_li°íî_t
);

228 
	`¢¥ötf
(
li°íî
->
addªss
.
sun_∑th
, ÷i°íî->addªss.sun_∑th)-1, "%s", 
pmix_pid
);

229 i‡(0 > 
	`a•rötf
(&
li°íî
->
uri
, "%s:%lu:%s", 
pmix_globÆs
.
myid
.
n•a˚
,

230 ()
pmix_globÆs
.
myid
.
ønk
, 
li°íî
->
addªss
.
sun_∑th
)) {

231 
	`‰ì
(
pmix_pid
);

232  
PMIX_ERR_NOMEM
;

234 
li°íî
->
v¨«me
 = 
	`°rdup
("PMIX_SERVER_URI");

235 
li°íî
->
¥Ÿocﬁ
 = 
PMIX_PROTOCOL_V1
;

236 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
li°íîs
, &
li°íî
->
su≥r
);

237 
	`‰ì
(
pmix_pid
);

239 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

240 "pmix:£rvî c⁄°ru˘ed urò%s", 
li°íî
->
uri
);

242  
PMIX_SUCCESS
;

243 
	}
}

245 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_£rvî_öô
(
pmix_£rvî_moduÀ_t
 *
moduÀ
,

246 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

248 
pmix_usock_po°ed_ªcv_t
 *
ªq
;

249 
pmix_°©us_t
 
rc
;

250 
size_t
 
n
, 
m
;

251 
pmix_kvÆ_t
 
kv
;

252 
pmix_li°íî_t
 *
…
;

253 
boﬁ
 
√ed_li°íî
;

254 
myho°«mñí
 = 30;

255 
myho°«me
[
myho°«mñí
];

256 *
pmix_pid
, *
tdú
;

257 **
¥Ÿe˘ed
 = 
NULL
;

258 
boﬁ
 
¥Ÿe˘
;

259 
boﬁ
 
toﬁ_suµ‹t
 = 
Ál£
;

260 
boﬁ
 
sy°em_toﬁ
 = 
Ál£
;

261 
boﬁ
 
£ssi⁄_toﬁ
 = 
Ál£
;

262 
pmix_li°íî_t
 *
é
;

264 i‡(0 < 
pmix_globÆs
.
öô_˙å
) {

265  
PMIX_SUCCESS
;

268 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

273 i‡(
NULL
 !
öfo
) {

274 
n
=0;Ç < 
nöfo
;Ç++) {

275 i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SERVER_TMPDIR
) &&

276 
NULL
 =
mytmpdú
) {

277 
mytmpdú
 = 
	`°rdup
(
öfo
[
n
].
vÆue
.
d©a
.
°rög
);

280 
	`pmix_¨gv_≠≥nd_nosize
(&
¥Ÿe˘ed
, 
PMIX_SERVER_TMPDIR
);

281 } i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SYSTEM_TMPDIR
) &&

282 
NULL
 =
sy°mpdú
) {

283 
sy°mpdú
 = 
	`°rdup
(
öfo
[
n
].
vÆue
.
d©a
.
°rög
);

286 
	`pmix_¨gv_≠≥nd_nosize
(&
¥Ÿe˘ed
, 
PMIX_SYSTEM_TMPDIR
);

291 i‡(0 !(
rc
 = 
	`öôülize_£rvî_ba£
(
moduÀ
))) {

292  
rc
;

295 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

296 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_d°‹e_öô
(
öfo
, 
nöfo
))) {

297  
rc
;

302 
	`pmix_usock_öô
(
NULL
);

305 
	`pmix_evít_u£_thªads
();

308 i‡(
NULL
 =(
pmix_globÆs
.
evba£
 = 
	`pmix_¥ogªss_thªad_öô
(NULL))) {

309  
PMIX_ERR_INIT
;

314 i‡(
NULL
 !
öfo
) {

315 
n
=0;Ç < 
nöfo
;Ç++) {

316 i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_USERID
)) {

318 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

319 
…
->
ow√r
 = 
öfo
[
n
].
vÆue
.
d©a
.
uöt32
;

320 
…
->
ow√r_giví
 = 
åue
;

324 
	`pmix_¨gv_≠≥nd_nosize
(&
¥Ÿe˘ed
, 
PMIX_USERID
);

325 } i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_GRPID
)) {

327 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

328 
…
->
group
 = 
öfo
[
n
].
vÆue
.
d©a
.
uöt32
;

329 
…
->
group_giví
 = 
åue
;

333 
	`pmix_¨gv_≠≥nd_nosize
(&
¥Ÿe˘ed
, 
PMIX_GRPID
);

334 } i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SOCKET_MODE
)) {

336 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

337 
…
->
mode
 = 
öfo
[
n
].
vÆue
.
d©a
.
uöt32
;

339 } i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SERVER_TOOL_SUPPORT
)) {

342 
£ssi⁄_toﬁ
 = 
åue
;

343 
toﬁ_suµ‹t
 = 
åue
;

346 
	`pmix_¨gv_≠≥nd_nosize
(&
¥Ÿe˘ed
, 
PMIX_SERVER_TOOL_SUPPORT
);

347 } i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SERVER_SYSTEM_SUPPORT
)) {

349 
sy°em_toﬁ
 = 
åue
;

350 
toﬁ_suµ‹t
 = 
åue
;

353 
	`pmix_¨gv_≠≥nd_nosize
(&
¥Ÿe˘ed
, 
PMIX_SERVER_TOOL_SUPPORT
);

357 i‡(
toﬁ_suµ‹t
) {

359 
	`gëho°«me
(
myho°«me
, 
myho°«mñí
);

361 
myho°«me
[
myho°«mñí
-1] = '\0';

365 i‡(
sy°em_toﬁ
) {

366 i‡(
NULL
 !
sy°mpdú
) {

367 
tdú
 = 
sy°mpdú
;

368 } i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMPDIR"))) {

369 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TEMP"))) {

370 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMP"))) {

371 
tdú
 = "/tmp";

375 i‡(0 > 
	`a•rötf
(&
pmix_pid
, "%s/pmix.sys.%s", 
tdú
, 
myho°«me
)) {

376  
PMIX_ERR_NOMEM
;

378 i‡((
	`°æí
(
pmix_pid
Ë+ 1Ë> (
é
->
addªss
.
sun_∑th
)-1) {

379 
	`pmix_show_hñp
("hñp-pmix-£rvî.txt", "∫d-∑th-too-l⁄g", 
åue
, 
tdú
, 
pmix_pid
);

380 
	`‰ì
(
pmix_pid
);

381  
PMIX_ERR_INVALID_LENGTH
;

383 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

385 
pmix_globÆs
.
myid
.
n•a˚
,

386 
pmix_globÆs
.
myid
.
ønk
, 
pmix_pid
);

388 
é
 = 
	`PMIX_NEW
(
pmix_li°íî_t
);

389 
é
 -> 
addªss
.
sun_Ámûy
 = 
AF_UNIX
;

390 
é
->
¥Ÿocﬁ
 = 
PMIX_PROTOCOL_TOOL
;

391 
	`¢¥ötf
(
é
->
addªss
.
sun_∑th
, —l->addªss.sun_∑thË- 1, "%s", 
pmix_pid
);

392 
	`‰ì
(
pmix_pid
);

393 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
li°íîs
, &
é
->
su≥r
);

397 i‡(
£ssi⁄_toﬁ
) {

398 i‡(
NULL
 !
mytmpdú
) {

399 
tdú
 = 
mytmpdú
;

400 } i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMPDIR"))) {

401 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TEMP"))) {

402 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMP"))) {

403 
tdú
 = "/tmp";

408 i‡(0 > 
	`a•rötf
(&
pmix_pid
, "%s/pmix.%s.toﬁ.%d", 
tdú
, 
myho°«me
, 
mypid
)) {

409  
PMIX_ERR_NOMEM
;

411 i‡((
	`°æí
(
pmix_pid
Ë+ 1Ë> (
é
->
addªss
.
sun_∑th
)-1) {

412 
	`pmix_show_hñp
("hñp-pmix-£rvî.txt", "∫d-∑th-too-l⁄g", 
åue
, 
tdú
, 
pmix_pid
);

413 
	`‰ì
(
pmix_pid
);

414  
PMIX_ERR_INVALID_LENGTH
;

416 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

418 
pmix_globÆs
.
myid
.
n•a˚
,

419 
pmix_globÆs
.
myid
.
ønk
, 
pmix_pid
);

421 
é
 = 
	`PMIX_NEW
(
pmix_li°íî_t
);

422 
é
 -> 
addªss
.
sun_Ámûy
 = 
AF_UNIX
;

423 
é
->
¥Ÿocﬁ
 = 
PMIX_PROTOCOL_TOOL
;

424 
	`¢¥ötf
(
é
->
addªss
.
sun_∑th
, —l->addªss.sun_∑thË- 1, "%s", 
pmix_pid
);

425 
	`‰ì
(
pmix_pid
);

426 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
li°íîs
, &
é
->
su≥r
);

430 
pmix_£rvî_globÆs
.
toﬁ_c⁄√˘i⁄s_Ælowed
 = 
åue
;

434 
ªq
 = 
	`PMIX_NEW
(
pmix_usock_po°ed_ªcv_t
);

435 
ªq
->
èg
 = 
UINT32_MAX
;

436 
ªq
->
cbfunc
 = 
£rvî_mesßge_h™dÀr
;

438 
	`pmix_li°_≠≥nd
(&
pmix_usock_globÆs
.
po°ed_ªcvs
, &
ªq
->
su≥r
);

441 
√ed_li°íî
 = 
Ál£
;

442 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

443 i‡(
PMIX_SUCCESS
 !
	`pmix_¥ï¨e_li°íög
(
…
, &
√ed_li°íî
)) {

444 
	`PMIx_£rvî_föÆize
();

445  
PMIX_ERR_INIT
;

448 i‡(
√ed_li°íî
) {

449 i‡(
PMIX_SUCCESS
 !
	`pmix_°¨t_li°íög
()) {

450 
	`pmix_show_hñp
("hñp-pmix-£rvî.txt", "li°íî-Áûed-°¨t", 
åue
, 
é
->
addªss
.
sun_∑th
);

451 
	`PMIx_£rvî_föÆize
();

452  
PMIX_ERR_INIT
;

458 i‡(
NULL
 !
öfo
) {

459 
	`PMIX_CONSTRUCT
(&
kv
, 
pmix_kvÆ_t
);

460 
n
=0;Ç < 
nöfo
;Ç++) {

462 
¥Ÿe˘
 = 
Ál£
;

463 i‡(
NULL
 !
¥Ÿe˘ed
) {

464 
m
=0; 
NULL
 !
¥Ÿe˘ed
[m]; m++) {

465 i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
¥Ÿe˘ed
[
m
])) {

466 
¥Ÿe˘
 = 
åue
;

471 i‡(
¥Ÿe˘
) {

475 
kv
.
key
 = 
öfo
[
n
].key;

476 
kv
.
vÆue
 = &
öfo
[
n
].value;

477 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
pmix_£rvî_globÆs
.
gd©a
, &
kv
, 1, 
PMIX_KVAL
))) {

478 
	`PMIX_ERROR_LOG
(
rc
);

479 
	`pmix_show_hñp
("hñp-pmix-£rvî.txt", "d©a-°‹e-Áûed", 
åue
, 
kv
.
key
);

481 
kv
.
key
 = 
NULL
;

482 
kv
.
vÆue
 = 
NULL
;

483 
	`PMIX_DESTRUCT
(&
kv
);

484 
	`PMIx_£rvî_föÆize
();

485  
rc
;

489 
kv
.
key
 = 
NULL
;

490 
kv
.
vÆue
 = 
NULL
;

491 
	`PMIX_DESTRUCT
(&
kv
);

494 ++
pmix_globÆs
.
öô_˙å
;

496  
PMIX_SUCCESS
;

497 
	}
}

499 
	$˛ónup_£rvî_°©e
()

501 
i
;

502 
pmix_≥î_t
 *
≥î
;

504 
i
=0; i < 
pmix_£rvî_globÆs
.
˛õ¡s
.
size
; i++) {

505 i‡(
NULL
 !(
≥î
 = (
pmix_≥î_t
*)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
i
))) {

506 
	`PMIX_RELEASE
(
≥î
);

509 
	`PMIX_DESTRUCT
(&
pmix_£rvî_globÆs
.
˛õ¡s
);

510 
	`PMIX_LIST_DESTRUCT
(&
pmix_£rvî_globÆs
.
cﬁÀ˘ives
);

511 
	`PMIX_LIST_DESTRUCT
(&
pmix_£rvî_globÆs
.
ªmŸe_≤d
);

512 
	`PMIX_LIST_DESTRUCT
(&
pmix_£rvî_globÆs
.
loˇl_ªqs
);

513 
	`PMIX_DESTRUCT
(&
pmix_£rvî_globÆs
.
gd©a
);

514 
	`PMIX_LIST_DESTRUCT
(&
pmix_£rvî_globÆs
.
li°íîs
);

516 i‡(
NULL
 !
£curôy_mode
) {

517 
	`‰ì
(
£curôy_mode
);

520 i‡(
NULL
 !
mytmpdú
) {

521 
	`‰ì
(
mytmpdú
);

524 i‡(
NULL
 !
sy°mpdú
) {

525 
	`‰ì
(
sy°mpdú
);

528 
	`pmix_b‰›_˛o£
();

529 
	`pmix_£c_föÆize
();

530 
	`pmix_globÆs_föÆize
();

531 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

534 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

535 
	`pmix_ouçut_föÆize
();

536 
	`pmix_˛ass_föÆize
();

537 
	}
}

539 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_£rvî_föÆize
()

541 i‡(1 !
pmix_globÆs
.
öô_˙å
) {

542 --
pmix_globÆs
.
öô_˙å
;

543  
PMIX_SUCCESS
;

545 
pmix_globÆs
.
öô_˙å
 = 0;

547 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

550 i‡(
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
) {

551 
	`pmix_°›_li°íög
();

554 
	`pmix_¥ogªss_thªad_föÆize
(
NULL
);

555 #ifde‡
HAVE_LIBEVENT_GLOBAL_SHUTDOWN


556 
	`libevít_globÆ_shutdown
();

559 
	`pmix_usock_föÆize
();

561 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

562 
	`pmix_d°‹e_föÆize
();

565 
	`˛ónup_£rvî_°©e
();

566 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

568  
PMIX_SUCCESS
;

569 
	}
}

571 
	$_ªgi°î_n•a˚
(
sd
, 
¨gs
, *
cbd©a
)

573 
pmix_£tup_ˇddy_t
 *
cd
 = (pmix_£tup_ˇddy_t*)
cbd©a
;

574 
pmix_n•a˚_t
 *
≈å
, *
tmp
;

575 
pmix_°©us_t
 
rc
;

576 
size_t
 
i
, 
j
, 
size
;

577 
ønk
;

578 
pmix_kvÆ_t
 
kv
;

579 **
nodes
=
NULL
, **
¥ocs
=NULL;

580 
pmix_buf„r_t
 
buf2
;

581 
pmix_öfo_t
 *
ùå
;

582 
pmix_vÆue_t
 
vÆ
;

583 *
msg
;

585 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

589 
≈å
 = 
NULL
;

590 
	`PMIX_LIST_FOREACH
(
tmp
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

591 i‡(0 =
	`°rcmp
(
tmp
->
n•a˚
, 
cd
->
¥oc
.nspace)) {

592 
≈å
 = 
tmp
;

594 i‡(0 < 
≈å
->
£rvî
->
job_öfo
.
byãs_u£d
) {

595 
	`PMIX_DESTRUCT
(&
≈å
->
£rvî
->
job_öfo
);

596 
	`PMIX_CONSTRUCT
(&
≈å
->
£rvî
->
job_öfo
, 
pmix_buf„r_t
);

601 i‡(
NULL
 =
≈å
) {

602 
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

603 ()
	`°∫˝y
(
≈å
->
n•a˚
, 
cd
->
¥oc
.n•a˚, 
PMIX_MAX_NSLEN
);

604 
≈å
->
£rvî
 = 
	`PMIX_NEW
(
pmix_£rvî_n•a˚_t
);

605 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

607 
≈å
->
£rvî
->
∆oˇÕrocs
 = 
cd
->nlocalprocs;

609 i‡(
≈å
->
£rvî
->
∆oˇÕrocs
 =
	`pmix_li°_gë_size
(&≈å->£rvî->
ønks
)) {

610 
≈å
->
£rvî
->
Æl_ªgi°îed
 = 
åue
;

613 
msg
 = 
≈å
->
n•a˚
;

614 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
≈å
->
£rvî
->
job_öfo
, &
msg
, 1, 
PMIX_STRING
))) {

615 
	`PMIX_ERROR_LOG
(
rc
);

616 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

617 
	`PMIX_RELEASE
(
≈å
);

618 
ªÀa£
;

622 
	`PMIX_CONSTRUCT
(&
kv
, 
pmix_kvÆ_t
);

623 
i
=0; i < 
cd
->
nöfo
; i++) {

624 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

626 
cd
->
öfo
[
i
].
key
);

628 i‡(0 =
	`°rcmp
(
cd
->
öfo
[
i
].
key
, 
PMIX_NODE_MAP
)) {

630 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_ªgex_∑r£_nodes
(
cd
->
öfo
[
i
].
vÆue
.
d©a
.
°rög
, &
nodes
))) {

631 
	`PMIX_ERROR_LOG
(
rc
);

636 i‡(
NULL
 !
¥ocs
) {

637 
	`pmix_∑ck_¥oc_m≠
(&
≈å
->
£rvî
->
job_öfo
, 
nodes
, 
¥ocs
);

638 
	`pmix_¨gv_‰ì
(
nodes
);

639 
nodes
 = 
NULL
;

640 
	`pmix_¨gv_‰ì
(
¥ocs
);

641 
¥ocs
 = 
NULL
;

643 } i‡(0 =
	`°rcmp
(
cd
->
öfo
[
i
].
key
, 
PMIX_PROC_MAP
)) {

645 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_ªgex_∑r£_¥ocs
(
cd
->
öfo
[
i
].
vÆue
.
d©a
.
°rög
, &
¥ocs
))) {

646 
	`PMIX_ERROR_LOG
(
rc
);

651 i‡(
NULL
 !
nodes
) {

652 
	`pmix_∑ck_¥oc_m≠
(&
≈å
->
£rvî
->
job_öfo
, 
nodes
, 
¥ocs
);

653 
	`pmix_¨gv_‰ì
(
nodes
);

654 
nodes
 = 
NULL
;

655 
	`pmix_¨gv_‰ì
(
¥ocs
);

656 
¥ocs
 = 
NULL
;

658 } i‡(0 =
	`°rcmp
(
cd
->
öfo
[
i
].
key
, 
PMIX_PROC_DATA
)) {

660 i‡(
PMIX_DATA_ARRAY
 !
cd
->
öfo
[
i
].
vÆue
.
ty≥
 ||

661 
PMIX_INFO
 !
cd
->
öfo
[
i
].
vÆue
.
d©a
.
d¨øy
->
ty≥
) {

662 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

663 
ªÀa£
;

665 
size
 = 
cd
->
öfo
[
i
].
vÆue
.
d©a
.
d¨øy
->size;

666 
ùå
 = (
pmix_öfo_t
*)
cd
->
öfo
[
i
].
vÆue
.
d©a
.
d¨øy
->
¨øy
;

667 
	`PMIX_CONSTRUCT
(&
buf2
, 
pmix_buf„r_t
);

669 i‡(0 !
	`°rcmp
(
ùå
[0].
key
, 
PMIX_RANK
)) {

670 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

671 
	`PMIX_DESTRUCT
(&
buf2
);

672 
ªÀa£
;

675 
ønk
 = 
ùå
[0].
vÆue
.
d©a
.rank;

676 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
buf2
, &
ønk
, 1, 
PMIX_PROC_RANK
))) {

677 
	`PMIX_ERROR_LOG
(
rc
);

678 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

679 
	`PMIX_RELEASE
(
≈å
);

680 
	`PMIX_DESTRUCT
(&
buf2
);

681 
ªÀa£
;

684 
j
=1; j < 
size
; j++) {

685 
kv
.
key
 = 
ùå
[
j
].key;

686 
kv
.
vÆue
 = &
ùå
[
j
].value;

687 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
buf2
, &
kv
, 1, 
PMIX_KVAL
))) {

688 
	`PMIX_ERROR_LOG
(
rc
);

689 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

690 
	`PMIX_RELEASE
(
≈å
);

691 
	`PMIX_DESTRUCT
(&
buf2
);

692 
ªÀa£
;

696 
kv
.
key
 = 
PMIX_PROC_BLOB
;

697 
kv
.
vÆue
 = &
vÆ
;

698 
vÆ
.
ty≥
 = 
PMIX_BYTE_OBJECT
;

699 
vÆ
.
d©a
.
bo
.
byãs
 = 
buf2
.
ba£_±r
;

700 
vÆ
.
d©a
.
bo
.
size
 = 
buf2
.
byãs_u£d
;

701 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
≈å
->
£rvî
->
job_öfo
, &
kv
, 1, 
PMIX_KVAL
))) {

702 
	`PMIX_ERROR_LOG
(
rc
);

703 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

704 
	`PMIX_RELEASE
(
≈å
);

705 
	`PMIX_DESTRUCT
(&
buf2
);

706 
ªÀa£
;

708 
	`PMIX_DESTRUCT
(&
buf2
);

711 
kv
.
key
 = 
cd
->
öfo
[
i
].key;

712 
kv
.
vÆue
 = &
cd
->
öfo
[
i
].value;

713 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
≈å
->
£rvî
->
job_öfo
, &
kv
, 1, 
PMIX_KVAL
))) {

714 
	`PMIX_ERROR_LOG
(
rc
);

715 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

716 
	`PMIX_RELEASE
(
≈å
);

717 
ªÀa£
;

723 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

724 i‡(0 > 
	`pmix_d°‹e_n•a˚_add
(
cd
->
¥oc
.
n•a˚
)) {

725 
	`PMIX_ERROR_LOG
(
rc
);

726 
ªÀa£
;

730 
ªÀa£
:

731 i‡(
NULL
 !
nodes
) {

732 
	`pmix_¨gv_‰ì
(
nodes
);

734 i‡(
NULL
 !
¥ocs
) {

735 
	`pmix_¨gv_‰ì
(
¥ocs
);

737 i‡(
NULL
 !
cd
->
›cbfunc
) {

738 
cd
->
	`›cbfunc
(
rc
, cd->
cbd©a
);

740 
	`PMIX_RELEASE
(
cd
);

741 
	}
}

744 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_£rvî_ªgi°î_n•a˚
(c⁄° 
n•a˚
[], 
∆oˇÕrocs
,

745 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

746 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

748 
pmix_£tup_ˇddy_t
 *
cd
;

750 
cd
 = 
	`PMIX_NEW
(
pmix_£tup_ˇddy_t
);

751 ()
	`°∫˝y
(
cd
->
¥oc
.
n•a˚
,Ç•a˚, 
PMIX_MAX_NSLEN
);

752 
cd
->
∆oˇÕrocs
 =Çlocalprocs;

753 
cd
->
›cbfunc
 = 
cbfunc
;

754 
cd
->
cbd©a
 = cbdata;

756 i‡(0 < 
nöfo
) {

757 
cd
->
nöfo
 =Çinfo;

758 
cd
->
öfo
 = info;

763 
	`PMIX_THREADSHIFT
(
cd
, 
_ªgi°î_n•a˚
);

764  
PMIX_SUCCESS
;

765 
	}
}

767 
	$_dîegi°î_n•a˚
(
sd
, 
¨gs
, *
cbd©a
)

769 
pmix_£tup_ˇddy_t
 *
cd
 = (pmix_£tup_ˇddy_t*)
cbd©a
;

770 
pmix_n•a˚_t
 *
tmp
;

772 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

774 
cd
->
¥oc
.
n•a˚
);

777 
	`PMIX_LIST_FOREACH
(
tmp
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

778 i‡(0 =
	`°rcmp
(
tmp
->
n•a˚
, 
cd
->
¥oc
.nspace)) {

779 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
n•a˚s
, &
tmp
->
su≥r
);

780 
	`PMIX_RELEASE
(
tmp
);

785 i‡(
NULL
 !
cd
->
›cbfunc
) {

786 
cd
->
	`›cbfunc
(
PMIX_SUCCESS
, cd->
cbd©a
);

788 
	`PMIX_RELEASE
(
cd
);

789 
	}
}

791 
PMIX_EXPORT
 
	$PMIx_£rvî_dîegi°î_n•a˚
(c⁄° 
n•a˚
[],

792 
pmix_›_cbfunc_t
 
cbfunc
,

793 *
cbd©a
)

795 
pmix_£tup_ˇddy_t
 *
cd
;

797 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

799 
n•a˚
);

801 
cd
 = 
	`PMIX_NEW
(
pmix_£tup_ˇddy_t
);

802 ()
	`°∫˝y
(
cd
->
¥oc
.
n•a˚
,Ç•a˚, 
PMIX_MAX_NSLEN
);

803 
cd
->
›cbfunc
 = 
cbfunc
;

804 
cd
->
cbd©a
 = cbdata;

808 
	`PMIX_THREADSHIFT
(
cd
, 
_dîegi°î_n•a˚
);

809 
	}
}

811 
	$pmix_£rvî_execuã_cﬁÀ˘ive
(
sd
, 
¨gs
, *
cbd©a
)

813 
pmix_åkr_ˇddy_t
 *
tcd
 = (pmix_åkr_ˇddy_t*)
cbd©a
;

814 
pmix_£rvî_åkr_t
 *
åk
 = 
tcd
->trk;

815 *
d©a
 = 
NULL
;

816 
size_t
 
sz
 = 0;

817 
pmix_buf„r_t
 
buckë
, 
x„r
;

818 
pmix_ønk_öfo_t
 *
öfo
;

819 
pmix_vÆue_t
 *
vÆ
;

823 i‡(
PMIX_FENCENB_CMD
 =
åk
->
ty≥
) {

831 
	`PMIX_CONSTRUCT
(&
buckë
, 
pmix_buf„r_t
);

833 
	`as£π
–
PMIX_COLLECT_MAX
 < 
UCHAR_MAX
 );

834 
tmp
 = ()
åk
->
cﬁÀ˘_ty≥
;

835 
pmix_b‰›
.
	`∑ck
(&
buckë
, &
tmp
, 1, 
PMIX_BYTE
);

837 i‡(
PMIX_COLLECT_YES
 =
åk
->
cﬁÀ˘_ty≥
) {

838 
pmix_buf„r_t
 
d©abuf
;

839 
	`PMIX_CONSTRUCT
(&
d©abuf
, 
pmix_buf„r_t
);

840 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

842 
	`PMIX_LIST_FOREACH
(
öfo
, &
åk
->
ønks
, 
pmix_ønk_öfo_t
) {

843 
pmix_buf„r_t
 
ønkbuf
;

844 
	`PMIX_CONSTRUCT
(&
ønkbuf
, 
pmix_buf„r_t
);

847 i‡(
PMIX_SUCCESS
 =
	`pmix_hash_„tch
(&
öfo
->
≈å
->
£rvî
->
myªmŸe
, info->
ønk
, "modex", &
vÆ
) &&

848 
NULL
 !
vÆ
) {

850 *
foob¨
 = 
öfo
->
≈å
->
n•a˚
;

851 
pmix_b‰›
.
	`∑ck
(&
ønkbuf
, &
foob¨
, 1, 
PMIX_STRING
);

852 
pmix_b‰›
.
	`∑ck
(&
ønkbuf
, &
öfo
->
ønk
, 1, 
PMIX_PROC_RANK
);

853 
	`PMIX_CONSTRUCT
(&
x„r
, 
pmix_buf„r_t
);

854 
	`PMIX_LOAD_BUFFER
(&
x„r
, 
vÆ
->
d©a
.
bo
.
byãs
, vÆ->d©a.bo.
size
);

855 
	`PMIX_VALUE_RELEASE
(
vÆ
);

856 
pmix_buf„r_t
 *
px„r
 = &
x„r
;

857 
pmix_b‰›
.
	`∑ck
(&
ønkbuf
, &
px„r
, 1, 
PMIX_BUFFER
);

858 
	`PMIX_DESTRUCT
(&
x„r
);

860 
pmix_buf„r_t
 *
pd©abuf
 = &
ønkbuf
;

861 
pmix_b‰›
.
	`∑ck
(&
d©abuf
, &
pd©abuf
, 1, 
PMIX_BUFFER
);

863 
	`PMIX_DESTRUCT
(&
ønkbuf
);

866 
pmix_buf„r_t
 *
pbkt
 = &
d©abuf
;

867 
pmix_b‰›
.
	`∑ck
(&
buckë
, &
pbkt
, 1, 
PMIX_BUFFER
);

868 
	`PMIX_DESTRUCT
(&
d©abuf
);

870 
	`PMIX_UNLOAD_BUFFER
(&
buckë
, 
d©a
, 
sz
);

871 
	`PMIX_DESTRUCT
(&
buckë
);

872 
pmix_ho°_£rvî
.
	`„n˚_nb
(
åk
->
pcs
,Årk->
≈cs
,

873 
åk
->
öfo
,Årk->
nöfo
,

874 
d©a
, 
sz
, 
åk
->
modexcbfunc
,Årk);

875 } i‡(
PMIX_CONNECTNB_CMD
 =
åk
->
ty≥
) {

876 
pmix_ho°_£rvî
.
	`c⁄√˘
(
åk
->
pcs
,Årk->
≈cs
,

877 
åk
->
öfo
,Årk->
nöfo
,

878 
åk
->
›_cbfunc
,Årk);

879 } i‡(
PMIX_DISCONNECTNB_CMD
 =
åk
->
ty≥
) {

880 
pmix_ho°_£rvî
.
	`disc⁄√˘
(
åk
->
pcs
,Årk->
≈cs
,

881 
åk
->
öfo
,Årk->
nöfo
,

882 
åk
->
›_cbfunc
,Årk);

885 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_FOUND
);

886 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, &
åk
->
su≥r
);

887 
	`PMIX_RELEASE
(
åk
);

889 
	`PMIX_RELEASE
(
tcd
);

890 
	}
}

892 
	$_ªgi°î_˛õ¡
(
sd
, 
¨gs
, *
cbd©a
)

894 
pmix_£tup_ˇddy_t
 *
cd
 = (pmix_£tup_ˇddy_t*)
cbd©a
;

895 
pmix_ønk_öfo_t
 *
öfo
, *
ùå
, *
ùå2
;

896 
pmix_n•a˚_t
 *
≈å
, *
tmp
;

897 
pmix_£rvî_åkr_t
 *
åk
;

898 
pmix_åkr_ˇddy_t
 *
tcd
;

899 
boﬁ
 
Æl_def
;

900 
size_t
 
i
;

902 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

904 
cd
->
¥oc
.
n•a˚
, cd->¥oc.
ønk
);

907 
≈å
 = 
NULL
;

908 
	`PMIX_LIST_FOREACH
(
tmp
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

909 i‡(0 =
	`°rcmp
(
tmp
->
n•a˚
, 
cd
->
¥oc
.nspace)) {

910 
≈å
 = 
tmp
;

914 i‡(
NULL
 =
≈å
) {

915 
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

916 ()
	`°∫˝y
(
≈å
->
n•a˚
, 
cd
->
¥oc
.n•a˚, 
PMIX_MAX_NSLEN
);

918 
≈å
->
£rvî
 = 
	`PMIX_NEW
(
pmix_£rvî_n•a˚_t
);

919 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

924 
öfo
 = 
	`PMIX_NEW
(
pmix_ønk_öfo_t
);

925 
	`PMIX_RETAIN
(
≈å
);

926 
öfo
->
≈å
 =Çptr;

927 
öfo
->
ønk
 = 
cd
->
¥oc
.rank;

928 
öfo
->
uid
 = 
cd
->uid;

929 
öfo
->
gid
 = 
cd
->gid;

930 
öfo
->
£rvî_obje˘
 = 
cd
->server_object;

931 
	`pmix_li°_≠≥nd
(&
≈å
->
£rvî
->
ønks
, &
öfo
->
su≥r
);

933 i‡(
≈å
->
£rvî
->
∆oˇÕrocs
 =
	`pmix_li°_gë_size
(&≈å->£rvî->
ønks
)) {

934 
≈å
->
£rvî
->
Æl_ªgi°îed
 = 
åue
;

940 
	`PMIX_LIST_FOREACH
(
åk
, &
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, 
pmix_£rvî_åkr_t
) {

943 i‡(
åk
->
def_com∂ëe
) {

952 
i
=0; i < 
åk
->
≈cs
; i++) {

953 i‡(0 !
	`°∫cmp
(
cd
->
¥oc
.
n•a˚
, 
åk
->
pcs
[
i
].n•a˚, 
PMIX_MAX_NSLEN
)) {

957 
	`PMIX_LIST_FOREACH
(
ùå
, &
≈å
->
£rvî
->
ønks
, 
pmix_ønk_öfo_t
) {

958 i‡(
PMIX_RANK_WILDCARD
 =
åk
->
pcs
[
i
].
ønk
 ||

959 
ùå
->
ønk
 =
åk
->
pcs
[
i
].rank) {

962 
ùå2
 = 
	`PMIX_NEW
(
pmix_ønk_öfo_t
);

963 
	`PMIX_RETAIN
(
öfo
->
≈å
);

964 
ùå2
->
≈å
 = 
öfo
->nptr;

965 
ùå2
->
ønk
 = 
öfo
->rank;

966 
	`pmix_li°_≠≥nd
(&
åk
->
ønks
, &
ùå2
->
su≥r
);

968 ++
åk
->
∆oˇl
;

975 
Æl_def
 = 
åue
;

978 
	`PMIX_LIST_FOREACH
(
ùå
, &
åk
->
ønks
, 
pmix_ønk_öfo_t
) {

979 i‡(!
ùå
->
≈å
->
£rvî
->
Æl_ªgi°îed
) {

981 
Æl_def
 = 
Ál£
;

986 
åk
->
def_com∂ëe
 = 
Æl_def
;

988 i‡(
åk
->
def_com∂ëe
 && 
	`pmix_li°_gë_size
(&åk->
loˇl_cbs
Ë=åk->
∆oˇl
) {

993 
	`PMIX_EXECUTE_COLLECTIVE
(
tcd
, 
åk
, 
pmix_£rvî_execuã_cﬁÀ˘ive
);

1000 
	`pmix_≥ndög_n•a˚_ªque°s
(
≈å
);

1003 i‡(
NULL
 !
cd
->
›cbfunc
) {

1004 
cd
->
	`›cbfunc
(
PMIX_SUCCESS
, cd->
cbd©a
);

1006 
	`PMIX_RELEASE
(
cd
);

1007 
	}
}

1009 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_£rvî_ªgi°î_˛õ¡
(c⁄° 
pmix_¥oc_t
 *
¥oc
,

1010 
uid_t
 
uid
, 
gid_t
 
gid
, *
£rvî_obje˘
,

1011 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

1013 
pmix_£tup_ˇddy_t
 *
cd
;

1015 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1017 
¥oc
->
n•a˚
,Öroc->
ønk
);

1019 
cd
 = 
	`PMIX_NEW
(
pmix_£tup_ˇddy_t
);

1020 ()
	`°∫˝y
(
cd
->
¥oc
.
n•a˚
,Öroc->n•a˚, 
PMIX_MAX_NSLEN
);

1021 
cd
->
¥oc
.
ønk
 =Öroc->rank;

1022 
cd
->
uid
 = uid;

1023 
cd
->
gid
 = gid;

1024 
cd
->
£rvî_obje˘
 = server_object;

1025 
cd
->
›cbfunc
 = 
cbfunc
;

1026 
cd
->
cbd©a
 = cbdata;

1030 
	`PMIX_THREADSHIFT
(
cd
, 
_ªgi°î_˛õ¡
);

1031  
PMIX_SUCCESS
;

1032 
	}
}

1034 
	$_dîegi°î_˛õ¡
(
sd
, 
¨gs
, *
cbd©a
)

1036 
pmix_£tup_ˇddy_t
 *
cd
 = (pmix_£tup_ˇddy_t*)
cbd©a
;

1037 
pmix_ønk_öfo_t
 *
öfo
;

1038 
pmix_n•a˚_t
 *
≈å
, *
tmp
;

1040 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1042 
cd
->
¥oc
.
n•a˚
, cd->¥oc.
ønk
);

1045 
≈å
 = 
NULL
;

1046 
	`PMIX_LIST_FOREACH
(
tmp
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

1047 i‡(0 =
	`°rcmp
(
tmp
->
n•a˚
, 
cd
->
¥oc
.nspace)) {

1048 
≈å
 = 
tmp
;

1052 i‡(
NULL
 =
≈å
) {

1054 
˛ónup
;

1057 
	`PMIX_LIST_FOREACH
(
öfo
, &
≈å
->
£rvî
->
ønks
, 
pmix_ønk_öfo_t
) {

1058 i‡(
öfo
->
ønk
 =
cd
->
¥oc
.rank) {

1059 
	`pmix_li°_ªmove_ôem
(&
≈å
->
£rvî
->
ønks
, &
öfo
->
su≥r
);

1060 
	`PMIX_RELEASE
(
öfo
);

1065 
˛ónup
:

1066 i‡(
NULL
 !
cd
->
›cbfunc
) {

1067 
cd
->
	`›cbfunc
(
PMIX_SUCCESS
, cd->
cbd©a
);

1069 
	`PMIX_RELEASE
(
cd
);

1070 
	}
}

1072 
PMIX_EXPORT
 
	$PMIx_£rvî_dîegi°î_˛õ¡
(c⁄° 
pmix_¥oc_t
 *
¥oc
,

1073 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

1075 
pmix_£tup_ˇddy_t
 *
cd
;

1077 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1079 
¥oc
->
n•a˚
,Öroc->
ønk
);

1081 
cd
 = 
	`PMIX_NEW
(
pmix_£tup_ˇddy_t
);

1082 ()
	`°∫˝y
(
cd
->
¥oc
.
n•a˚
,Öroc->n•a˚, 
PMIX_MAX_NSLEN
);

1083 
cd
->
¥oc
.
ønk
 =Öroc->rank;

1084 
cd
->
›cbfunc
 = 
cbfunc
;

1085 
cd
->
cbd©a
 = cbdata;

1089 
	`PMIX_THREADSHIFT
(
cd
, 
_dîegi°î_˛õ¡
);

1090 
	}
}

1093 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_£rvî_£tup_f‹k
(c⁄° 
pmix_¥oc_t
 *
¥oc
, ***
ív
)

1095 
ønk°r
[128];

1096 
pmix_li°íî_t
 *
…
;

1098 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1100 
¥oc
->
n•a˚
,Öroc->
ønk
);

1103 
	`pmix_£ãnv
("PMIX_NAMESPACE", 
¥oc
->
n•a˚
, 
åue
, 
ív
);

1105 ()
	`¢¥ötf
(
ønk°r
, 127, "%d", 
¥oc
->
ønk
);

1106 
	`pmix_£ãnv
("PMIX_RANK", 
ønk°r
, 
åue
, 
ív
);

1108 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

1109 i‡(
NULL
 !
…
->
uri
 && NULL !…->
v¨«me
) {

1110 
	`pmix_£ãnv
(
…
->
v¨«me
,Üt->
uri
, 
åue
, 
ív
);

1114 
	`pmix_£ãnv
("PMIX_SECURITY_MODE", 
£curôy_mode
, 
åue
, 
ív
);

1116 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

1118 
	`pmix_d°‹e_∑tch_ív
(
ív
);

1121  
PMIX_SUCCESS
;

1122 
	}
}

1129 
	$_dmodex_ªq
(
sd
, 
¨gs
, *
cbd©a
)

1131 
pmix_£tup_ˇddy_t
 *
cd
 = (pmix_£tup_ˇddy_t*)
cbd©a
;

1132 
pmix_ønk_öfo_t
 *
öfo
, *
ùå
;

1133 
pmix_n•a˚_t
 *
≈å
, *
ns
;

1134 
pmix_buf„r_t
 
pbkt
;

1135 
pmix_vÆue_t
 *
vÆ
;

1136 *
d©a
 = 
NULL
;

1137 
size_t
 
sz
 = 0;

1138 
pmix_dmdx_ªmŸe_t
 *
dcd
;

1139 
pmix_°©us_t
 
rc
;

1141 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1143 
cd
->
¥oc
.
n•a˚
, cd->¥oc.
ønk
);

1148 
≈å
 = 
NULL
;

1149 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

1150 i‡(0 =
	`°rcmp
(
ns
->
n•a˚
, 
cd
->
¥oc
.nspace)) {

1151 
≈å
 = 
ns
;

1155 i‡(
NULL
 =
≈å
) {

1159 
dcd
 = 
	`PMIX_NEW
(
pmix_dmdx_ªmŸe_t
);

1160 
	`PMIX_RETAIN
(
cd
);

1161 
dcd
->
cd
 = cd;

1162 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
ªmŸe_≤d
, &
dcd
->
su≥r
);

1163 
cd
->
a˘ive
 = 
Ál£
;

1168 i‡(
cd
->
¥oc
.
ønk
 =
PMIX_RANK_WILDCARD
) {

1170 
d©a
 = 
≈å
->
£rvî
->
job_öfo
.
ba£_±r
;

1171 
sz
 = 
≈å
->
£rvî
->
job_öfo
.
byãs_u£d
;

1174 
cd
->
	`cbfunc
(
PMIX_SUCCESS
, 
d©a
, 
sz
, cd->
cbd©a
);

1175 
cd
->
a˘ive
 = 
Ál£
;

1181 
öfo
 = 
NULL
;

1182 
	`PMIX_LIST_FOREACH
(
ùå
, &
≈å
->
£rvî
->
ønks
, 
pmix_ønk_öfo_t
) {

1183 i‡(
ùå
->
ønk
 =
cd
->
¥oc
.rank) {

1184 
öfo
 = 
ùå
;

1188 i‡(
NULL
 =
öfo
) {

1191 
dcd
 = 
	`PMIX_NEW
(
pmix_dmdx_ªmŸe_t
);

1192 
	`PMIX_RETAIN
(
cd
);

1193 
dcd
->
cd
 = cd;

1194 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
ªmŸe_≤d
, &
dcd
->
su≥r
);

1195 
cd
->
a˘ive
 = 
Ál£
;

1201 i‡(!
öfo
->
modex_ªcvd
) {

1204 
dcd
 = 
	`PMIX_NEW
(
pmix_dmdx_ªmŸe_t
);

1205 
	`PMIX_RETAIN
(
cd
);

1206 
dcd
->
cd
 = cd;

1207 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
ªmŸe_≤d
, &
dcd
->
su≥r
);

1208 
cd
->
a˘ive
 = 
Ál£
;

1213 
	`PMIX_CONSTRUCT
(&
pbkt
, 
pmix_buf„r_t
);

1216 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`pmix_hash_„tch
(&
≈å
->
£rvî
->
myªmŸe
, 
öfo
->
ønk
, "modex", &
vÆ
)) &&

1217 
NULL
 !
vÆ
) {

1218 
d©a
 = 
vÆ
->d©a.
bo
.
byãs
;

1219 
sz
 = 
vÆ
->
d©a
.
bo
.
size
;

1221 
vÆ
->
d©a
.
bo
.
byãs
 = 
NULL
;

1222 
vÆ
->
d©a
.
bo
.
size
 = 0;

1223 
	`PMIX_VALUE_RELEASE
(
vÆ
);

1227 
cd
->
	`cbfunc
(
rc
, 
d©a
, 
sz
, cd->
cbd©a
);

1228 i‡(
NULL
 !
d©a
) {

1229 
	`‰ì
(
d©a
);

1231 
cd
->
a˘ive
 = 
Ál£
;

1232 
	}
}

1234 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_£rvî_dmodex_ªque°
(c⁄° 
pmix_¥oc_t
 *
¥oc
,

1235 
pmix_dmodex_ª•⁄£_‚_t
 
cbfunc
,

1236 *
cbd©a
)

1238 
pmix_£tup_ˇddy_t
 *
cd
;

1241 i‡(
NULL
 =
cbfunc
 || NULL =
¥oc
) {

1242  
PMIX_ERR_BAD_PARAM
;

1245 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1247 
¥oc
->
n•a˚
,Öroc->
ønk
);

1249 
cd
 = 
	`PMIX_NEW
(
pmix_£tup_ˇddy_t
);

1250 ()
	`°∫˝y
(
cd
->
¥oc
.
n•a˚
,Öroc->n•a˚, 
PMIX_MAX_NSLEN
);

1251 
cd
->
¥oc
.
ønk
 =Öroc->rank;

1252 
cd
->
cbfunc
 = cbfunc;

1253 
cd
->
cbd©a
 = cbdata;

1257 
	`PMIX_THREADSHIFT
(
cd
, 
_dmodex_ªq
);

1259 
	`PMIX_WAIT_FOR_COMPLETION
(
cd
->
a˘ive
);

1260 
	`PMIX_RELEASE
(
cd
);

1261  
PMIX_SUCCESS
;

1262 
	}
}

1264 
	$_°‹e_öã∫Æ
(
sd
, 
¨gs
, *
cbd©a
)

1266 
pmix_shi·_ˇddy_t
 *
cd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

1267 
pmix_n•a˚_t
 *
ns
, *
n•å
;

1269 
ns
 = 
NULL
;

1270 
	`PMIX_LIST_FOREACH
(
n•å
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

1271 i‡(0 =
	`°∫cmp
(
cd
->
n•a˚
, 
n•å
->n•a˚, 
PMIX_MAX_NSLEN
)) {

1272 
ns
 = 
n•å
;

1276 i‡(
NULL
 =
ns
) {

1278 
cd
->
°©us
 = 
PMIX_ERR_NOT_FOUND
;

1280 
cd
->
°©us
 = 
	`pmix_hash_°‹e
(&
ns
->
öã∫Æ
, cd->
ønk
, cd->
kv
);

1282 
cd
->
a˘ive
 = 
Ál£
;

1283 
	}
}

1285 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_St‹e_öã∫Æ
(c⁄° 
pmix_¥oc_t
 *
¥oc
,

1286 c⁄° *
key
, 
pmix_vÆue_t
 *
vÆ
)

1288 
pmix_shi·_ˇddy_t
 *
cd
;

1289 
pmix_°©us_t
 
rc
;

1292 
cd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

1293 
cd
->
n•a˚
 = 
¥oc
->nspace;

1294 
cd
->
ønk
 = 
¥oc
->rank;

1296 
cd
->
kv
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

1297 
cd
->
kv
->
key
 = 
	`°rdup
((*)key);

1298 
cd
->
kv
->
vÆue
 = (
pmix_vÆue_t
*)
	`mÆloc
((pmix_value_t));

1299 
rc
 = 
	`pmix_vÆue_x„r
(
cd
->
kv
->
vÆue
, 
vÆ
);

1300 i‡(
PMIX_SUCCESS
 !
rc
) {

1301 
	`PMIX_ERROR_LOG
(
rc
);

1302 
	`PMIX_RELEASE
(
cd
);

1303  
rc
;

1306 i‡(
pmix_globÆs
.
£rvî
) {

1307 
	`PMIX_THREADSHIFT
(
cd
, 
_°‹e_öã∫Æ
);

1308 
	`PMIX_WAIT_FOR_COMPLETION
(
cd
->
a˘ive
);

1310 
	`_°‹e_öã∫Æ
(0, 0, 
cd
);

1312 
rc
 = 
cd
->
°©us
;

1313 
	`PMIX_RELEASE
(
cd
);

1315  
rc
;

1316 
	}
}

1318 
	#PMIX_MAX_NODE_PREFIX
 50

	)

1320 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_gíî©e_ªgex
(c⁄° *
öput
, **
ªgexp
)

1322 *
v±r
, *
vßve
;

1323 
¥efix
[
PMIX_MAX_NODE_PREFIX
];

1324 
i
, 
j
, 
Àn
, 
°¨äum
, 
vnum
, 
numdigôs
;

1325 
boﬁ
 
found
, 
fuŒvÆ
;

1326 *
suffix
, *
sfx
;

1327 
pmix_ªgex_vÆue_t
 *
vªg
;

1328 
pmix_ªgex_ønge_t
 *
ønge
;

1329 
pmix_li°_t
 
vids
;

1330 **
ªgex¨gs
 = 
NULL
, *
tmp
, *
tmp2
;

1331 *
˝å
;

1334 *
ªgexp
 = 
NULL
;

1337 
	`PMIX_CONSTRUCT
(&
vids
, 
pmix_li°_t
);

1341 
vßve
 = 
	`°rdup
(
öput
);

1342 
v±r
 = 
vßve
;

1343 
NULL
 !(
˝å
 = 
	`°rchr
(
v±r
, ',')Ë|| 0 < 
	`°æí
(vptr)) {

1344 i‡(
NULL
 !
˝å
) {

1345 *
˝å
 = '\0';

1348 
fuŒvÆ
 = 
Ál£
;

1349 
Àn
 = 
	`°æí
(
v±r
);

1350 
°¨äum
 = -1;

1351 
	`mem£t
(
¥efix
, 0, 
PMIX_MAX_NODE_PREFIX
);

1352 
numdigôs
 = 0;

1353 
i
=0, 
j
=0; i < 
Àn
; i++) {

1354 i‡(!
	`ißÕha
(
v±r
[
i
])) {

1356 i‡(!
	`isdigô
(
v±r
[
i
])) {

1360 
fuŒvÆ
 = 
åue
;

1366 
numdigôs
++;

1367 i‡(
°¨äum
 < 0) {

1369 
°¨äum
 = 
i
;

1373 i‡(
°¨äum
 < 0) {

1374 
¥efix
[
j
++] = 
v±r
[
i
];

1377 i‡(
fuŒvÆ
 || 
°¨äum
 < 0) {

1379 
vªg
 = 
	`PMIX_NEW
(
pmix_ªgex_vÆue_t
);

1380 
vªg
->
¥efix
 = 
	`°rdup
(
v±r
);

1381 
	`pmix_li°_≠≥nd
(&
vids
, &
vªg
->
su≥r
);

1383 i‡(
NULL
 =
˝å
) {

1386 
v±r
 = 
˝å
 + 1;

1390 
vnum
 = 
	`°πﬁ
(&
v±r
[
°¨äum
], &
sfx
, 10);

1391 i‡(
NULL
 !
sfx
) {

1392 
suffix
 = 
	`°rdup
(
sfx
);

1394 
suffix
 = 
NULL
;

1397 
found
 = 
Ál£
;

1398 
	`PMIX_LIST_FOREACH
(
vªg
, &
vids
, 
pmix_ªgex_vÆue_t
) {

1399 i‡(0 < 
	`°æí
(
¥efix
Ë&& 
NULL
 =
vªg
->prefix) {

1402 i‡(0 =
	`°æí
(
¥efix
Ë&& 
NULL
 !
vªg
->prefix) {

1405 i‡(0 < 
	`°æí
(
¥efix
Ë&& 
NULL
 !
vªg
->prefix

1406 && 0 !
	`°rcmp
(
¥efix
, 
vªg
->prefix)) {

1409 i‡(
NULL
 =
suffix
 && NULL !
vªg
->suffix) {

1412 i‡(
NULL
 !
suffix
 && NULL =
vªg
->suffix) {

1415 i‡(
NULL
 !
suffix
 && NULL !
vªg
->suffix &&

1416 0 !
	`°rcmp
(
suffix
, 
vªg
->suffix)) {

1419 i‡(
numdigôs
 !
vªg
->
num_digôs
) {

1423 
found
 = 
åue
;

1427 
ønge
 = (
pmix_ªgex_ønge_t
*)
	`pmix_li°_gë_œ°
(&
vªg
->
ønges
);

1428 i‡(
NULL
 =
ønge
) {

1430 
ønge
 = 
	`PMIX_NEW
(
pmix_ªgex_ønge_t
);

1431 
ønge
->
°¨t
 = 
vnum
;

1432 
ønge
->
˙t
 = 1;

1433 
	`pmix_li°_≠≥nd
(&
vªg
->
ønges
, &
ønge
->
su≥r
);

1437 i‡(
vnum
 !(
ønge
->
°¨t
 +Ñ™ge->
˙t
)) {

1439 
ønge
 = 
	`PMIX_NEW
(
pmix_ªgex_ønge_t
);

1440 
ønge
->
°¨t
 = 
vnum
;

1441 
ønge
->
˙t
 = 1;

1442 
	`pmix_li°_≠≥nd
(&
vªg
->
ønges
, &
ønge
->
su≥r
);

1446 
ønge
->
˙t
++;

1449 i‡(!
found
) {

1451 
vªg
 = 
	`PMIX_NEW
(
pmix_ªgex_vÆue_t
);

1452 i‡(0 < 
	`°æí
(
¥efix
)) {

1453 
vªg
->
¥efix
 = 
	`°rdup
(prefix);

1455 i‡(
NULL
 !
suffix
) {

1456 
vªg
->
suffix
 = 
	`°rdup
(suffix);

1458 
vªg
->
num_digôs
 = 
numdigôs
;

1459 
	`pmix_li°_≠≥nd
(&
vids
, &
vªg
->
su≥r
);

1463 
ønge
 = 
	`PMIX_NEW
(
pmix_ªgex_ønge_t
);

1464 
ønge
->
°¨t
 = 
vnum
;

1465 
ønge
->
˙t
 = 1;

1466 
	`pmix_li°_≠≥nd
(&
vªg
->
ønges
, &
ønge
->
su≥r
);

1468 i‡(
NULL
 !
suffix
) {

1469 
	`‰ì
(
suffix
);

1472 i‡(
NULL
 =
˝å
) {

1475 
v±r
 = 
˝å
 + 1;

1477 
	`‰ì
(
vßve
);

1480 
NULL
 !(
vªg
 = (
pmix_ªgex_vÆue_t
*)
	`pmix_li°_ªmove_fú°
(&
vids
))) {

1482 i‡(0 =
	`pmix_li°_gë_size
(&
vªg
->
ønges
)) {

1483 i‡(
NULL
 !
vªg
->
¥efix
) {

1485 i‡(0 > 
	`a•rötf
(&
tmp
, "%s", 
vªg
->
¥efix
)) {

1486  
PMIX_ERR_NOMEM
;

1488 
	`pmix_¨gv_≠≥nd_nosize
(&
ªgex¨gs
, 
tmp
);

1489 
	`‰ì
(
tmp
);

1491 
	`PMIX_RELEASE
(
vªg
);

1495 i‡(
NULL
 !
vªg
->
¥efix
) {

1496 i‡(0 > 
	`a•rötf
(&
tmp
, "%s[%d:", 
vªg
->
¥efix
, vªg->
num_digôs
)) {

1497  
PMIX_ERR_NOMEM
;

1500 i‡(0 > 
	`a•rötf
(&
tmp
, "[%d:", 
vªg
->
num_digôs
)) {

1501  
PMIX_ERR_NOMEM
;

1505 
NULL
 !(
ønge
 = (
pmix_ªgex_ønge_t
*)
	`pmix_li°_ªmove_fú°
(&
vªg
->
ønges
))) {

1506 i‡(1 =
ønge
->
˙t
) {

1507 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%d,", 
tmp
, 
ønge
->
°¨t
)) {

1508  
PMIX_ERR_NOMEM
;

1511 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%d-%d,", 
tmp
, 
ønge
->
°¨t
,Ñ™ge->°¨à+Ñ™ge->
˙t
 - 1)) {

1512  
PMIX_ERR_NOMEM
;

1515 
	`‰ì
(
tmp
);

1516 
tmp
 = 
tmp2
;

1517 
	`PMIX_RELEASE
(
ønge
);

1520 
tmp
[
	`°æí
(tmp)-1] = ']';

1521 i‡(
NULL
 !
vªg
->
suffix
) {

1523 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%s", 
tmp
, 
vªg
->
suffix
)) {

1524  
PMIX_ERR_NOMEM
;

1526 
	`‰ì
(
tmp
);

1527 
tmp
 = 
tmp2
;

1529 
	`pmix_¨gv_≠≥nd_nosize
(&
ªgex¨gs
, 
tmp
);

1530 
	`‰ì
(
tmp
);

1531 
	`PMIX_RELEASE
(
vªg
);

1535 
tmp
 = 
	`pmix_¨gv_joö
(
ªgex¨gs
, ',');

1536 i‡(0 > 
	`a•rötf
(
ªgexp
, "pmix[%s]", 
tmp
)) {

1537  
PMIX_ERR_NOMEM
;

1539 
	`‰ì
(
tmp
);

1542 
	`pmix_¨gv_‰ì
(
ªgex¨gs
);

1544 
	`PMIX_DESTRUCT
(&
vids
);

1545  
PMIX_SUCCESS
;

1546 
	}
}

1548 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_gíî©e_µn
(c⁄° *
öput
, **
ªgexp
)

1550 **
µn
, **
≈n
;

1551 
i
, 
j
, 
°¨t
, 
íd
;

1552 
pmix_ªgex_vÆue_t
 *
vªg
;

1553 
pmix_ªgex_ønge_t
 *
∫g
;

1554 
pmix_li°_t
 
nodes
;

1555 *
tmp
, *
tmp2
;

1556 *
˝å
;

1559 *
ªgexp
 = 
NULL
;

1562 
	`PMIX_CONSTRUCT
(&
nodes
, 
pmix_li°_t
);

1565 
µn
 = 
	`pmix_¨gv_•lô
(
öput
, ';');

1568 
i
=0; 
NULL
 !
µn
[i]; i++) {

1569 
∫g
 = 
NULL
;

1571 
vªg
 = 
	`PMIX_NEW
(
pmix_ªgex_vÆue_t
);

1572 
	`pmix_li°_≠≥nd
(&
nodes
, &
vªg
->
su≥r
);

1574 
≈n
 = 
	`pmix_¨gv_•lô
(
µn
[
i
], ',');

1576 
j
=0; 
NULL
 !
≈n
[j]; j++) {

1578 i‡(
NULL
 !(
˝å
 = 
	`°rchr
(
≈n
[
j
], '-'))) {

1580 *
˝å
 = '\0';

1581 ++
˝å
;

1582 
°¨t
 = 
	`°πﬁ
(
≈n
[
j
], 
NULL
, 10);

1583 
íd
 = 
	`°πﬁ
(
˝å
, 
NULL
, 10);

1585 i‡(
NULL
 =
∫g
) {

1587 
∫g
 = 
	`PMIX_NEW
(
pmix_ªgex_ønge_t
);

1588 
∫g
->
°¨t
 = start;

1589 
∫g
->
˙t
 = 
íd
 - 
°¨t
 + 1;

1590 
	`pmix_li°_≠≥nd
(&
vªg
->
ønges
, &
∫g
->
su≥r
);

1593 i‡(
°¨t
 =(
∫g
->°¨à+Ñng->
˙t
)) {

1595 
∫g
->
˙t
++;

1598 
∫g
 = 
	`PMIX_NEW
(
pmix_ªgex_ønge_t
);

1599 
∫g
->
°¨t
 = start;

1600 
∫g
->
˙t
 = 
íd
 - 
°¨t
 + 1;

1601 
	`pmix_li°_≠≥nd
(&
vªg
->
ønges
, &
∫g
->
su≥r
);

1606 
°¨t
 = 
	`°πﬁ
(
≈n
[
j
], 
NULL
, 10);

1608 i‡(
NULL
 =
∫g
) {

1610 
∫g
 = 
	`PMIX_NEW
(
pmix_ªgex_ønge_t
);

1611 
∫g
->
°¨t
 = start;

1612 
∫g
->
˙t
 = 1;

1613 
	`pmix_li°_≠≥nd
(&
vªg
->
ønges
, &
∫g
->
su≥r
);

1616 i‡(
°¨t
 =(
∫g
->°¨à+Ñng->
˙t
)) {

1618 
∫g
->
˙t
++;

1621 
∫g
 = 
	`PMIX_NEW
(
pmix_ªgex_ønge_t
);

1622 
∫g
->
°¨t
 = start;

1623 
∫g
->
˙t
 = 1;

1624 
	`pmix_li°_≠≥nd
(&
vªg
->
ønges
, &
∫g
->
su≥r
);

1629 
	`pmix_¨gv_‰ì
(
≈n
);

1631 
	`pmix_¨gv_‰ì
(
µn
);

1635 
tmp
 = 
	`°rdup
("pmix[");

1636 
	`PMIX_LIST_FOREACH
(
vªg
, &
nodes
, 
pmix_ªgex_vÆue_t
) {

1637 
NULL
 !(
∫g
 = (
pmix_ªgex_ønge_t
*)
	`pmix_li°_ªmove_fú°
(&
vªg
->
ønges
))) {

1638 i‡(1 =
∫g
->
˙t
) {

1639 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%d,", 
tmp
, 
∫g
->
°¨t
)) {

1640  
PMIX_ERR_NOMEM
;

1643 i‡(0 > 
	`a•rötf
(&
tmp2
, "%s%d-%d,", 
tmp
, 
∫g
->
°¨t
,Ñng->°¨à+Ñng->
˙t
 - 1)) {

1644  
PMIX_ERR_NOMEM
;

1647 
	`‰ì
(
tmp
);

1648 
tmp
 = 
tmp2
;

1649 
	`PMIX_RELEASE
(
∫g
);

1652 
tmp
[
	`°æí
(tmp)-1] = ';';

1656 
tmp
[
	`°æí
(tmp)-1] = ']';

1659 *
ªgexp
 = 
tmp
;

1661 
	`PMIX_LIST_DESTRUCT
(&
nodes
);

1662  
PMIX_SUCCESS
;

1663 
	}
}

1671 
	$›_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

1673 
pmix_£rvî_ˇddy_t
 *
cd
 = (pmix_£rvî_ˇddy_t*)
cbd©a
;

1674 
pmix_buf„r_t
 *
ª∂y
;

1675 
pmix_°©us_t
 
rc
;

1681 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

1682 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
°©us
, 1, 
PMIX_STATUS
))) {

1683 
	`PMIX_ERROR_LOG
(
rc
);

1684 
	`PMIX_RELEASE
(
ª∂y
);

1690 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

1692 
	`PMIX_RELEASE
(
cd
);

1693 
	}
}

1695 
	$_•cb
(
sd
, 
¨gs
, *
cbd©a
)

1697 
pmix_shi·_ˇddy_t
 *
cd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

1698 
pmix_n•a˚_t
 *
≈å
, *
ns
;

1699 
pmix_buf„r_t
 *
ª∂y
;

1700 
pmix_°©us_t
 
rc
;

1703 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

1704 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
cd
->
°©us
, 1, 
PMIX_STATUS
))) {

1705 
	`PMIX_ERROR_LOG
(
rc
);

1706 
	`PMIX_RELEASE
(
cd
->cd);

1707 
cd
->
a˘ive
 = 
Ál£
;

1710 i‡(
PMIX_SUCCESS
 =
cd
->
°©us
) {

1713 
≈å
 = 
NULL
;

1714 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

1715 i‡(0 =
	`°rcmp
(
ns
->
n•a˚
, 
cd
->nspace)) {

1716 
≈å
 = 
ns
;

1720 i‡(
NULL
 =
≈å
) {

1722 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_FOUND
);

1724 
pmix_b‰›
.
	`c›y_∑ylﬂd
(
ª∂y
, &
≈å
->
£rvî
->
job_öfo
);

1731 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->cd->
≥î
, cd->cd->
hdr
.
èg
, 
ª∂y
);

1733 
	`PMIX_RELEASE
(
cd
->cd);

1734 
cd
->
a˘ive
 = 
Ál£
;

1735 
	}
}

1737 
	$•awn_cbfunc
(
pmix_°©us_t
 
°©us
, *
n•a˚
, *
cbd©a
)

1739 
pmix_shi·_ˇddy_t
 *
cd
;

1742 
cd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

1743 
cd
->
°©us
 = status;

1744 
cd
->
n•a˚
 =Çspace;

1745 
cd
->cd = (
pmix_£rvî_ˇddy_t
*)
cbd©a
;;

1747 
	`PMIX_THREADSHIFT
(
cd
, 
_•cb
);

1748 
	`PMIX_WAIT_FOR_COMPLETION
(
cd
->
a˘ive
);

1749 
	`PMIX_RELEASE
(
cd
);

1750 
	}
}

1752 
	$lookup_cbfunc
(
pmix_°©us_t
 
°©us
, 
pmix_pd©a_t
 
pd©a
[], 
size_t
 
nd©a
,

1753 *
cbd©a
)

1755 
pmix_£rvî_ˇddy_t
 *
cd
 = (pmix_£rvî_ˇddy_t*)
cbd©a
;

1756 
pmix_buf„r_t
 *
ª∂y
;

1757 
pmix_°©us_t
 
rc
;

1762 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

1763 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
°©us
, 1, 
PMIX_STATUS
))) {

1764 
	`PMIX_ERROR_LOG
(
rc
);

1765 
	`PMIX_RELEASE
(
ª∂y
);

1768 i‡(
PMIX_SUCCESS
 =
°©us
) {

1770 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
nd©a
, 1, 
PMIX_SIZE
))) {

1771 
	`PMIX_ERROR_LOG
(
rc
);

1772 
	`PMIX_RELEASE
(
ª∂y
);

1775 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, 
pd©a
, 
nd©a
, 
PMIX_PDATA
))) {

1776 
	`PMIX_ERROR_LOG
(
rc
);

1777 
	`PMIX_RELEASE
(
ª∂y
);

1785 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

1787 
	`PMIX_RELEASE
(
cd
);

1788 
	}
}

1790 
	$_mdxcbfunc
(
sd
, 
¨gc
, *
cbd©a
)

1792 
pmix_shi·_ˇddy_t
 *
scd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

1793 
pmix_£rvî_åkr_t
 *
åackî
 = 
scd
->tracker;

1794 
pmix_buf„r_t
 
x„r
, *
b±r
, *
d©abuf
, *
bpsc›e
, *
ª∂y
;

1795 
pmix_n•a˚_t
 *
≈å
, *
ns
;

1796 
pmix_£rvî_ˇddy_t
 *
cd
;

1797 *
n•a˚
;

1798 
ønk
;

1799 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

1800 
öt32_t
 
˙t
 = 1;

1801 
byã
;

1804 
	`PMIX_CONSTRUCT
(&
x„r
, 
pmix_buf„r_t
);

1806 i‡(
PMIX_SUCCESS
 !
scd
->
°©us
) {

1807 
rc
 = 
scd
->
°©us
;

1808 
föish_cﬁÀ˘ive
;

1811 i‡(
PMIX_COLLECT_INVALID
 =
åackî
->
cﬁÀ˘_ty≥
) {

1812 
rc
 = 
PMIX_ERR_INVALID_ARG
;

1813 
föish_cﬁÀ˘ive
;

1816 
	`PMIX_LOAD_BUFFER
(&
x„r
, 
scd
->
d©a
, scd->
nd©a
);

1819 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(&
x„r
, &
byã
, &
˙t
, 
PMIX_BYTE
))) {

1820 
pmix_cﬁÀ˘_t
 
˘y≥
 = (pmix_cﬁÀ˘_t)
byã
;

1823 i‡(
˘y≥
 !
åackî
->
cﬁÀ˘_ty≥
) {

1824 
rc
 = 
PMIX_ERR_INVALID_ARG
;

1825 
föish_cﬁÀ˘ive
;

1829 i‡(
PMIX_COLLECT_YES
 !
åackî
->
cﬁÀ˘_ty≥
) {

1834 
˙t
 = 1;

1835 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(&
x„r
, &
d©abuf
, &
˙t
, 
PMIX_BUFFER
))) {

1836 
rc
 = 
PMIX_ERR_DATA_VALUE_NOT_FOUND
;

1837 
föish_cﬁÀ˘ive
;

1841 
˙t
 = 1;

1842 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
d©abuf
, &
b±r
, &
˙t
, 
PMIX_BUFFER
))) {

1844 
˙t
 = 1;

1845 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, &
n•a˚
, &
˙t
, 
PMIX_STRING
))) {

1846 
	`PMIX_ERROR_LOG
(
rc
);

1847 
föish_cﬁÀ˘ive
;

1849 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1850 "£rvî:modex_cbfun¯u≈acked blob f‹Çpß˚ %s", 
n•a˚
);

1852 
≈å
 = 
NULL
;

1853 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

1854 i‡(0 =
	`°rcmp
(
n•a˚
, 
ns
->nspace)) {

1855 
≈å
 = 
ns
;

1860 i‡(
NULL
 =
≈å
) {

1865 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

1866 "modex_cbfunc: unknow¿n•a˚ %s, Fí˚ ", 
n•a˚
);

1872 
rc
 = 
PMIX_ERR_INVALID_NAMESPACE
;

1873 
föish_cﬁÀ˘ive
;

1877 
˙t
 = 1;

1878 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, &
ønk
, &
˙t
, 
PMIX_PROC_RANK
))) {

1879 
	`PMIX_ERROR_LOG
(
rc
);

1880 
föish_cﬁÀ˘ive
;

1882 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1883 "˛õ¡:u≈ack fí˚Ñe˚ived blob f‹Ñ™k %d", 
ønk
);

1885 
˙t
 = 1;

1886 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
b±r
, &
bpsc›e
, &
˙t
, 
PMIX_BUFFER
))) {

1888 i‡(
	`_my_˛õ¡
(
≈å
->
n•a˚
, 
ønk
)) {

1891 
pmix_kvÆ_t
 *
kp
 = 
	`PMIX_NEW
(pmix_kval_t);

1892 
kp
->
key
 = 
	`°rdup
("modex");

1893 
	`PMIX_VALUE_CREATE
(
kp
->
vÆue
, 1);

1894 
kp
->
vÆue
->
ty≥
 = 
PMIX_BYTE_OBJECT
;

1895 
	`PMIX_UNLOAD_BUFFER
(
bpsc›e
, 
kp
->
vÆue
->
d©a
.
bo
.
byãs
, kp->vÆue->d©a.bo.
size
);

1897 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
≈å
->
£rvî
->
ªmŸe
, 
ønk
, 
kp
))) {

1898 
	`PMIX_ERROR_LOG
(
rc
);

1900 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

1901 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_d°‹e_°‹e
(
≈å
->
n•a˚
, 
ønk
, 
kp
))) {

1902 
	`PMIX_ERROR_LOG
(
rc
);

1905 
	`PMIX_RELEASE
(
kp
);

1907 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
) {

1908 
	`PMIX_ERROR_LOG
(
rc
);

1914 
föish_cﬁÀ˘ive
;

1916 
	`PMIX_RELEASE
(
bpsc›e
);

1917 
	`PMIX_RELEASE
(
b±r
);

1918 
˙t
 = 1;

1920 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
) {

1921 
föish_cﬁÀ˘ive
;

1923 
rc
 = 
PMIX_SUCCESS
;

1925 
˙t
 = 1;

1928 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 =
rc
) {

1929 
rc
 = 
PMIX_SUCCESS
;

1932 
föish_cﬁÀ˘ive
:

1934 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

1935 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &rc, 1, 
PMIX_STATUS
))) {

1936 
	`PMIX_ERROR_LOG
(
rc
);

1937 
˛ónup
;

1941 
	`PMIX_LIST_FOREACH
(
cd
, &
åackî
->
loˇl_cbs
, 
pmix_£rvî_ˇddy_t
) {

1942 
	`PMIX_RETAIN
(
ª∂y
);

1943 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1945 
cd
->
≥î
->
öfo
->
≈å
->
n•a˚
, cd->≥î->öfo->
ønk
);

1946 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

1949 
˛ónup
:

1955 
x„r
.
ba£_±r
 = 
NULL
;

1956 
x„r
.
byãs_u£d
 = 0;

1957 
	`PMIX_DESTRUCT
(&
x„r
);

1959 
	`PMIX_RELEASE
(
ª∂y
);

1960 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, &
åackî
->
su≥r
);

1961 
	`PMIX_RELEASE
(
åackî
);

1964 i‡(
NULL
 !
scd
->
cbfunc
.
ªl‚
) {

1965 
scd
->
cbfunc
.
	`ªl‚
(scd->
cbd©a
);

1967 
	`PMIX_RELEASE
(
scd
);

1968 
	}
}

1969 
	$modex_cbfunc
(
pmix_°©us_t
 
°©us
, c⁄° *
d©a
, 
size_t
 
nd©a
, *
cbd©a
,

1970 
pmix_ªÀa£_cbfunc_t
 
ªl‚
, *
ªlcbd
)

1972 
pmix_£rvî_åkr_t
 *
åackî
 = (pmix_£rvî_åkr_t*)
cbd©a
;

1973 
pmix_shi·_ˇddy_t
 *
scd
;

1975 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1976 "£rvî:modex_cbfun¯ˇŒed wôh %d byãs", ()
nd©a
);

1978 i‡(
NULL
 =
åackî
) {

1981 i‡(
NULL
 !
ªl‚
) {

1982 
	`ªl‚
(
ªlcbd
);

1988 
scd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

1989 
scd
->
°©us
 = status;

1990 
scd
->
d©a
 = data;

1991 
scd
->
nd©a
 =Çdata;

1992 
scd
->
åackî
 =Åracker;

1993 
scd
->
cbfunc
.
ªl‚
 =Ñelfn;

1994 
scd
->
cbd©a
 = 
ªlcbd
;

1995 
	`PMIX_THREADSHIFT
(
scd
, 
_mdxcbfunc
);

1996 
	}
}

1998 
	$gë_cbfunc
(
pmix_°©us_t
 
°©us
, c⁄° *
d©a
, 
size_t
 
nd©a
, *
cbd©a
,

1999 
pmix_ªÀa£_cbfunc_t
 
ªl‚
, *
ªlcbd
)

2001 
pmix_£rvî_ˇddy_t
 *
cd
 = (pmix_£rvî_ˇddy_t*)
cbd©a
;

2002 
pmix_buf„r_t
 *
ª∂y
, 
buf
;

2003 
pmix_°©us_t
 
rc
;

2005 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2006 "£rvî:gë_cbfun¯ˇŒed wôh %dÉÀmíts", ()
nd©a
);

2010 i‡(
NULL
 =
cd
) {

2013 i‡(
NULL
 !
ªl‚
) {

2014 
	`ªl‚
(
ªlcbd
);

2020 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

2021 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
°©us
, 1, 
PMIX_STATUS
))) {

2022 
	`PMIX_ERROR_LOG
(
rc
);

2023 
˛ónup
;

2026 
	`PMIX_CONSTRUCT
(&
buf
, 
pmix_buf„r_t
);

2027 
	`PMIX_LOAD_BUFFER
(&
buf
, 
d©a
, 
nd©a
);

2028 
pmix_b‰›
.
	`c›y_∑ylﬂd
(
ª∂y
, &
buf
);

2029 
buf
.
ba£_±r
 = 
NULL
;

2030 
buf
.
byãs_u£d
 = 0;

2031 
	`PMIX_DESTRUCT
(&
buf
);

2033 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2035 
cd
->
≥î
->
öfo
->
≈å
->
n•a˚
, cd->≥î->öfo->
ønk
);

2036 
	`pmix_ouçut_hexdump
(5, 
pmix_globÆs
.
debug_ouçut
,

2037 
ª∂y
->
ba£_±r
, (ª∂y->
byãs_u£d
 < 256 ?Ñeply->bytes_used : 256));

2039 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

2041 
˛ónup
:

2043 i‡(
NULL
 !
ªl‚
) {

2044 
	`ªl‚
(
ªlcbd
);

2046 
	`PMIX_RELEASE
(
cd
);

2047 
	}
}

2049 
	$_˙˘
(
sd
, 
¨gs
, *
cbd©a
)

2051 
pmix_shi·_ˇddy_t
 *
scd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

2052 
pmix_£rvî_åkr_t
 *
åackî
 = 
scd
->tracker;

2053 
pmix_buf„r_t
 *
ª∂y
;

2054 
pmix_°©us_t
 
rc
;

2055 
i
;

2056 
pmix_£rvî_ˇddy_t
 *
cd
;

2057 **
n•a˚s
=
NULL
;

2058 
pmix_n•a˚_t
 *
≈å
;

2059 
pmix_buf„r_t
 *
job_öfo_±r
;

2062 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

2063 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
scd
->
°©us
, 1, 
PMIX_STATUS
))) {

2064 
	`PMIX_ERROR_LOG
(
rc
);

2065 
˛ónup
;

2068 i‡(
PMIX_CONNECTNB_CMD
 =
åackî
->
ty≥
) {

2070 
	`PMIX_LIST_FOREACH
(
cd
, &
åackî
->
loˇl_cbs
, 
pmix_£rvî_ˇddy_t
) {

2071 
	`pmix_¨gv_≠≥nd_unique_nosize
(&
n•a˚s
, 
cd
->
≥î
->
öfo
->
≈å
->
n•a˚
, 
Ál£
);

2076 
i
=0; 
NULL
 !
n•a˚s
[i]; i++) {

2077 
	`PMIX_LIST_FOREACH
(
≈å
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

2078 i‡(0 !
	`°rcmp
(
n•a˚s
[
i
], 
≈å
->
n•a˚
)) {

2081 
job_öfo_±r
 = &
≈å
->
£rvî
->
job_öfo
;

2082 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
job_öfo_±r
, 1, 
PMIX_BUFFER
))) {

2083 
	`PMIX_ERROR_LOG
(
rc
);

2084 
	`pmix_¨gv_‰ì
(
n•a˚s
);

2085 
˛ónup
;

2089 
	`pmix_¨gv_‰ì
(
n•a˚s
);

2093 
	`PMIX_LIST_FOREACH
(
cd
, &
åackî
->
loˇl_cbs
, 
pmix_£rvî_ˇddy_t
) {

2094 
	`PMIX_RETAIN
(
ª∂y
);

2095 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2097 
cd
->
≥î
->
öfo
->
≈å
->
n•a˚
, cd->≥î->öfo->
ønk
);

2098 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

2101 
˛ónup
:

2102 
	`PMIX_RELEASE
(
ª∂y
);

2103 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, &
åackî
->
su≥r
);

2104 
	`PMIX_RELEASE
(
åackî
);

2107 
	`PMIX_RELEASE
(
scd
);

2108 
	}
}

2110 
	$˙˘_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

2112 
pmix_£rvî_åkr_t
 *
åackî
 = (pmix_£rvî_åkr_t*)
cbd©a
;

2113 
pmix_shi·_ˇddy_t
 *
scd
;

2115 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2118 i‡(
NULL
 =
åackî
) {

2124 
scd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

2125 
scd
->
°©us
 = status;

2126 
scd
->
åackî
 =Åracker;

2127 
	`PMIX_THREADSHIFT
(
scd
, 
_˙˘
);

2128 
	}
}

2130 
	$ªgevíts_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

2132 
pmix_°©us_t
 
rc
;

2133 
pmix_£rvî_ˇddy_t
 *
cd
 = (pmix_£rvî_ˇddy_t*Ë
cbd©a
;

2134 
pmix_buf„r_t
 *
ª∂y
;

2136 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2137 "£rvî:ªgevíts_cbfun¯ˇŒed sètu†%d", 
°©us
);

2139 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

2140 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
°©us
, 1, 
PMIX_STATUS
))) {

2141 
	`PMIX_ERROR_LOG
(
rc
);

2144 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

2145 
	`PMIX_RELEASE
(
cd
);

2146 
	}
}

2148 
	$nŸifyîr‹_cbfunc
 (
pmix_°©us_t
 
°©us
, *
cbd©a
)

2150 
pmix_°©us_t
 
rc
;

2151 
pmix_£rvî_ˇddy_t
 *
cd
 = (pmix_£rvî_ˇddy_t*Ë
cbd©a
;

2152 
pmix_buf„r_t
 *
ª∂y
 = 
	`PMIX_NEW
(pmix_buffer_t);

2154 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2155 "£rvî:nŸifyîr‹_cbfun¯ˇŒed sètu†%d", 
°©us
);

2157 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
°©us
, 1, 
PMIX_STATUS
))) {

2158 
	`PMIX_ERROR_LOG
(
rc
);

2161 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

2162 
	`PMIX_RELEASE
(
cd
);

2163 
	}
}

2166 
	$quîy_cbfunc
(
pmix_°©us_t
 
°©us
,

2167 
pmix_öfo_t
 *
öfo
, 
size_t
 
nöfo
,

2168 *
cbd©a
,

2169 
pmix_ªÀa£_cbfunc_t
 
ªÀa£_‚
,

2170 *
ªÀa£_cbd©a
)

2172 
pmix_quîy_ˇddy_t
 *
qcd
 = (pmix_quîy_ˇddy_t*)
cbd©a
;

2173 
pmix_£rvî_ˇddy_t
 *
cd
 = (pmix_£rvî_ˇddy_t*)
qcd
->
cbd©a
;

2174 
pmix_buf„r_t
 *
ª∂y
 = 
	`PMIX_NEW
(pmix_buffer_t);

2175 
pmix_°©us_t
 
rc
;

2177 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2178 "pmix:quîy cÆlback wôh sètu†%d", 
°©us
);

2180 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
°©us
, 1, 
PMIX_STATUS
))) {

2181 
	`PMIX_ERROR_LOG
(
rc
);

2182 
com∂ëe
;

2185 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
nöfo
, 1, 
PMIX_SIZE
))) {

2186 
	`PMIX_ERROR_LOG
(
rc
);

2187 
com∂ëe
;

2189 i‡(0 < 
nöfo
) {

2190 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
ª∂y
, 
öfo
, 
nöfo
, 
PMIX_INFO
))) {

2191 
	`PMIX_ERROR_LOG
(
rc
);

2195 
com∂ëe
:

2197 
	`PMIX_SERVER_QUEUE_REPLY
(
cd
->
≥î
, cd->
hdr
.
èg
, 
ª∂y
);

2199 
	`PMIX_QUERY_FREE
(
qcd
->
quîõs
, qcd->
nquîõs
);

2200 
	`PMIX_RELEASE
(
qcd
);

2201 
	`PMIX_RELEASE
(
cd
);

2202 
	}
}

2221 
pmix_°©us_t
 
	$£rvî_swôchy¨d
(
pmix_≥î_t
 *
≥î
, 
uöt32_t
 
èg
,

2222 
pmix_buf„r_t
 *
buf
)

2224 
pmix_°©us_t
 
rc
=
PMIX_ERR_NOT_SUPPORTED
;

2225 
öt32_t
 
˙t
;

2226 
pmix_cmd_t
 
cmd
;

2227 
pmix_£rvî_ˇddy_t
 *
cd
;

2228 
pmix_¥oc_t
 
¥oc
;

2229 
pmix_buf„r_t
 *
ª∂y
;

2230 
pmix_ªgevíts_öfo_t
 *
ªgöfo
;

2231 
pmix_≥î_evíts_öfo_t
 *
¥ev
;

2234 
˙t
 = 1;

2235 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cmd
, &
˙t
, 
PMIX_CMD
))) {

2236 
	`PMIX_ERROR_LOG
(
rc
);

2237  
rc
;

2239 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2241 
cmd
, 
≥î
->
öfo
->
≈å
->
n•a˚
,Öìr->öfo->
ønk
);

2243 i‡(
PMIX_REQ_CMD
 =
cmd
) {

2244 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

2245 
pmix_b‰›
.
	`c›y_∑ylﬂd
(
ª∂y
, &(
≥î
->
öfo
->
≈å
->
£rvî
->
job_öfo
));

2246 
pmix_b‰›
.
	`c›y_∑ylﬂd
(
ª∂y
, &(
pmix_£rvî_globÆs
.
gd©a
));

2247 
	`PMIX_SERVER_QUEUE_REPLY
(
≥î
, 
èg
, 
ª∂y
);

2248  
PMIX_SUCCESS
;

2251 i‡(
PMIX_ABORT_CMD
 =
cmd
) {

2252 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2253 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_ab‹t
(
≥î
, 
buf
, 
›_cbfunc
, 
cd
))) {

2254 
	`PMIX_RELEASE
(
cd
);

2256  
rc
;

2259 i‡(
PMIX_COMMIT_CMD
 =
cmd
) {

2260 
rc
 = 
	`pmix_£rvî_commô
(
≥î
, 
buf
);

2261  
rc
;

2264 i‡(
PMIX_FENCENB_CMD
 =
cmd
) {

2265 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2266 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_„n˚
(
cd
, 
buf
, 
modex_cbfunc
, 
›_cbfunc
))) {

2267 
	`PMIX_RELEASE
(
cd
);

2269  
rc
;

2272 i‡(
PMIX_GETNB_CMD
 =
cmd
) {

2273 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2274 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_gë
(
buf
, 
gë_cbfunc
, 
cd
))) {

2275 
	`PMIX_RELEASE
(
cd
);

2277  
rc
;

2280 i‡(
PMIX_FINALIZE_CMD
 =
cmd
) {

2281 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2284 i‡(
NULL
 !
pmix_ho°_£rvî
.
˛õ¡_föÆized
) {

2285 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2286 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

2287 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

2290 
	`PMIX_LIST_FOREACH
(
ªgöfo
, &
pmix_£rvî_globÆs
.
evíts
, 
pmix_ªgevíts_öfo_t
) {

2291 
	`PMIX_LIST_FOREACH
(
¥ev
, &
ªgöfo
->
≥îs
, 
pmix_≥î_evíts_öfo_t
) {

2292 i‡(
¥ev
->
≥î
 ==Öeer) {

2293 
	`pmix_li°_ªmove_ôem
(&
ªgöfo
->
≥îs
, &
¥ev
->
su≥r
);

2294 
	`PMIX_RELEASE
(
¥ev
);

2300 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_ho°_£rvî
.
	`˛õ¡_föÆized
(&
¥oc
, 
≥î
->
öfo
->
£rvî_obje˘
,

2301 
›_cbfunc
, 
cd
))) {

2302 
	`PMIX_RELEASE
(
cd
);

2307 i‡(
≥î
->
ªcv_ev_a˘ive
) {

2308 
	`evít_dñ
(&
≥î
->
ªcv_evít
);

2309 
≥î
->
ªcv_ev_a˘ive
 = 
Ál£
;

2311  
rc
;

2315 i‡(
PMIX_PUBLISHNB_CMD
 =
cmd
) {

2316 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2317 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_publish
(
≥î
, 
buf
, 
›_cbfunc
, 
cd
))) {

2318 
	`PMIX_RELEASE
(
cd
);

2320  
rc
;

2324 i‡(
PMIX_LOOKUPNB_CMD
 =
cmd
) {

2325 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2326 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_lookup
(
≥î
, 
buf
, 
lookup_cbfunc
, 
cd
))) {

2327 
	`PMIX_RELEASE
(
cd
);

2329  
rc
;

2333 i‡(
PMIX_UNPUBLISHNB_CMD
 =
cmd
) {

2334 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2335 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_u≈ublish
(
≥î
, 
buf
, 
›_cbfunc
, 
cd
))) {

2336 
	`PMIX_RELEASE
(
cd
);

2338  
rc
;

2342 i‡(
PMIX_SPAWNNB_CMD
 =
cmd
) {

2343 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2344 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_•awn
(
≥î
, 
buf
, 
•awn_cbfunc
, 
cd
))) {

2345 
	`PMIX_RELEASE
(
cd
);

2347  
rc
;

2351 i‡(
PMIX_CONNECTNB_CMD
 =
cmd
) {

2352 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2353 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_c⁄√˘
(
cd
, 
buf
, 
Ál£
, 
˙˘_cbfunc
))) {

2354 
	`PMIX_RELEASE
(
cd
);

2356  
rc
;

2359 i‡(
PMIX_DISCONNECTNB_CMD
 =
cmd
) {

2360 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2361 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_c⁄√˘
(
cd
, 
buf
, 
åue
, 
˙˘_cbfunc
))) {

2362 
	`PMIX_RELEASE
(
cd
);

2364  
rc
;

2367 i‡(
PMIX_REGEVENTS_CMD
 =
cmd
) {

2368 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2369 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_£rvî_ªgi°î_evíts
(
≥î
, 
buf
, 
ªgevíts_cbfunc
, 
cd
))) {

2370 
	`PMIX_RELEASE
(
cd
);

2372  
rc
;

2375 i‡(
PMIX_DEREGEVENTS_CMD
 =
cmd
) {

2376 
	`pmix_£rvî_dîegi°î_evíts
(
≥î
, 
buf
);

2377  
PMIX_SUCCESS
;

2380 i‡(
PMIX_NOTIFY_CMD
 =
cmd
) {

2381 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2382 
rc
 = 
	`pmix_£rvî_evít_ªcvd_‰om_˛õ¡
(
≥î
, 
buf
, 
nŸifyîr‹_cbfunc
, 
cd
);

2383  
rc
;

2386 i‡(
PMIX_QUERY_CMD
 =
cmd
) {

2387 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2388 
rc
 = 
	`pmix_£rvî_quîy
(
≥î
, 
buf
, 
quîy_cbfunc
, 
cd
);

2389  
rc
;

2392 i‡(
PMIX_LOG_CMD
 =
cmd
) {

2393 
	`PMIX_PEER_CADDY
(
cd
, 
≥î
, 
èg
);

2394 
rc
 = 
	`pmix_£rvî_log
(
≥î
, 
buf
, 
›_cbfunc
, 
cd
);

2395  
rc
;

2398  
PMIX_ERR_NOT_SUPPORTED
;

2399 
	}
}

2401 
	$£rvî_mesßge_h™dÀr
(
pmix_≥î_t
 *
¥
, 
pmix_usock_hdr_t
 *
hdr
,

2402 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

2404 
pmix_≥î_t
 *
≥î
 = (pmix_≥î_t*)
¥
;

2405 
pmix_buf„r_t
 *
ª∂y
;

2406 
pmix_°©us_t
 
rc
;

2408 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

2410 
≥î
->
öfo
->
≈å
->
n•a˚
,

2411 
≥î
->
öfo
->
ønk
,Öìr->
sd
);

2413 
rc
 = 
	`£rvî_swôchy¨d
(
≥î
, 
hdr
->
èg
, 
buf
);

2415 i‡(
PMIX_SUCCESS
 !
rc
) {

2416 
ª∂y
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

2417 
pmix_b‰›
.
	`∑ck
(
ª∂y
, &
rc
, 1, 
PMIX_STATUS
);

2418 
	`PMIX_SERVER_QUEUE_REPLY
(
≥î
, 
hdr
->
èg
, 
ª∂y
);

2420 
	}
}

2422 
ölöe
 
	$_my_˛õ¡
(c⁄° *
n•a˚
, 
pmix_ønk_t
 
ønk
)

2424 
pmix_≥î_t
 *
≥î
;

2425 
i
;

2426 
loˇl
 = 0;

2428 
i
 = 0; i < 
pmix_£rvî_globÆs
.
˛õ¡s
.
size
; i++) {

2429 i‡(
NULL
 !(
≥î
 = (
pmix_≥î_t
 *)
	`pmix_poöãr_¨øy_gë_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
i
))) {

2430 i‡(0 =
	`°rcmp
(
≥î
->
öfo
->
≈å
->
n•a˚
,Ç•a˚Ë&&Öìr->öfo->
ønk
 ==Ñank) {

2431 
loˇl
 = 1;

2437  
loˇl
;

2438 
	}
}

	@server/pmix_server_get.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

22 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

24 
	~<pmix_£rvî.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ö˛udê
PMIX_EVENT_HEADER


48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/ouçut.h
"

53 
	~"§c/utû/pmix_ívú⁄.h
"

54 
	~"§c/usock/usock.h
"

55 
	~"§c/£c/pmix_£c.h
"

56 #i‡
deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

57 
	~"§c/d°‹e/pmix_d°‹e.h
"

60 
	~"pmix_£rvî_›s.h
"

62 
pmix_£rvî_moduÀ_t
 
pmix_ho°_£rvî
;

65 
pmix_obje˘_t
 
	msu≥r
;

66 
pmix_evít_t
 
	mev
;

67 
pmix_°©us_t
 
	m°©us
;

68 c⁄° *
	md©a
;

69 
size_t
 
	mnd©a
;

70 
pmix_dmdx_loˇl_t
 *
	mlcd
;

71 
pmix_ªÀa£_cbfunc_t
 
	mªlcbfunc
;

72 *
	mcbd©a
;

73 } 
	tpmix_dmdx_ª∂y_ˇddy_t
;

74 
	$dcd_c⁄
(
pmix_dmdx_ª∂y_ˇddy_t
 *
p
)

76 
p
->
°©us
 = 
PMIX_ERROR
;

77 
p
->
nd©a
 = 0;

78 
p
->
lcd
 = 
NULL
;

79 
p
->
ªlcbfunc
 = 
NULL
;

80 
p
->
cbd©a
 = 
NULL
;

81 
	}
}

82 
PMIX_CLASS_INSTANCE
(
pmix_dmdx_ª∂y_ˇddy_t
,

83 
pmix_obje˘_t
, 
dcd_c⁄
, 
NULL
);

86 
dmdx_cbfunc
(
pmix_°©us_t
 
°©us
, c⁄° *
d©a
,

87 
size_t
 
nd©a
, *
cbd©a
,

88 
pmix_ªÀa£_cbfunc_t
 
ªl‚
, *
ªlcbd©a
);

89 
pmix_°©us_t
 
_ßtisfy_ªque°
(
pmix_n•a˚_t
 *
ns
, 
pmix_ønk_t
 
ønk
,

90 
pmix_£rvî_ˇddy_t
 *
cd
,

91 
pmix_modex_cbfunc_t
 
cbfunc
, *
cbd©a
, 
boﬁ
 *
sc›e
);

92 
pmix_°©us_t
 
¸óã_loˇl_åackî
(
n•a˚
[], 
pmix_ønk_t
 
ønk
,

93 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

94 
pmix_modex_cbfunc_t
 
cbfunc
,

95 *
cbd©a
,

96 
pmix_dmdx_loˇl_t
 **
lcd
);

102 
	$ªl‚
(*
cbd©a
)

104 *
d©a
 = (*)
cbd©a
;

105 i‡(
NULL
 !
d©a
) {

106 
	`‰ì
(
d©a
);

108 
	}
}

111 
pmix_°©us_t
 
	$pmix_£rvî_gë
(
pmix_buf„r_t
 *
buf
,

112 
pmix_modex_cbfunc_t
 
cbfunc
,

113 *
cbd©a
)

115 
pmix_£rvî_ˇddy_t
 *
cd
 = (pmix_£rvî_ˇddy_t*)
cbd©a
;

116 
öt32_t
 
˙t
;

117 
pmix_°©us_t
 
rc
;

118 
pmix_ønk_t
 
ønk
;

119 *
˝å
;

120 
n•a˚
[
PMIX_MAX_NSLEN
+1];

121 
pmix_n•a˚_t
 *
ns
, *
≈å
;

122 
pmix_öfo_t
 *
öfo
=
NULL
;

123 
size_t
 
nöfo
=0;

124 
pmix_dmdx_loˇl_t
 *
lcd
;

125 
boﬁ
 
loˇl
;

126 
boﬁ
 
loˇl⁄ly
 = 
Ál£
;

127 
pmix_buf„r_t
 
pbkt
;

128 
pmix_buf„r_t
 *
tbuf
;

129 *
d©a
;

130 
size_t
 
sz
, 
n
;

132 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

136 
	`mem£t
(
n•a˚
, 0, (nspace));

139 
˙t
 = 1;

140 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
˝å
, &
˙t
, 
PMIX_STRING
))) {

141 
	`PMIX_ERROR_LOG
(
rc
);

142  
rc
;

144 ()
	`°∫˝y
(
n•a˚
, 
˝å
, 
PMIX_MAX_NSLEN
);

145 
	`‰ì
(
˝å
);

146 
˙t
 = 1;

147 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ønk
, &
˙t
, 
PMIX_PROC_RANK
))) {

148 
	`PMIX_ERROR_LOG
(
rc
);

149  
rc
;

152 
˙t
 = 1;

153 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

154 
	`PMIX_ERROR_LOG
(
rc
);

155  
rc
;

157 i‡(0 < 
nöfo
) {

158 
	`PMIX_INFO_CREATE
(
öfo
, 
nöfo
);

159 
˙t
 = 
nöfo
;

160 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

161 
	`PMIX_ERROR_LOG
(
rc
);

162 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

163  
rc
;

168 
n
=0;Ç < 
nöfo
;Ç++) {

169 i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_IMMEDIATE
)) {

170 i‡(
PMIX_UNDEF
 =
öfo
[
n
].
vÆue
.
ty≥
 || info[n].vÆue.
d©a
.
Êag
) {

173 
loˇl⁄ly
 = 
åue
;

179 
≈å
 = 
NULL
;

180 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

181 i‡(0 =
	`°rcmp
(
n•a˚
, 
ns
->nspace)) {

182 
≈å
 = 
ns
;

187 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

189 
pmix_globÆs
.
myid
.
n•a˚
,

190 
pmix_globÆs
.
myid
.
ønk
, 
n•a˚
,Ñank,

191 
cd
->
≥î
->
öfo
->
≈å
->
n•a˚
,

192 
cd
->
≥î
->
öfo
->
ønk
);

194 i‡(
NULL
 =
≈å
 || NULL =≈å->
£rvî
) {

195 i‡(
loˇl⁄ly
) {

196  
PMIX_ERR_NOT_FOUND
;

201 
rc
 = 
	`¸óã_loˇl_åackî
(
n•a˚
, 
ønk
, 
öfo
, 
nöfo
,

202 
cbfunc
, 
cbd©a
, &
lcd
);

208 if–
NULL
 !
pmix_ho°_£rvî
.
dúe˘_modex
 ){

209 
pmix_ho°_£rvî
.
	`dúe˘_modex
(&
lcd
->
¥oc
, 
öfo
, 
nöfo
, 
dmdx_cbfunc
,Ücd);

211  (
rc
 =
PMIX_ERR_NOT_FOUND
 ? 
PMIX_SUCCESS
 :Ñc);

216 i‡(
PMIX_RANK_WILDCARD
 =
ønk
) {

217 
	`PMIX_CONSTRUCT
(&
pbkt
, 
pmix_buf„r_t
);

218 
pmix_b‰›
.
	`∑ck
(&
pbkt
, &
ønk
, 1, 
PMIX_PROC_RANK
);

222 
tbuf
 = &
≈å
->
£rvî
->
job_öfo
;

223 
pmix_b‰›
.
	`∑ck
(&
pbkt
, &
tbuf
, 1, 
PMIX_BUFFER
);

224 
	`PMIX_UNLOAD_BUFFER
(&
pbkt
, 
d©a
, 
sz
);

225 
	`PMIX_DESTRUCT
(&
pbkt
);

226 
	`cbfunc
(
PMIX_SUCCESS
, 
d©a
, 
sz
, 
cbd©a
, 
ªl‚
, data);

227  
PMIX_SUCCESS
;

236 i‡(!
≈å
->
£rvî
->
Æl_ªgi°îed
) {

237 i‡(
loˇl⁄ly
) {

238  
PMIX_ERR_NOT_FOUND
;

242 
rc
 = 
	`¸óã_loˇl_åackî
(
n•a˚
, 
ønk
, 
öfo
, 
nöfo
,

243 
cbfunc
, 
cbd©a
, &
lcd
);

244  
rc
;

248 
rc
 = 
	`_ßtisfy_ªque°
(
≈å
, 
ønk
, 
cd
, 
cbfunc
, 
cbd©a
, &
loˇl
);

249 if–
PMIX_SUCCESS
 =
rc
 ){

251 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

252  
rc
;

257 i‡(
loˇl⁄ly
) {

258  
PMIX_ERR_NOT_FOUND
;

263 
rc
 = 
	`¸óã_loˇl_åackî
(
n•a˚
, 
ønk
, 
öfo
, 
nöfo
,

264 
cbfunc
, 
cbd©a
, &
lcd
);

265 i‡(
PMIX_SUCCESS
 =
rc
) {

269  
PMIX_SUCCESS
;

271 i‡(
PMIX_ERR_NOT_FOUND
 !
rc
 || 
NULL
 =
lcd
) {

273  
rc
;

281 i‡(
loˇl
) {

282  
PMIX_SUCCESS
;

288 i‡(
NULL
 !
pmix_ho°_£rvî
.
dúe˘_modex
) {

289 
rc
 = 
pmix_ho°_£rvî
.
	`dúe˘_modex
(&
lcd
->
¥oc
, 
öfo
, 
nöfo
, 
dmdx_cbfunc
,Ücd);

292 
	`cbfunc
(
PMIX_ERR_NOT_FOUND
, 
NULL
, 0, 
cbd©a
, NULL, NULL);

293 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

294 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
loˇl_ªqs
, &
lcd
->
su≥r
);

295 
	`PMIX_LIST_DESTRUCT
(&
lcd
->
loc_ªqs
);

296 
	`PMIX_RELEASE
(
lcd
);

297 
rc
 = 
PMIX_ERR_NOT_FOUND
;

300  
rc
;

301 
	}
}

303 
pmix_°©us_t
 
	$¸óã_loˇl_åackî
(
n•a˚
[], 
pmix_ønk_t
 
ønk
,

304 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

305 
pmix_modex_cbfunc_t
 
cbfunc
,

306 *
cbd©a
,

307 
pmix_dmdx_loˇl_t
 **
ld
)

309 
pmix_dmdx_loˇl_t
 *
lcd
, *
cd
;

310 
pmix_dmdx_ªque°_t
 *
ªq
;

311 
pmix_°©us_t
 
rc
;

314 *
ld
 = 
NULL
;

318 
lcd
 = 
NULL
;

319 
	`PMIX_LIST_FOREACH
(
cd
, &
pmix_£rvî_globÆs
.
loˇl_ªqs
, 
pmix_dmdx_loˇl_t
) {

320 i‡(0 !
	`°∫cmp
(
n•a˚
, 
cd
->
¥oc
.n•a˚, 
PMIX_MAX_NSLEN
) ||

321 
ønk
 !
cd
->
¥oc
.rank ) {

324 
lcd
 = 
cd
;

327 i‡(
NULL
 !
lcd
) {

330 
rc
 = 
PMIX_SUCCESS
;

331 
com∂ëe
;

335 
lcd
 = 
	`PMIX_NEW
(
pmix_dmdx_loˇl_t
);

336 i‡(
NULL
 =
lcd
){

337 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

338  
PMIX_ERR_NOMEM
;

340 
	`°∫˝y
(
lcd
->
¥oc
.
n•a˚
,Ç•a˚, 
PMIX_MAX_NSLEN
);

341 
lcd
->
¥oc
.
ønk
 =Ñank;

342 
lcd
->
öfo
 = info;

343 
lcd
->
nöfo
 =Çinfo;

344 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
loˇl_ªqs
, &
lcd
->
su≥r
);

345 
rc
 = 
PMIX_ERR_NOT_FOUND
;

347 
com∂ëe
:

350 
ªq
 = 
	`PMIX_NEW
(
pmix_dmdx_ªque°_t
);

351 
ªq
->
cbfunc
 = cbfunc;

352 
ªq
->
cbd©a
 = cbdata;

353 
	`pmix_li°_≠≥nd
(&
lcd
->
loc_ªqs
, &
ªq
->
su≥r
);

354 *
ld
 = 
lcd
;

355  
rc
;

356 
	}
}

358 
	$pmix_≥ndög_n•a˚_ªque°s
(
pmix_n•a˚_t
 *
≈å
)

360 
pmix_dmdx_loˇl_t
 *
cd
, *
cd_√xt
;

366 
	`PMIX_LIST_FOREACH_SAFE
(
cd
, 
cd_√xt
, &
pmix_£rvî_globÆs
.
loˇl_ªqs
, 
pmix_dmdx_loˇl_t
) {

367 
pmix_ønk_öfo_t
 *
öfo
;

368 
boﬁ
 
found
 = 
Ál£
;

370 i‡(0 !
	`°∫cmp
(
≈å
->
n•a˚
, 
cd
->
¥oc
.n•a˚, 
PMIX_MAX_NSLEN
) ) {

374 
	`PMIX_LIST_FOREACH
(
öfo
, &
≈å
->
£rvî
->
ønks
, 
pmix_ønk_öfo_t
) {

375 i‡(
öfo
->
ønk
 =
cd
->
¥oc
.rank) {

376 
found
 = 
åue
;

383 if–!
found
 ){

384 if–
NULL
 !
pmix_ho°_£rvî
.
dúe˘_modex
 ){

385 
pmix_ho°_£rvî
.
	`dúe˘_modex
(&
cd
->
¥oc
, cd->
öfo
, cd->
nöfo
, 
dmdx_cbfunc
, cd);

387 
pmix_dmdx_ªque°_t
 *
ªq
, *
ªq_√xt
;

388 
	`PMIX_LIST_FOREACH_SAFE
(
ªq
, 
ªq_√xt
, &
cd
->
loc_ªqs
, 
pmix_dmdx_ªque°_t
) {

389 
ªq
->
	`cbfunc
(
PMIX_ERR_NOT_FOUND
, 
NULL
, 0,Ñeq->
cbd©a
, NULL, NULL);

390 
	`pmix_li°_ªmove_ôem
(&
cd
->
loc_ªqs
, &
ªq
->
su≥r
);

391 
	`PMIX_RELEASE
(
ªq
);

393 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
loˇl_ªqs
, &
cd
->
su≥r
);

394 
	`PMIX_RELEASE
(
cd
);

398 
	}
}

400 
pmix_°©us_t
 
	$_ßtisfy_ªque°
(
pmix_n•a˚_t
 *
≈å
, 
pmix_ønk_t
 
ønk
,

401 
pmix_£rvî_ˇddy_t
 *
cd
,

402 
pmix_modex_cbfunc_t
 
cbfunc
,

403 *
cbd©a
, 
boﬁ
 *
sc›e
)

405 
pmix_°©us_t
 
rc
;

406 
pmix_vÆue_t
 *
vÆ
;

407 *
d©a
;

408 
size_t
 
sz
;

409 
pmix_ønk_t
 
cur_ønk
;

410 
found
 = 0;

411 
pmix_buf„r_t
 
pbkt
, *
pb±r
;

412 *
œ°
;

413 
pmix_hash_èbÀ_t
 *
hts
[3];

414 
pmix_hash_èbÀ_t
 **
hçå
;

415 
pmix_ønk_öfo_t
 *
ùå
;

416 
boﬁ
 
loˇl
;

423 
	`mem£t
(
hts
, 0, (hts));

424 i‡(
PMIX_RANK_UNDEF
 =
ønk
) {

425 
loˇl
 = 
åue
;

426 
hts
[0] = &
≈å
->
£rvî
->
ªmŸe
;

427 
hts
[1] = &
≈å
->
£rvî
->
myloˇl
;

428 } i‡(
PMIX_RANK_WILDCARD
 =
ønk
) {

429 
hts
[0] = 
NULL
;

431 
loˇl
 = 
Ál£
;

432 
hts
[0] = &
≈å
->
£rvî
->
ªmŸe
;

433 
	`PMIX_LIST_FOREACH
(
ùå
, &
≈å
->
£rvî
->
ønks
, 
pmix_ønk_öfo_t
) {

434 i‡(
ùå
->
ønk
 ==Ñank) {

436 
hts
[0] = &
≈å
->
£rvî
->
myloˇl
;

437 
loˇl
 = 
åue
;

443 i‡(
NULL
 !
sc›e
) {

444 *
sc›e
 = 
loˇl
;

451 
hçå
 = 
hts
;

452 
	`PMIX_CONSTRUCT
(&
pbkt
, 
pmix_buf„r_t
);

456 i‡(
ønk
 =
PMIX_RANK_WILDCARD
 || (
NULL
 !
cd
 &&

457 0 !
	`°∫cmp
(
≈å
->
n•a˚
, 
cd
->
≥î
->
öfo
->≈å->n•a˚, 
PMIX_MAX_NSLEN
))) {

458 
cur_ønk
 = 
PMIX_RANK_WILDCARD
;

459 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
pbkt
, &
cur_ønk
, 1, 
PMIX_PROC_RANK
))) {

460 
	`PMIX_ERROR_LOG
(
rc
);

461 
	`PMIX_DESTRUCT
(&
pbkt
);

462 
	`cbfunc
(
rc
, 
NULL
, 0, 
cbd©a
, NULL, NULL);

463  
rc
;

467 
pb±r
 = &
≈å
->
£rvî
->
job_öfo
;

468 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
pbkt
, &
pb±r
, 1, 
PMIX_BUFFER
))) {

469 
	`PMIX_ERROR_LOG
(
rc
);

470 
	`PMIX_DESTRUCT
(&
pbkt
);

471 
	`cbfunc
(
rc
, 
NULL
, 0, 
cbd©a
, NULL, NULL);

472  
rc
;

474 i‡(
ønk
 =
PMIX_RANK_WILDCARD
) {

475 
found
++;

479 
NULL
 !*
hçå
) {

480 
cur_ønk
 = 
ønk
;

481 i‡(
PMIX_RANK_UNDEF
 =
ønk
) {

482 
rc
 = 
	`pmix_hash_„tch_by_key
(*
hçå
, "modex", &
cur_ønk
, &
vÆ
, &
œ°
);

484 
rc
 = 
	`pmix_hash_„tch
(*
hçå
, 
cur_ønk
, "modex", &
vÆ
);

486 
PMIX_SUCCESS
 =
rc
) {

487 i‡(
NULL
 !
vÆ
) {

488 #i‡
	`deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

489 
pmix_kvÆ_t
 *
kv
;

492 
kv
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

493 
kv
->
key
 = 
	`°rdup
("modex");

494 
kv
->
vÆue
 = (
pmix_vÆue_t
 *)
	`mÆloc
((pmix_value_t));

495 
rc
 = 
	`pmix_vÆue_x„r
(
kv
->
vÆue
, 
vÆ
);

496 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_d°‹e_°‹e
(
≈å
->
n•a˚
, 
cur_ønk
, 
kv
))) {

497 
	`PMIX_ERROR_LOG
(
rc
);

499 
	`PMIX_RELEASE
(
kv
);

501 
pmix_buf„r_t
 
x„r
, *
x±r
;

502 
pmix_b‰›
.
	`∑ck
(&
pbkt
, &
cur_ønk
, 1, 
PMIX_PROC_RANK
);

505 
	`PMIX_CONSTRUCT
(&
x„r
, 
pmix_buf„r_t
);

506 
x±r
 = &
x„r
;

507 
	`PMIX_LOAD_BUFFER
(&
x„r
, 
vÆ
->
d©a
.
bo
.
byãs
, vÆ->d©a.bo.
size
);

508 
pmix_b‰›
.
	`∑ck
(&
pbkt
, &
x±r
, 1, 
PMIX_BUFFER
);

509 
x„r
.
ba£_±r
 = 
NULL
;

510 
x„r
.
byãs_u£d
 = 0;

511 
	`PMIX_DESTRUCT
(&
x„r
);

513 
	`PMIX_VALUE_RELEASE
(
vÆ
);

514 
found
++;

516 i‡(
PMIX_RANK_UNDEF
 =
ønk
) {

517 
rc
 = 
	`pmix_hash_„tch_by_key
(*
hçå
, 
NULL
, &
cur_ønk
, &
vÆ
, &
œ°
);

522 
hçå
++;

524 
	`PMIX_UNLOAD_BUFFER
(&
pbkt
, 
d©a
, 
sz
);

525 
	`PMIX_DESTRUCT
(&
pbkt
);

527 i‡(
found
) {

529 
	`cbfunc
(
PMIX_SUCCESS
, 
d©a
, 
sz
, 
cbd©a
, 
ªl‚
, data);

530  
PMIX_SUCCESS
;

533  
PMIX_ERR_NOT_FOUND
;

534 
	}
}

537 
pmix_°©us_t
 
	$pmix_≥ndög_ªsﬁve
(
pmix_n•a˚_t
 *
≈å
, 
pmix_ønk_t
 
ønk
,

538 
pmix_°©us_t
 
°©us
, 
pmix_dmdx_loˇl_t
 *
lcd
)

540 
pmix_dmdx_loˇl_t
 *
cd
;

543 i‡(
NULL
 =
lcd
 && NULL !
≈å
) {

544 
	`PMIX_LIST_FOREACH
(
cd
, &
pmix_£rvî_globÆs
.
loˇl_ªqs
, 
pmix_dmdx_loˇl_t
) {

545 i‡(0 !
	`°∫cmp
(
≈å
->
n•a˚
, 
cd
->
¥oc
.n•a˚, 
PMIX_MAX_NSLEN
) ||

546 
ønk
 !
cd
->
¥oc
.rank) {

549 
lcd
 = 
cd
;

555 i‡(
NULL
 !
lcd
) {

556 
pmix_dmdx_ªque°_t
 *
ªq
;

558 i‡(
PMIX_SUCCESS
 !
°©us
){

560 
	`PMIX_LIST_FOREACH
(
ªq
, &
lcd
->
loc_ªqs
, 
pmix_dmdx_ªque°_t
) {

562 
ªq
->
	`cbfunc
(
°©us
, 
NULL
, 0,Ñeq->
cbd©a
, NULL, NULL);

564 } i‡(
NULL
 !
≈å
) {

567 
	`PMIX_LIST_FOREACH
(
ªq
, &
lcd
->
loc_ªqs
, 
pmix_dmdx_ªque°_t
) {

568 
pmix_°©us_t
 
rc
;

569 
rc
 = 
	`_ßtisfy_ªque°
(
≈å
, 
ønk
, 
NULL
, 
ªq
->
cbfunc
,Ñeq->
cbd©a
, NULL);

570 if–
PMIX_SUCCESS
 !
rc
 ){

572 
ªq
->
	`cbfunc
(
rc
, 
NULL
, 0,Ñeq->
cbd©a
, NULL, NULL);

577 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
loˇl_ªqs
, (
pmix_li°_ôem_t
*)
lcd
);

578 
	`PMIX_RELEASE
(
lcd
);

580  
PMIX_SUCCESS
;

581 
	}
}

584 
	$_¥o˚ss_dmdx_ª∂y
(
fd
, 
¨gs
, *
cbd©a
)

586 
pmix_dmdx_ª∂y_ˇddy_t
 *
ˇddy
 = (pmix_dmdx_ª∂y_ˇddy_à*)
cbd©a
;

587 
pmix_kvÆ_t
 *
kp
;

588 
pmix_n•a˚_t
 *
ns
, *
≈å
;

589 
pmix_°©us_t
 
rc
;

591 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

593 
__FILE__
, 
__LINE__
,

594 
ˇddy
->
lcd
->
¥oc
.
n•a˚
, caddy->lcd->¥oc.
ønk
);

597 
≈å
 = 
NULL
;

598 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

599 i‡(0 =
	`°rcmp
(
ˇddy
->
lcd
->
¥oc
.
n•a˚
, 
ns
->nspace)) {

600 
≈å
 = 
ns
;

605 i‡(
NULL
 =
≈å
) {

610 
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

611 ()
	`°∫˝y
(
≈å
->
n•a˚
, 
ˇddy
->
lcd
->
¥oc
.n•a˚, 
PMIX_MAX_NSLEN
);

612 
≈å
->
£rvî
 = 
	`PMIX_NEW
(
pmix_£rvî_n•a˚_t
);

613 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

623 i‡(
PMIX_SUCCESS
 =
ˇddy
->
°©us
) {

624 i‡(
ˇddy
->
lcd
->
¥oc
.
ønk
 =
PMIX_RANK_WILDCARD
) {

625 * 
whîe
 = 
	`mÆloc
(
ˇddy
->
nd©a
);

626 
	`mem˝y
(
whîe
, 
ˇddy
->
d©a
, caddy->
nd©a
);

627 
	`PMIX_LOAD_BUFFER
(&
≈å
->
£rvî
->
job_öfo
, 
whîe
, 
ˇddy
->
nd©a
);

629 
kp
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

630 
kp
->
key
 = 
	`°rdup
("modex");

631 
	`PMIX_VALUE_CREATE
(
kp
->
vÆue
, 1);

632 
kp
->
vÆue
->
ty≥
 = 
PMIX_BYTE_OBJECT
;

637 
kp
->
vÆue
->
d©a
.
bo
.
byãs
 = 
	`mÆloc
(
ˇddy
->
nd©a
);

638 
	`mem˝y
(
kp
->
vÆue
->
d©a
.
bo
.
byãs
, 
ˇddy
->d©a, caddy->
nd©a
);

639 
kp
->
vÆue
->
d©a
.
bo
.
size
 = 
ˇddy
->
nd©a
;

641 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
≈å
->
£rvî
->
ªmŸe
, 
ˇddy
->
lcd
->
¥oc
.
ønk
, 
kp
))) {

642 
	`PMIX_ERROR_LOG
(
rc
);

644 
	`PMIX_RELEASE
(
kp
);

649 
	`pmix_≥ndög_ªsﬁve
(
≈å
, 
ˇddy
->
lcd
->
¥oc
.
ønk
, caddy->
°©us
, caddy->lcd);

653 i‡(
NULL
 !
ˇddy
->
ªlcbfunc
) {

654 
ˇddy
->
	`ªlcbfunc
(ˇddy->
cbd©a
);

656 
	`PMIX_RELEASE
(
ˇddy
);

657 
	}
}

661 
	$dmdx_cbfunc
(
pmix_°©us_t
 
°©us
,

662 c⁄° *
d©a
, 
size_t
 
nd©a
, *
cbd©a
,

663 
pmix_ªÀa£_cbfunc_t
 
ªÀa£_‚
, *
ªÀa£_cbd©a
)

665 
pmix_dmdx_ª∂y_ˇddy_t
 *
ˇddy
;

670 
ˇddy
 = 
	`PMIX_NEW
(
pmix_dmdx_ª∂y_ˇddy_t
);

671 
ˇddy
->
°©us
 = status;

673 
ˇddy
->
ªlcbfunc
 = 
ªÀa£_‚
;

674 
ˇddy
->
cbd©a
 = 
ªÀa£_cbd©a
;

678 
ˇddy
->
d©a
 = data;

679 
ˇddy
->
nd©a
 =Çdata;

680 
ˇddy
->
lcd
 = (
pmix_dmdx_loˇl_t
 *)
cbd©a
;

681 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

683 
__FILE__
, 
__LINE__
,

684 
ˇddy
->
lcd
->
¥oc
.
n•a˚
, caddy->lcd->¥oc.
ønk
);

685 
	`evít_assign
(&
ˇddy
->
ev
, 
pmix_globÆs
.
evba£
, -1, 
EV_WRITE
,

686 
_¥o˚ss_dmdx_ª∂y
, 
ˇddy
);

687 
	`evít_¥i‹ôy_£t
(&
ˇddy
->
ev
, 0);

688 
	`evít_a˘ive
(&
ˇddy
->
ev
, 
EV_WRITE
, 1);

689 
	}
}

	@server/pmix_server_listener.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

22 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

24 
	~<pmix_£rvî.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 
	~<˘y≥.h
>

47 
	~<sys/°©.h
>

48 #ö˛udê
PMIX_EVENT_HEADER


49 
	~<±hªad.h
>

51 
	~"§c/˛ass/pmix_li°.h
"

52 
	~"§c/buf„r_›s/buf„r_›s.h
"

53 
	~"§c/utû/¨gv.h
"

54 
	~"§c/utû/îr‹.h
"

55 
	~"§c/utû/fd.h
"

56 
	~"§c/utû/gëid.h
"

57 
	~"§c/utû/ouçut.h
"

58 
	~"§c/utû/pmix_ívú⁄.h
"

59 
	~"§c/utû/°∫Àn.h
"

60 
	~"§c/usock/usock.h
"

61 
	~"§c/£c/pmix_£c.h
"

63 
	~"pmix_£rvî_›s.h
"

66 * 
li°í_thªad
(*
obj
);

67 
li°íî_cb
(
öcomög_sd
, *
cbd©a
);

68 
c⁄√˘i⁄_h™dÀr
(
öcomög_sd
, 
Êags
, * 
cbd©a
);

69 
toﬁ_h™dÀr
(
öcomög_sd
, 
Êags
, * 
cbd©a
);

70 *
	gmyvîsi⁄
 = 
NULL
;

71 
±hªad_t
 
	gígöe
;

76 
pmix_°©us_t
 
	$pmix_¥ï¨e_li°íög
(
pmix_li°íî_t
 *
…
, 
boﬁ
 *
√ed_li°íî
)

78 
Êags
;

79 
pmix_°©us_t
 
rc
;

80 
sockÀn_t
 
addæí
;

81 *
±r
;

82 
sockaddr_un
 *
addªss
 = &
…
->address;

85 
…
->
sockë
 = 
	`sockë
(
PF_UNIX
, 
SOCK_STREAM
, 0);

86 i‡(
…
->
sockë
 < 0) {

87 
	`¥ötf
("%s:%d sockë(ËÁûed\n", 
__FILE__
, 
__LINE__
);

88  
PMIX_ERROR
;

92 i‡(
	`pmix_fd_£t_˛€xec
(
…
->
sockë
Ë!
PMIX_SUCCESS
) {

93 
	`CLOSE_THE_SOCKET
(
…
->
sockë
);

94  
PMIX_ERROR
;

98 
addæí
 = (
sockaddr_un
);

99 i‡(
	`böd
(
…
->
sockë
, (
sockaddr
*)
addªss
, 
addæí
) < 0) {

100 
	`¥ötf
("%s:%d böd(ËÁûed\n", 
__FILE__
, 
__LINE__
);

101  
PMIX_ERROR
;

104 i‡(
…
->
ow√r_giví
) {

105 i‡(0 !
	`chown
(
addªss
->
sun_∑th
, 
…
->
ow√r
, -1)) {

106 
	`pmix_ouçut
(0, "CANNOT CHOWN sockë %s: %s", 
addªss
->
sun_∑th
, 
	`°ªº‹
 (
î∫o
));

107 
sockîr‹
;

110 i‡(
…
->
group_giví
) {

111 i‡(0 !
	`chown
(
addªss
->
sun_∑th
, -1, 
…
->
group
)) {

112 
	`pmix_ouçut
(0, "CANNOT CHOWN sockë %s: %s", 
addªss
->
sun_∑th
, 
	`°ªº‹
 (
î∫o
));

113 
sockîr‹
;

117 i‡(0 !
	`chmod
(
addªss
->
sun_∑th
, 
…
->
mode
)) {

118 
	`pmix_ouçut
(0, "CANNOT CHMOD sockë %s: %s", 
addªss
->
sun_∑th
, 
	`°ªº‹
 (
î∫o
));

119 
sockîr‹
;

123 i‡(
	`li°í
(
…
->
sockë
, 
SOMAXCONN
) < 0) {

124 
	`¥ötf
("%s:%dÜi°í(ËÁûed\n", 
__FILE__
, 
__LINE__
);

125 
sockîr‹
;

129 i‡((
Êags
 = 
	`f˙é
(
…
->
sockë
, 
F_GETFL
, 0)) < 0) {

130 
	`¥ötf
("%s:%d f˙é(F_GETFLËÁûed\n", 
__FILE__
, 
__LINE__
);

131 
sockîr‹
;

133 
Êags
 |
O_NONBLOCK
;

134 i‡(
	`f˙é
(
…
->
sockë
, 
F_SETFL
, 
Êags
) < 0) {

135 
	`¥ötf
("%s:%d f˙é(F_SETFLËÁûed\n", 
__FILE__
, 
__LINE__
);

136 
sockîr‹
;

139 i‡(
NULL
 =
myvîsi⁄
) {

142 
myvîsi⁄
 = 
	`°rdup
(
PMIX_VERSION
);

144 
±r
 = 
	`°rchr
(
myvîsi⁄
, '.');

145 i‡(
NULL
 !
±r
) {

146 ++
±r
;

148 i‡(
NULL
 !(
±r
 = 
	`°rchr
(ptr, '.'))) {

149 *
±r
 = '\0';

155 
rc
 = 
PMIX_ERR_NOT_SUPPORTED
;

156 i‡(
NULL
 !
pmix_ho°_£rvî
.
li°íî
) {

157 
rc
 = 
pmix_ho°_£rvî
.
	`li°íî
(
…
->
sockë
, 
li°íî_cb
, (*)lt);

160 i‡(
PMIX_SUCCESS
 !
rc
 && !
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
) {

161 *
√ed_li°íî
 = 
åue
;

164  
PMIX_SUCCESS
;

166 
sockîr‹
:

167 ()
	`˛o£
(
…
->
sockë
);

168 
…
->
sockë
 = -1;

169  
PMIX_ERROR
;

170 
	}
}

172 
pmix_°©us_t
 
	$pmix_°¨t_li°íög
() {

174 i‡(0 > 
	`pùe
(
pmix_£rvî_globÆs
.
°›_thªad
)) {

175 
	`PMIX_ERROR_LOG
(
PMIX_ERR_IN_ERRNO
);

176  
PMIX_ERR_OUT_OF_RESOURCE
;

180 i‡(
	`pmix_fd_£t_˛€xec
(
pmix_£rvî_globÆs
.
°›_thªad
[0]Ë!
PMIX_SUCCESS
 ||

181 
	`pmix_fd_£t_˛€xec
(
pmix_£rvî_globÆs
.
°›_thªad
[1]Ë!
PMIX_SUCCESS
) {

182 
	`PMIX_ERROR_LOG
(
PMIX_ERR_IN_ERRNO
);

183 
	`˛o£
(
pmix_£rvî_globÆs
.
°›_thªad
[0]);

184 
	`˛o£
(
pmix_£rvî_globÆs
.
°›_thªad
[1]);

185  
PMIX_ERR_OUT_OF_RESOURCE
;

188 
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
 = 
åue
;

189 i‡(0 > 
	`±hªad_¸óã
(&
ígöe
, 
NULL
, 
li°í_thªad
, NULL)) {

190 
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
 = 
Ál£
;

191  
PMIX_ERROR
;

194  
PMIX_SUCCESS
;

195 
	}
}

197 
	$pmix_°›_li°íög
()

199 
i
;

200 
pmix_li°íî_t
 *
…
;

202 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

205 i‡(!
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
) {

211 
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
 = 
Ál£
;

215 
i
=1;

216 i‡(0 > 
	`wrôe
(
pmix_£rvî_globÆs
.
°›_thªad
[1], &
i
, ())) {

220 
	`±hªad_joö
(
ígöe
, 
NULL
);

222 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

223 
	`CLOSE_THE_SOCKET
(
…
->
sockë
);

224 
…
->
sockë
 = -1;

226 
	}
}

228 * 
	$li°í_thªad
(*
obj
)

230 
rc
, 
max
, 
ac˚±ed_c⁄√˘i⁄s
;

231 
sockÀn_t
 
addæí
 = (
sockaddr_°‹age
);

232 
pmix_≥ndög_c⁄√˘i⁄_t
 *
≥ndög_c⁄√˘i⁄
;

233 
timevÆ
 
timeout
;

234 
fd_£t
 
ªadfds
;

235 
pmix_li°íî_t
 *
…
;

237 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

241 
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
) {

242 
	`FD_ZERO
(&
ªadfds
);

243 
max
 = -1;

244 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

245 
	`FD_SET
(
…
->
sockë
, &
ªadfds
);

246 
max
 = (
…
->
sockë
 > max) ?Üt->socket : max;

249 
	`FD_SET
(
pmix_£rvî_globÆs
.
°›_thªad
[0], &
ªadfds
);

250 
max
 = (
pmix_£rvî_globÆs
.
°›_thªad
[0] > max) ?Ömix_server_globals.stop_thread[0] : max;

253 
timeout
.
tv_£c
 = 2;

254 
timeout
.
tv_u£c
 = 0;

259 
rc
 = 
	`£À˘
(
max
 + 1, &
ªadfds
, 
NULL
, NULL, &
timeout
);

260 i‡(!
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
) {

262 
	`˛o£
(
pmix_£rvî_globÆs
.
°›_thªad
[0]);

263 
	`˛o£
(
pmix_£rvî_globÆs
.
°›_thªad
[1]);

264  
NULL
;

266 i‡(
rc
 < 0) {

275 
ac˚±ed_c⁄√˘i⁄s
 = 0;

276 
	`PMIX_LIST_FOREACH
(
…
, &
pmix_£rvî_globÆs
.
li°íîs
, 
pmix_li°íî_t
) {

284 i‡(0 =
	`FD_ISSET
(
…
->
sockë
, &
ªadfds
)) {

296 
≥ndög_c⁄√˘i⁄
 = 
	`PMIX_NEW
(
pmix_≥ndög_c⁄√˘i⁄_t
);

297 
≥ndög_c⁄√˘i⁄
->
¥Ÿocﬁ
 = 
…
->protocol;

298 i‡(
PMIX_PROTOCOL_TOOL
 =
…
->
¥Ÿocﬁ
) {

299 
	`evít_assign
(&
≥ndög_c⁄√˘i⁄
->
ev
, 
pmix_globÆs
.
evba£
, -1,

300 
EV_WRITE
, 
toﬁ_h™dÀr
, 
≥ndög_c⁄√˘i⁄
);

302 
	`evít_assign
(&
≥ndög_c⁄√˘i⁄
->
ev
, 
pmix_globÆs
.
evba£
, -1,

303 
EV_WRITE
, 
c⁄√˘i⁄_h™dÀr
, 
≥ndög_c⁄√˘i⁄
);

305 
≥ndög_c⁄√˘i⁄
->
sd
 = 
	`ac˚±
(
…
->
sockë
,

306 (
sockaddr
*)&(
≥ndög_c⁄√˘i⁄
->
addr
),

307 &
addæí
);

308 i‡(
≥ndög_c⁄√˘i⁄
->
sd
 < 0) {

309 
	`PMIX_RELEASE
(
≥ndög_c⁄√˘i⁄
);

310 i‡(
pmix_sockë_î∫o
 !
EAGAIN
 ||

311 
pmix_sockë_î∫o
 !
EWOULDBLOCK
) {

312 i‡(
EMFILE
 =
pmix_sockë_î∫o
 ||

313 
ENOBUFS
 =
pmix_sockë_î∫o
 ||

314 
ENOMEM
 =
pmix_sockë_î∫o
) {

315 
	`PMIX_ERROR_LOG
(
PMIX_ERR_OUT_OF_RESOURCE
);

316 } i‡(
EINVAL
 =
pmix_sockë_î∫o
 ||

317 
EINTR
 =
pmix_sockë_î∫o
) {

319 
d⁄e
;

320 } i‡(
ECONNABORTED
 =
pmix_sockë_î∫o
) {

324 
	`pmix_ouçut
(0, "listen_thread:áccept() failed: %s (%d).",

325 
	`°ªº‹
(
pmix_sockë_î∫o
),Ömix_socket_errno);

327 
d⁄e
;

332 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

334 
≥ndög_c⁄√˘i⁄
->
sd
, 
pmix_sockë_î∫o
);

336 
	`evít_a˘ive
(&
≥ndög_c⁄√˘i⁄
->
ev
, 
EV_WRITE
, 1);

337 
ac˚±ed_c⁄√˘i⁄s
++;

339 } 
ac˚±ed_c⁄√˘i⁄s
 > 0);

342 
d⁄e
:

343 
pmix_£rvî_globÆs
.
li°í_thªad_a˘ive
 = 
Ál£
;

344  
NULL
;

345 
	}
}

347 
	$li°íî_cb
(
öcomög_sd
, *
cbd©a
)

349 
pmix_≥ndög_c⁄√˘i⁄_t
 *
≥ndög_c⁄√˘i⁄
;

350 
pmix_li°íî_t
 *
…
 = (pmix_li°íî_t*)
cbd©a
;

353 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

355 
öcomög_sd
);

356 
≥ndög_c⁄√˘i⁄
 = 
	`PMIX_NEW
(
pmix_≥ndög_c⁄√˘i⁄_t
);

357 
≥ndög_c⁄√˘i⁄
->
sd
 = 
öcomög_sd
;

358 
≥ndög_c⁄√˘i⁄
->
¥Ÿocﬁ
 = 
…
->protocol;

359 
	`evít_assign
(&
≥ndög_c⁄√˘i⁄
->
ev
, 
pmix_globÆs
.
evba£
, -1,

360 
EV_WRITE
, 
c⁄√˘i⁄_h™dÀr
, 
≥ndög_c⁄√˘i⁄
);

361 
	`evít_a˘ive
(&
≥ndög_c⁄√˘i⁄
->
ev
, 
EV_WRITE
, 1);

362 
	}
}

365 
	$¥o˚ss_cbfunc
(
sd
, 
¨gs
, *
cbd©a
)

367 
pmix_£tup_ˇddy_t
 *
cd
 = (pmix_£tup_ˇddy_t*)
cbd©a
;

368 
pmix_≥ndög_c⁄√˘i⁄_t
 *
≤d
 = (pmix_≥ndög_c⁄√˘i⁄_t*)
cd
->
cbd©a
;

369 
pmix_n•a˚_t
 *
≈å
;

370 
pmix_ønk_öfo_t
 *
öfo
;

371 
rc
;

374 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, (*)&
cd
->
°©us
, (
pmix_°©us_t
)))) {

375 
	`PMIX_ERROR_LOG
(
rc
);

376 
	`CLOSE_THE_SOCKET
(
≤d
->
sd
);

377 
	`PMIX_RELEASE
(
≤d
);

378 
	`PMIX_RELEASE
(
cd
);

383 i‡(
PMIX_SUCCESS
 !
cd
->
°©us
) {

384 
	`PMIX_RELEASE
(
≤d
);

385 
	`PMIX_RELEASE
(
cd
);

390 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, 
cd
->
¥oc
.
n•a˚
, 
PMIX_MAX_NSLEN
+1))) {

391 
	`PMIX_ERROR_LOG
(
rc
);

392 
	`CLOSE_THE_SOCKET
(
≤d
->
sd
);

393 
	`PMIX_RELEASE
(
≤d
);

394 
	`PMIX_RELEASE
(
cd
);

399 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, 
pmix_globÆs
.
myid
.
n•a˚
, 
PMIX_MAX_NSLEN
+1))) {

400 
	`PMIX_ERROR_LOG
(
rc
);

401 
	`CLOSE_THE_SOCKET
(
≤d
->
sd
);

402 
	`PMIX_RELEASE
(
≤d
);

403 
	`PMIX_RELEASE
(
cd
);

408 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, (*)&
pmix_globÆs
.
myid
.
ønk
, ()))) {

409 
	`PMIX_ERROR_LOG
(
rc
);

410 
	`CLOSE_THE_SOCKET
(
≤d
->
sd
);

411 
	`PMIX_RELEASE
(
≤d
);

412 
	`PMIX_RELEASE
(
cd
);

417 
	`pmix_usock_£t_n⁄blockög
(
≤d
->
sd
);

420 
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

421 ()
	`°∫˝y
(
≈å
->
n•a˚
, 
cd
->
¥oc
.n•a˚, 
PMIX_MAX_NSLEN
);

422 
≈å
->
£rvî
 = 
	`PMIX_NEW
(
pmix_£rvî_n•a˚_t
);

423 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

425 
öfo
 = 
	`PMIX_NEW
(
pmix_ønk_öfo_t
);

426 
	`PMIX_RETAIN
(
≈å
);

427 
öfo
->
≈å
 =Çptr;

428 
öfo
->
ønk
 = 0;

429 
	`pmix_li°_≠≥nd
(&
≈å
->
£rvî
->
ønks
, &
öfo
->
su≥r
);

432 
pmix_≥î_t
 *
≥î
 = 
	`PMIX_NEW
(pmix_peer_t);

433 
	`PMIX_RETAIN
(
öfo
);

434 
≥î
->
öfo
 = info;

435 
≥î
->
¥oc_˙t
 = 1;

436 
≥î
->
sd
 = 
≤d
 -> sd;

437 i‡(0 > (
≥î
->
ödex
 = 
	`pmix_poöãr_¨øy_add
(&
pmix_£rvî_globÆs
.
˛õ¡s
,Öeer))) {

438 
	`PMIX_RELEASE
(
≤d
);

439 
	`PMIX_RELEASE
(
cd
);

440 
	`PMIX_RELEASE
(
≥î
);

441 
	`pmix_li°_ªmove_ôem
(&
pmix_globÆs
.
n•a˚s
, &
≈å
->
su≥r
);

442 
	`PMIX_RELEASE
(
≈å
);

448 
	`evít_assign
(&
≥î
->
ªcv_evít
, 
pmix_globÆs
.
evba£
, 
≤d
->
sd
,

449 
EV_READ
|
EV_PERSIST
, 
pmix_usock_ªcv_h™dÀr
, 
≥î
);

450 
	`evít_add
(&
≥î
->
ªcv_evít
, 
NULL
);

451 
≥î
->
ªcv_ev_a˘ive
 = 
åue
;

452 
	`evít_assign
(&
≥î
->
£nd_evít
, 
pmix_globÆs
.
evba£
, 
≤d
->
sd
,

453 
EV_WRITE
|
EV_PERSIST
, 
pmix_usock_£nd_h™dÀr
, 
≥î
);

454 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

456 
≥î
->
öfo
->
≈å
->
n•a˚
,Öìr->öfo->
ønk
,Öìr->
sd
);

457 
	`PMIX_RELEASE
(
≤d
);

458 
	`PMIX_RELEASE
(
cd
);

459 
	}
}

463 
	$˙˘_cbfunc
(
pmix_°©us_t
 
°©us
,

464 
pmix_¥oc_t
 *
¥oc
, *
cbd©a
)

466 
pmix_£tup_ˇddy_t
 *
cd
;

469 
cd
 = 
	`PMIX_NEW
(
pmix_£tup_ˇddy_t
);

470 
cd
->
°©us
 = status;

471 ()
	`°∫˝y
(
cd
->
¥oc
.
n•a˚
,Öroc->n•a˚, 
PMIX_MAX_NSLEN
);

472 
cd
->
cbd©a
 = cbdata;

473 
	`PMIX_THREADSHIFT
(
cd
, 
¥o˚ss_cbfunc
);

474 
	}
}

479 
pmix_°©us_t
 
	$∑r£_c⁄√˘_ack
 (*
msg
,

480 
pmix_li°íî_¥Ÿocﬁ_t
 
¥Ÿocﬁ
,

481 
Àn
,

482 **
n•a˚
, 
pmix_ønk_t
 *
ønk
,

483 **
vîsi⁄
, **
¸ed
)

485 
msgÀn
;

487 i‡(
PMIX_PROTOCOL_TOOL
 !
¥Ÿocﬁ
) {

488 
	`PMIX_STRNLEN
(
msgÀn
, 
msg
, 
Àn
);

489 i‡(
msgÀn
 < 
Àn
) {

490 *
n•a˚
 = 
msg
;

491 
msg
 +
	`°æí
(*
n•a˚
) + 1;

492 
Àn
 -
	`°æí
(*
n•a˚
) + 1;

494  
PMIX_ERR_BAD_PARAM
;

497 
	`PMIX_STRNLEN
(
msgÀn
, 
msg
, 
Àn
);

498 i‡(
msgÀn
 <
Àn
) {

499 
	`mem˝y
(
ønk
, 
msg
, (
pmix_ønk_t
));

500 
msg
 +(
pmix_ønk_t
);

501 
Àn
 -(
pmix_ønk_t
);

503  
PMIX_ERR_BAD_PARAM
;

507 
	`PMIX_STRNLEN
(
msgÀn
, 
msg
, 
Àn
);

508 i‡(
msgÀn
 < 
Àn
) {

509 *
vîsi⁄
 = 
msg
;

510 
msg
 +
	`°æí
(*
vîsi⁄
) + 1;

511 
Àn
 -
	`°æí
(*
vîsi⁄
) + 1;

513  
PMIX_ERR_BAD_PARAM
;

516 
	`PMIX_STRNLEN
(
msgÀn
, 
msg
, 
Àn
);

517 i‡(
msgÀn
 < 
Àn
)

518 *
¸ed
 = 
msg
;

520 *
¸ed
 = 
NULL
;

523  
PMIX_SUCCESS
;

524 
	}
}

529 
pmix_°©us_t
 
	$pmix_£rvî_authítiˇã
(
pmix_≥ndög_c⁄√˘i⁄_t
 *
≤d
,

530 
pmix_ønk_t
 *
out_ønk
,

531 
pmix_≥î_t
 **
≥î
)

533 *
msg
, *
n•a˚
, *
vîsi⁄
, *
¸ed
;

534 
pmix_°©us_t
 
rc
;

535 
pmix_ønk_t
 
ønk
=
PMIX_RANK_UNDEF
;

536 
pmix_usock_hdr_t
 
hdr
;

537 
pmix_n•a˚_t
 *
≈å
, *
tmp
;

538 
pmix_ønk_öfo_t
 *
öfo
;

539 
pmix_≥î_t
 *
pßve
 = 
NULL
;

540 
boﬁ
 
found
;

541 
pmix_¥oc_t
 
¥oc
;

542 
uid_t
 
uid
;

543 
gid_t
 
gid
;

545 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

547 
≤d
->
sd
);

550 
	`mem£t
(&
hdr
, 0, (
pmix_usock_hdr_t
));

551 i‡(
NULL
 !
≥î
) {

552 *
≥î
 = 
NULL
;

556 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_ªcv_blockög
(
≤d
->
sd
, (*)&
hdr
, (
pmix_usock_hdr_t
)))) {

557  
rc
;

563 i‡(
PMIX_MAX_CRED_SIZE
 < 
hdr
.
nbyãs
) {

564  
PMIX_ERR_BAD_PARAM
;

566 i‡(
NULL
 =(
msg
 = (*)
	`mÆloc
(
hdr
.
nbyãs
))) {

567  
PMIX_ERR_OUT_OF_RESOURCE
;

569 i‡(
PMIX_SUCCESS
 !
	`pmix_usock_ªcv_blockög
(
≤d
->
sd
, 
msg
, 
hdr
.
nbyãs
)) {

571 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

573 
≤d
->
sd
);

574 
	`‰ì
(
msg
);

575  
PMIX_ERR_UNREACH
;

577 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`∑r£_c⁄√˘_ack
(
msg
, 
≤d
->
¥Ÿocﬁ
, 
hdr
.
nbyãs
, &
n•a˚
,

578 &
ønk
, &
vîsi⁄
, &
¸ed
))) {

579 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

580 "îr‹Ö¨sög c⁄√˘-ack from clõ¡ ON SOCKET %d", 
≤d
->
sd
);

581 
	`‰ì
(
msg
);

582  
rc
;

587 i‡(
PMIX_PROTOCOL_TOOL
 !
≤d
->
¥Ÿocﬁ
) {

588 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

590 
n•a˚
, 
ønk
, 
vîsi⁄
);

598 
≈å
 = 
NULL
;

599 
	`PMIX_LIST_FOREACH
(
tmp
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

600 i‡(0 =
	`°rcmp
(
tmp
->
n•a˚
,Çspace)) {

601 
≈å
 = 
tmp
;

605 i‡(
NULL
 =
≈å
) {

607 
	`‰ì
(
msg
);

609 
rc
 = 
PMIX_ERR_NOT_FOUND
;

610 
îr‹
;

614 
öfo
 = 
NULL
;

615 
found
 = 
Ál£
;

616 
	`PMIX_LIST_FOREACH
(
öfo
, &
≈å
->
£rvî
->
ønks
, 
pmix_ønk_öfo_t
) {

617 i‡(
öfo
->
ønk
 ==Ñank) {

618 
found
 = 
åue
;

622 i‡(!
found
) {

624 
	`‰ì
(
msg
);

626 
rc
 = 
PMIX_ERR_NOT_FOUND
;

627 
îr‹
;

629 *
out_ønk
 = 
ønk
;

633 
pßve
 = 
	`PMIX_NEW
(
pmix_≥î_t
);

634 
	`PMIX_RETAIN
(
öfo
);

635 
pßve
->
öfo
 = info;

636 
öfo
->
¥oc_˙t
++;

637 
pßve
->
sd
 = 
≤d
->sd;

638 i‡(0 > (
pßve
->
ödex
 = 
	`pmix_poöãr_¨øy_add
(&
pmix_£rvî_globÆs
.
˛õ¡s
,Ösave))) {

639 
	`‰ì
(
msg
);

640 
	`PMIX_RELEASE
(
pßve
);

642  
PMIX_ERR_OUT_OF_RESOURCE
;

645 i‡(
NULL
 !
pmix_£c
.
vÆid©e_¸ed
) {

646 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_£c
.
	`vÆid©e_¸ed
(
pßve
, 
¸ed
))) {

647 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

649 
	`‰ì
(
msg
);

650 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
pßve
->
ödex
, 
NULL
);

651 
	`PMIX_RELEASE
(
pßve
);

653 
îr‹
;

655 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

659 
	`‰ì
(
msg
);

662 i‡(
NULL
 !
pmix_£c
.
£rvî_h™dshake
) {

663 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

665 
rc
 = 
PMIX_ERR_READY_FOR_HANDSHAKE
;

666 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, (*)&rc, ()))) {

667 
	`PMIX_ERROR_LOG
(
rc
);

668 i‡(
NULL
 !
pßve
) {

669 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
pßve
->
ödex
, 
NULL
);

670 
	`PMIX_RELEASE
(
pßve
);

672  
rc
;

674 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_£c
.
	`£rvî_h™dshake
(
pßve
))) {

675 
	`PMIX_ERROR_LOG
(
rc
);

676 i‡(
NULL
 !
pßve
) {

677 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
pßve
->
ödex
, 
NULL
);

678 
	`PMIX_RELEASE
(
pßve
);

680  
rc
;

682 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

686 
rc
 = 
PMIX_SUCCESS
;

687 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, (*)&rc, ()))) {

688 
	`PMIX_ERROR_LOG
(
rc
);

689 i‡(
NULL
 !
pßve
) {

690 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
pßve
->
ödex
, 
NULL
);

691 
	`PMIX_RELEASE
(
pßve
);

693  
rc
;

698 i‡(
PMIX_PROTOCOL_TOOL
 !
≤d
->
¥Ÿocﬁ
) {

700 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, (*)&
pßve
->
ödex
, ()))) {

701 
	`PMIX_ERROR_LOG
(
rc
);

702 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
, 
pßve
->
ödex
, 
NULL
);

703 
	`PMIX_RELEASE
(
pßve
);

704  
rc
;

707 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

710 *
≥î
 = 
pßve
;

712 i‡(
NULL
 !
pmix_ho°_£rvî
.
˛õ¡_c⁄√˘ed
) {

713 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
pßve
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

714 
¥oc
.
ønk
 = 
pßve
->
öfo
->rank;

715 
rc
 = 
pmix_ho°_£rvî
.
	`˛õ¡_c⁄√˘ed
(&
¥oc
, 
pßve
->
öfo
->
£rvî_obje˘
,

716 
NULL
, NULL);

717 i‡(
PMIX_SUCCESS
 !
rc
) {

718 
	`PMIX_ERROR_LOG
(
rc
);

724 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_utû_gëid
(
≤d
->
sd
, &
uid
, &
gid
))) {

725  
rc
;

729 
≤d
->
nöfo
 = 2;

730 
	`PMIX_INFO_CREATE
(
≤d
->
öfo
,Önd->
nöfo
);

731 ()
	`°∫˝y
(
≤d
->
öfo
[0].
key
, 
PMIX_USERID
, 
PMIX_MAX_KEYLEN
);

732 
≤d
->
öfo
[0].
vÆue
.
ty≥
 = 
PMIX_UINT32
;

733 
≤d
->
öfo
[0].
vÆue
.
d©a
.
uöt32
 = 
uid
;

734 ()
	`°∫˝y
(
≤d
->
öfo
[1].
key
, 
PMIX_GRPID
, 
PMIX_MAX_KEYLEN
);

735 
≤d
->
öfo
[0].
vÆue
.
ty≥
 = 
PMIX_UINT32
;

736 
≤d
->
öfo
[0].
vÆue
.
d©a
.
uöt32
 = 
gid
;

739 
pmix_ho°_£rvî
.
	`toﬁ_c⁄√˘ed
(
≤d
->
öfo
,Önd->
nöfo
, 
˙˘_cbfunc
,Önd);

740  
PMIX_ERR_OPERATION_IN_PROGRESS
;

742  
rc
;

744 
îr‹
:

746 i‡(
PMIX_SUCCESS
 !
	`pmix_usock_£nd_blockög
(
≤d
->
sd
, (*)&
rc
, ())) {

747 
	`PMIX_ERROR_LOG
(
rc
);

749  
rc
;

750 
	}
}

755 
	$c⁄√˘i⁄_h™dÀr
(
sd
, 
Êags
, * 
cbd©a
)

757 
pmix_≥ndög_c⁄√˘i⁄_t
 *
≤d
 = (pmix_≥ndög_c⁄√˘i⁄_t*)
cbd©a
;

758 
pmix_≥î_t
 *
≥î
;

759 
pmix_ønk_t
 
ønk
;

760 
pmix_°©us_t
 
°©us
;

761 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

763 
≤d
->
sd
);

766 
	`pmix_usock_£t_blockög
(
≤d
->
sd
);

772 i‡(
PMIX_SUCCESS
 !(
°©us
 = 
	`pmix_£rvî_authítiˇã
(
≤d
, &
ønk
, &
≥î
))) {

773 i‡(
PMIX_ERR_OPERATION_IN_PROGRESS
 !
°©us
) {

774 
	`CLOSE_THE_SOCKET
(
≤d
->
sd
);

779 
	`pmix_usock_£t_n⁄blockög
(
≤d
->
sd
);

782 
	`evít_assign
(&
≥î
->
ªcv_evít
, 
pmix_globÆs
.
evba£
, 
≤d
->
sd
,

783 
EV_READ
|
EV_PERSIST
, 
pmix_usock_ªcv_h™dÀr
, 
≥î
);

784 
	`evít_add
(&
≥î
->
ªcv_evít
, 
NULL
);

785 
≥î
->
ªcv_ev_a˘ive
 = 
åue
;

786 
	`evít_assign
(&
≥î
->
£nd_evít
, 
pmix_globÆs
.
evba£
, 
≤d
->
sd
,

787 
EV_WRITE
|
EV_PERSIST
, 
pmix_usock_£nd_h™dÀr
, 
≥î
);

788 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

790 
≥î
->
öfo
->
≈å
->
n•a˚
,Öìr->öfo->
ønk
,Öìr->
sd
);

791 
	`PMIX_RELEASE
(
≤d
);

792 
	}
}

797 
	$toﬁ_h™dÀr
(
sd
, 
Êags
, * 
cbd©a
)

799 
pmix_≥ndög_c⁄√˘i⁄_t
 *
≤d
 = (pmix_≥ndög_c⁄√˘i⁄_t*)
cbd©a
;

801 
	`pmix_ouçut_vîbo£
(1, 
pmix_globÆs
.
debug_ouçut
,

803 
≤d
->
sd
);

806 i‡(
NULL
 =
pmix_ho°_£rvî
.
toﬁ_c⁄√˘ed
) {

807 
	`CLOSE_THE_SOCKET
(
≤d
->
sd
);

808 
	`PMIX_RELEASE
(
≤d
);

812 
	`pmix_usock_£t_blockög
(
≤d
->
sd
);

815 i‡(
PMIX_ERR_OPERATION_IN_PROGRESS
 !
	`pmix_£rvî_authítiˇã
(
≤d
, 
NULL
, NULL)) {

816 
	`CLOSE_THE_SOCKET
(
≤d
->
sd
);

817 
	`PMIX_RELEASE
(
≤d
);

819 
	}
}

	@server/pmix_server_ops.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

22 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

24 
	~<pmix_£rvî.h
>

25 
	~"§c/ö˛ude/pmix_globÆs.h
"

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 
	~<f˙é.h
>

31 #ifde‡
HAVE_UNISTD_H


32 
	~<uni°d.h
>

34 #ifde‡
HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 #ifde‡
HAVE_SYS_UN_H


38 
	~<sys/un.h
>

40 #ifde‡
HAVE_SYS_UIO_H


41 
	~<sys/uio.h
>

43 #ifde‡
HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ö˛udê
PMIX_EVENT_HEADER


48 
	~"§c/˛ass/pmix_li°.h
"

49 
	~"§c/buf„r_›s/buf„r_›s.h
"

50 
	~"§c/utû/¨gv.h
"

51 
	~"§c/utû/îr‹.h
"

52 
	~"§c/utû/ouçut.h
"

53 
	~"§c/utû/pmix_ívú⁄.h
"

54 
	~"§c/usock/usock.h
"

55 
	~"§c/£c/pmix_£c.h
"

57 
	~"pmix_£rvî_›s.h
"

59 
pmix_£rvî_moduÀ_t
 
	gpmix_ho°_£rvî
 = {0};

61 
pmix_°©us_t
 
	$pmix_£rvî_ab‹t
(
pmix_≥î_t
 *
≥î
, 
pmix_buf„r_t
 *
buf
,

62 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

64 
öt32_t
 
˙t
;

65 
pmix_°©us_t
 
rc
;

66 
°©us
;

67 *
msg
;

68 
size_t
 
≈rocs
;

69 
pmix_¥oc_t
 *
¥ocs
 = 
NULL
;

70 
pmix_¥oc_t
 
¥oc
;

72 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
, "recvd ABORT");

75 
˙t
 = 1;

76 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
°©us
, &
˙t
, 
PMIX_STATUS
))) {

77  
rc
;

80 
˙t
 = 1;

81 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
msg
, &
˙t
, 
PMIX_STRING
))) {

82  
rc
;

85 
˙t
 = 1;

86 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
≈rocs
, &
˙t
, 
PMIX_SIZE
))) {

87  
rc
;

92 i‡(0 < 
≈rocs
) {

93 
	`PMIX_PROC_CREATE
(
¥ocs
, 
≈rocs
);

94 
˙t
 = 
≈rocs
;

95 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
¥ocs
, &
˙t
, 
PMIX_PROC
))) {

96  
rc
;

101 i‡(
NULL
 !
pmix_ho°_£rvî
.
ab‹t
) {

102 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

103 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

104 
rc
 = 
pmix_ho°_£rvî
.
	`ab‹t
(&
¥oc
, 
≥î
->
öfo
->
£rvî_obje˘
, 
°©us
, 
msg
,

105 
¥ocs
, 
≈rocs
, 
cbfunc
, 
cbd©a
);

107 
rc
 = 
PMIX_ERR_NOT_SUPPORTED
;

109 i‡(
NULL
 !
cbfunc
) {

110 
	`cbfunc
(
rc
, 
cbd©a
);

113 
	`PMIX_PROC_FREE
(
¥ocs
, 
≈rocs
);

117 i‡(
NULL
 !
msg
) {

118 
	`‰ì
(
msg
);

121  
rc
;

122 
	}
}

124 
pmix_°©us_t
 
	$pmix_£rvî_commô
(
pmix_≥î_t
 *
≥î
, 
pmix_buf„r_t
 *
buf
)

126 
öt32_t
 
˙t
;

127 
pmix_°©us_t
 
rc
;

128 
pmix_buf„r_t
 *
b2
;

129 
pmix_kvÆ_t
 *
kp
;

130 
pmix_sc›e_t
 
sc›e
;

131 
pmix_hash_èbÀ_t
 *
ht
;

132 
pmix_n•a˚_t
 *
≈å
;

133 
pmix_ønk_öfo_t
 *
öfo
;

134 
pmix_dmdx_ªmŸe_t
 *
dcd
, *
dcd√xt
;

135 
pmix_buf„r_t
 *
pbkt
;

136 
pmix_vÆue_t
 *
vÆ
;

137 *
d©a
;

138 
size_t
 
sz
;

141 
öfo
 = 
≥î
->info;

142 
≈å
 = 
öfo
->nptr;

144 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

146 
pmix_globÆs
.
myid
.
n•a˚
,

147 
pmix_globÆs
.
myid
.
ønk
,

148 
≈å
->
n•a˚
, 
öfo
->
ønk
);

154 
˙t
 = 1;

155 
PMIX_SUCCESS
 =(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
sc›e
, &
˙t
, 
PMIX_SCOPE
))) {

156 i‡(
PMIX_LOCAL
 =
sc›e
) {

157 
ht
 = &
≈å
->
£rvî
->
myloˇl
;

158 } i‡(
PMIX_REMOTE
 =
sc›e
) {

159 
ht
 = &
≈å
->
£rvî
->
myªmŸe
;

161 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

162 
rc
 = 
PMIX_ERR_BAD_PARAM
;

163  
rc
;

166 
˙t
 = 1;

167 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
b2
, &
˙t
, 
PMIX_BUFFER
))) {

168 
	`PMIX_ERROR_LOG
(
rc
);

169  
rc
;

172 i‡(
PMIX_SUCCESS
 =
	`pmix_hash_„tch
(
ht
, 
öfo
->
ønk
, "modex", &
vÆ
Ë&& 
NULL
 != val) {

174 
kp
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

175 
kp
->
key
 = 
	`°rdup
("modex");

176 
	`PMIX_VALUE_CREATE
(
kp
->
vÆue
, 1);

177 
kp
->
vÆue
->
ty≥
 = 
PMIX_BYTE_OBJECT
;

179 
kp
->
vÆue
->
d©a
.
bo
.
byãs
 = (*)
	`mÆloc
(
b2
->
byãs_u£d
 + 
vÆ
->d©a.bo.
size
);

180 
	`mem˝y
(
kp
->
vÆue
->
d©a
.
bo
.
byãs
, 
vÆ
->d©a.bo.byãs, vÆ->d©a.bo.
size
);

181 
	`mem˝y
(
kp
->
vÆue
->
d©a
.
bo
.
byãs
+
vÆ
->d©a.bo.
size
, 
b2
->
ba£_±r
, b2->
byãs_u£d
);

182 
kp
->
vÆue
->
d©a
.
bo
.
size
 = 
vÆ
->d©a.bo.sizê+ 
b2
->
byãs_u£d
;

184 
	`PMIX_VALUE_FREE
(
vÆ
, 1);

186 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(
ht
, 
öfo
->
ønk
, 
kp
))) {

187 
	`PMIX_ERROR_LOG
(
rc
);

189 
	`PMIX_RELEASE
(
kp
);

192 
kp
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

193 
kp
->
key
 = 
	`°rdup
("modex");

194 
	`PMIX_VALUE_CREATE
(
kp
->
vÆue
, 1);

195 
kp
->
vÆue
->
ty≥
 = 
PMIX_BYTE_OBJECT
;

196 
	`PMIX_UNLOAD_BUFFER
(
b2
, 
kp
->
vÆue
->
d©a
.
bo
.
byãs
, kp->vÆue->d©a.bo.
size
);

197 
	`PMIX_RELEASE
(
b2
);

199 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(
ht
, 
öfo
->
ønk
, 
kp
))) {

200 
	`PMIX_ERROR_LOG
(
rc
);

202 
	`PMIX_RELEASE
(
kp
);

204 
˙t
 = 1;

206 i‡(
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 !
rc
) {

207 
	`PMIX_ERROR_LOG
(
rc
);

208  
rc
;

210 
rc
 = 
PMIX_SUCCESS
;

212 
öfo
->
modex_ªcvd
 = 
åue
;

215 
	`PMIX_LIST_FOREACH_SAFE
(
dcd
, 
dcd√xt
, &
pmix_£rvî_globÆs
.
ªmŸe_≤d
, 
pmix_dmdx_ªmŸe_t
) {

216 i‡(0 !
	`°∫cmp
(
dcd
->
cd
->
¥oc
.
n•a˚
, 
≈å
->n•a˚, 
PMIX_MAX_NSLEN
)) {

219 i‡(
dcd
->
cd
->
¥oc
.
ønk
 =
öfo
->rank) {

222 
pbkt
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

225 i‡(
PMIX_SUCCESS
 =
	`pmix_hash_„tch
(&
≈å
->
£rvî
->
myªmŸe
, 
öfo
->
ønk
, "modex", &
vÆ
) &&

226 
NULL
 !
vÆ
) {

227 
	`PMIX_LOAD_BUFFER
(
pbkt
, 
vÆ
->
d©a
.
bo
.
byãs
, vÆ->d©a.bo.
size
);

228 
	`PMIX_VALUE_RELEASE
(
vÆ
);

230 
	`PMIX_UNLOAD_BUFFER
(
pbkt
, 
d©a
, 
sz
);

231 
	`PMIX_RELEASE
(
pbkt
);

233 
dcd
->
cd
->
	`cbfunc
(
PMIX_SUCCESS
, 
d©a
, 
sz
, dcd->cd->
cbd©a
);

234 i‡(
NULL
 !
d©a
) {

235 
	`‰ì
(
d©a
);

238 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
ªmŸe_≤d
, &
dcd
->
su≥r
);

239 
	`PMIX_RELEASE
(
dcd
);

243  
	`pmix_≥ndög_ªsﬁve
(
≈å
, 
öfo
->
ønk
, 
PMIX_SUCCESS
, 
NULL
);

244 
	}
}

262 
pmix_£rvî_åkr_t
* 
	$gë_åackî
(
pmix_¥oc_t
 *
¥ocs
,

263 
size_t
 
≈rocs
, 
pmix_cmd_t
 
ty≥
)

265 
pmix_£rvî_åkr_t
 *
åk
;

266 
size_t
 
i
, 
j
;

267 
size_t
 
m©ches
;

269 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

270 "gë_åackî cÆÀd wôh %dÖrocs", ()
≈rocs
);

273 i‡(
NULL
 =
¥ocs
) {

274 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

275  
NULL
;

284 
	`PMIX_LIST_FOREACH
(
åk
, &
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, 
pmix_£rvî_åkr_t
) {

288 i‡(
≈rocs
 !
åk
->
≈cs
) {

291 i‡(
ty≥
 !
åk
->type) {

294 
m©ches
 = 0;

295 
i
=0; i < 
≈rocs
; i++) {

298 
j
=0; j < 
åk
->
≈cs
; j++) {

299 i‡(0 =
	`°rcmp
(
¥ocs
[
i
].
n•a˚
, 
åk
->
pcs
[
j
].nspace) &&

300 
¥ocs
[
i
].
ønk
 =
åk
->
pcs
[
j
].rank) {

301 ++
m©ches
;

306 i‡(
åk
->
≈cs
 =
m©ches
) {

307  
åk
;

311  
NULL
;

312 
	}
}

330 
pmix_£rvî_åkr_t
* 
	$√w_åackî
(
pmix_¥oc_t
 *
¥ocs
,

331 
size_t
 
≈rocs
, 
pmix_cmd_t
 
ty≥
)

333 
pmix_£rvî_åkr_t
 *
åk
;

334 
pmix_ønk_öfo_t
 *
ùå
, *
öfo
;

335 
size_t
 
i
;

336 
boﬁ
 
Æl_def
;

337 
pmix_n•a˚_t
 *
≈å
, *
ns
;

339 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

340 "√w_åackî cÆÀd wôh %dÖrocs", ()
≈rocs
);

343 i‡(
NULL
 =
¥ocs
) {

344 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

345  
NULL
;

348 
	`as£π
–
NULL
 =
	`gë_åackî
(
¥ocs
, 
≈rocs
, 
ty≥
) );

350 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

351 "addögÇewÅøckî wôh %dÖrocs", ()
≈rocs
);

354 
åk
 = 
	`PMIX_NEW
(
pmix_£rvî_åkr_t
);

357 
	`PMIX_PROC_CREATE
(
åk
->
pcs
, 
≈rocs
);

358 
åk
->
≈cs
 = 
≈rocs
;

359 
åk
->
ty≥
 =Åype;

361 
Æl_def
 = 
åue
;

362 
i
=0; i < 
≈rocs
; i++) {

363 ()
	`°∫˝y
(
åk
->
pcs
[
i
].
n•a˚
, 
¥ocs
[i].n•a˚, 
PMIX_MAX_NSLEN
);

364 
åk
->
pcs
[
i
].
ønk
 = 
¥ocs
[i].rank;

366 
≈å
 = 
NULL
;

367 
	`PMIX_LIST_FOREACH
(
ns
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

368 i‡(0 =
	`°rcmp
(
¥ocs
[
i
].
n•a˚
, 
ns
->nspace)) {

369 
≈å
 = 
ns
;

373 i‡(
NULL
 =
≈å
) {

375 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

377 
¥ocs
[
i
].
n•a˚
);

381 i‡(!
≈å
->
£rvî
->
Æl_ªgi°îed
) {

384 
Æl_def
 = 
Ál£
;

385 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

387 
¥ocs
[
i
].
n•a˚
);

391 
	`PMIX_LIST_FOREACH
(
öfo
, &
≈å
->
£rvî
->
ønks
, 
pmix_ønk_öfo_t
) {

392 i‡(
¥ocs
[
i
].
ønk
 =
öfo
->rank ||

393 
PMIX_RANK_WILDCARD
 =
¥ocs
[
i
].
ønk
) {

394 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

396 
öfo
->
≈å
->
n•a˚
, info->
ønk
);

399 
ùå
 = 
	`PMIX_NEW
(
pmix_ønk_öfo_t
);

400 
	`PMIX_RETAIN
(
öfo
->
≈å
);

401 
ùå
->
≈å
 = 
öfo
->nptr;

402 
ùå
->
ønk
 = 
öfo
->rank;

403 
	`pmix_li°_≠≥nd
(&
åk
->
ønks
, &
ùå
->
su≥r
);

405 ++
åk
->
∆oˇl
;

406 i‡(
PMIX_RANK_WILDCARD
 !
¥ocs
[
i
].
ønk
) {

412 i‡(
Æl_def
) {

413 
åk
->
def_com∂ëe
 = 
åue
;

415 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, &
åk
->
su≥r
);

416  
åk
;

417 
	}
}

419 
pmix_°©us_t
 
	$pmix_£rvî_„n˚
(
pmix_£rvî_ˇddy_t
 *
cd
,

420 
pmix_buf„r_t
 *
buf
,

421 
pmix_modex_cbfunc_t
 
modexcbfunc
,

422 
pmix_›_cbfunc_t
 
›cbfunc
)

424 
öt32_t
 
˙t
;

425 
pmix_°©us_t
 
rc
;

426 
size_t
 
≈rocs
;

427 
pmix_¥oc_t
 *
¥ocs
=
NULL
;

428 
boﬁ
 
cﬁÀ˘_d©a
 = 
Ál£
;

429 
pmix_£rvî_åkr_t
 *
åk
;

430 *
d©a
 = 
NULL
;

431 
size_t
 
sz
 = 0;

432 
pmix_buf„r_t
 
buckë
, 
x„r
;

433 
pmix_ønk_öfo_t
 *
rköfo
;

434 
pmix_vÆue_t
 *
vÆ
;

435 
pmix_öfo_t
 *
öfo
 = 
NULL
;

436 
size_t
 
nöfo
=0, 
n
;

438 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

441 i‡(
NULL
 =
pmix_ho°_£rvî
.
„n˚_nb
) {

442 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_SUPPORTED
);

443  
PMIX_ERR_NOT_SUPPORTED
;

447 
˙t
 = 1;

448 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
≈rocs
, &
˙t
, 
PMIX_SIZE
))) {

449  
rc
;

451 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

452 "ªcvd fí˚ wôh %dÖrocs", ()
≈rocs
);

455 i‡(
≈rocs
 < 1) {

456  
PMIX_ERR_BAD_PARAM
;

460 
	`PMIX_PROC_CREATE
(
¥ocs
, 
≈rocs
);

462 
˙t
 = 
≈rocs
;

463 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
¥ocs
, &
˙t
, 
PMIX_PROC
))) {

464 
˛ónup
;

468 
˙t
 = 1;

469 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

470  
rc
;

472 i‡(0 < 
nöfo
) {

473 
	`PMIX_INFO_CREATE
(
öfo
, 
nöfo
);

475 
˙t
 = 
nöfo
;

476 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

477 
˛ónup
;

481 
n
=0;Ç < 
nöfo
;Ç++) {

482 i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_COLLECT_DATA
)) {

483 
cﬁÀ˘_d©a
 = 
åue
;

490 i‡(
NULL
 =(
åk
 = 
	`gë_åackî
(
¥ocs
, 
≈rocs
, 
PMIX_FENCENB_CMD
))) {

492 i‡(
NULL
 =(
åk
 = 
	`√w_åackî
(
¥ocs
, 
≈rocs
, 
PMIX_FENCENB_CMD
))) {

494 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

496 i‡(
NULL
 !
›cbfunc
) {

497 
	`›cbfunc
(
PMIX_ERROR
, 
cd
);

499 
rc
 = 
PMIX_ERROR
;

500 
˛ónup
;

502 
åk
->
ty≥
 = 
PMIX_FENCENB_CMD
;

503 
åk
->
modexcbfunc
 = modexcbfunc;

505 i‡(
cﬁÀ˘_d©a
) {

506 
åk
->
cﬁÀ˘_ty≥
 = 
PMIX_COLLECT_YES
;

508 
åk
->
cﬁÀ˘_ty≥
 = 
PMIX_COLLECT_NO
;

511 
åk
->
cﬁÀ˘_ty≥
) {

512 
PMIX_COLLECT_NO
:

513 i‡(
cﬁÀ˘_d©a
) {

514 
åk
->
cﬁÀ˘_ty≥
 = 
PMIX_COLLECT_INVALID
;

517 
PMIX_COLLECT_YES
:

518 i‡(!
cﬁÀ˘_d©a
) {

519 
åk
->
cﬁÀ˘_ty≥
 = 
PMIX_COLLECT_INVALID
;

529 i‡(
NULL
 =
åk
->
öfo
) {

530 
åk
->
öfo
 = info;

531 
åk
->
nöfo
 =Çinfo;

534 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

535 
öfo
 = 
NULL
;

540 
	`PMIX_RETAIN
(
cd
);

541 
	`pmix_li°_≠≥nd
(&
åk
->
loˇl_cbs
, &
cd
->
su≥r
);

546 i‡(
åk
->
def_com∂ëe
 &&

547 
	`pmix_li°_gë_size
(&
åk
->
loˇl_cbs
Ë=åk->
∆oˇl
) {

548 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

557 
	`PMIX_CONSTRUCT
(&
buckë
, 
pmix_buf„r_t
);

559 
	`as£π
–
PMIX_COLLECT_MAX
 < 
UCHAR_MAX
 );

560 
tmp
 = ()
åk
->
cﬁÀ˘_ty≥
;

561 
pmix_b‰›
.
	`∑ck
(&
buckë
, &
tmp
, 1, 
PMIX_BYTE
);

563 i‡(
PMIX_COLLECT_YES
 =
åk
->
cﬁÀ˘_ty≥
) {

564 
pmix_buf„r_t
 
d©abuf
;

565 
	`PMIX_CONSTRUCT
(&
d©abuf
, 
pmix_buf„r_t
);

566 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

568 
	`PMIX_LIST_FOREACH
(
rköfo
, &
åk
->
ønks
, 
pmix_ønk_öfo_t
) {

569 
pmix_buf„r_t
 
ønkbuf
;

570 
	`PMIX_CONSTRUCT
(&
ønkbuf
, 
pmix_buf„r_t
);

573 i‡(
PMIX_SUCCESS
 =
	`pmix_hash_„tch
(&
rköfo
->
≈å
->
£rvî
->
myªmŸe
,Ñköfo->
ønk
, "modex", &
vÆ
) &&

574 
NULL
 !
vÆ
) {

576 *
foob¨
 = 
rköfo
->
≈å
->
n•a˚
;

577 
pmix_b‰›
.
	`∑ck
(&
ønkbuf
, &
foob¨
, 1, 
PMIX_STRING
);

578 
pmix_b‰›
.
	`∑ck
(&
ønkbuf
, &
rköfo
->
ønk
, 1, 
PMIX_PROC_RANK
);

579 
	`PMIX_CONSTRUCT
(&
x„r
, 
pmix_buf„r_t
);

580 
	`PMIX_LOAD_BUFFER
(&
x„r
, 
vÆ
->
d©a
.
bo
.
byãs
, vÆ->d©a.bo.
size
);

581 
	`PMIX_VALUE_RELEASE
(
vÆ
);

582 
pmix_buf„r_t
 *
px„r
 = &
x„r
;

583 
pmix_b‰›
.
	`∑ck
(&
ønkbuf
, &
px„r
, 1, 
PMIX_BUFFER
);

584 
	`PMIX_DESTRUCT
(&
x„r
);

586 
pmix_buf„r_t
 *
pd©abuf
 = &
ønkbuf
;

587 
pmix_b‰›
.
	`∑ck
(&
d©abuf
, &
pd©abuf
, 1, 
PMIX_BUFFER
);

589 
	`PMIX_DESTRUCT
(&
ønkbuf
);

592 
pmix_buf„r_t
 *
pbkt
 = &
d©abuf
;

593 
pmix_b‰›
.
	`∑ck
(&
buckë
, &
pbkt
, 1, 
PMIX_BUFFER
);

594 
	`PMIX_DESTRUCT
(&
d©abuf
);

597 
	`PMIX_UNLOAD_BUFFER
(&
buckë
, 
d©a
, 
sz
);

598 
	`PMIX_DESTRUCT
(&
buckë
);

599 
pmix_ho°_£rvî
.
	`„n˚_nb
(
åk
->
pcs
,Årk->
≈cs
,

600 
åk
->
öfo
,Årk->
nöfo
,

601 
d©a
, 
sz
, 
åk
->
modexcbfunc
,Årk);

604 
˛ónup
:

605 
	`PMIX_PROC_FREE
(
¥ocs
, 
≈rocs
);

606  
rc
;

607 
	}
}

609 
pmix_°©us_t
 
	$pmix_£rvî_publish
(
pmix_≥î_t
 *
≥î
,

610 
pmix_buf„r_t
 *
buf
,

611 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

613 
pmix_°©us_t
 
rc
;

614 
öt32_t
 
˙t
;

615 
size_t
 
nöfo
, 
eöfo
;

616 
pmix_öfo_t
 *
öfo
 = 
NULL
;

617 
pmix_¥oc_t
 
¥oc
;

618 
uöt32_t
 
uid
;

620 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

623 i‡(
NULL
 =
pmix_ho°_£rvî
.
publish
) {

624  
PMIX_ERR_NOT_SUPPORTED
;

628 
˙t
=1;

629 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
uid
, &
˙t
, 
PMIX_UINT32
))) {

630 
	`PMIX_ERROR_LOG
(
rc
);

631  
rc
;

634 
˙t
=1;

635 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

636 
	`PMIX_ERROR_LOG
(
rc
);

637  
rc
;

640 
eöfo
 = 
nöfo
 + 1;

641 
	`PMIX_INFO_CREATE
(
öfo
, 
eöfo
);

643 i‡(0 < 
nöfo
) {

644 
˙t
=
nöfo
;

645 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

646 
	`PMIX_ERROR_LOG
(
rc
);

647 
˛ónup
;

650 ()
	`°∫˝y
(
öfo
[
eöfo
-1].
key
, 
PMIX_USERID
, 
PMIX_MAX_KEYLEN
);

651 
öfo
[
eöfo
-1].
vÆue
.
ty≥
 = 
PMIX_UINT32
;

652 
öfo
[
eöfo
-1].
vÆue
.
d©a
.
uöt32
 = 
uid
;

655 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

656 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

657 
rc
 = 
pmix_ho°_£rvî
.
	`publish
(&
¥oc
, 
öfo
, 
eöfo
, 
cbfunc
, 
cbd©a
);

659 
˛ónup
:

660 
	`PMIX_INFO_FREE
(
öfo
, 
eöfo
);

661  
rc
;

662 
	}
}

664 
pmix_°©us_t
 
	$pmix_£rvî_lookup
(
pmix_≥î_t
 *
≥î
,

665 
pmix_buf„r_t
 *
buf
,

666 
pmix_lookup_cbfunc_t
 
cbfunc
, *
cbd©a
)

668 
öt32_t
 
˙t
;

669 
pmix_°©us_t
 
rc
;

670 
size_t
 
nkeys
, 
i
;

671 **
keys
=
NULL
, *
•å
;

672 
pmix_öfo_t
 *
öfo
 = 
NULL
;

673 
size_t
 
nöfo
, 
eöfo
;

674 
pmix_¥oc_t
 
¥oc
;

675 
uöt32_t
 
uid
;

677 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

680 i‡(
NULL
 =
pmix_ho°_£rvî
.
lookup
) {

681  
PMIX_ERR_NOT_SUPPORTED
;

685 
˙t
=1;

686 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
uid
, &
˙t
, 
PMIX_UINT32
))) {

687 
	`PMIX_ERROR_LOG
(
rc
);

688  
rc
;

691 
˙t
=1;

692 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nkeys
, &
˙t
, 
PMIX_SIZE
))) {

693 
	`PMIX_ERROR_LOG
(
rc
);

694  
rc
;

697 
i
=0; i < 
nkeys
; i++) {

698 
˙t
=1;

699 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
•å
, &
˙t
, 
PMIX_STRING
))) {

700 
	`PMIX_ERROR_LOG
(
rc
);

701 
˛ónup
;

703 
	`pmix_¨gv_≠≥nd_nosize
(&
keys
, 
•å
);

704 
	`‰ì
(
•å
);

707 
˙t
=1;

708 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

709 
	`PMIX_ERROR_LOG
(
rc
);

710  
rc
;

713 
eöfo
 = 
nöfo
 + 1;

714 
	`PMIX_INFO_CREATE
(
öfo
, 
eöfo
);

716 i‡(0 < 
nöfo
) {

717 
˙t
=
nöfo
;

718 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

719 
	`PMIX_ERROR_LOG
(
rc
);

720 
˛ónup
;

723 ()
	`°∫˝y
(
öfo
[
eöfo
-1].
key
, 
PMIX_USERID
, 
PMIX_MAX_KEYLEN
);

724 
öfo
[
eöfo
-1].
vÆue
.
ty≥
 = 
PMIX_UINT32
;

725 
öfo
[
eöfo
-1].
vÆue
.
d©a
.
uöt32
 = 
uid
;

728 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

729 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

730 
rc
 = 
pmix_ho°_£rvî
.
	`lookup
(&
¥oc
, 
keys
, 
öfo
, 
eöfo
, 
cbfunc
, 
cbd©a
);

732 
˛ónup
:

733 
	`PMIX_INFO_FREE
(
öfo
, 
eöfo
);

734 
	`pmix_¨gv_‰ì
(
keys
);

735  
rc
;

736 
	}
}

738 
pmix_°©us_t
 
	$pmix_£rvî_u≈ublish
(
pmix_≥î_t
 *
≥î
,

739 
pmix_buf„r_t
 *
buf
,

740 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
)

742 
öt32_t
 
˙t
;

743 
pmix_°©us_t
 
rc
;

744 
size_t
 
i
, 
nkeys
, 
nöfo
, 
eöfo
;

745 **
keys
=
NULL
, *
•å
;

746 
pmix_¥oc_t
 
¥oc
;

747 
uöt32_t
 
uid
;

748 
pmix_öfo_t
 *
öfo
;

750 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

753 i‡(
NULL
 =
pmix_ho°_£rvî
.
u≈ublish
) {

754  
PMIX_ERR_NOT_SUPPORTED
;

758 
˙t
=1;

759 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
uid
, &
˙t
, 
PMIX_UINT32
))) {

760 
	`PMIX_ERROR_LOG
(
rc
);

761  
rc
;

764 
˙t
=1;

765 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nkeys
, &
˙t
, 
PMIX_SIZE
))) {

766 
	`PMIX_ERROR_LOG
(
rc
);

767  
rc
;

770 
i
=0; i < 
nkeys
; i++) {

771 
˙t
=1;

772 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
•å
, &
˙t
, 
PMIX_STRING
))) {

773 
	`PMIX_ERROR_LOG
(
rc
);

774 
˛ónup
;

776 
	`pmix_¨gv_≠≥nd_nosize
(&
keys
, 
•å
);

777 
	`‰ì
(
•å
);

780 
˙t
=1;

781 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

782 
	`PMIX_ERROR_LOG
(
rc
);

783  
rc
;

786 
eöfo
 = 
nöfo
 + 1;

787 
	`PMIX_INFO_CREATE
(
öfo
, 
eöfo
);

789 i‡(0 < 
nöfo
) {

790 
˙t
=
nöfo
;

791 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

792 
	`PMIX_ERROR_LOG
(
rc
);

793 
˛ónup
;

796 ()
	`°∫˝y
(
öfo
[
eöfo
-1].
key
, 
PMIX_USERID
, 
PMIX_MAX_KEYLEN
);

797 
öfo
[
eöfo
-1].
vÆue
.
ty≥
 = 
PMIX_UINT32
;

798 
öfo
[
eöfo
-1].
vÆue
.
d©a
.
uöt32
 = 
uid
;

801 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

802 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

803 
rc
 = 
pmix_ho°_£rvî
.
	`u≈ublish
(&
¥oc
, 
keys
, 
öfo
, 
eöfo
, 
cbfunc
, 
cbd©a
);

805 
˛ónup
:

806 
	`pmix_¨gv_‰ì
(
keys
);

807  
rc
;

808 
	}
}

810 
pmix_°©us_t
 
	$pmix_£rvî_•awn
(
pmix_≥î_t
 *
≥î
,

811 
pmix_buf„r_t
 *
buf
,

812 
pmix_•awn_cbfunc_t
 
cbfunc
,

813 *
cbd©a
)

815 
öt32_t
 
˙t
;

816 
size_t
 
«µs
, 
nöfo
;

817 
pmix_öfo_t
 *
öfo
=
NULL
;

818 
pmix_≠p_t
 *
≠ps
=
NULL
;

819 
pmix_°©us_t
 
rc
;

820 
pmix_¥oc_t
 
¥oc
;

822 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

825 i‡(
NULL
 =
pmix_ho°_£rvî
.
•awn
) {

826 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_SUPPORTED
);

827  
PMIX_ERR_NOT_SUPPORTED
;

831 
˙t
=1;

832 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

833 
	`PMIX_ERROR_LOG
(
rc
);

834  
rc
;

837 i‡(0 < 
nöfo
) {

838 
	`PMIX_INFO_CREATE
(
öfo
, 
nöfo
);

839 
˙t
=
nöfo
;

840 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

841 
	`PMIX_ERROR_LOG
(
rc
);

842 
˛ónup
;

847 
˙t
=1;

848 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
«µs
, &
˙t
, 
PMIX_SIZE
))) {

849 
	`PMIX_ERROR_LOG
(
rc
);

850  
rc
;

853 i‡(0 < 
«µs
) {

854 
	`PMIX_APP_CREATE
(
≠ps
, 
«µs
);

855 
˙t
=
«µs
;

856 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
≠ps
, &
˙t
, 
PMIX_APP
))) {

857 
	`PMIX_ERROR_LOG
(
rc
);

858 
˛ónup
;

862 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

863 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

864 
rc
 = 
pmix_ho°_£rvî
.
	`•awn
(&
¥oc
, 
öfo
, 
nöfo
, 
≠ps
, 
«µs
, 
cbfunc
, 
cbd©a
);

866 
˛ónup
:

867 i‡(
NULL
 !
öfo
) {

868 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

870 i‡(
NULL
 !
≠ps
) {

871 
	`PMIX_APP_FREE
(
≠ps
, 
«µs
);

873  
rc
;

874 
	}
}

876 
pmix_°©us_t
 
	$pmix_£rvî_c⁄√˘
(
pmix_£rvî_ˇddy_t
 *
cd
,

877 
pmix_buf„r_t
 *
buf
, 
boﬁ
 
disc⁄√˘
,

878 
pmix_›_cbfunc_t
 
cbfunc
)

880 
öt32_t
 
˙t
;

881 
pmix_°©us_t
 
rc
;

882 
pmix_¥oc_t
 *
¥ocs
;

883 
size_t
 
≈rocs
;

884 
pmix_£rvî_åkr_t
 *
åk
;

885 
pmix_öfo_t
 *
öfo
 = 
NULL
;

886 
size_t
 
nöfo
=0;

887 
pmix_cmd_t
 
ty≥
 = 
PMIX_CONNECTNB_CMD
;

889 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

891 
cd
->
≥î
->
öfo
->
≈å
->
n•a˚
, cd->≥î->öfo->
ønk
);

893 i‡((
disc⁄√˘
 && 
NULL
 =
pmix_ho°_£rvî
.disconnect) ||

894 (!
disc⁄√˘
 && 
NULL
 =
pmix_ho°_£rvî
.
c⁄√˘
)) {

895  
PMIX_ERR_NOT_SUPPORTED
;

899 
˙t
 = 1;

900 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
≈rocs
, &
˙t
, 
PMIX_SIZE
))) {

901 
	`PMIX_ERROR_LOG
(
rc
);

902  
rc
;

909 i‡(
≈rocs
 < 1) {

910 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

911  
PMIX_ERR_BAD_PARAM
;

915 
	`PMIX_PROC_CREATE
(
¥ocs
, 
≈rocs
);

916 
˙t
 = 
≈rocs
;

917 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
¥ocs
, &
˙t
, 
PMIX_PROC
))) {

918 
	`PMIX_ERROR_LOG
(
rc
);

919  
rc
;

923 
˙t
 = 1;

924 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

925  
rc
;

927 i‡(0 < 
nöfo
) {

928 
	`PMIX_INFO_CREATE
(
öfo
, 
nöfo
);

930 
˙t
 = 
nöfo
;

931 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

932 
˛ónup
;

937 i‡(
disc⁄√˘
) {

938 
ty≥
 = 
PMIX_DISCONNECTNB_CMD
;

940 i‡(
NULL
 =(
åk
 = 
	`gë_åackî
(
¥ocs
, 
≈rocs
, 
ty≥
))) {

941 i‡(
NULL
 =(
åk
 = 
	`√w_åackî
(
¥ocs
, 
≈rocs
, 
ty≥
))) {

943 
	`PMIX_ERROR_LOG
(
PMIX_ERROR
);

945 i‡(
NULL
 !
cbfunc
) {

946 
	`cbfunc
(
PMIX_ERROR
, 
cd
);

948 
rc
 = 
PMIX_ERROR
;

949 
˛ónup
;

951 
åk
->
›_cbfunc
 = 
cbfunc
;

956 
	`PMIX_RETAIN
(
cd
);

957 
	`pmix_li°_≠≥nd
(&
åk
->
loˇl_cbs
, &
cd
->
su≥r
);

962 i‡(
åk
->
def_com∂ëe
 &&

963 
	`pmix_li°_gë_size
(&
åk
->
loˇl_cbs
Ë=åk->
∆oˇl
) {

964 i‡(
disc⁄√˘
) {

965 
rc
 = 
pmix_ho°_£rvî
.
	`disc⁄√˘
(
¥ocs
, 
≈rocs
, 
öfo
, 
nöfo
, 
cbfunc
, 
åk
);

967 
rc
 = 
pmix_ho°_£rvî
.
	`c⁄√˘
(
¥ocs
, 
≈rocs
, 
öfo
, 
nöfo
, 
cbfunc
, 
åk
);

970 
rc
 = 
PMIX_SUCCESS
;

973 
˛ónup
:

974 
	`PMIX_PROC_FREE
(
¥ocs
, 
≈rocs
);

975 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

976  
rc
;

977 
	}
}

979 
pmix_°©us_t
 
	$pmix_£rvî_ªgi°î_evíts
(
pmix_≥î_t
 *
≥î
,

980 
pmix_buf„r_t
 *
buf
,

981 
pmix_›_cbfunc_t
 
cbfunc
,

982 *
cbd©a
)

984 
öt32_t
 
˙t
;

985 
pmix_°©us_t
 
rc
;

986 
pmix_°©us_t
 *
codes
 = 
NULL
;

987 
pmix_öfo_t
 *
öfo
 = 
NULL
;

988 
size_t
 
nöfo
=0, 
ncodes
, 
n
, 
k
;

989 
pmix_ªgevíts_öfo_t
 *
ªgöfo
;

990 
pmix_≥î_evíts_öfo_t
 *
¥ev
;

991 
pmix_nŸify_ˇddy_t
 *
cd
;

992 
i
;

993 
boﬁ
 
ívúo_evíts
 = 
Ál£
;

994 
boﬁ
 
found
;

996 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1000 
˙t
=1;

1001 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ncodes
, &
˙t
, 
PMIX_SIZE
))) {

1002 
	`PMIX_ERROR_LOG
(
rc
);

1003  
rc
;

1006 i‡(0 < 
ncodes
) {

1007 
codes
 = (
pmix_°©us_t
*)
	`mÆloc
(
ncodes
 * (pmix_status_t));

1008 
˙t
=
ncodes
;

1009 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
codes
, &
˙t
, 
PMIX_STATUS
))) {

1010 
	`PMIX_ERROR_LOG
(
rc
);

1011 
˛ónup
;

1016 
˙t
=1;

1017 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

1018 
	`PMIX_ERROR_LOG
(
rc
);

1019  
rc
;

1022 i‡(0 < 
nöfo
) {

1023 
	`PMIX_INFO_CREATE
(
öfo
, 
nöfo
);

1024 
˙t
=
nöfo
;

1025 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
öfo
, &
˙t
, 
PMIX_INFO
))) {

1026 
	`PMIX_ERROR_LOG
(
rc
);

1027 
˛ónup
;

1032 
n
=0;Ç < 
nöfo
;Ç++) {

1033 i‡(0 =
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_EVENT_ENVIRO_LEVEL
)) {

1034 i‡(
PMIX_UNDEF
 =
öfo
[
n
].
vÆue
.
ty≥
 ||

1035 (
PMIX_BOOL
 =
öfo
[
n
].
vÆue
.
ty≥
 && info[n].vÆue.
d©a
.
Êag
)) {

1036 
ívúo_evíts
 = 
åue
;

1044 i‡(
ívúo_evíts
 && 
NULL
 =
pmix_ho°_£rvî
.
ªgi°î_evíts
) {

1045 
ívúo_evíts
 = 
Ál£
;

1046 
rc
 = 
PMIX_ERR_NOT_SUPPORTED
;

1047 
˛ónup
;

1052 
k
=0;

1054 
found
 = 
Ál£
;

1055 
	`PMIX_LIST_FOREACH
(
ªgöfo
, &
pmix_£rvî_globÆs
.
evíts
, 
pmix_ªgevíts_öfo_t
) {

1056 i‡(
NULL
 =
codes
) {

1057 i‡(
PMIX_MAX_ERR_CONSTANT
 =
ªgöfo
->
code
) {

1059 
found
 = 
åue
;

1065 i‡(
PMIX_MAX_ERR_CONSTANT
 =
ªgöfo
->
code
) {

1067 } i‡(
codes
[
k
] =
ªgöfo
->
code
) {

1068 
found
 = 
åue
;

1073 i‡(
found
) {

1075 
found
 = 
Ál£
;

1076 
	`PMIX_LIST_FOREACH
(
¥ev
, &
ªgöfo
->
≥îs
, 
pmix_≥î_evíts_öfo_t
) {

1077 i‡(
¥ev
->
≥î
 ==Öeer) {

1079 
rc
 = 
PMIX_SUCCESS
;

1080 
found
 = 
åue
;

1084 i‡(!
found
) {

1086 
¥ev
 = 
	`PMIX_NEW
(
pmix_≥î_evíts_öfo_t
);

1087 
	`PMIX_RETAIN
(
≥î
);

1088 
¥ev
->
≥î
 =Öeer;

1089 
¥ev
->
ívúo_evíts
 =Énviro_events;

1090 
	`pmix_li°_≠≥nd
(&
ªgöfo
->
≥îs
, &
¥ev
->
su≥r
);

1094 
ªgöfo
 = 
	`PMIX_NEW
(
pmix_ªgevíts_öfo_t
);

1095 i‡(
NULL
 =
codes
) {

1096 
ªgöfo
->
code
 = 
PMIX_MAX_ERR_CONSTANT
;

1098 
ªgöfo
->
code
 = 
codes
[
k
];

1100 
	`pmix_li°_≠≥nd
(&
pmix_£rvî_globÆs
.
evíts
, &
ªgöfo
->
su≥r
);

1101 
¥ev
 = 
	`PMIX_NEW
(
pmix_≥î_evíts_öfo_t
);

1102 
	`PMIX_RETAIN
(
≥î
);

1103 
¥ev
->
≥î
 =Öeer;

1104 
¥ev
->
ívúo_evíts
 =Énviro_events;

1105 
	`pmix_li°_≠≥nd
(&
ªgöfo
->
≥îs
, &
¥ev
->
su≥r
);

1107 ++
k
;

1108 } 
k
 < 
ncodes
);

1111 i‡(
ívúo_evíts
) {

1112 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_ho°_£rvî
.
	`ªgi°î_evíts
(
codes
, 
ncodes
, 
öfo
, 
nöfo
, 
cbfunc
, 
cbd©a
))) {

1113 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1114 "£rvîÑegi°îÉvíts: ho° sîvîÑegÉvít†ªtu∫edÑ¯=%d", 
rc
);

1116 
check
;

1120 
˛ónup
:

1121 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1122 "£rvîÑegi°îÉvíts:Çöfÿ=%luÑ¯=%d", 
nöfo
, 
rc
);

1124 i‡(
NULL
 !
cbfunc
) {

1125 
	`cbfunc
(
rc
, 
cbd©a
);

1127 i‡(
NULL
 !
öfo
) {

1128 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

1130 i‡(
PMIX_SUCCESS
 !
rc
) {

1131 i‡(!
ívúo_evíts
) {

1132 i‡(
NULL
 !
codes
) {

1133 
	`‰ì
(
codes
);

1136  
rc
;

1139 
check
:

1141 
i
=0; i < 
pmix_£rvî_globÆs
.
nŸifiˇti⁄s
.
size
; i++) {

1142 i‡(
NULL
 =(
cd
 = (
pmix_nŸify_ˇddy_t
*)
	`pmix_rög_buf„r_poke
(&
pmix_£rvî_globÆs
.
nŸifiˇti⁄s
, 
i
))) {

1145 
found
 = 
Ál£
;

1146 i‡(
NULL
 =
codes
) {

1148 
found
 = 
åue
;

1150 
k
=0; k < 
ncodes
; k++) {

1151 i‡(
codes
[
k
] =
cd
->
°©us
) {

1152 
found
 = 
åue
;

1157 i‡(
found
) {

1159 
	`PMIX_RETAIN
(
cd
->
buf
);

1160 
	`PMIX_SERVER_QUEUE_REPLY
(
≥î
, 0, 
cd
->
buf
);

1163 i‡(!
ívúo_evíts
) {

1164 i‡(
NULL
 !
codes
) {

1165 
	`‰ì
(
codes
);

1169  
PMIX_SUCCESS
;

1170 
	}
}

1172 
	$pmix_£rvî_dîegi°î_evíts
(
pmix_≥î_t
 *
≥î
,

1173 
pmix_buf„r_t
 *
buf
)

1175 
öt32_t
 
˙t
;

1176 
pmix_°©us_t
 
rc
, *
codes
 = 
NULL
, *
cd±r
, 
maxcode
 = 
PMIX_MAX_ERR_CONSTANT
;

1177 
pmix_öfo_t
 *
öfo
 = 
NULL
;

1178 
size_t
 
nöfo
=0, 
ncodes
, 
ncds
, 
n
;

1179 
pmix_ªgevíts_öfo_t
 *
ªgöfo
 = 
NULL
;

1180 
pmix_ªgevíts_öfo_t
 *
ªgöfo_√xt
;

1181 
pmix_≥î_evíts_öfo_t
 *
¥ev
;

1183 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1187 
˙t
=1;

1188 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
ncodes
, &
˙t
, 
PMIX_SIZE
))) {

1189 
	`PMIX_ERROR_LOG
(
rc
);

1193 i‡(0 < 
ncodes
) {

1194 
codes
 = (
pmix_°©us_t
*)
	`mÆloc
(
ncodes
 * (pmix_status_t));

1195 
˙t
=
ncodes
;

1196 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
codes
, &
˙t
, 
PMIX_STATUS
))) {

1197 
	`PMIX_ERROR_LOG
(
rc
);

1198 
˛ónup
;

1203 i‡(
NULL
 =
codes
) {

1204 
cd±r
 = &
maxcode
;

1205 
ncds
 = 1;

1207 
cd±r
 = 
codes
;

1208 
ncds
 = 
ncodes
;

1211 
n
=0;Ç < 
ncds
;Ç++) {

1212 
	`PMIX_LIST_FOREACH_SAFE
(
ªgöfo
, 
ªgöfo_√xt
, &
pmix_£rvî_globÆs
.
evíts
, 
pmix_ªgevíts_öfo_t
) {

1213 i‡(
cd±r
[
n
] =
ªgöfo
->
code
) {

1215 
	`PMIX_LIST_FOREACH
(
¥ev
, &
ªgöfo
->
≥îs
, 
pmix_≥î_evíts_öfo_t
) {

1216 i‡(
¥ev
->
≥î
 ==Öeer) {

1218 
	`pmix_li°_ªmove_ôem
(&
ªgöfo
->
≥îs
, &
¥ev
->
su≥r
);

1219 
	`PMIX_RELEASE
(
¥ev
);

1224 i‡(0 =
	`pmix_li°_gë_size
(&
ªgöfo
->
≥îs
)) {

1225 
	`pmix_li°_ªmove_ôem
(&
pmix_£rvî_globÆs
.
evíts
, &
ªgöfo
->
su≥r
);

1227 
	`PMIX_RELEASE
(
ªgöfo
);

1233 
˛ónup
:

1234 i‡(
NULL
 !
codes
) {

1235 
	`‰ì
(
codes
);

1237 i‡(
NULL
 !
öfo
) {

1238 
	`PMIX_INFO_FREE
(
öfo
, 
nöfo
);

1241 
	}
}

1244 
	$loˇl_cbfunc
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

1246 
pmix_nŸify_ˇddy_t
 *
cd
 = (pmix_nŸify_ˇddy_t*)
cbd©a
;

1248 i‡(
NULL
 !
cd
->
cbfunc
) {

1249 
cd
->
	`cbfunc
(
°©us
, cd->
cbd©a
);

1251 
	`PMIX_RELEASE
(
cd
);

1252 
	}
}

1254 
pmix_°©us_t
 
	$pmix_£rvî_evít_ªcvd_‰om_˛õ¡
(
pmix_≥î_t
 *
≥î
,

1255 
pmix_buf„r_t
 *
buf
,

1256 
pmix_›_cbfunc_t
 
cbfunc
,

1257 *
cbd©a
)

1259 
öt32_t
 
˙t
;

1260 
pmix_°©us_t
 
rc
;

1261 
pmix_nŸify_ˇddy_t
 *
cd
;

1263 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1266 i‡(
NULL
 =
pmix_ho°_£rvî
.
nŸify_evít
) {

1267  
PMIX_ERR_NOT_SUPPORTED
;

1270 
cd
 = 
	`PMIX_NEW
(
pmix_nŸify_ˇddy_t
);

1271 
cd
->
cbfunc
 = cbfunc;

1272 
cd
->
cbd©a
 = cbdata;

1274 ()
	`°∫˝y
(
cd
->
sour˚
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

1275 
cd
->
sour˚
.
ønk
 = 
≥î
->
öfo
->rank;

1278 
˙t
 = 1;

1279 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cd
->
°©us
, &
˙t
, 
PMIX_STATUS
))) {

1280 
	`PMIX_ERROR_LOG
(
rc
);

1281 
exô
;

1285 
˙t
 = 1;

1286 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cd
->
ønge
, &
˙t
, 
PMIX_DATA_RANGE
))) {

1287 
	`PMIX_ERROR_LOG
(
rc
);

1288 
exô
;

1292 
˙t
 = 1;

1293 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cd
->
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

1294 
	`PMIX_ERROR_LOG
(
rc
);

1295 
exô
;

1297 i‡(0 < 
cd
->
nöfo
) {

1298 
	`PMIX_INFO_CREATE
(
cd
->
öfo
, cd->
nöfo
);

1299 
˙t
 = 
cd
->
nöfo
;

1300 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
cd
->
öfo
, &
˙t
, 
PMIX_INFO
))) {

1301 
	`PMIX_ERROR_LOG
(
rc
);

1302 
exô
;

1309 
pmix_ho°_£rvî
.
	`nŸify_evít
(
cd
->
°©us
, &cd->
sour˚
, cd->
ønge
,

1310 
cd
->
öfo
, cd->
nöfo
, 
loˇl_cbfunc
, cd);

1311  
PMIX_SUCCESS
;

1313 
exô
:

1314 
	`PMIX_RELEASE
(
cd
);

1315 
	`cbfunc
(
rc
, 
cbd©a
);

1316  
rc
;

1317 
	}
}

1319 
pmix_°©us_t
 
	$pmix_£rvî_quîy
(
pmix_≥î_t
 *
≥î
,

1320 
pmix_buf„r_t
 *
buf
,

1321 
pmix_öfo_cbfunc_t
 
cbfunc
,

1322 *
cbd©a
)

1324 
öt32_t
 
˙t
;

1325 
pmix_°©us_t
 
rc
;

1326 
pmix_quîy_ˇddy_t
 *
cd
;

1327 
pmix_¥oc_t
 
¥oc
;

1329 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1332 i‡(
NULL
 =
pmix_ho°_£rvî
.
quîy
) {

1333  
PMIX_ERR_NOT_SUPPORTED
;

1336 
cd
 = 
	`PMIX_NEW
(
pmix_quîy_ˇddy_t
);

1337 
cd
->
cbd©a
 = cbdata;

1339 
˙t
 = 1;

1340 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cd
->
nquîõs
, &
˙t
, 
PMIX_SIZE
))) {

1341 
	`PMIX_ERROR_LOG
(
rc
);

1342 
exô
;

1345 i‡(0 < 
cd
->
nquîõs
) {

1346 
	`PMIX_QUERY_CREATE
(
cd
->
quîõs
, cd->
nquîõs
);

1347 
˙t
 = 
cd
->
nquîõs
;

1348 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
cd
->
quîõs
, &
˙t
, 
PMIX_QUERY
))) {

1349 
	`PMIX_ERROR_LOG
(
rc
);

1350 
exô
;

1355 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

1356 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

1359 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_ho°_£rvî
.
	`quîy
(&
¥oc
, 
cd
->
quîõs
, cd->
nquîõs
,

1360 
cbfunc
, 
cd
))) {

1361 
exô
;

1363  
PMIX_SUCCESS
;

1365 
exô
:

1366 
	`PMIX_RELEASE
(
cd
);

1367  
rc
;

1368 
	}
}

1370 
	$logcb‚
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

1372 
pmix_shi·_ˇddy_t
 *
cd
 = (pmix_shi·_ˇddy_t*)
cbd©a
;

1373 i‡(
NULL
 !
cd
->
cbfunc
.
›cb‚
) {

1374 
cd
->
cbfunc
.
	`›cb‚
(
°©us
, cd->
cbd©a
);

1376 
	`PMIX_RELEASE
(
cd
);

1377 
	}
}

1378 
pmix_°©us_t
 
	$pmix_£rvî_log
(
pmix_≥î_t
 *
≥î
,

1379 
pmix_buf„r_t
 *
buf
,

1380 
pmix_›_cbfunc_t
 
cbfunc
,

1381 *
cbd©a
)

1383 
öt32_t
 
˙t
;

1384 
pmix_°©us_t
 
rc
;

1385 
pmix_shi·_ˇddy_t
 *
cd
;

1386 
pmix_¥oc_t
 
¥oc
;

1388 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

1391 i‡(
NULL
 =
pmix_ho°_£rvî
.
log
) {

1392  
PMIX_ERR_NOT_SUPPORTED
;

1395 
cd
 = 
	`PMIX_NEW
(
pmix_shi·_ˇddy_t
);

1396 
cd
->
cbfunc
.
›cb‚
 = cbfunc;

1397 
cd
->
cbd©a
 = cbdata;

1399 
˙t
 = 1;

1400 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cd
->
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

1401 
	`PMIX_ERROR_LOG
(
rc
);

1402 
exô
;

1405 i‡(0 < 
cd
->
nöfo
) {

1406 
	`PMIX_INFO_CREATE
(
cd
->
öfo
, cd->
nöfo
);

1407 
˙t
 = 
cd
->
nöfo
;

1408 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
cd
->
öfo
, &
˙t
, 
PMIX_INFO
))) {

1409 
	`PMIX_ERROR_LOG
(
rc
);

1410 
exô
;

1414 
˙t
 = 1;

1415 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cd
->
ndús
, &
˙t
, 
PMIX_SIZE
))) {

1416 
	`PMIX_ERROR_LOG
(
rc
);

1417 
exô
;

1420 i‡(0 < 
cd
->
ndús
) {

1421 
	`PMIX_INFO_CREATE
(
cd
->
dúe˘ives
, cd->
ndús
);

1422 
˙t
 = 
cd
->
ndús
;

1423 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
cd
->
dúe˘ives
, &
˙t
, 
PMIX_INFO
))) {

1424 
	`PMIX_ERROR_LOG
(
rc
);

1425 
exô
;

1430 ()
	`°∫˝y
(
¥oc
.
n•a˚
, 
≥î
->
öfo
->
≈å
->n•a˚, 
PMIX_MAX_NSLEN
);

1431 
¥oc
.
ønk
 = 
≥î
->
öfo
->rank;

1434 
pmix_ho°_£rvî
.
	`log
(&
¥oc
, 
cd
->
öfo
, cd->
nöfo
,

1435 
cd
->
dúe˘ives
, cd->
ndús
,

1436 
logcb‚
, 
cd
);

1437  
PMIX_SUCCESS
;

1439 
exô
:

1440 
	`PMIX_RELEASE
(
cd
);

1441  
rc
;

1442 
	}
}

1446 
	$tc⁄
(
pmix_£rvî_åkr_t
 *
t
)

1448 
t
->
pcs
 = 
NULL
;

1449 
t
->
≈cs
 = 0;

1450 
t
->
a˘ive
 = 
åue
;

1451 
t
->
def_com∂ëe
 = 
Ál£
;

1452 
	`PMIX_CONSTRUCT
(&
t
->
ønks
, 
pmix_li°_t
);

1453 
	`PMIX_CONSTRUCT
(&
t
->
loˇl_cbs
, 
pmix_li°_t
);

1454 
t
->
∆oˇl
 = 0;

1455 
t
->
loˇl_˙t
 = 0;

1456 
t
->
öfo
 = 
NULL
;

1457 
t
->
nöfo
 = 0;

1459 
t
->
cﬁÀ˘_ty≥
 = 
PMIX_COLLECT_INVALID
;

1460 
t
->
modexcbfunc
 = 
NULL
;

1461 
t
->
›_cbfunc
 = 
NULL
;

1462 
	}
}

1463 
	$tdes
(
pmix_£rvî_åkr_t
 *
t
)

1465 i‡(
NULL
 !
t
->
pcs
) {

1466 
	`‰ì
(
t
->
pcs
);

1468 
	`PMIX_LIST_DESTRUCT
(&
t
->
ønks
);

1469 
	`PMIX_LIST_DESTRUCT
(&
t
->
loˇl_cbs
);

1470 
	`PMIX_INFO_FREE
(
t
->
öfo
,Å->
nöfo
);

1471 
	}
}

1472 
PMIX_CLASS_INSTANCE
(
pmix_£rvî_åkr_t
,

1473 
pmix_li°_ôem_t
,

1474 
tc⁄
, 
tdes
);

1476 
	$cdc⁄
(
pmix_£rvî_ˇddy_t
 *
cd
)

1478 
cd
->
≥î
 = 
NULL
;

1479 
	`PMIX_CONSTRUCT
(&
cd
->
¢d
, 
pmix_¢d_ˇddy_t
);

1480 
	}
}

1481 
	$cddes
(
pmix_£rvî_ˇddy_t
 *
cd
)

1483 i‡(
NULL
 !
cd
->
≥î
) {

1484 
	`PMIX_RELEASE
(
cd
->
≥î
);

1486 
	`PMIX_DESTRUCT
(&
cd
->
¢d
);

1487 
	}
}

1488 
PMIX_CLASS_INSTANCE
(
pmix_£rvî_ˇddy_t
,

1489 
pmix_li°_ôem_t
,

1490 
cdc⁄
, 
cddes
);

1493 
PMIX_CLASS_INSTANCE
(
pmix_¢d_ˇddy_t
,

1494 
pmix_obje˘_t
,

1495 
NULL
, NULL);

1497 
	$sˇdc⁄
(
pmix_£tup_ˇddy_t
 *
p
)

1499 
	`mem£t
(&
p
->
¥oc
, 0, (
pmix_¥oc_t
));

1500 
p
->
a˘ive
 = 
åue
;

1501 
p
->
£rvî_obje˘
 = 
NULL
;

1502 
p
->
∆oˇÕrocs
 = 0;

1503 
p
->
öfo
 = 
NULL
;

1504 
p
->
nöfo
 = 0;

1505 
p
->
cbfunc
 = 
NULL
;

1506 
p
->
cbd©a
 = 
NULL
;

1507 
	}
}

1508 
	$sˇddes
(
pmix_£tup_ˇddy_t
 *
p
)

1510 
	}
}

1511 
PMIX_CLASS_INSTANCE
(
pmix_£tup_ˇddy_t
,

1512 
pmix_obje˘_t
,

1513 
sˇdc⁄
, 
sˇddes
);

1515 
	$nc⁄
(
pmix_nŸify_ˇddy_t
 *
p
)

1517 
p
->
a˘ive
 = 
åue
;

1518 
	`mem£t
(
p
->
sour˚
.
n•a˚
, 0, 
PMIX_MAX_NSLEN
+1);

1519 
p
->
sour˚
.
ønk
 = 
PMIX_RANK_UNDEF
;

1520 
p
->
ønge
 = 
PMIX_RANGE_UNDEF
;

1521 
p
->
n⁄deÁu…
 = 
Ál£
;

1522 
p
->
öfo
 = 
NULL
;

1523 
p
->
nöfo
 = 0;

1524 
p
->
buf
 = 
	`PMIX_NEW
(
pmix_buf„r_t
);

1525 
	}
}

1526 
	$ndes
(
pmix_nŸify_ˇddy_t
 *
p
)

1528 i‡(
NULL
 !
p
->
öfo
) {

1529 
	`PMIX_INFO_FREE
(
p
->
öfo
,Ö->
nöfo
);

1531 i‡(
NULL
 !
p
->
buf
) {

1532 
	`PMIX_RELEASE
(
p
->
buf
);

1534 
	}
}

1535 
PMIX_CLASS_INSTANCE
(
pmix_nŸify_ˇddy_t
,

1536 
pmix_obje˘_t
,

1537 
nc⁄
, 
ndes
);

1540 
PMIX_CLASS_INSTANCE
(
pmix_åkr_ˇddy_t
,

1541 
pmix_obje˘_t
,

1542 
NULL
, NULL);

1544 
	$dmc⁄
(
pmix_dmdx_ªmŸe_t
 *
p
)

1546 
p
->
cd
 = 
NULL
;

1547 
	}
}

1548 
	$dmdes
(
pmix_dmdx_ªmŸe_t
 *
p
)

1550 i‡(
NULL
 !
p
->
cd
) {

1551 
	`PMIX_RELEASE
(
p
->
cd
);

1553 
	}
}

1554 
PMIX_CLASS_INSTANCE
(
pmix_dmdx_ªmŸe_t
,

1555 
pmix_li°_ôem_t
,

1556 
dmc⁄
, 
dmdes
);

1558 
PMIX_CLASS_INSTANCE
(
pmix_dmdx_ªque°_t
,

1559 
pmix_li°_ôem_t
,

1560 
NULL
, NULL);

1562 
	$lmc⁄
(
pmix_dmdx_loˇl_t
 *
p
)

1564 
	`mem£t
(&
p
->
¥oc
, 0, (
pmix_¥oc_t
));

1565 
	`PMIX_CONSTRUCT
(&
p
->
loc_ªqs
, 
pmix_li°_t
);

1566 
p
->
öfo
 = 
NULL
;

1567 
p
->
nöfo
 = 0;

1568 
	}
}

1569 
	$lmdes
(
pmix_dmdx_loˇl_t
 *
p
)

1571 
	`PMIX_INFO_FREE
(
p
->
öfo
,Ö->
nöfo
);

1572 
	`PMIX_DESTRUCT
(&
p
->
loc_ªqs
);

1573 
	}
}

1574 
PMIX_CLASS_INSTANCE
(
pmix_dmdx_loˇl_t
,

1575 
pmix_li°_ôem_t
,

1576 
lmc⁄
, 
lmdes
);

1578 
	$pcc⁄
(
pmix_≥ndög_c⁄√˘i⁄_t
 *
p
)

1580 
	`mem£t
(
p
->
n•a˚
, 0, 
PMIX_MAX_NSLEN
+1);

1581 
p
->
öfo
 = 
NULL
;

1582 
p
->
nöfo
 = 0;

1583 
	}
}

1584 
	$pcdes
(
pmix_≥ndög_c⁄√˘i⁄_t
 *
p
)

1586 i‡(
NULL
 !
p
->
öfo
) {

1587 
	`PMIX_INFO_FREE
(
p
->
öfo
,Ö->
nöfo
);

1589 
	}
}

1590 
PMIX_CLASS_INSTANCE
(
pmix_≥ndög_c⁄√˘i⁄_t
,

1591 
pmix_obje˘_t
,

1592 
pcc⁄
, 
pcdes
);

1594 
	$¥evc⁄
(
pmix_≥î_evíts_öfo_t
 *
p
)

1596 
p
->
≥î
 = 
NULL
;

1597 
	}
}

1598 
	$¥evdes
(
pmix_≥î_evíts_öfo_t
 *
p
)

1600 i‡(
NULL
 !
p
->
≥î
) {

1601 
	`PMIX_RELEASE
(
p
->
≥î
);

1603 
	}
}

1604 
PMIX_CLASS_INSTANCE
(
pmix_≥î_evíts_öfo_t
,

1605 
pmix_li°_ôem_t
,

1606 
¥evc⁄
, 
¥evdes
);

1608 
	$ªgc⁄
(
pmix_ªgevíts_öfo_t
 *
p
)

1610 
	`PMIX_CONSTRUCT
(&
p
->
≥îs
, 
pmix_li°_t
);

1611 
	}
}

1612 
	$ªgdes
(
pmix_ªgevíts_öfo_t
 *
p
)

1614 
	`PMIX_LIST_DESTRUCT
(&
p
->
≥îs
);

1615 
	}
}

1616 
PMIX_CLASS_INSTANCE
(
pmix_ªgevíts_öfo_t
,

1617 
pmix_li°_ôem_t
,

1618 
ªgc⁄
, 
ªgdes
);

1620 
	$lc⁄
(
pmix_li°íî_t
 *
p
)

1622 
	`mem£t
(&
p
->
addªss
, 0, (
sockaddr_un
));

1623 
p
->
addªss
.
sun_Ámûy
 = 
AF_UNIX
;

1624 
p
->
sockë
 = -1;

1625 
p
->
v¨«me
 = 
NULL
;

1626 
p
->
uri
 = 
NULL
;

1627 
p
->
ow√r_giví
 = 
Ál£
;

1628 
p
->
group_giví
 = 
Ál£
;

1629 
p
->
mode
 = 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
;

1630 
	}
}

1631 
	$ldes
(
pmix_li°íî_t
 *
p
)

1633 i‡(0 <
p
->
sockë
) {

1634 
	`CLOSE_THE_SOCKET
(
p
->
sockë
);

1637 i‡(0 =
	`ac˚ss
(
p
->
addªss
.
sun_∑th
, 
F_OK
)) {

1638 
	`u∆ök
(
p
->
addªss
.
sun_∑th
);

1640 i‡(
NULL
 !
p
->
v¨«me
) {

1641 
	`‰ì
(
p
->
v¨«me
);

1643 i‡(
NULL
 !
p
->
uri
) {

1644 
	`‰ì
(
p
->
uri
);

1646 
	}
}

1647 
PMIX_CLASS_INSTANCE
(
pmix_li°íî_t
,

1648 
pmix_li°_ôem_t
,

1649 
lc⁄
, 
ldes
);

1651 
PMIX_CLASS_INSTANCE
(
pmix_usock_queue_t
,

1652 
pmix_obje˘_t
,

1653 
NULL
, NULL);

	@server/pmix_server_ops.h

14 #i‚de‡
PMIX_SERVER_OPS_H


15 
	#PMIX_SERVER_OPS_H


	)

17 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

19 
	~<pmix_comm⁄.h
>

20 
	~<§c/˛ass/pmix_rög_buf„r.h
>

21 
	~<pmix_£rvî.h
>

22 
	~"§c/usock/usock.h
"

23 
	~"§c/utû/hash.h
"

26 
pmix_obje˘_t
 
	msu≥r
;

27 
pmix_evít_t
 
	mev
;

28 
pmix_£rvî_åkr_t
 *
	måk
;

29 } 
	tpmix_åkr_ˇddy_t
;

30 
PMIX_CLASS_DECLARATION
(
pmix_åkr_ˇddy_t
);

33 
pmix_obje˘_t
 
	msu≥r
;

34 
pmix_evít_t
 
	mev
;

35 vﬁ©ûê
boﬁ
 
	ma˘ive
;

36 
pmix_°©us_t
 
	m°©us
;

37 
pmix_¥oc_t
 
	m¥oc
;

38 
uid_t
 
	muid
;

39 
gid_t
 
	mgid
;

40 *
	m£rvî_obje˘
;

41 
	m∆oˇÕrocs
;

42 
pmix_öfo_t
 *
	möfo
;

43 
size_t
 
	mnöfo
;

44 
pmix_›_cbfunc_t
 
	m›cbfunc
;

45 
pmix_dmodex_ª•⁄£_‚_t
 
	mcbfunc
;

46 *
	mcbd©a
;

47 } 
	tpmix_£tup_ˇddy_t
;

48 
PMIX_CLASS_DECLARATION
(
pmix_£tup_ˇddy_t
);

51 
pmix_obje˘_t
 
	msu≥r
;

52 
pmix_evít_t
 
	mev
;

53 vﬁ©ûê
boﬁ
 
	ma˘ive
;

54 
pmix_°©us_t
 
	m°©us
;

55 
pmix_¥oc_t
 
	msour˚
;

56 
pmix_d©a_ønge_t
 
	mønge
;

57 
boﬁ
 
	mn⁄deÁu…
;

58 
pmix_öfo_t
 *
	möfo
;

59 
size_t
 
	mnöfo
;

60 
pmix_buf„r_t
 *
	mbuf
;

61 
pmix_›_cbfunc_t
 
	mcbfunc
;

62 *
	mcbd©a
;

63 } 
	tpmix_nŸify_ˇddy_t
;

64 
PMIX_CLASS_DECLARATION
(
pmix_nŸify_ˇddy_t
);

67 
pmix_li°_ôem_t
 
	msu≥r
;

68 
pmix_£tup_ˇddy_t
 *
	mcd
;

69 } 
	tpmix_dmdx_ªmŸe_t
;

70 
PMIX_CLASS_DECLARATION
(
pmix_dmdx_ªmŸe_t
);

73 
pmix_li°_ôem_t
 
	msu≥r
;

74 
pmix_modex_cbfunc_t
 
	mcbfunc
;

75 *
	mcbd©a
;

76 } 
	tpmix_dmdx_ªque°_t
;

77 
PMIX_CLASS_DECLARATION
(
pmix_dmdx_ªque°_t
);

80 
pmix_li°_ôem_t
 
	msu≥r
;

81 
pmix_¥oc_t
 
	m¥oc
;

82 
pmix_li°_t
 
	mloc_ªqs
;

84 
pmix_öfo_t
 *
	möfo
;

85 
size_t
 
	mnöfo
;

86 } 
	tpmix_dmdx_loˇl_t
;

87 
PMIX_CLASS_DECLARATION
(
pmix_dmdx_loˇl_t
);

90 
uöt16_t
 
	tpmix_li°íî_¥Ÿocﬁ_t
;

91 
	#PMIX_PROTOCOL_V1
 0

	)

92 
	#PMIX_PROTOCOL_TOOL
 1

	)

93 
	#PMIX_PROTOCOL
 
V2
 2

	)

97 
pmix_obje˘_t
 
	msu≥r
;

98 
pmix_evít_t
 
	mev
;

99 
pmix_li°íî_¥Ÿocﬁ_t
 
	m¥Ÿocﬁ
;

100 
	msd
;

101 
	mn•a˚
[
PMIX_MAX_NSLEN
+1];

102 
pmix_öfo_t
 *
	möfo
;

103 
size_t
 
	mnöfo
;

104 
pmix_°©us_t
 
	m°©us
;

105 
sockaddr_°‹age
 
	maddr
;

106 } 
	tpmix_≥ndög_c⁄√˘i⁄_t
;

107 
PMIX_CLASS_DECLARATION
(
pmix_≥ndög_c⁄√˘i⁄_t
);

111 
pmix_li°_ôem_t
 
	msu≥r
;

112 
pmix_≥î_t
 *
	m≥î
;

113 
boﬁ
 
	mívúo_evíts
;

114 } 
	tpmix_≥î_evíts_öfo_t
;

115 
PMIX_CLASS_DECLARATION
(
pmix_≥î_evíts_öfo_t
);

118 
pmix_li°_ôem_t
 
	msu≥r
;

119 
pmix_li°_t
 
	m≥îs
;

120 
	mcode
;

121 } 
	tpmix_ªgevíts_öfo_t
;

122 
PMIX_CLASS_DECLARATION
(
pmix_ªgevíts_öfo_t
);

125 
	spmix_li°íî_t
 {

126 
pmix_li°_ôem_t
 
	msu≥r
;

127 
pmix_li°íî_¥Ÿocﬁ_t
 
	m¥Ÿocﬁ
;

128 
	msockë
;

129 
sockaddr_un
 
	maddªss
;

130 *
	mv¨«me
;

131 *
	muri
;

132 
uöt32_t
 
	mow√r
;

133 
boﬁ
 
	mow√r_giví
;

134 
uöt32_t
 
	mgroup
;

135 
boﬁ
 
	mgroup_giví
;

136 
uöt32_t
 
	mmode
;

137 } 
	tpmix_li°íî_t
;

138 
PMIX_CLASS_DECLARATION
(
pmix_li°íî_t
);

141 
pmix_poöãr_¨øy_t
 
	m˛õ¡s
;

142 
pmix_li°_t
 
	mcﬁÀ˘ives
;

143 
pmix_li°_t
 
	mªmŸe_≤d
;

144 
pmix_li°_t
 
	mloˇl_ªqs
;

145 vﬁ©ûê
boﬁ
 
	mli°í_thªad_a˘ive
;

146 
pmix_li°_t
 
	mli°íîs
;

147 
	m°›_thªad
[2];

148 
pmix_buf„r_t
 
	mgd©a
;

149 
pmix_li°_t
 
	mevíts
;

150 
pmix_rög_buf„r_t
 
	mnŸifiˇti⁄s
;

151 
boﬁ
 
	mtoﬁ_c⁄√˘i⁄s_Ælowed
;

152 } 
	tpmix_£rvî_globÆs_t
;

155 
pmix_obje˘_t
 
	msu≥r
;

156 
pmix_evít_t
 
	mev
;

157 
pmix_≥î_t
 *
	m≥î
;

158 
pmix_buf„r_t
 *
	mbuf
;

159 
uöt32_t
 
	mèg
;

160 } 
	tpmix_usock_queue_t
;

161 
PMIX_CLASS_DECLARATION
(
pmix_usock_queue_t
);

163 
	#PMIX_PEER_CADDY
(
c
, 
p
, 
t
) \

165 (
c
Ë
	`PMIX_NEW
(
pmix_£rvî_ˇddy_t
); \

166 (
c
)->
hdr
.
èg
 = (
t
); \

167 
	`PMIX_RETAIN
((
p
)); \

168 (
c
)->
≥î
 = (
p
); \

169 } 0)

	)

171 
	#PMIX_SND_CADDY
(
c
, 
h
, 
s
) \

173 (
c
Ë
	`PMIX_NEW
(
pmix_£rvî_ˇddy_t
); \

174 ()
	`mem˝y
(&(
c
)->
hdr
, &(
h
), (
pmix_usock_hdr_t
)); \

175 
	`PMIX_RETAIN
((
s
)); \

176 (
c
)->
¢d
 = (
s
); \

177 } 0)

	)

179 
	#PMIX_SETUP_COLLECTIVE
(
c
, 
t
) \

181 (
c
Ë
	`PMIX_NEW
(
pmix_åkr_ˇddy_t
); \

182 (
c
)->
åk
 = (
t
); \

183 } 0)

	)

185 
	#PMIX_EXECUTE_COLLECTIVE
(
c
, 
t
, 
f
) \

187 
	`PMIX_SETUP_COLLECTIVE
(
c
, 
t
); \

188 
	`evít_assign
(&((
c
)->
ev
), 
pmix_globÆs
.
evba£
, -1, \

189 
EV_WRITE
, (
f
), (
c
)); \

190 
	`evít_a˘ive
(&((
c
)->
ev
), 
EV_WRITE
, 1); \

191 } 0)

	)

200 
	#PMIX_SERVER_QUEUE_REPLY
(
p
, 
t
, 
b
) \

202 
pmix_usock_queue_t
 *
queue
; \

203 
queue
 = 
	`PMIX_NEW
(
pmix_usock_queue_t
); \

204 
queue
->
≥î
 = (
p
); \

205 
queue
->
buf
 = (
b
); \

206 
queue
->
èg
 = (
t
); \

207 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
, \

209 
__FILE__
, 
__LINE__
, \

210 (
queue
->
≥î
)->
öfo
->
≈å
->
n•a˚
, \

211 (
queue
->
≥î
)->
öfo
->
ønk
, (queue->
èg
)); \

212 
	`evít_assign
(&
queue
->
ev
, 
pmix_globÆs
.
evba£
, -1, \

213 
EV_WRITE
, 
pmix_£rvî_queue_mesßge
, 
queue
); \

214 
	`evít_¥i‹ôy_£t
(&
queue
->
ev
, 0); \

215 
	`evít_a˘ive
(&
queue
->
ev
, 
EV_WRITE
, 1); \

216 } 0)

	)

218 
pmix_°©us_t
 
pmix_¥ï¨e_li°íög
(
pmix_li°íî_t
 *
…
, 
boﬁ
 *
√ed_li°íî
);

219 
pmix_°©us_t
 
pmix_°¨t_li°íög
();

220 
pmix_°›_li°íög
();

222 
boﬁ
 
pmix_£rvî_åk_upd©e
(
pmix_£rvî_åkr_t
 *
åk
);

224 
pmix_≥ndög_n•a˚_ªque°s
(
pmix_n•a˚_t
 *
≈å
);

225 
pmix_°©us_t
 
pmix_≥ndög_ªsﬁve
(
pmix_n•a˚_t
 *
≈å
, 
pmix_ønk_t
 
ønk
,

226 
pmix_°©us_t
 
°©us
, 
pmix_dmdx_loˇl_t
 *
lcd
);

229 
pmix_°©us_t
 
pmix_£rvî_ab‹t
(
pmix_≥î_t
 *
≥î
, 
pmix_buf„r_t
 *
buf
,

230 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
);

232 
pmix_°©us_t
 
pmix_£rvî_commô
(
pmix_≥î_t
 *
≥î
, 
pmix_buf„r_t
 *
buf
);

234 
pmix_°©us_t
 
pmix_£rvî_„n˚
(
pmix_£rvî_ˇddy_t
 *
cd
,

235 
pmix_buf„r_t
 *
buf
,

236 
pmix_modex_cbfunc_t
 
modexcbfunc
,

237 
pmix_›_cbfunc_t
 
›cbfunc
);

239 
pmix_°©us_t
 
pmix_£rvî_gë
(
pmix_buf„r_t
 *
buf
,

240 
pmix_modex_cbfunc_t
 
cbfunc
,

241 *
cbd©a
);

243 
pmix_°©us_t
 
pmix_£rvî_publish
(
pmix_≥î_t
 *
≥î
,

244 
pmix_buf„r_t
 *
buf
,

245 
pmix_›_cbfunc_t
 
cbfunc
,

246 *
cbd©a
);

248 
pmix_°©us_t
 
pmix_£rvî_lookup
(
pmix_≥î_t
 *
≥î
,

249 
pmix_buf„r_t
 *
buf
,

250 
pmix_lookup_cbfunc_t
 
cbfunc
,

251 *
cbd©a
);

253 
pmix_°©us_t
 
pmix_£rvî_u≈ublish
(
pmix_≥î_t
 *
≥î
,

254 
pmix_buf„r_t
 *
buf
,

255 
pmix_›_cbfunc_t
 
cbfunc
,

256 *
cbd©a
);

258 
pmix_°©us_t
 
pmix_£rvî_•awn
(
pmix_≥î_t
 *
≥î
,

259 
pmix_buf„r_t
 *
buf
,

260 
pmix_•awn_cbfunc_t
 
cbfunc
,

261 *
cbd©a
);

263 
pmix_°©us_t
 
pmix_£rvî_c⁄√˘
(
pmix_£rvî_ˇddy_t
 *
cd
,

264 
pmix_buf„r_t
 *
buf
, 
boﬁ
 
disc⁄√˘
,

265 
pmix_›_cbfunc_t
 
cbfunc
);

267 
pmix_∑ck_¥oc_m≠
(
pmix_buf„r_t
 *
buf
,

268 **
nodes
, **
¥ocs
);

269 
pmix_°©us_t
 
pmix_ªgex_∑r£_nodes
(c⁄° *
ªgexp
, ***
«mes
);

270 
pmix_°©us_t
 
pmix_ªgex_∑r£_¥ocs
(c⁄° *
ªgexp
, ***
¥ocs
);

272 
pmix_°©us_t
 
pmix_£rvî_nŸify_îr‹
’mix_°©us_à
°©us
,

273 
pmix_¥oc_t
 
¥ocs
[], 
size_t
 
≈rocs
,

274 
pmix_¥oc_t
 
îr‹_¥ocs
[], 
size_t
 
îr‹_≈rocs
,

275 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
,

276 
pmix_›_cbfunc_t
 
cbfunc
, *
cbd©a
);

278 
pmix_°©us_t
 
pmix_£rvî_ªgi°î_evíts
(
pmix_≥î_t
 *
≥î
,

279 
pmix_buf„r_t
 *
buf
,

280 
pmix_›_cbfunc_t
 
cbfunc
,

281 *
cbd©a
);

283 
pmix_£rvî_dîegi°î_evíts
(
pmix_≥î_t
 *
≥î
,

284 
pmix_buf„r_t
 *
buf
);

286 
pmix_°©us_t
 
pmix_£rvî_quîy
(
pmix_≥î_t
 *
≥î
,

287 
pmix_buf„r_t
 *
buf
,

288 
pmix_öfo_cbfunc_t
 
cbfunc
,

289 *
cbd©a
);

291 
pmix_°©us_t
 
pmix_£rvî_log
(
pmix_≥î_t
 *
≥î
,

292 
pmix_buf„r_t
 *
buf
,

293 
pmix_›_cbfunc_t
 
cbfunc
,

294 *
cbd©a
);

296 
pmix_°©us_t
 
pmix_£rvî_evít_ªcvd_‰om_˛õ¡
(
pmix_≥î_t
 *
≥î
,

297 
pmix_buf„r_t
 *
buf
,

298 
pmix_›_cbfunc_t
 
cbfunc
,

299 *
cbd©a
);

300 
pmix_£rvî_execuã_cﬁÀ˘ive
(
sd
, 
¨gs
, *
cbd©a
);

302 
pmix_£rvî_queue_mesßge
(
fd
, 
¨gs
, *
cbd©a
);

304 
pmix_£rvî_moduÀ_t
 
pmix_ho°_£rvî
;

305 
pmix_£rvî_globÆs_t
 
pmix_£rvî_globÆs
;

	@server/pmix_server_regex.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_°döt.h
>

23 
	~"§c/ö˛ude/pmix_globÆs.h
"

25 #ifde‡
HAVE_STRING_H


26 
	~<°rög.h
>

28 
	~<f˙é.h
>

29 #ifde‡
HAVE_UNISTD_H


30 
	~<uni°d.h
>

32 #ifde‡
HAVE_SYS_TYPES_H


33 
	~<sys/ty≥s.h
>

35 
	~<˘y≥.h
>

37 
	~"§c/˛ass/pmix_li°.h
"

38 
	~"§c/buf„r_›s/buf„r_›s.h
"

39 
	~"§c/utû/¨gv.h
"

40 
	~"§c/utû/îr‹.h
"

41 
	~"§c/utû/ouçut.h
"

42 
	~"§c/£rvî/pmix_£rvî_›s.h
"

44 
pmix_°©us_t
 
ªgex_∑r£_vÆue_ønges
(*
ba£
, *
ønges
,

45 
num_digôs
, *
suffix
,

46 ***
«mes
);

47 
pmix_°©us_t
 
ªgex_∑r£_vÆue_ønge
(*
ba£
, *
ønge
,

48 
num_digôs
, *
suffix
,

49 ***
«mes
);

50 
pmix_°©us_t
 
pmix_ªgex_exåa˘_nodes
(*
ªgexp
, ***
«mes
);

51 
pmix_°©us_t
 
pmix_ªgex_exåa˘_µn
(*
ªgexp
, ***
¥ocs
);

61 
	$pmix_∑ck_¥oc_m≠
(
pmix_buf„r_t
 *
buf
,

62 **
nodes
, **
¥ocs
)

64 
pmix_kvÆ_t
 
kv
;

65 
pmix_vÆue_t
 
vÆ
;

66 
pmix_°©us_t
 
rc
;

67 
pmix_buf„r_t
 
buf2
;

68 
size_t
 
i
, 
¬odes
;

71 i‡(
	`pmix_¨gv_cou¡
(
nodes
Ë!pmix_¨gv_cou¡(
¥ocs
)) {

72 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

76 
	`PMIX_CONSTRUCT
(&
buf2
, 
pmix_buf„r_t
);

77 
	`PMIX_CONSTRUCT
(&
kv
, 
pmix_kvÆ_t
);

78 
kv
.
vÆue
 = &
vÆ
;

79 
vÆ
.
ty≥
 = 
PMIX_STRING
;

82 
¬odes
 = 
	`pmix_¨gv_cou¡
(
nodes
);

83 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
buf2
, &
¬odes
, 1, 
PMIX_SIZE
))) {

84 
	`PMIX_ERROR_LOG
(
rc
);

85 
˛ónup
;

88 
i
=0; i < 
¬odes
; i++) {

90 
kv
.
key
 = 
nodes
[
i
];

91 
vÆ
.
d©a
.
°rög
 = 
¥ocs
[
i
];

92 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(&
buf2
, &
kv
, 1, 
PMIX_KVAL
))) {

93 
	`PMIX_ERROR_LOG
(
rc
);

94 
kv
.
key
 = 
NULL
;

95 
vÆ
.
d©a
.
°rög
 = 
NULL
;

96 
˛ónup
;

99 
kv
.
key
 = 
NULL
;

100 
vÆ
.
d©a
.
°rög
 = 
NULL
;

103 
kv
.
key
 = 
PMIX_MAP_BLOB
;

104 
vÆ
.
ty≥
 = 
PMIX_BYTE_OBJECT
;

105 
vÆ
.
d©a
.
bo
.
byãs
 = 
buf2
.
ba£_±r
;

106 
vÆ
.
d©a
.
bo
.
size
 = 
buf2
.
byãs_u£d
;

107 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`∑ck
(
buf
, &
kv
, 1, 
PMIX_KVAL
))) {

108 
	`PMIX_ERROR_LOG
(
rc
);

110 
kv
.
key
 = 
NULL
;

111 
kv
.
vÆue
 = 
NULL
;

112 
vÆ
.
d©a
.
bo
.
byãs
 = 
NULL
;

113 
vÆ
.
d©a
.
bo
.
size
 = 0;

115 
˛ónup
:

116 
	`PMIX_DESTRUCT
(&
buf2
);

117 
	`PMIX_DESTRUCT
(&
kv
);

119 
	}
}

122 
pmix_°©us_t
 
	$pmix_ªgex_∑r£_nodes
(c⁄° *
ªgexp
, ***
«mes
)

124 *
tmp
, *
±r
;

125 
pmix_°©us_t
 
rc
;

128 *
«mes
 = 
NULL
;

131 i‡(
NULL
 =
ªgexp
) {

132  
PMIX_SUCCESS
;

136 
tmp
 = 
	`°rdup
(
ªgexp
);

138 
tmp
[
	`°æí
(tmp)-1] = '\0';

142 i‡(
NULL
 =(
±r
 = 
	`°rchr
(
tmp
, '['))) {

143 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

144 
	`‰ì
(
tmp
);

145  
PMIX_ERR_BAD_PARAM
;

147 *
±r
 = '\0';

148 ++
±r
;

151 i‡(0 =
	`°rcmp
(
tmp
, "pmix")) {

152 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_ªgex_exåa˘_nodes
(
±r
, 
«mes
))) {

153 
	`PMIX_ERROR_LOG
(
rc
);

156 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_SUPPORTED
);

157 
rc
 = 
PMIX_ERR_NOT_SUPPORTED
;

159 
	`‰ì
(
tmp
);

160  
rc
;

161 
	}
}

164 
pmix_°©us_t
 
	$pmix_ªgex_∑r£_¥ocs
(c⁄° *
ªgexp
, ***
¥ocs
)

166 *
tmp
, *
±r
;

167 
pmix_°©us_t
 
rc
;

170 *
¥ocs
 = 
NULL
;

173 i‡(
NULL
 =
ªgexp
) {

174  
PMIX_SUCCESS
;

178 
tmp
 = 
	`°rdup
(
ªgexp
);

180 
tmp
[
	`°æí
(tmp)-1] = '\0';

184 i‡(
NULL
 =(
±r
 = 
	`°rchr
(
tmp
, '['))) {

185 
	`PMIX_ERROR_LOG
(
PMIX_ERR_BAD_PARAM
);

186 
	`‰ì
(
tmp
);

187  
PMIX_ERR_BAD_PARAM
;

189 *
±r
 = '\0';

190 ++
±r
;

193 i‡(0 =
	`°rcmp
(
tmp
, "pmix")) {

194 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_ªgex_exåa˘_µn
(
±r
, 
¥ocs
))) {

195 
	`PMIX_ERROR_LOG
(
rc
);

198 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_SUPPORTED
);

199 
rc
 = 
PMIX_ERR_NOT_SUPPORTED
;

201 
	`‰ì
(
tmp
);

202  
rc
;

203 
	}
}

206 
pmix_°©us_t
 
	$pmix_ªgex_exåa˘_nodes
(*
ªgexp
, ***
«mes
)

208 
i
, 
j
, 
k
, 
Àn
;

209 
pmix_°©us_t
 
ªt
;

210 *
ba£
;

211 *
‹ig
, *
suffix
;

212 
boﬁ
 
found_ønge
 = 
Ál£
;

213 
boﬁ
 
m‹e_to_come
 = 
Ál£
;

214 
num_digôs
;

217 *
«mes
 = 
NULL
;

219 i‡(
NULL
 =
ªgexp
) {

220  
PMIX_SUCCESS
;

223 
‹ig
 = 
ba£
 = 
	`°rdup
(
ªgexp
);

224 i‡(
NULL
 =
ba£
) {

225 
	`PMIX_ERROR_LOG
(
PMIX_ERR_OUT_OF_RESOURCE
);

226  
PMIX_ERR_OUT_OF_RESOURCE
;

229 
	`PMIX_OUTPUT_VERBOSE
((1, 
pmix_globÆs
.
debug_ouçut
,

230 "pmix:exåa˘:nodes: checkögÜi°: %s", 
ªgexp
));

234 
Àn
 = 
	`°æí
(
ba£
);

235 
i
 = 0; i <
Àn
; ++i) {

236 i‡(
ba£
[
i
] == '[') {

238 
ba£
[
i
] = '\0';

239 
found_ønge
 = 
åue
;

242 i‡(
ba£
[
i
] == ',') {

244 
ba£
[
i
] = '\0';

245 
found_ønge
 = 
Ál£
;

246 
m‹e_to_come
 = 
åue
;

249 i‡(
ba£
[
i
] == '\0') {

251 
found_ønge
 = 
Ál£
;

252 
m‹e_to_come
 = 
Ál£
;

256 i‡(
i
 =0 && !
found_ønge
) {

258 
	`‰ì
(
‹ig
);

259  
PMIX_ERR_BAD_PARAM
;

262 i‡(
found_ønge
) {

264 
i
++;

265 
j
=
i
; j < 
Àn
; j++) {

266 i‡(
ba£
[
j
] == ':') {

267 
ba£
[
j
] = '\0';

271 i‡(
j
 >
Àn
) {

273 
	`‰ì
(
‹ig
);

274  
PMIX_ERR_BAD_PARAM
;

276 
num_digôs
 = 
	`°πﬁ
(&
ba£
[
i
], 
NULL
, 10);

277 
i
 = 
j
 + 1;

279 
j
 = 
i
; j < 
Àn
; ++j) {

280 i‡(
ba£
[
j
] == ']') {

281 
ba£
[
j
] = '\0';

285 i‡(
j
 >
Àn
) {

287 
	`‰ì
(
‹ig
);

288  
PMIX_ERR_BAD_PARAM
;

291 i‡(
j
+1 < 
Àn
 && 
ba£
[j+1] != ',') {

293 
k
=
j
+1; k < 
Àn
 && 
ba£
[k] != ','; k++);

294 i‡(
k
 < 
Àn
) {

295 
ba£
[
k
] = '\0';

297 
suffix
 = 
	`°rdup
(&
ba£
[
j
+1]);

298 i‡(
k
 < 
Àn
) {

299 
ba£
[
k
] = ',';

301 
j
 = 
k
-1;

303 
suffix
 = 
NULL
;

305 
	`PMIX_OUTPUT_VERBOSE
((1, 
pmix_globÆs
.
debug_ouçut
,

307 
ba£
, ba£ + 
i
, 
suffix
));

309 
ªt
 = 
	`ªgex_∑r£_vÆue_ønges
(
ba£
, ba£ + 
i
, 
num_digôs
, 
suffix
, 
«mes
);

310 i‡(
NULL
 !
suffix
) {

311 
	`‰ì
(
suffix
);

313 i‡(
PMIX_SUCCESS
 !
ªt
) {

314 
	`‰ì
(
‹ig
);

315  
ªt
;

317 i‡(
j
+1 < 
Àn
 && 
ba£
[j + 1] == ',') {

318 
m‹e_to_come
 = 
åue
;

319 
ba£
 = &ba£[
j
 + 2];

321 
m‹e_to_come
 = 
Ál£
;

325 if(
PMIX_SUCCESS
 !(
ªt
 = 
	`pmix_¨gv_≠≥nd_nosize
(
«mes
, 
ba£
))) {

326 
	`PMIX_ERROR_LOG
(
ªt
);

327 
	`‰ì
(
‹ig
);

328  
ªt
;

331 
i
++;

333 
ba£
 = &ba£[
i
];

335 } 
m‹e_to_come
);

337 
	`‰ì
(
‹ig
);

340  
ªt
;

341 
	}
}

352 
pmix_°©us_t
 
	$ªgex_∑r£_vÆue_ønges
(*
ba£
, *
ønges
,

353 
num_digôs
, *
suffix
,

354 ***
«mes
)

356 
i
, 
Àn
;

357 
pmix_°©us_t
 
ªt
;

358 *
°¨t
, *
‹ig
;

362 
Àn
 = 
	`°æí
(
ønges
);

363 
‹ig
 = 
°¨t
 = 
ønges
, 
i
 = 0; i < 
Àn
; ++i) {

364 i‡(',' =
ønges
[
i
]) {

365 
ønges
[
i
] = '\0';

366 
ªt
 = 
	`ªgex_∑r£_vÆue_ønge
(
ba£
, 
°¨t
, 
num_digôs
, 
suffix
, 
«mes
);

367 i‡(
PMIX_SUCCESS
 !
ªt
) {

368 
	`PMIX_ERROR_LOG
(
ªt
);

369  
ªt
;

371 
°¨t
 = 
ønges
 + 
i
 + 1;

377 i‡(
°¨t
 < 
‹ig
 + 
Àn
) {

379 
	`PMIX_OUTPUT_VERBOSE
((1, 
pmix_globÆs
.
debug_ouçut
,

380 "ªgex:∑r£:ønges:Ö¨£Ñ™gê%†(2)", 
°¨t
));

382 
ªt
 = 
	`ªgex_∑r£_vÆue_ønge
(
ba£
, 
°¨t
, 
num_digôs
, 
suffix
, 
«mes
);

383 i‡(
PMIX_SUCCESS
 !
ªt
) {

384 
	`PMIX_ERROR_LOG
(
ªt
);

385  
ªt
;

390  
PMIX_SUCCESS
;

391 
	}
}

402 
pmix_°©us_t
 
	$ªgex_∑r£_vÆue_ønge
(*
ba£
, *
ønge
,

403 
num_digôs
, *
suffix
,

404 ***
«mes
)

406 *
°r
, 
tmp
[132];

407 
size_t
 
i
, 
k
, 
°¨t
, 
íd
;

408 
size_t
 
ba£_Àn
, 
Àn
;

409 
boﬁ
 
found
;

410 
pmix_°©us_t
 
ªt
;

412 i‡(
NULL
 =
ba£
 || NULL =
ønge
) {

413  
PMIX_ERROR
;

416 
Àn
 = 
	`°æí
(
ønge
);

417 
ba£_Àn
 = 
	`°æí
(
ba£
);

420 
°¨t
 = 
íd
 = 0;

424 
found
 = 
Ál£
, 
i
 = 0; i < 
Àn
; ++i) {

425 i‡(
	`isdigô
((Ë
ønge
[
i
])) {

426 i‡(!
found
) {

427 
°¨t
 = 
	`©oi
(
ønge
 + 
i
);

428 
found
 = 
åue
;

433 i‡(!
found
) {

434 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_FOUND
);

435  
PMIX_ERR_NOT_FOUND
;

440 
found
 = 
Ál£
; 
i
 < 
Àn
; ++i) {

441 i‡(!
	`isdigô
(
ønge
[
i
])) {

448 i‡(
i
 >
Àn
) {

449 
íd
 = 
°¨t
;

450 
found
 = 
åue
;

455 ; 
i
 < 
Àn
; ++i) {

456 i‡(
	`isdigô
(
ønge
[
i
])) {

457 
íd
 = 
	`°πﬁ
(
ønge
 + 
i
, 
NULL
, 10);

458 
found
 = 
åue
;

463 i‡(!
found
) {

464 
	`PMIX_ERROR_LOG
(
PMIX_ERR_NOT_FOUND
);

465  
PMIX_ERR_NOT_FOUND
;

470 
Àn
 = 
ba£_Àn
 + 
num_digôs
 + 32;

471 i‡(
NULL
 !
suffix
) {

472 
Àn
 +
	`°æí
(
suffix
);

474 
°r
 = (*Ë
	`mÆloc
(
Àn
);

475 i‡(
NULL
 =
°r
) {

476 
	`PMIX_ERROR_LOG
(
PMIX_ERR_OUT_OF_RESOURCE
);

477  
PMIX_ERR_OUT_OF_RESOURCE
;

479 
i
 = 
°¨t
; i <
íd
; ++i) {

480 
	`mem£t
(
°r
, 0, 
Àn
);

481 
	`°r˝y
(
°r
, 
ba£
);

483 
k
=0; k < (
size_t
)
num_digôs
; k++) {

484 
°r
[
k
+
ba£_Àn
] = '0';

486 
	`mem£t
(
tmp
, 0, 132);

487 
	`¢¥ötf
(
tmp
, 132, "%lu", ()
i
);

488 
k
=0; k < 
	`°æí
(
tmp
); k++) {

489 
°r
[
ba£_Àn
 + 
num_digôs
 - 
k
 - 1] = 
tmp
[
	`°æí
(tmp)-k-1];

492 i‡(
NULL
 !
suffix
) {

493 
	`°rˇt
(
°r
, 
suffix
);

495 
ªt
 = 
	`pmix_¨gv_≠≥nd_nosize
(
«mes
, 
°r
);

496 if(
PMIX_SUCCESS
 !
ªt
) {

497 
	`PMIX_ERROR_LOG
(
ªt
);

498 
	`‰ì
(
°r
);

499  
ªt
;

502 
	`‰ì
(
°r
);

505  
PMIX_SUCCESS
;

506 
	}
}

508 
pmix_°©us_t
 
	$pmix_ªgex_exåa˘_µn
(*
ªgexp
, ***
¥ocs
)

510 **
∫gs
, **
nds
, *
t
, **
ps
=
NULL
;

511 
i
, 
j
, 
k
, 
°¨t
, 
íd
;

514 
nds
 = 
	`pmix_¨gv_•lô
(
ªgexp
, ';');

515 
j
=0; 
NULL
 !
nds
[j]; j++) {

517 
∫gs
 = 
	`pmix_¨gv_•lô
(
nds
[
j
], ',');

519 
i
=0; 
NULL
 !
∫gs
[i]; i++) {

521 i‡(
NULL
 =(
t
 = 
	`°rchr
(
∫gs
[
i
], '-'))) {

523 
	`pmix_¨gv_≠≥nd_nosize
(&
ps
, 
∫gs
[
i
]);

526 *
t
 = '\0';

527 
°¨t
 = 
	`°πﬁ
(
∫gs
[
i
], 
NULL
, 10);

528 ++
t
;

529 
íd
 = 
	`°πﬁ
(
t
, 
NULL
, 10);

530 
k
=
°¨t
; k <
íd
; k++) {

531 i‡(0 > 
	`a•rötf
(&
t
, "%d", 
k
)) {

532 
	`pmix_¨gv_‰ì
(
nds
);

533 
	`pmix_¨gv_‰ì
(
∫gs
);

534  
PMIX_ERR_NOMEM
;

536 
	`pmix_¨gv_≠≥nd_nosize
(&
ps
, 
t
);

537 
	`‰ì
(
t
);

541 
	`pmix_¨gv_‰ì
(
∫gs
);

543 
t
 = 
	`pmix_¨gv_joö
(
ps
, ',');

544 
	`pmix_¨gv_≠≥nd_nosize
(
¥ocs
, 
t
);

545 
	`‰ì
(
t
);

546 
	`pmix_¨gv_‰ì
(
ps
);

547 
ps
 = 
NULL
;

550 
	`pmix_¨gv_‰ì
(
nds
);

551  
PMIX_SUCCESS
;

552 
	}
}

	@sm/pmix_mmap.c

12 
	~<uni°d.h
>

13 #ifde‡
HAVE_SYS_TYPES_H


14 
	~<sys/ty≥s.h
>

16 
	~<sys/mm™.h
>

17 
	~<sys/°©.h
>

18 
	~<f˙é.h
>

20 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

21 
	~<pmix_comm⁄.h
>

22 
	~"§c/ö˛ude/pmix_globÆs.h
"

24 
	~"pmix_sm.h
"

25 
	~"pmix_mm≠.h
"

27 #i‡!
deföed
(
MAP_ANONYMOUS
Ë&& deföed(
MAP_ANON
)

28 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

32 
_mm≠_£gmít_¸óã
(
pmix_sm_£g_t
 *
sm_£g
, c⁄° *
fûe_«me
, 
size_t
 
size
);

33 
_mm≠_£gmít_©èch
(
pmix_sm_£g_t
 *
sm_£g
, 
pmix_sm_ac˚ss_mode_t
 
sm_mode
);

34 
_mm≠_£gmít_dëach
(
pmix_sm_£g_t
 *
sm_£g
);

35 
_mm≠_£gmít_u∆ök
(
pmix_sm_£g_t
 *
sm_£g
);

37 
pmix_sm_ba£_moduÀ_t
 
	gpmix_sm_mm≠_moduÀ
 = {

39 
_mm≠_£gmít_¸óã
,

40 
_mm≠_£gmít_©èch
,

41 
_mm≠_£gmít_dëach
,

42 
_mm≠_£gmít_u∆ök


46 
	$_mm≠_£gmít_¸óã
(
pmix_sm_£g_t
 *
sm_£g
, c⁄° *
fûe_«me
, 
size_t
 
size
)

48 
rc
 = 
PMIX_SUCCESS
;

49 *
£g_addr
 = 
MAP_FAILED
;

50 
pid_t
 
my_pid
 = 
	`gëpid
();

52 
	`_£gmít_ds_ª£t
(
sm_£g
);

54 i‡(-1 =(
sm_£g
->
£g_id
 = 
	`›í
(
fûe_«me
, 
O_CREAT
 | 
O_RDWR
, 0600))) {

55 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

57 
rc
 = 
PMIX_ERROR
;

58 
out
;

61 i‡(0 !
	`·runˇã
(
sm_£g
->
£g_id
, 
size
)) {

62 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

64 
rc
 = 
PMIX_ERROR
;

65 
out
;

67 i‡(
MAP_FAILED
 =(
£g_addr
 = 
	`mm≠
(
NULL
, 
size
,

68 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
,

69 
sm_£g
->
£g_id
, 0))) {

70 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

72 
rc
 = 
PMIX_ERROR
;

73 
out
;

75 
sm_£g
->
£g_˝id
 = 
my_pid
;

76 
sm_£g
->
£g_size
 = 
size
;

77 
sm_£g
->
£g_ba£_addr
 = (*)
£g_addr
;

78 ()
	`°∫˝y
(
sm_£g
->
£g_«me
, 
fûe_«me
, 
PMIX_PATH_MAX
 - 1);

80 
out
:

81 i‡(-1 !
sm_£g
->
£g_id
) {

82 i‡(0 !
	`˛o£
(
sm_£g
->
£g_id
)) {

83 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

85 
rc
 = 
PMIX_ERROR
;

89 i‡(
PMIX_SUCCESS
 !
rc
) {

90 i‡(
MAP_FAILED
 !
£g_addr
) {

91 
	`munm≠
((*)
£g_addr
, 
size
);

93 
	`_£gmít_ds_ª£t
(
sm_£g
);

95  
rc
;

96 
	}
}

98 
	$_mm≠_£gmít_©èch
(
pmix_sm_£g_t
 *
sm_£g
, 
pmix_sm_ac˚ss_mode_t
 
sm_mode
)

100 
mode_t
 
mode
 = 
O_RDWR
;

101 
mm≠_¥Ÿ
 = 
PROT_READ
 | 
PROT_WRITE
;

103 i‡(
sm_mode
 =
PMIX_SM_RONLY
) {

104 
mode
 = 
O_RDONLY
;

105 
mm≠_¥Ÿ
 = 
PROT_READ
;

108 i‡(-1 =(
sm_£g
->
£g_id
 = 
	`›í
(sm_£g->
£g_«me
, 
mode
))) {

109  
PMIX_ERROR
;

111 i‡(
MAP_FAILED
 =(
sm_£g
->
£g_ba£_addr
 = (*)

112 
	`mm≠
(
NULL
, 
sm_£g
->
£g_size
,

113 
mm≠_¥Ÿ
, 
MAP_SHARED
,

114 
sm_£g
->
£g_id
, 0))) {

118 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

120 
	`˛o£
(
sm_£g
->
£g_id
);

121  
PMIX_ERROR
;

127 i‡(0 !
	`˛o£
(
sm_£g
->
£g_id
)) {

128 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

131 
sm_£g
->
£g_˝id
 = 0;

132  
PMIX_SUCCESS
;

133 
	}
}

135 
	$_mm≠_£gmít_dëach
(
pmix_sm_£g_t
 *
sm_£g
)

137 
rc
 = 
PMIX_SUCCESS
;

139 i‡(0 !
	`munm≠
((*)
sm_£g
->
£g_ba£_addr
, sm_£g->
£g_size
)) {

140 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

142 
rc
 = 
PMIX_ERROR
;

147 
	`_£gmít_ds_ª£t
(
sm_£g
);

148  
rc
;

149 
	}
}

151 
	$_mm≠_£gmít_u∆ök
(
pmix_sm_£g_t
 *
sm_£g
)

153 i‡(-1 =
	`u∆ök
(
sm_£g
->
£g_«me
)) {

154 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

156  
PMIX_ERROR
;

159 
sm_£g
->
£g_id
 = 
PMIX_SHMEM_DS_ID_INVALID
;

160  
PMIX_SUCCESS
;

161 
	}
}

	@sm/pmix_mmap.h

11 #i‚de‡
PMIX_SM_MMAP_H


12 
	#PMIX_SM_MMAP_H


	)

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

17 
	~"pmix_sm.h
"

19 
BEGIN_C_DECLS


21 
pmix_sm_ba£_moduÀ_t
 
pmix_sm_mm≠_moduÀ
;

23 
	gEND_C_DECLS


	@sm/pmix_sm.c

11 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

12 
	~<pmix_comm⁄.h
>

13 
	~"§c/ö˛ude/pmix_globÆs.h
"

15 
	~"pmix_sm.h
"

16 
	~"pmix_mm≠.h
"

28 
pmix_sm_ba£_moduÀ_t
 *
	gÆl
[] = {

29 &
pmix_sm_mm≠_moduÀ
,

32 
NULL


35 
pmix_sm_ba£_moduÀ_t
 
	gpmix_sm
 = {0};

37 
	$pmix_sm_öô
()

39 
pmix_sm
 = *
Æl
[0];

40  
PMIX_SUCCESS
;

41 
	}
}

43 
	$pmix_sm_föÆize
()

46 
	}
}

48 
	$pmix_sm_£gmít_¸óã
(
pmix_sm_£g_t
 *
sm_£g
, c⁄° *
fûe_«me
, 
size_t
 
size
)

50 i‡(!
pmix_sm
.
£gmít_¸óã
) {

51  
PMIX_ERR_NOT_SUPPORTED
;

54  
pmix_sm
.
	`£gmít_¸óã
(
sm_£g
, 
fûe_«me
, 
size
);

55 
	}
}

57 
	$pmix_sm_£gmít_©èch
(
pmix_sm_£g_t
 *
sm_£g
, 
pmix_sm_ac˚ss_mode_t
 
sm_mode
)

59 i‡(!
pmix_sm
.
£gmít_©èch
) {

60  
PMIX_ERR_NOT_SUPPORTED
;

63  
pmix_sm
.
	`£gmít_©èch
(
sm_£g
, 
sm_mode
);

64 
	}
}

66 
	$pmix_sm_£gmít_dëach
(
pmix_sm_£g_t
 *
sm_£g
)

68 i‡(!
pmix_sm
.
£gmít_dëach
) {

69  
PMIX_ERR_NOT_SUPPORTED
;

72  
pmix_sm
.
	`£gmít_dëach
(
sm_£g
);

73 
	}
}

75 
	$pmix_sm_£gmít_u∆ök
(
pmix_sm_£g_t
 *
sm_£g
)

77 i‡(!
pmix_sm
.
£gmít_u∆ök
) {

78  
PMIX_ERR_NOT_SUPPORTED
;

81  
pmix_sm
.
	`£gmít_u∆ök
(
sm_£g
);

82 
	}
}

	@sm/pmix_sm.h

11 #i‚de‡
PMIX_SM_H


12 
	#PMIX_SM_H


	)

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 
	gBEGIN_C_DECLS


20 #i‡!
deföed
(
MAP_FAILED
)

21 
	#MAP_FAILED
 ((*)-1)

	)

24 
	#PMIX_SHMEM_DS_ID_INVALID
 -1

	)

27 
	mPMIX_SM_RONLY
,

28 
	mPMIX_SM_RW


29 } 
	tpmix_sm_ac˚ss_mode_t
;

31 
	spmix_sm_£g_t
 {

33 
pid_t
 
	m£g_˝id
;

35 
	m£g_id
;

37 
size_t
 
	m£g_size
;

39 *
	m£g_ba£_addr
;

40 
	m£g_«me
[
PMIX_PATH_MAX
];

41 } 
	tpmix_sm_£g_t
;

43 
pmix_sm_öô
();

44 
pmix_sm_föÆize
();

45 
pmix_sm_£gmít_¸óã
(
pmix_sm_£g_t
 *
sm_£g
, c⁄° *
fûe_«me
, 
size_t
 
size
);

46 
pmix_sm_£gmít_©èch
(
pmix_sm_£g_t
 *
sm_£g
, 
pmix_sm_ac˚ss_mode_t
 
sm_mode
);

47 
pmix_sm_£gmít_dëach
(
pmix_sm_£g_t
 *
sm_£g
);

48 
pmix_sm_£gmít_u∆ök
(
pmix_sm_£g_t
 *
sm_£g
);

50 
ölöe
 
	$_£gmít_ds_ª£t
(
pmix_sm_£g_t
 *
sm_£g
)

52 
sm_£g
->
£g_˝id
 = 0;

53 
sm_£g
->
£g_id
 = 
PMIX_SHMEM_DS_ID_INVALID
;

54 
sm_£g
->
£g_size
 = 0;

55 
	`mem£t
(
sm_£g
->
£g_«me
, '\0', 
PMIX_PATH_MAX
);

56 
sm_£g
->
£g_ba£_addr
 = (*)
MAP_FAILED
;

57 
	}
}

73 (*
	tpmix_sm_ba£_moduÀ_£gmít_¸óã_‚_t
)(
	tpmix_sm_£g_t
 *
	tsm_£g
, c⁄° *
	tfûe_«me
, 
	tsize_t
 
	tsize
);

84 (*
	tpmix_sm_ba£_moduÀ_£gmít_©èch_‚_t
)(
	tpmix_sm_£g_t
 *
	tsm_£g
, 
	tpmix_sm_ac˚ss_mode_t
 
	tsm_mode
);

94 (*
	tpmix_sm_ba£_moduÀ_£gmít_dëach_‚_t
)(
	tpmix_sm_£g_t
 *
	tsm_£g
);

104 (*
	tpmix_sm_ba£_moduÀ_u∆ök_‚_t
)(
	tpmix_sm_£g_t
 *
	tsm_£g
);

111 c⁄° *
«me
;

112 
pmix_sm_ba£_moduÀ_£gmít_¸óã_‚_t
 
£gmít_¸óã
;

113 
pmix_sm_ba£_moduÀ_£gmít_©èch_‚_t
 
£gmít_©èch
;

114 
pmix_sm_ba£_moduÀ_£gmít_dëach_‚_t
 
£gmít_dëach
;

115 
pmix_sm_ba£_moduÀ_u∆ök_‚_t
 
£gmít_u∆ök
;

116 } 
	tpmix_sm_ba£_moduÀ_t
;

119 
END_C_DECLS


	@tool/pmix_tool.c

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~<§c/ö˛ude/ty≥s.h
>

21 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

23 
	~"§c/˛õ¡/pmix_˛õ¡_›s.h
"

24 
	~<pmix_toﬁ.h
>

26 
	~"§c/ö˛ude/pmix_globÆs.h
"

28 #ifde‡
HAVE_STRING_H


29 
	~<°rög.h
>

31 
	~<f˙é.h
>

32 #ifde‡
HAVE_UNISTD_H


33 
	~<uni°d.h
>

35 #ifde‡
HAVE_SYS_SOCKET_H


36 
	~<sys/sockë.h
>

38 #ifde‡
HAVE_SYS_UN_H


39 
	~<sys/un.h
>

41 #ifde‡
HAVE_SYS_UIO_H


42 
	~<sys/uio.h
>

44 #ifde‡
HAVE_SYS_TYPES_H


45 
	~<sys/ty≥s.h
>

47 #ifde‡
HAVE_DIRENT_H


48 
	~<dúít.h
>

51 #ö˛udê
PMIX_EVENT_HEADER


52 #ö˛udê
PMIX_EVENT2_THREAD_HEADER


54 #i‡
PMIX_CC_USE_PRAGMA_IDENT


55 #¥agm®
idít
 
PMIX_VERSION


56 #ñi‡
PMIX_CC_USE_IDENT


57 #idíà
PMIX_VERSION


60 
pmix_˛õ¡_globÆs_t
 
pmix_˛õ¡_globÆs
;

62 
	~"§c/˛ass/pmix_li°.h
"

63 
	~"§c/buf„r_›s/buf„r_›s.h
"

64 
	~"§c/utû/¨gv.h
"

65 
	~"§c/utû/îr‹.h
"

66 
	~"§c/utû/hash.h
"

67 
	~"§c/utû/ouçut.h
"

68 
	~"§c/ru¡ime/pmix_¥ogªss_thªads.h
"

69 
	~"§c/usock/usock.h
"

70 
	~"§c/£c/pmix_£c.h
"

71 
	~"§c/ö˛ude/pmix_globÆs.h
"

72 #i‡
deföed
(
PMIX_ENABLE_DSTORE
) && (PMIX_ENABLE_DSTORE == 1)

73 
	~"§c/d°‹e/pmix_d°‹e.h
"

76 
	#PMIX_MAX_RETRIES
 10

	)

78 *
	gmytmpdú
 = 
NULL
;

79 *
	gsy°mpdú
 = 
NULL
;

81 
pmix_°©us_t
 
usock_c⁄√˘
(
sockaddr_un
 *
addªss
, *
fd
);

83 
	$_nŸify_com∂ëe
(
pmix_°©us_t
 
°©us
, *
cbd©a
)

85 
pmix_evít_chaö_t
 *
chaö
 = (pmix_evít_chaö_t*)
cbd©a
;

86 
	`PMIX_RELEASE
(
chaö
);

87 
	}
}

89 
	$pmix_toﬁ_nŸify_ªcv
(
pmix_≥î_t
 *
≥î
, 
pmix_usock_hdr_t
 *
hdr
,

90 
pmix_buf„r_t
 *
buf
, *
cbd©a
)

92 
pmix_°©us_t
 
rc
;

93 
öt32_t
 
˙t
;

94 
pmix_cmd_t
 
cmd
;

95 
pmix_evít_chaö_t
 *
chaö
;

97 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

101 
chaö
 = 
	`PMIX_NEW
(
pmix_evít_chaö_t
);

102 
chaö
->
föÆ_cbfunc
 = 
_nŸify_com∂ëe
;

103 
chaö
->
föÆ_cbd©a
 = chain;

105 
˙t
=1;

106 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
cmd
, &
˙t
, 
PMIX_CMD
))) {

107 
	`PMIX_ERROR_LOG
(
rc
);

108 
îr‹
;

111 
˙t
=1;

112 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
chaö
->
°©us
, &
˙t
, 
PMIX_INT
))) {

113 
	`PMIX_ERROR_LOG
(
rc
);

114 
îr‹
;

118 
˙t
=1;

119 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
chaö
->
sour˚
, &
˙t
, 
PMIX_PROC
))) {

120 
	`PMIX_ERROR_LOG
(
rc
);

121 
îr‹
;

125 
˙t
=1;

126 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, &
chaö
->
nöfo
, &
˙t
, 
PMIX_SIZE
))) {

127 
	`PMIX_ERROR_LOG
(
rc
);

128 
îr‹
;

130 i‡(0 < 
chaö
->
nöfo
) {

131 
	`PMIX_INFO_CREATE
(
chaö
->
öfo
, chaö->
nöfo
);

132 
˙t
 = 
chaö
->
nöfo
;

133 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`u≈ack
(
buf
, 
chaö
->
öfo
, &
˙t
, 
PMIX_INFO
))) {

134 
	`PMIX_ERROR_LOG
(
rc
);

135 
îr‹
;

138 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

140 
pmix_globÆs
.
myid
.
n•a˚
,Ömix_globÆs.myid.
ønk
, 
chaö
->
°©us
);

142 
	`pmix_övoke_loˇl_evít_hdÃ
(
chaö
);

145 
îr‹
:

147 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

148 "pmix:toﬁ_nŸify_ªcv - u≈ackÉº‹ sètu†=%d, cÆlög de‡îrh™dÀr", 
rc
);

149 
chaö
 = 
	`PMIX_NEW
(
pmix_evít_chaö_t
);

150 
chaö
->
°©us
 = 
rc
;

151 
	`pmix_övoke_loˇl_evít_hdÃ
(
chaö
);

152 
	}
}

156 
pmix_°©us_t
 
	$c⁄√˘_to_£rvî
(
sockaddr_un
 *
addªss
)

158 
sd
;

159 
pmix_°©us_t
 
ªt
;

161 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`usock_c⁄√˘
(
addªss
, &
sd
))) {

162 
	`PMIX_ERROR_LOG
(
ªt
);

163  
ªt
;

165 
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
 = sd;

167 
	`evít_assign
(&
pmix_˛õ¡_globÆs
.
my£rvî
.
ªcv_evít
,

168 
pmix_globÆs
.
evba£
,

169 
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
,

170 
EV_READ
 | 
EV_PERSIST
,

171 
pmix_usock_ªcv_h™dÀr
, &
pmix_˛õ¡_globÆs
.
my£rvî
);

172 
	`evít_add
(&
pmix_˛õ¡_globÆs
.
my£rvî
.
ªcv_evít
, 0);

173 
pmix_˛õ¡_globÆs
.
my£rvî
.
ªcv_ev_a˘ive
 = 
åue
;

176 
	`evít_assign
(&
pmix_˛õ¡_globÆs
.
my£rvî
.
£nd_evít
,

177 
pmix_globÆs
.
evba£
,

178 
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
,

179 
EV_WRITE
|
EV_PERSIST
,

180 
pmix_usock_£nd_h™dÀr
, &
pmix_˛õ¡_globÆs
.
my£rvî
);

181 
pmix_˛õ¡_globÆs
.
my£rvî
.
£nd_ev_a˘ive
 = 
Ál£
;

183  
PMIX_SUCCESS
;

184 
	}
}

186 
PMIX_EXPORT
 
	$PMIx_toﬁ_öô
(
pmix_¥oc_t
 *
¥oc
,

187 
pmix_öfo_t
 
öfo
[], 
size_t
 
nöfo
)

189 *
ev¨
, *
tdú
, *
tmp
;

190 
debug_Àvñ
;

191 
sockaddr_un
 
addªss
;

192 
size_t
 
n
;

193 
pmix_kvÆ_t
 *
k±r
;

194 
pmix_°©us_t
 
rc
;

195 
pmix_n•a˚_t
 *
≈å
, *
n•å
;

196 
pid_t
 
£rvî_pid
=0;

197 
boﬁ
 
£rvî_pid_giví
 = 
Ál£
;

198 
ho°«mñí
 = 30;

199 
ho°«me
[
ho°«mñí
];

200 
DIR
 *
cur_dúp
 = 
NULL
;

201 
dúít
 * 
dú_íåy
;

202 
boﬁ
 
c⁄√˘_to_sy°em_£rvî
 = 
Ál£
;

203 
boﬁ
 
c⁄√˘_to_sy°em_fú°
 = 
Ál£
;

204 
boﬁ
 
c⁄√˘i⁄_deföed
 = 
Ál£
;

206 i‡(
NULL
 =
¥oc
) {

207  
PMIX_ERR_BAD_PARAM
;

210 i‡(0 < 
pmix_globÆs
.
öô_˙å
) {

214 i‡(
NULL
 !
¥oc
) {

215 ()
	`°∫˝y
(
¥oc
->
n•a˚
, 
pmix_globÆs
.
myid
.n•a˚, 
PMIX_MAX_NSLEN
);

216 
¥oc
->
ønk
 = 
pmix_globÆs
.
myid
.rank;

218 ++
pmix_globÆs
.
öô_˙å
;

219  
PMIX_SUCCESS
;

223 i‡(
NULL
 !
öfo
) {

224 
n
=0;Ç < 
nöfo
;Ç++) {

225 i‡(0 =
	`°rcmp
(
PMIX_EVENT_BASE
, 
öfo
[
n
].
key
)) {

226 
pmix_globÆs
.
evba£
 = (
pmix_evít_ba£_t
*)
öfo
[
n
].
vÆue
.
d©a
.
±r
;

227 
pmix_globÆs
.
exã∫Æ_evba£
 = 
åue
;

228 } i‡(
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SERVER_PIDINFO
) == 0) {

229 
£rvî_pid
 = 
öfo
[
n
].
vÆue
.
d©a
.
pid
;

230 
£rvî_pid_giví
 = 
åue
;

231 } i‡(
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_CONNECT_TO_SYSTEM
) == 0) {

232 
c⁄√˘_to_sy°em_£rvî
 = 
öfo
[
n
].
vÆue
.
d©a
.
Êag
;

233 
c⁄√˘i⁄_deföed
 = 
åue
;

234 } i‡(
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_CONNECT_SYSTEM_FIRST
) == 0) {

235 
c⁄√˘_to_sy°em_fú°
 = 
öfo
[
n
].
vÆue
.
d©a
.
Êag
;

236 
c⁄√˘i⁄_deföed
 = 
åue
;

237 } i‡(
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SERVER_TMPDIR
) == 0 &&

238 
NULL
 =
mytmpdú
) {

239 
mytmpdú
 = 
	`°rdup
(
öfo
[
n
].
vÆue
.
d©a
.
°rög
);

240 } i‡(
	`°rcmp
(
öfo
[
n
].
key
, 
PMIX_SYSTEM_TMPDIR
) == 0 &&

241 
NULL
 =
sy°mpdú
) {

242 
sy°mpdú
 = 
	`°rdup
(
öfo
[
n
].
vÆue
.
d©a
.
°rög
);

248 
	`pmix_globÆs_öô
();

249 
	`PMIX_CONSTRUCT
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
, 
pmix_li°_t
);

250 
	`PMIX_CONSTRUCT
(&
pmix_˛õ¡_globÆs
.
my£rvî
, 
pmix_≥î_t
);

252 
pmix_globÆs
.
£rvî
 = 
Ál£
;

254 
pmix_globÆs
.
uid
 = 
	`gëeuid
();

255 
pmix_globÆs
.
gid
 = 
	`gëegid
();

257 i‡(!
	`pmix_ouçut_öô
()) {

258  
PMIX_ERROR
;

262 i‡(
NULL
 !(
ev¨
 = 
	`gëív
("PMIX_DEBUG"))) {

263 
debug_Àvñ
 = 
	`°πﬁ
(
ev¨
, 
NULL
, 10);

264 
pmix_globÆs
.
debug_ouçut
 = 
	`pmix_ouçut_›í
(
NULL
);

265 
	`pmix_ouçut_£t_vîbosôy
(
pmix_globÆs
.
debug_ouçut
, 
debug_Àvñ
);

268 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

272 
	`mem£t
(&
addªss
, 0, (
sockaddr_un
));

273 
addªss
.
sun_Ámûy
 = 
AF_UNIX
;

275 
	`gëho°«me
(
ho°«me
, 
ho°«mñí
);

277 
ho°«me
[
ho°«mñí
-1] = '\0';

283 i‡(
c⁄√˘_to_sy°em_£rvî
 || 
c⁄√˘_to_sy°em_fú°
 || !
c⁄√˘i⁄_deföed
) {

285 i‡(
NULL
 !
sy°mpdú
) {

286 
tdú
 = 
sy°mpdú
;

287 } i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMPDIR"))) {

288 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TEMP"))) {

289 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMP"))) {

290 
tdú
 = "/tmp";

294 
	`¢¥ötf
(
addªss
.
sun_∑th
, ◊ddªss.sun_∑th)-1, "%s/pmix.sys.%s", 
tdú
, 
ho°«me
);

296 i‡(0 !
	`ac˚ss
(
addªss
.
sun_∑th
, 
R_OK
)) {

298 i‡(
c⁄√˘_to_sy°em_£rvî
) {

299  
PMIX_ERR_UNREACH
;

302 
	`mem£t
(&
addªss
, 0, (
sockaddr_un
));

303 
addªss
.
sun_Ámûy
 = 
AF_UNIX
;

304 
c⁄√˘i⁄_deföed
 = 
Ál£
;

307 
c⁄√˘i⁄_deföed
 = 
åue
;

311 i‡(!
c⁄√˘i⁄_deföed
) {

318 i‡(
NULL
 !
mytmpdú
) {

319 
tdú
 = 
mytmpdú
;

320 } i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMPDIR"))) {

321 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TEMP"))) {

322 i‡(
NULL
 =(
tdú
 = 
	`gëív
("TMP"))) {

323 
tdú
 = "/tmp";

331 i‡(
£rvî_pid_giví
) {

332 
	`¢¥ötf
(
addªss
.
sun_∑th
, ◊ddªss.sun_∑th)-1, "%s/pmix.%s.%d", 
tdú
, 
ho°«me
, 
£rvî_pid
);

334 i‡(0 !
	`ac˚ss
(
addªss
.
sun_∑th
, 
R_OK
)) {

335  
PMIX_ERR_NOT_FOUND
;

339 i‡(
NULL
 =(
cur_dúp
 = 
	`›ídú
(
tdú
))) {

340  
PMIX_ERR_NOT_FOUND
;

343 i‡(0 > 
	`a•rötf
(&
tmp
, "pmix.%s", 
ho°«me
)) {

344 
	`˛o£dú
(
cur_dúp
);

345  
PMIX_ERR_NOMEM
;

347 
ev¨
 = 
NULL
;

348 
NULL
 !(
dú_íåy
 = 
	`ªaddú
(
cur_dúp
))) {

349 i‡(0 =
	`°∫cmp
(
dú_íåy
->
d_«me
, 
tmp
, 
	`°æí
(tmp))) {

351 i‡(
NULL
 !
ev¨
) {

352 
	`˛o£dú
(
cur_dúp
);

353 
	`‰ì
(
ev¨
);

354 
	`‰ì
(
tmp
);

355  
PMIX_ERR_INIT
;

357 
ev¨
 = 
	`°rdup
(
dú_íåy
->
d_«me
);

360 
	`‰ì
(
tmp
);

361 
	`˛o£dú
(
cur_dúp
);

362 i‡(
NULL
 =
ev¨
) {

364  
PMIX_ERR_INIT
;

367 
	`¢¥ötf
(
addªss
.
sun_∑th
, ◊ddªss.sun_∑th)-1, "%s/%s", 
tdú
, 
ev¨
);

368 
	`‰ì
(
ev¨
);

372 
	`pmix_b‰›_›í
();

373 
	`pmix_usock_öô
(
pmix_toﬁ_nŸify_ªcv
);

374 
	`pmix_£c_öô
();

378 
	`pmix_evít_u£_thªads
();

380 i‡(!
pmix_globÆs
.
exã∫Æ_evba£
) {

382 i‡(
NULL
 =(
pmix_globÆs
.
evba£
 = 
	`pmix_¥ogªss_thªad_öô
(NULL))) {

389 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`c⁄√˘_to_£rvî
(&
addªss
))) {

390  
rc
;

393 
pmix_globÆs
.
öô_˙å
++;

396 ()
	`°∫˝y
(
¥oc
->
n•a˚
, 
pmix_globÆs
.
myid
.n•a˚, 
PMIX_MAX_NSLEN
);

397 
¥oc
->
ønk
 = 
pmix_globÆs
.
myid
.rank;

403 
n•å
 = 
NULL
;

404 
	`PMIX_LIST_FOREACH
(
≈å
, &
pmix_globÆs
.
n•a˚s
, 
pmix_n•a˚_t
) {

405 i‡(0 =
	`°∫cmp
(
pmix_globÆs
.
myid
.
n•a˚
, 
≈å
->n•a˚, 
PMIX_MAX_NSLEN
)) {

406 
n•å
 = 
≈å
;

410 i‡(
NULL
 =
n•å
) {

411  
PMIX_ERR_NOT_FOUND
;

415 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

416 
k±r
->
key
 = 
	`°rdup
(
PMIX_JOBID
);

417 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

418 
k±r
->
vÆue
->
ty≥
 = 
PMIX_STRING
;

419 
k±r
->
vÆue
->
d©a
.
°rög
 = 
	`°rdup
(
n•å
->
n•a˚
);

420 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

421 
	`PMIX_ERROR_LOG
(
rc
);

422  
rc
;

424 
	`PMIX_RELEASE
(
k±r
);

427 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

428 
k±r
->
key
 = 
	`°rdup
(
PMIX_RANK
);

429 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

430 
k±r
->
vÆue
->
ty≥
 = 
PMIX_INT
;

431 
k±r
->
vÆue
->
d©a
.
öãgî
 = 0;

432 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

433 
	`PMIX_ERROR_LOG
(
rc
);

434  
rc
;

436 
	`PMIX_RELEASE
(
k±r
);

439 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

440 
k±r
->
key
 = 
	`°rdup
(
PMIX_NPROC_OFFSET
);

441 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

442 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

443 
k±r
->
vÆue
->
d©a
.
uöt32
 = 0;

444 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

445 
	`PMIX_ERROR_LOG
(
rc
);

446  
rc
;

448 
	`PMIX_RELEASE
(
k±r
);

451 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

452 
k±r
->
key
 = 
	`°rdup
(
PMIX_NODE_SIZE
);

453 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

454 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

455 
k±r
->
vÆue
->
d©a
.
uöt32
 = 1;

456 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

457 
	`PMIX_ERROR_LOG
(
rc
);

458  
rc
;

460 
	`PMIX_RELEASE
(
k±r
);

463 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

464 
k±r
->
key
 = 
	`°rdup
(
PMIX_LOCAL_PEERS
);

465 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

466 
k±r
->
vÆue
->
ty≥
 = 
PMIX_STRING
;

467 
k±r
->
vÆue
->
d©a
.
°rög
 = 
	`°rdup
("0");

468 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

469 
	`PMIX_ERROR_LOG
(
rc
);

470  
rc
;

472 
	`PMIX_RELEASE
(
k±r
);

475 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

476 
k±r
->
key
 = 
	`°rdup
(
PMIX_LOCALLDR
);

477 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

478 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

479 
k±r
->
vÆue
->
d©a
.
uöt32
 = 0;

480 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

481 
	`PMIX_ERROR_LOG
(
rc
);

482  
rc
;

484 
	`PMIX_RELEASE
(
k±r
);

487 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

488 
k±r
->
key
 = 
	`°rdup
(
PMIX_UNIV_SIZE
);

489 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

490 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

491 
k±r
->
vÆue
->
d©a
.
uöt32
 = 1;

492 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

493 
	`PMIX_ERROR_LOG
(
rc
);

494  
rc
;

496 
	`PMIX_RELEASE
(
k±r
);

499 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

500 
k±r
->
key
 = 
	`°rdup
(
PMIX_JOB_SIZE
);

501 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

502 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

503 
k±r
->
vÆue
->
d©a
.
uöt32
 = 1;

504 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

505 
	`PMIX_ERROR_LOG
(
rc
);

506  
rc
;

508 
	`PMIX_RELEASE
(
k±r
);

511 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

512 
k±r
->
key
 = 
	`°rdup
(
PMIX_LOCAL_SIZE
);

513 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

514 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

515 
k±r
->
vÆue
->
d©a
.
uöt32
 = 1;

516 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

517 
	`PMIX_ERROR_LOG
(
rc
);

518  
rc
;

520 
	`PMIX_RELEASE
(
k±r
);

524 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

525 
k±r
->
key
 = 
	`°rdup
(
PMIX_MAX_PROCS
);

526 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

527 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

528 
k±r
->
vÆue
->
d©a
.
uöt32
 = 1;

529 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

530 
	`PMIX_ERROR_LOG
(
rc
);

531  
rc
;

533 
	`PMIX_RELEASE
(
k±r
);

536 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

537 
k±r
->
key
 = 
	`°rdup
(
PMIX_APPNUM
);

538 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

539 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

540 
k±r
->
vÆue
->
d©a
.
uöt32
 = 0;

541 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

542 
	`PMIX_ERROR_LOG
(
rc
);

543  
rc
;

545 
	`PMIX_RELEASE
(
k±r
);

548 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

549 
k±r
->
key
 = 
	`°rdup
(
PMIX_APPLDR
);

550 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

551 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

552 
k±r
->
vÆue
->
d©a
.
uöt32
 = 0;

553 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

554 
	`PMIX_ERROR_LOG
(
rc
);

555  
rc
;

557 
	`PMIX_RELEASE
(
k±r
);

560 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

561 
k±r
->
key
 = 
	`°rdup
(
PMIX_APP_RANK
);

562 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

563 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

564 
k±r
->
vÆue
->
d©a
.
uöt32
 = 0;

565 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

566 
	`PMIX_ERROR_LOG
(
rc
);

568 
	`PMIX_RELEASE
(
k±r
);

571 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

572 
k±r
->
key
 = 
	`°rdup
(
PMIX_GLOBAL_RANK
);

573 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

574 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

575 
k±r
->
vÆue
->
d©a
.
uöt32
 = 0;

576 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

577 
	`PMIX_ERROR_LOG
(
rc
);

578  
rc
;

580 
	`PMIX_RELEASE
(
k±r
);

583 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

584 
k±r
->
key
 = 
	`°rdup
(
PMIX_LOCAL_RANK
);

585 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

586 
k±r
->
vÆue
->
ty≥
 = 
PMIX_UINT32
;

587 
k±r
->
vÆue
->
d©a
.
uöt32
 = 0;

588 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

589 
	`PMIX_ERROR_LOG
(
rc
);

590  
rc
;

592 
	`PMIX_RELEASE
(
k±r
);

600 
	`gëho°«me
(
ho°«me
, 
PMIX_MAX_NSLEN
);

601 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

602 
k±r
->
key
 = 
	`°rdup
(
PMIX_HOSTNAME
);

603 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

604 
k±r
->
vÆue
->
ty≥
 = 
PMIX_STRING
;

605 
k±r
->
vÆue
->
d©a
.
°rög
 = 
	`°rdup
(
ho°«me
);

606 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

607 
	`PMIX_ERROR_LOG
(
rc
);

608  
rc
;

610 
	`PMIX_RELEASE
(
k±r
);

618 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

619 
k±r
->
key
 = 
	`°rdup
(
PMIX_NODE_MAP
);

620 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

621 
k±r
->
vÆue
->
ty≥
 = 
PMIX_STRING
;

622 
k±r
->
vÆue
->
d©a
.
°rög
 = 
	`°rdup
(
ho°«me
);

623 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

624 
	`PMIX_ERROR_LOG
(
rc
);

625  
rc
;

627 
	`PMIX_RELEASE
(
k±r
);

631 
k±r
 = 
	`PMIX_NEW
(
pmix_kvÆ_t
);

632 
k±r
->
key
 = 
	`°rdup
(
PMIX_PROC_MAP
);

633 
	`PMIX_VALUE_CREATE
(
k±r
->
vÆue
, 1);

634 
k±r
->
vÆue
->
ty≥
 = 
PMIX_STRING
;

635 
k±r
->
vÆue
->
d©a
.
°rög
 = 
	`°rdup
("0");

636 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_hash_°‹e
(&
n•å
->
öã∫Æ
, 
pmix_globÆs
.
myid
.
ønk
, 
k±r
))) {

637 
	`PMIX_ERROR_LOG
(
rc
);

638  
rc
;

640 
	`PMIX_RELEASE
(
k±r
);

642  
rc
;

643 
	}
}

645 
PMIX_EXPORT
 
pmix_°©us_t
 
	$PMIx_toﬁ_föÆize
()

647 i‡(1 !
pmix_globÆs
.
öô_˙å
) {

648 --
pmix_globÆs
.
öô_˙å
;

649  
PMIX_SUCCESS
;

651 
pmix_globÆs
.
öô_˙å
 = 0;

653 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

656 i‡(!
pmix_globÆs
.
exã∫Æ_evba£
) {

657 
	`pmix_¥ogªss_thªad_föÆize
(
NULL
);

660 
	`pmix_usock_föÆize
();

661 
	`PMIX_DESTRUCT
(&
pmix_˛õ¡_globÆs
.
my£rvî
);

662 
	`PMIX_LIST_DESTRUCT
(&
pmix_˛õ¡_globÆs
.
≥ndög_ªque°s
);

664 i‡(0 <
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
) {

665 
	`CLOSE_THE_SOCKET
(
pmix_˛õ¡_globÆs
.
my£rvî
.
sd
);

675 #ifde‡
HAVE_LIBEVENT_GLOBAL_SHUTDOWN


676 
	`libevít_globÆ_shutdown
();

678 
	`pmix_b‰›_˛o£
();

679 
	`pmix_£c_föÆize
();

681 i‡(
NULL
 !
mytmpdú
) {

682 
	`‰ì
(
mytmpdú
);

684 i‡(
NULL
 !
sy°mpdú
) {

685 
	`‰ì
(
sy°mpdú
);

687 
	`pmix_globÆs_föÆize
();

689 
	`pmix_ouçut_˛o£
(
pmix_globÆs
.
debug_ouçut
);

690 
	`pmix_ouçut_föÆize
();

691 
	`pmix_˛ass_föÆize
();

693  
PMIX_SUCCESS
;

694 
	}
}

703 
pmix_°©us_t
 
	$£nd_c⁄√˘_ack
(
sd
)

705 *
msg
;

706 
pmix_usock_hdr_t
 
hdr
;

707 
size_t
 
sdsize
=0, 
csize
=0;

708 *
¸ed
 = 
NULL
;

710 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

714 
	`mem£t
(&
hdr
, 0, (
pmix_usock_hdr_t
));

715 
hdr
.
pödex
 = -1;

716 
hdr
.
èg
 = 
UINT32_MAX
;

720 i‡(
NULL
 !
pmix_£c
.
¸óã_¸ed
) {

721 i‡(
NULL
 =(
¸ed
 = 
pmix_£c
.
	`¸óã_¸ed
())) {

723  
PMIX_ERR_INVALID_CRED
;

725 
csize
 = 
	`°æí
(
¸ed
) + 1;

728 
hdr
.
nbyãs
 = 
	`°æí
(
PMIX_VERSION
Ë+ 1 + 
csize
;

731 
sdsize
 = ((
hdr
Ë+ hdr.
nbyãs
);

732 i‡(
NULL
 =(
msg
 = (*)
	`mÆloc
(
sdsize
))) {

733 i‡(
NULL
 !
¸ed
) {

734 
	`‰ì
(
¸ed
);

736  
PMIX_ERR_OUT_OF_RESOURCE
;

738 
	`mem£t
(
msg
, 0, 
sdsize
);

740 
csize
=0;

741 
	`mem˝y
(
msg
, &
hdr
, (
pmix_usock_hdr_t
));

742 
csize
 +(
pmix_usock_hdr_t
);

745 
	`mem˝y
(
msg
+
csize
, 
PMIX_VERSION
, 
	`°æí
(PMIX_VERSION));

746 
csize
 +
	`°æí
(
PMIX_VERSION
)+1;

747 i‡(
NULL
 !
¸ed
) {

748 
	`mem˝y
(
msg
+
csize
, 
¸ed
, 
	`°æí
(cred));

751 i‡(
PMIX_SUCCESS
 !
	`pmix_usock_£nd_blockög
(
sd
, 
msg
, 
sdsize
)) {

752 
	`‰ì
(
msg
);

753 i‡(
NULL
 !
¸ed
) {

754 
	`‰ì
(
¸ed
);

756  
PMIX_ERR_UNREACH
;

759 
	`‰ì
(
msg
);

760 i‡(
NULL
 !
¸ed
) {

761 
	`‰ì
(
¸ed
);

764  
PMIX_SUCCESS
;

765 
	}
}

771 
pmix_°©us_t
 
	$ªcv_c⁄√˘_ack
(
sd
)

773 
pmix_°©us_t
 
ª∂y
;

774 
timevÆ
 
tv
, 
ßve
;

775 
pmix_sockÀn_t
 
sz
;

776 
boﬁ
 
sock›t
 = 
åue
;

777 
pmix_n•a˚_t
 *
n•å
;

779 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

783 
sz
 = (
ßve
);

784 i‡(0 !
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, (*)&
ßve
, &
sz
)) {

785 i‡(
ENOPROTOOPT
 =
î∫o
) {

786 
sock›t
 = 
Ál£
;

788  
PMIX_ERR_UNREACH
;

792 
tv
.
tv_£c
 = 2;

793 
tv
.
tv_u£c
 = 0;

794 i‡(0 !
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, &
tv
, (tv))) {

795 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

797  
PMIX_ERR_UNREACH
;

802 
	`pmix_usock_ªcv_blockög
(
sd
, (*)&
ª∂y
, (
pmix_°©us_t
));

803 i‡(
PMIX_SUCCESS
 !
ª∂y
) {

804  
ª∂y
;

808 
	`pmix_usock_ªcv_blockög
(
sd
, (*)&
ª∂y
, (
pmix_°©us_t
));

809 i‡(
PMIX_SUCCESS
 !
ª∂y
) {

810  
ª∂y
;

814 
	`pmix_usock_ªcv_blockög
(
sd
, 
pmix_globÆs
.
myid
.
n•a˚
, 
PMIX_MAX_NSLEN
+1);

817 
n•å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

818 ()
	`°∫˝y
(
n•å
->
n•a˚
, 
pmix_globÆs
.
myid
.n•a˚, 
PMIX_MAX_NSLEN
);

819 
	`pmix_li°_≠≥nd
(&
pmix_globÆs
.
n•a˚s
, &
n•å
->
su≥r
);

821 
pmix_globÆs
.
myid
.
ønk
 = 0;

824 
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
 = 
	`PMIX_NEW
(
pmix_ønk_öfo_t
);

825 
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
≈å
 = 
	`PMIX_NEW
(
pmix_n•a˚_t
);

826 
	`pmix_usock_ªcv_blockög
(
sd
, (*)
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
≈å
->
n•a˚
, 
PMIX_MAX_NSLEN
+1);

827 
	`pmix_usock_ªcv_blockög
(
sd
, (*)&(
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
ønk
), ());

829 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

831 
pmix_globÆs
.
myid
.
n•a˚
,Ömix_globÆs.myid.
ønk
,

832 
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
≈å
->
n•a˚
,

833 
pmix_˛õ¡_globÆs
.
my£rvî
.
öfo
->
ønk
);

835 i‡(
sock›t
) {

836 i‡(0 !
	`£tsock›t
(
sd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, &
ßve
, 
sz
)) {

837  
PMIX_ERR_UNREACH
;

841  
PMIX_SUCCESS
;

842 
	}
}

844 
pmix_°©us_t
 
	$usock_c⁄√˘
(
sockaddr_un
 *
addr
, *
fd
)

846 
sd
=-1;

847 
pmix_°©us_t
 
rc
;

848 
pmix_sockÀn_t
 
addæí
 = 0;

849 
ªåõs
 = 0;

851 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

853 
addr
->
sun_∑th
);

855 
addæí
 = (
sockaddr_un
);

856 
ªåõs
 < 
PMIX_MAX_RETRIES
) {

857 
ªåõs
++;

859 
sd
 = 
	`sockë
(
PF_UNIX
, 
SOCK_STREAM
, 0);

860 i‡(
sd
 < 0) {

861 
	`pmix_ouçut
(0, "pmix:create_socket: socket() failed: %s (%d)\n",

862 
	`°ªº‹
(
pmix_sockë_î∫o
),

863 
pmix_sockë_î∫o
);

866 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

867 "usock_≥î_åy_c⁄√˘:áâem±ögÅÿc⁄√˘Åÿ£rvî o¿sockë %d", 
sd
);

869 
îr
 = -1;

870 i‡((
îr
 = 
	`c⁄√˘
(
sd
, (
sockaddr
*)
addr
, 
addæí
)) < 0) {

871 i‡(
pmix_sockë_î∫o
 =
ETIMEDOUT
) {

873 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

875 
	`CLOSE_THE_SOCKET
(
sd
);

877 } i‡(
ECONNABORTED
 =
pmix_sockë_î∫o
) {

883 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

885 
	`CLOSE_THE_SOCKET
(
sd
);

888 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

889 "FaûedÅÿc⁄√˘,Éºnÿ%d,Éº%s\n", 
î∫o
, 
	`°ªº‹
(errno));

890 
	`CLOSE_THE_SOCKET
(
sd
);

898 i‡(
ªåõs
 =
PMIX_MAX_RETRIES
 || 
sd
 < 0){

901 i‡(0 <
sd
) {

902 
	`CLOSE_THE_SOCKET
(
sd
);

904  
PMIX_ERR_UNREACH
;

908 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`£nd_c⁄√˘_ack
(
sd
))) {

909 
	`CLOSE_THE_SOCKET
(
sd
);

910  
rc
;

914 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`ªcv_c⁄√˘_ack
(
sd
))) {

915 
	`CLOSE_THE_SOCKET
(
sd
);

916  
rc
;

919 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

923 
pmix_globÆs
.
c⁄√˘ed
 = 
åue
;

925 
	`pmix_usock_£t_n⁄blockög
(
sd
);

927 *
fd
 = 
sd
;

928  
PMIX_SUCCESS
;

929 
	}
}

	@usock/usock.c

17 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

19 
	~<§c/ö˛ude/ty≥s.h
>

20 
	~<§c/ö˛ude/pmix_°döt.h
>

21 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

23 
	~"§c/ö˛ude/pmix_globÆs.h
"

25 #ifde‡
HAVE_STRING_H


26 
	~<°rög.h
>

28 
	~<f˙é.h
>

29 #ifde‡
HAVE_UNISTD_H


30 
	~<uni°d.h
>

32 #ifde‡
HAVE_SYS_SOCKET_H


33 
	~<sys/sockë.h
>

35 #ifde‡
HAVE_SYS_UN_H


36 
	~<sys/un.h
>

38 #ifde‡
HAVE_SYS_UIO_H


39 
	~<sys/uio.h
>

41 #ifde‡
HAVE_SYS_TYPES_H


42 
	~<sys/ty≥s.h
>

45 
	~"§c/buf„r_›s/buf„r_›s.h
"

46 
	~"§c/utû/ouçut.h
"

48 
	~"usock.h
"

51 
pmix_usock_globÆs_t
 
	gpmix_usock_globÆs
 = {{{0}}};

53 
	$pmix_usock_öô
(
pmix_usock_cbfunc_t
 
cbfunc
)

55 
pmix_usock_po°ed_ªcv_t
 *
ªq
;

58 
	`PMIX_CONSTRUCT
(&
pmix_usock_globÆs
.
po°ed_ªcvs
, 
pmix_li°_t
);

63 i‡(
NULL
 !
cbfunc
) {

64 
ªq
 = 
	`PMIX_NEW
(
pmix_usock_po°ed_ªcv_t
);

65 
ªq
->
èg
 = 0;

66 
ªq
->
cbfunc
 = cbfunc;

67 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

68 "po°ögÇŸifiˇti⁄Ñecv o¿èg %d", 
ªq
->
èg
);

72 
	`pmix_li°_¥ïíd
(&
pmix_usock_globÆs
.
po°ed_ªcvs
, &
ªq
->
su≥r
);

74 
	}
}

76 
	$pmix_usock_föÆize
()

78 
	`PMIX_LIST_DESTRUCT
(&
pmix_usock_globÆs
.
po°ed_ªcvs
);

79 
	}
}

81 
pmix_°©us_t
 
	$pmix_usock_£t_n⁄blockög
(
sd
)

83 
Êags
;

85 i‡((
Êags
 = 
	`f˙é
(
sd
, 
F_GETFL
, 0)) < 0) {

86 
	`pmix_ouçut
(0, "usock_peer_connect: fcntl(F_GETFL) failed: %s (%d)\n",

87 
	`°ªº‹
(
pmix_sockë_î∫o
),

88 
pmix_sockë_î∫o
);

90 
Êags
 |
O_NONBLOCK
;

91 if(
	`f˙é
(
sd
, 
F_SETFL
, 
Êags
) < 0)

92 
	`pmix_ouçut
(0, "usock_peer_connect: fcntl(F_SETFL) failed: %s (%d)\n",

93 
	`°ªº‹
(
pmix_sockë_î∫o
),

94 
pmix_sockë_î∫o
);

96  
PMIX_SUCCESS
;

97 
	}
}

99 
pmix_°©us_t
 
	$pmix_usock_£t_blockög
(
sd
)

101 
Êags
;

103 i‡((
Êags
 = 
	`f˙é
(
sd
, 
F_GETFL
, 0)) < 0) {

104 
	`pmix_ouçut
(0, "usock_peer_connect: fcntl(F_GETFL) failed: %s (%d)\n",

105 
	`°ªº‹
(
pmix_sockë_î∫o
),

106 
pmix_sockë_î∫o
);

108 
Êags
 &~(
O_NONBLOCK
);

109 if(
	`f˙é
(
sd
, 
F_SETFL
, 
Êags
) < 0)

110 
	`pmix_ouçut
(0, "usock_peer_connect: fcntl(F_SETFL) failed: %s (%d)\n",

111 
	`°ªº‹
(
pmix_sockë_î∫o
),

112 
pmix_sockë_î∫o
);

114  
PMIX_SUCCESS
;

115 
	}
}

121 
pmix_°©us_t
 
	$pmix_usock_£nd_blockög
(
sd
, *
±r
, 
size_t
 
size
)

123 
size_t
 
˙t
 = 0;

124 
ªtvÆ
;

126 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

127 "£nd blockög o‡%"
PRIsize_t
" bytesÅo socket %d",

128 
size
, 
sd
 );

129 
˙t
 < 
size
) {

130 
ªtvÆ
 = 
	`£nd
(
sd
, (*)
±r
+
˙t
, 
size
-cnt, 0);

131 i‡(
ªtvÆ
 < 0) {

132 i‡(
EAGAIN
 =
pmix_sockë_î∫o
 ||

133 
EWOULDBLOCK
 =
pmix_sockë_î∫o
) {

135 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

137 
pmix_sockë_î∫o
, 
	`°ªº‹
(pmix_socket_errno));

140 i‡(
pmix_sockë_î∫o
 !
EINTR
) {

141 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

143 
sd
, 
	`°ªº‹
(
pmix_sockë_î∫o
),

144 
pmix_sockë_î∫o
);

145  
PMIX_ERR_UNREACH
;

149 
˙t
 +
ªtvÆ
;

152 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

153 "blockög síd com∂ëêtÿsockë %d", 
sd
);

154  
PMIX_SUCCESS
;

155 
	}
}

161 
pmix_°©us_t
 
	$pmix_usock_ªcv_blockög
(
sd
, *
d©a
, 
size_t
 
size
)

163 
size_t
 
˙t
 = 0;

165 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

166 "waôög f‹ blockögÑecv o‡%"
PRIsize_t
" byãs", 
size
);

168 
˙t
 < 
size
) {

169 
ªtvÆ
 = 
	`ªcv
(
sd
, (*)
d©a
+
˙t
, 
size
-˙t, 
MSG_WAITALL
);

172 i‡(
ªtvÆ
 == 0) {

173 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

175  
PMIX_ERR_UNREACH
;

179 i‡(
ªtvÆ
 < 0) {

180 i‡(
EAGAIN
 =
pmix_sockë_î∫o
 ||

181 
EWOULDBLOCK
 =
pmix_sockë_î∫o
) {

183 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

185 
pmix_sockë_î∫o
, 
	`°ªº‹
(pmix_socket_errno));

188 i‡(
pmix_sockë_î∫o
 !
EINTR
 ) {

203 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

205 
pmix_sockë_î∫o
, 
	`°ªº‹
(pmix_socket_errno));

206  
PMIX_ERR_UNREACH
;

210 
˙t
 +
ªtvÆ
;

213 
	`pmix_ouçut_vîbo£
(8, 
pmix_globÆs
.
debug_ouçut
,

215  
PMIX_SUCCESS
;

216 
	}
}

219 
	$sc⁄
(
pmix_usock_£nd_t
 *
p
)

221 
	`mem£t
(&
p
->
hdr
, 0, (
pmix_usock_hdr_t
));

222 
p
->
hdr
.
èg
 = 
UINT32_MAX
;

223 
p
->
hdr
.
nbyãs
 = 0;

224 
p
->
d©a
 = 
NULL
;

225 
p
->
hdr_£¡
 = 
Ál£
;

226 
p
->
sd±r
 = 
NULL
;

227 
p
->
sdbyãs
 = 0;

228 
	}
}

229 
	$sdes
(
pmix_usock_£nd_t
 *
p
)

231 i‡(
NULL
 !
p
->
d©a
) {

232 
	`PMIX_RELEASE
(
p
->
d©a
);

234 
	}
}

235 
PMIX_CLASS_INSTANCE
(
pmix_usock_£nd_t
,

236 
pmix_li°_ôem_t
,

237 
sc⁄
, 
sdes
);

239 
	$rc⁄
(
pmix_usock_ªcv_t
 *
p
)

241 
	`mem£t
(&
p
->
hdr
, 0, (
pmix_usock_hdr_t
));

242 
p
->
hdr
.
èg
 = 
UINT32_MAX
;

243 
p
->
hdr
.
nbyãs
 = 0;

244 
p
->
d©a
 = 
NULL
;

245 
p
->
hdr_ªcvd
 = 
Ál£
;

246 
p
->
rd±r
 = 
NULL
;

247 
p
->
rdbyãs
 = 0;

248 
	}
}

249 
PMIX_CLASS_INSTANCE
(
pmix_usock_ªcv_t
,

250 
pmix_li°_ôem_t
,

251 
rc⁄
, 
NULL
);

253 
	$¥c⁄
(
pmix_usock_po°ed_ªcv_t
 *
p
)

255 
p
->
èg
 = 
UINT32_MAX
;

256 
p
->
cbfunc
 = 
NULL
;

257 
p
->
cbd©a
 = 
NULL
;

258 
	}
}

259 
PMIX_CLASS_INSTANCE
(
pmix_usock_po°ed_ªcv_t
,

260 
pmix_li°_ôem_t
,

261 
¥c⁄
, 
NULL
);

263 
	$cbc⁄
(
pmix_cb_t
 *
p
)

265 
p
->
a˘ive
 = 
Ál£
;

266 
p
->
checked
 = 
Ál£
;

267 
	`PMIX_CONSTRUCT
(&
p
->
d©a
, 
pmix_buf„r_t
);

268 
p
->
cbfunc
 = 
NULL
;

269 
p
->
›_cbfunc
 = 
NULL
;

270 
p
->
vÆue_cbfunc
 = 
NULL
;

271 
p
->
lookup_cbfunc
 = 
NULL
;

272 
p
->
•awn_cbfunc
 = 
NULL
;

273 
p
->
cbd©a
 = 
NULL
;

274 
	`mem£t
(
p
->
n•a˚
, 0, 
PMIX_MAX_NSLEN
+1);

275 
p
->
ønk
 = -1;

276 
p
->
key
 = 
NULL
;

277 
p
->
vÆue
 = 
NULL
;

278 
p
->
¥ocs
 = 
NULL
;

279 
p
->
öfo
 = 
NULL
;

280 
p
->
nöfo
 = 0;

281 
p
->
nvÆs
 = 0;

282 
	}
}

283 
	$cbdes
(
pmix_cb_t
 *
p
)

285 
	`PMIX_DESTRUCT
(&
p
->
d©a
);

286 
	}
}

287 
PMIX_CLASS_INSTANCE
(
pmix_cb_t
,

288 
pmix_li°_ôem_t
,

289 
cbc⁄
, 
cbdes
);

292 
	$§c⁄
(
pmix_usock_§_t
 *
p
)

294 
p
->
≥î
 = 
NULL
;

295 
p
->
b‰
 = 
NULL
;

296 
p
->
cbfunc
 = 
NULL
;

297 
p
->
cbd©a
 = 
NULL
;

298 
	}
}

299 
PMIX_CLASS_INSTANCE
(
pmix_usock_§_t
,

300 
pmix_obje˘_t
,

301 
§c⁄
, 
NULL
);

303 
	$pc⁄
(
pmix_≥î_t
 *
p
)

305 
p
->
öfo
 = 
NULL
;

306 
p
->
sd
 = -1;

307 
p
->
£nd_ev_a˘ive
 = 
Ál£
;

308 
p
->
ªcv_ev_a˘ive
 = 
Ál£
;

309 
	`PMIX_CONSTRUCT
(&
p
->
£nd_queue
, 
pmix_li°_t
);

310 
p
->
£nd_msg
 = 
NULL
;

311 
p
->
ªcv_msg
 = 
NULL
;

312 
	}
}

313 
	$pdes
(
pmix_≥î_t
 *
p
)

315 i‡(0 <
p
->
sd
) {

316 
	`CLOSE_THE_SOCKET
(
p
->
sd
);

318 i‡(
p
->
£nd_ev_a˘ive
) {

319 
	`evít_dñ
(&
p
->
£nd_evít
);

321 i‡(
p
->
ªcv_ev_a˘ive
) {

322 
	`evít_dñ
(&
p
->
ªcv_evít
);

325 i‡(
NULL
 !
p
->
öfo
) {

326 
	`PMIX_RELEASE
(
p
->
öfo
);

329 
	`PMIX_LIST_DESTRUCT
(&
p
->
£nd_queue
);

330 i‡(
NULL
 !
p
->
£nd_msg
) {

331 
	`PMIX_RELEASE
(
p
->
£nd_msg
);

333 i‡(
NULL
 !
p
->
ªcv_msg
) {

334 
	`PMIX_RELEASE
(
p
->
ªcv_msg
);

336 
	}
}

337 
PMIX_CLASS_INSTANCE
(
pmix_≥î_t
,

338 
pmix_obje˘_t
,

339 
pc⁄
, 
pdes
);

342 
PMIX_CLASS_INSTANCE
(
pmix_timî_t
,

343 
pmix_obje˘_t
,

344 
NULL
, NULL);

	@usock/usock.h

32 #i‚de‡
USOCK_H


33 
	#USOCK_H


	)

35 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

37 
	~<§c/ö˛ude/ty≥s.h
>

38 
	~<pmix_comm⁄.h
>

40 #ifde‡
HAVE_UNISTD_H


41 
	~<uni°d.h
>

43 #ifde‡
HAVE_SYS_SOCKET_H


44 
	~<sys/sockë.h
>

46 #ifde‡
HAVE_SYS_UN_H


47 
	~<sys/un.h
>

49 #ifde‡
HAVE_SYS_UIO_H


50 
	~<sys/uio.h
>

52 #ifde‡
HAVE_NET_UIO_H


53 
	~<√t/uio.h
>

55 #ifde‡
HAVE_SYS_TYPES_H


56 
	~<sys/ty≥s.h
>

58 #ö˛udê
PMIX_EVENT_HEADER


60 
	~"§c/ö˛ude/pmix_globÆs.h
"

61 
	~"§c/buf„r_›s/buf„r_›s.h
"

62 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

63 
	~"§c/˛ass/pmix_li°.h
"

69 
pmix_li°_ôem_t
 
	msu≥r
;

70 
pmix_evít_t
 
	mev
;

71 
uöt32_t
 
	mèg
;

72 
pmix_usock_cbfunc_t
 
	mcbfunc
;

73 *
	mcbd©a
;

74 } 
	tpmix_usock_po°ed_ªcv_t
;

75 
PMIX_CLASS_DECLARATION
(
pmix_usock_po°ed_ªcv_t
);

79 
pmix_obje˘_t
 
	msu≥r
;

80 
pmix_evít_t
 
	mev
;

81 
pmix_≥î_t
 *
	m≥î
;

82 
pmix_buf„r_t
 *
	mb‰
;

83 
pmix_usock_cbfunc_t
 
	mcbfunc
;

84 *
	mcbd©a
;

85 } 
	tpmix_usock_§_t
;

86 
PMIX_CLASS_DECLARATION
(
pmix_usock_§_t
);

90 
pmix_li°_ôem_t
 
	msu≥r
;

91 
pmix_evít_t
 
	mev
;

92 vﬁ©ûê
boﬁ
 
	ma˘ive
;

93 
boﬁ
 
	mchecked
;

94 
	m°©us
;

95 
pmix_°©us_t
 
	mp°©us
;

96 
pmix_sc›e_t
 
	msc›e
;

97 
pmix_buf„r_t
 
	md©a
;

98 
pmix_usock_cbfunc_t
 
	mcbfunc
;

99 
pmix_›_cbfunc_t
 
	m›_cbfunc
;

100 
pmix_vÆue_cbfunc_t
 
	mvÆue_cbfunc
;

101 
pmix_lookup_cbfunc_t
 
	mlookup_cbfunc
;

102 
pmix_•awn_cbfunc_t
 
	m•awn_cbfunc
;

103 
pmix_evhdÃ_ªg_cbfunc_t
 
	mîºeg_cbfunc
;

104 
size_t
 
	mîrh™dÀr_ªf
;

105 *
	mcbd©a
;

106 
	mn•a˚
[
PMIX_MAX_NSLEN
+1];

107 
pmix_ønk_t
 
	mønk
;

108 *
	mkey
;

109 
pmix_vÆue_t
 *
	mvÆue
;

110 
pmix_¥oc_t
 *
	m¥ocs
;

111 
pmix_öfo_t
 *
	möfo
;

112 
size_t
 
	mnöfo
;

113 
size_t
 
	mnvÆs
;

114 } 
	tpmix_cb_t
;

115 
PMIX_CLASS_DECLARATION
(
pmix_cb_t
);

118 
pmix_obje˘_t
 
	msu≥r
;

119 
pmix_evít_t
 
	mev
;

120 *
	mcbd©a
;

121 } 
	tpmix_timî_t
;

122 
PMIX_CLASS_DECLARATION
(
pmix_timî_t
);

125 
	#PMIX_ACTIVATE_SEND_RECV
(
p
, 
b
, 
cb
, 
d
) \

127 
rc
 = -1; \

128 
pmix_usock_§_t
 *
ms
; \

129 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
, \

131 
__FILE__
, 
__LINE__
); \

132 
ms
 = 
	`PMIX_NEW
(
pmix_usock_§_t
); \

133 
ms
->
≥î
 = (
p
); \

134 
ms
->
b‰
 = (
b
); \

135 
ms
->
cbfunc
 = (
cb
); \

136 
ms
->
cbd©a
 = (
d
); \

137 
rc
 = 
	`evít_assign
(&((
ms
)->
ev
), 
pmix_globÆs
.
evba£
, -1, \

138 
EV_WRITE
, 
pmix_usock_£nd_ªcv
, (
ms
)); \

139 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
, \

140 "evít_assig¿ªtu∫ed %d", 
rc
); \

141 
	`evít_a˘ive
(&((
ms
)->
ev
), 
EV_WRITE
, 1); \

142 } 0)

	)

144 
	#PMIX_ACTIVATE_POST_MSG
(
ms
) \

146 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
, \

148 
__FILE__
, 
__LINE__
); \

149 
	`evít_assign
(&((
ms
)->
ev
), 
pmix_globÆs
.
evba£
, -1, \

150 
EV_WRITE
, 
pmix_usock_¥o˚ss_msg
, (
ms
)); \

151 
	`evít_a˘ive
(&((
ms
)->
ev
), 
EV_WRITE
, 1); \

152 } 0)

	)

154 
	#CLOSE_THE_SOCKET
(
sockë
) \

156 i‡(0 <
sockë
) { \

157 
	`shutdown
(
sockë
, 2); \

158 
	`˛o£
(
sockë
); \

159 
sockë
 = -1; \

161 } 0)

	)

164 
	#PMIX_TIMER_EVENT
(
s
, 
f
, 
d
) \

166 
pmix_timî_t
 *
tm
; \

167 
timevÆ
 
tv
; \

168 
tm
 = 
	`PMIX_NEW
(
pmix_timî_t
); \

169 
tm
->
cbd©a
 = (
d
); \

170 
	`evít_assign
(&
tm
->
ev
, 
pmix_globÆs
.
evba£
, -1, 0, (
f
),Åm); \

171 
tv
.
tv_£c
 = (
s
); \

172 
tv
.
tv_u£c
 = 0; \

173 
	`PMIX_OUTPUT_VERBOSE
((1, 
pmix_globÆs
.
debug_ouçut
, \

175 ()
tv
.
tv_£c
, (Èv.
tv_u£c
, \

176 
__FILE__
, 
__LINE__
)); \

177 
	`evít_add
(&
tm
->
ev
, &
tv
); \

178 } 0)

	)

183 
pmix_li°_t
 
	mpo°ed_ªcvs
;

184 } 
	tpmix_usock_globÆs_t
;

185 
pmix_usock_globÆs_t
 
pmix_usock_globÆs
;

188 
pmix_usock_öô
(
pmix_usock_cbfunc_t
 
cbfunc
);

189 
pmix_usock_föÆize
();

190 
pmix_°©us_t
 
pmix_usock_£t_n⁄blockög
(
sd
);

191 
pmix_°©us_t
 
pmix_usock_£t_blockög
(
sd
);

192 
pmix_°©us_t
 
pmix_usock_£nd_blockög
(
sd
, *
±r
, 
size_t
 
size
);

193 
pmix_°©us_t
 
pmix_usock_ªcv_blockög
(
sd
, *
d©a
, 
size_t
 
size
);

194 
pmix_usock_£nd_ªcv
(
sd
, 
¨gs
, *
cbd©a
);

195 
pmix_usock_£nd_h™dÀr
(
sd
, 
Êags
, *
cbd©a
);

196 
pmix_usock_ªcv_h™dÀr
(
sd
, 
Êags
, *
cbd©a
);

197 
pmix_usock_¥o˚ss_msg
(
fd
, 
Êags
, *
cbd©a
);

	@usock/usock_sendrecv.c

16 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

18 
	~<§c/ö˛ude/ty≥s.h
>

19 
	~<§c/ö˛ude/pmix_°döt.h
>

20 
	~<§c/ö˛ude/pmix_sockë_î∫o.h
>

22 #ifde‡
HAVE_STRING_H


23 
	~<°rög.h
>

25 
	~<f˙é.h
>

26 #ifde‡
HAVE_UNISTD_H


27 
	~<uni°d.h
>

29 #ifde‡
HAVE_SYS_SOCKET_H


30 
	~<sys/sockë.h
>

32 #ifde‡
HAVE_SYS_UN_H


33 
	~<sys/un.h
>

35 #ifde‡
HAVE_SYS_UIO_H


36 
	~<sys/uio.h
>

38 #ifde‡
HAVE_SYS_TYPES_H


39 
	~<sys/ty≥s.h
>

42 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

43 
	~"§c/ö˛ude/pmix_globÆs.h
"

44 
	~"§c/£rvî/pmix_£rvî_›s.h
"

45 
	~"§c/utû/îr‹.h
"

47 
	~"usock.h
"

49 
uöt32_t
 
	gcuºít_èg
 = 1;

51 
	$lo°_c⁄√˘i⁄
(
pmix_≥î_t
 *
≥î
, 
pmix_°©us_t
 
îr
)

53 
pmix_£rvî_åkr_t
 *
åk
;

54 
pmix_ønk_öfo_t
 *
röfo
, *
∫ext
;

55 
pmix_åkr_ˇddy_t
 *
tcd
;

58 i‡(
≥î
->
ªcv_ev_a˘ive
) {

59 
	`evít_dñ
(&
≥î
->
ªcv_evít
);

60 
≥î
->
ªcv_ev_a˘ive
 = 
Ál£
;

62 i‡(
≥î
->
£nd_ev_a˘ive
) {

63 
	`evít_dñ
(&
≥î
->
£nd_evít
);

64 
≥î
->
£nd_ev_a˘ive
 = 
Ál£
;

66 i‡(
NULL
 !
≥î
->
ªcv_msg
) {

67 
	`PMIX_RELEASE
(
≥î
->
ªcv_msg
);

68 
≥î
->
ªcv_msg
 = 
NULL
;

70 
	`CLOSE_THE_SOCKET
(
≥î
->
sd
);

72 i‡(
pmix_globÆs
.
£rvî
) {

79 
	`PMIX_LIST_FOREACH
(
åk
, &
pmix_£rvî_globÆs
.
cﬁÀ˘ives
, 
pmix_£rvî_åkr_t
) {

81 
	`PMIX_LIST_FOREACH_SAFE
(
röfo
, 
∫ext
, &
åk
->
ønks
, 
pmix_ønk_öfo_t
) {

82 i‡(0 !
	`°∫cmp
(
röfo
->
≈å
->
n•a˚
, 
≥î
->
öfo
->≈å->n•a˚, 
PMIX_MAX_NSLEN
)) {

85 i‡(
röfo
->
ønk
 !
≥î
->
öfo
->rank) {

89 --
åk
->
∆oˇl
;

91 
	`pmix_li°_ªmove_ôem
(&
åk
->
ønks
, &
röfo
->
su≥r
);

92 
	`PMIX_RELEASE
(
röfo
);

94 i‡(
	`pmix_li°_gë_size
(&
åk
->
loˇl_cbs
Ë=åk->
∆oˇl
) {

99 
	`PMIX_EXECUTE_COLLECTIVE
(
tcd
, 
åk
, 
pmix_£rvî_execuã_cﬁÀ˘ive
);

104 
	`pmix_li°_ªmove_ôem
(&(
≥î
->
öfo
->
≈å
->
£rvî
->
ønks
), &’ìr->öfo->
su≥r
));

106 --
≥î
->
öfo
->
≈å
->
£rvî
->
∆oˇÕrocs
;

108 
	`PMIX_RELEASE
(
≥î
->
öfo
);

110 
	`pmix_poöãr_¨øy_£t_ôem
(&
pmix_£rvî_globÆs
.
˛õ¡s
,

111 
≥î
->
ödex
, 
NULL
);

112 
	`PMIX_RELEASE
(
≥î
);

116 
pmix_globÆs
.
c⁄√˘ed
 = 
Ál£
;

118 
îr
 = 
PMIX_ERR_LOST_CONNECTION_TO_SERVER
;

120 
	`PMIX_REPORT_EVENT
(
îr
);

121 
	}
}

123 
pmix_°©us_t
 
	$£nd_byãs
(
sd
, **
buf
, 
size_t
 *
ªmaö
)

125 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

126 
rc
;

127 *
±r
 = *
buf
;

128 0 < *
ªmaö
) {

129 
rc
 = 
	`wrôe
(
sd
, 
±r
, *
ªmaö
);

130 i‡(
rc
 < 0) {

131 i‡(
pmix_sockë_î∫o
 =
EINTR
) {

133 } i‡(
pmix_sockë_î∫o
 =
EAGAIN
) {

138 
ªt
 = 
PMIX_ERR_RESOURCE_BUSY
;

139 
exô
;

140 } i‡(
pmix_sockë_î∫o
 =
EWOULDBLOCK
) {

145 
ªt
 = 
PMIX_ERR_WOULD_BLOCK
;

146 
exô
;

149 
	`pmix_ouçut
(0, "pmix_usock_msg_send_bytes: write failed: %s (%d) [sd = %d]",

150 
	`°ªº‹
(
pmix_sockë_î∫o
),

151 
pmix_sockë_î∫o
, 
sd
);

152 
ªt
 = 
PMIX_ERR_UNREACH
;

153 
exô
;

156 (*
ªmaö
Ë-
rc
;

157 
±r
 +
rc
;

160 
exô
:

161 *
buf
 = 
±r
;

162  
ªt
;

163 
	}
}

165 
pmix_°©us_t
 
	$ªad_byãs
(
sd
, **
buf
, 
size_t
 *
ªmaö
)

167 
pmix_°©us_t
 
ªt
 = 
PMIX_SUCCESS
;

168 
rc
;

169 *
±r
 = *
buf
;

172 0 < *
ªmaö
) {

173 
rc
 = 
	`ªad
(
sd
, 
±r
, *
ªmaö
);

174 i‡(
rc
 < 0) {

175 if(
pmix_sockë_î∫o
 =
EINTR
) {

177 } i‡(
pmix_sockë_î∫o
 =
EAGAIN
) {

182 
ªt
 = 
PMIX_ERR_RESOURCE_BUSY
;

183 
exô
;

184 } i‡(
pmix_sockë_î∫o
 =
EWOULDBLOCK
) {

189 
ªt
 = 
PMIX_ERR_WOULD_BLOCK
;

190 
exô
;

196 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

198 
	`°ªº‹
(
pmix_sockë_î∫o
),

199 
pmix_sockë_î∫o
);

200 
ªt
 = 
PMIX_ERR_UNREACH
;

201 
exô
;

202 } i‡(0 =
rc
) {

204 
ªt
 = 
PMIX_ERR_UNREACH
;

205 
exô
;

208 *
ªmaö
 -
rc
;

209 
±r
 +
rc
;

212 
exô
:

213 *
buf
 = 
±r
;

214  
ªt
;

215 
	}
}

221 
	$pmix_usock_£nd_h™dÀr
(
sd
, 
Êags
, *
cbd©a
)

223 
pmix_≥î_t
 *
≥î
 = (pmix_≥î_t*)
cbd©a
;

224 
pmix_usock_£nd_t
 *
msg
 = 
≥î
->
£nd_msg
;

225 
pmix_°©us_t
 
rc
;

227 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

229 
≥î
->
öfo
->
≈å
->
n•a˚
,Öìr->öfo->
ønk
,

230 (
NULL
 =
msg
Ë? 
UINT_MAX
 : msg->
hdr
.
èg
,

231 (
NULL
 =
msg
) ? "NULL" : "NON-NULL");

232 i‡(
NULL
 !
msg
) {

233 i‡(!
msg
->
hdr_£¡
) {

234 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

236 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`£nd_byãs
(
≥î
->
sd
, &
msg
->
sd±r
, &msg->
sdbyãs
))) {

238 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

240 
msg
->
hdr_£¡
 = 
åue
;

242 i‡(
NULL
 =
msg
->
d©a
) {

244 
	`PMIX_RELEASE
(
msg
);

245 
≥î
->
£nd_msg
 = 
NULL
;

246 
√xt
;

249 
msg
->
sd±r
 = msg->
d©a
->
ba£_±r
;

250 
msg
->
sdbyãs
 = msg->
hdr
.
nbyãs
;

253 } i‡(
PMIX_ERR_RESOURCE_BUSY
 =
rc
 ||

254 
PMIX_ERR_WOULD_BLOCK
 =
rc
) {

256 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

261 
	`evít_dñ
(&
≥î
->
£nd_evít
);

262 
≥î
->
£nd_ev_a˘ive
 = 
Ál£
;

263 
	`PMIX_RELEASE
(
msg
);

264 
≥î
->
£nd_msg
 = 
NULL
;

265 
	`lo°_c⁄√˘i⁄
(
≥î
, 
rc
);

270 i‡(
msg
->
hdr_£¡
) {

271 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

273 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`£nd_byãs
(
≥î
->
sd
, &
msg
->
sd±r
, &msg->
sdbyãs
))) {

275 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

277 
	`PMIX_RELEASE
(
msg
);

278 
≥î
->
£nd_msg
 = 
NULL
;

279 } i‡(
PMIX_ERR_RESOURCE_BUSY
 =
rc
 ||

280 
PMIX_ERR_WOULD_BLOCK
 =
rc
) {

282 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

287 
	`pmix_ouçut
(0, "pmix_usock_peer_send_handler: unableÅo send message ON SOCKET %d",

288 
≥î
->
sd
);

289 
	`evít_dñ
(&
≥î
->
£nd_evít
);

290 
≥î
->
£nd_ev_a˘ive
 = 
Ál£
;

291 
	`PMIX_RELEASE
(
msg
);

292 
≥î
->
£nd_msg
 = 
NULL
;

293 
	`lo°_c⁄√˘i⁄
(
≥î
, 
rc
);

298 
√xt
:

305 
≥î
->
£nd_msg
 = (
pmix_usock_£nd_t
*)

306 
	`pmix_li°_ªmove_fú°
(&
≥î
->
£nd_queue
);

310 i‡(
NULL
 =
≥î
->
£nd_msg
 &&Öìr->
£nd_ev_a˘ive
) {

311 
	`evít_dñ
(&
≥î
->
£nd_evít
);

312 
≥î
->
£nd_ev_a˘ive
 = 
Ál£
;

314 
	}
}

321 
	$pmix_usock_ªcv_h™dÀr
(
sd
, 
Êags
, *
cbd©a
)

323 
pmix_°©us_t
 
rc
;

324 
pmix_≥î_t
 *
≥î
 = (pmix_≥î_t*)
cbd©a
;

325 
pmix_usock_ªcv_t
 *
msg
 = 
NULL
;

327 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

329 (
NULL
 =
≥î
Ë? "NULL" :Öìr->
öfo
->
≈å
->
n•a˚
,

330 (
NULL
 =
≥î
Ë? 
PMIX_RANK_UNDEF
 :Öìr->
öfo
->
ønk
);

332 i‡(
NULL
 =
≥î
) {

336 i‡(
NULL
 =
≥î
->
ªcv_msg
) {

337 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

339 
≥î
->
ªcv_msg
 = 
	`PMIX_NEW
(
pmix_usock_ªcv_t
);

340 i‡(
NULL
 =
≥î
->
ªcv_msg
) {

341 
	`pmix_ouçut
(0, "usock_recv_handler: unableÅoállocateÑecv message\n");

342 
îr_˛o£
;

344 
≥î
->
ªcv_msg
->peer =Öeer;

346 
≥î
->
ªcv_msg
->
rd±r
 = (*)&≥î->ªcv_msg->
hdr
;

347 
≥î
->
ªcv_msg
->
rdbyãs
 = (
pmix_usock_hdr_t
);

349 
msg
 = 
≥î
->
ªcv_msg
;

350 
msg
->
sd
 = sd;

352 i‡(!
msg
->
hdr_ªcvd
) {

353 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

354 "usock:ªcv:h™dÀ∏ªad hd∏⁄ sockë %d", 
≥î
->
sd
);

355 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`ªad_byãs
(
≥î
->
sd
, &
msg
->
rd±r
, &msg->
rdbyãs
))) {

357 
≥î
->
ªcv_msg
->
hdr_ªcvd
 = 
åue
;

359 i‡(0 =
≥î
->
ªcv_msg
->
hdr
.
nbyãs
) {

360 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

362 
≥î
->
öfo
->
≈å
->
n•a˚
,Öìr->öfo->
ønk
,

363 
≥î
->
ªcv_msg
->
hdr
.
èg
);

364 
≥î
->
ªcv_msg
->
d©a
 = 
NULL
;

365 
≥î
->
ªcv_msg
->
rd±r
 = 
NULL
;

366 
≥î
->
ªcv_msg
->
rdbyãs
 = 0;

368 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

370 ()
≥î
->
ªcv_msg
->
hdr
.
nbyãs
);

372 
≥î
->
ªcv_msg
->
d©a
 = (*)
	`mÆloc
’ìr->ªcv_msg->
hdr
.
nbyãs
);

373 
	`mem£t
(
≥î
->
ªcv_msg
->
d©a
, 0,Öìr->ªcv_msg->
hdr
.
nbyãs
);

375 
≥î
->
ªcv_msg
->
rd±r
 =Öìr->ªcv_msg->
d©a
;

376 
≥î
->
ªcv_msg
->
rdbyãs
 =Öìr->ªcv_msg->
hdr
.
nbyãs
;

379 } i‡(
PMIX_ERR_RESOURCE_BUSY
 =
rc
 ||

380 
PMIX_ERR_WOULD_BLOCK
 =
rc
) {

387 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

389 
îr_˛o£
;

393 i‡(
≥î
->
ªcv_msg
->
hdr_ªcvd
) {

398 i‡(
PMIX_SUCCESS
 =(
rc
 = 
	`ªad_byãs
(
≥î
->
sd
, &
msg
->
rd±r
, &msg->
rdbyãs
))) {

400 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

402 ()
≥î
->
ªcv_msg
->
hdr
.
nbyãs
,

403 
≥î
->
ªcv_msg
->
hdr
.
èg
,Öìr->
sd
);

405 
	`PMIX_ACTIVATE_POST_MSG
(
≥î
->
ªcv_msg
);

406 
≥î
->
ªcv_msg
 = 
NULL
;

408 } i‡(
PMIX_ERR_RESOURCE_BUSY
 =
rc
 ||

409 
PMIX_ERR_WOULD_BLOCK
 =
rc
) {

416 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

418 
îr_˛o£
;

423 
îr_˛o£
:

425 i‡(
≥î
->
ªcv_ev_a˘ive
) {

426 
	`evít_dñ
(&
≥î
->
ªcv_evít
);

427 
≥î
->
ªcv_ev_a˘ive
 = 
Ál£
;

429 i‡(
≥î
->
£nd_ev_a˘ive
) {

430 
	`evít_dñ
(&
≥î
->
£nd_evít
);

431 
≥î
->
£nd_ev_a˘ive
 = 
Ál£
;

433 i‡(
NULL
 !
≥î
->
ªcv_msg
) {

434 
	`PMIX_RELEASE
(
≥î
->
ªcv_msg
);

435 
≥î
->
ªcv_msg
 = 
NULL
;

437 
	`lo°_c⁄√˘i⁄
(
≥î
, 
PMIX_ERR_UNREACH
);

438 
	}
}

440 
	$pmix_usock_£nd_ªcv
(
fd
, 
¨gs
, *
cbd©a
)

442 
pmix_usock_§_t
 *
ms
 = (pmix_usock_§_t*)
cbd©a
;

443 
pmix_usock_po°ed_ªcv_t
 *
ªq
;

444 
pmix_usock_£nd_t
 *
¢d
;

445 
uöt32_t
 
èg
;

448 
èg
 = 
cuºít_èg
++;

450 i‡(
NULL
 !
ms
->
cbfunc
) {

452 
ªq
 = 
	`PMIX_NEW
(
pmix_usock_po°ed_ªcv_t
);

454 i‡(
UINT32_MAX
 =
cuºít_èg
 ) {

455 
cuºít_èg
 = 1;

457 
ªq
->
èg
 =Åag;

458 
ªq
->
cbfunc
 = 
ms
->cbfunc;

459 
ªq
->
cbd©a
 = 
ms
->cbdata;

460 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

461 "po°ögÑecv o¿èg %d", 
ªq
->
èg
);

465 
	`pmix_li°_¥ïíd
(&
pmix_usock_globÆs
.
po°ed_ªcvs
, &
ªq
->
su≥r
);

468 
¢d
 = 
	`PMIX_NEW
(
pmix_usock_£nd_t
);

469 
¢d
->
hdr
.
pödex
 = 
pmix_globÆs
.pindex;

470 
¢d
->
hdr
.
èg
 =Åag;

471 
¢d
->
hdr
.
nbyãs
 = 
ms
->
b‰
->
byãs_u£d
;

472 
¢d
->
d©a
 = 
ms
->
b‰
;

474 
¢d
->
sd±r
 = (*)&¢d->
hdr
;

475 
¢d
->
sdbyãs
 = (
pmix_usock_hdr_t
);

478 i‡(
NULL
 =
ms
->
≥î
->
£nd_msg
) {

479 
ms
->
≥î
->
£nd_msg
 = 
¢d
;

482 
	`pmix_li°_≠≥nd
(&
ms
->
≥î
->
£nd_queue
, &
¢d
->
su≥r
);

485 i‡(!
ms
->
≥î
->
£nd_ev_a˘ive
) {

486 
	`evít_add
(&
ms
->
≥î
->
£nd_evít
, 0);

487 
ms
->
≥î
->
£nd_ev_a˘ive
 = 
åue
;

490 
	`PMIX_RELEASE
(
ms
);

491 
	}
}

493 
	$pmix_usock_¥o˚ss_msg
(
fd
, 
Êags
, *
cbd©a
)

495 
pmix_usock_ªcv_t
 *
msg
 = (pmix_usock_ªcv_t*)
cbd©a
;

496 
pmix_usock_po°ed_ªcv_t
 *
rcv
;

497 
pmix_buf„r_t
 
buf
;

499 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

501 ()
msg
->
hdr
.
nbyãs
, msg->hdr.
èg
, msg->
sd
);

504 
	`PMIX_LIST_FOREACH
(
rcv
, &
pmix_usock_globÆs
.
po°ed_ªcvs
, 
pmix_usock_po°ed_ªcv_t
) {

505 
	`pmix_ouçut_vîbo£
(5, 
pmix_globÆs
.
debug_ouçut
,

507 
msg
->
hdr
.
èg
, 
rcv
->tag);

509 i‡(
msg
->
hdr
.
èg
 =
rcv
->èg || 
UINT_MAX
 ==Ñcv->tag) {

510 i‡(
NULL
 !
rcv
->
cbfunc
) {

512 
	`PMIX_CONSTRUCT
(&
buf
, 
pmix_buf„r_t
);

513 i‡(
NULL
 !
msg
->
d©a
) {

514 
buf
.
ba£_±r
 = (*)
msg
->
d©a
;

515 
buf
.
byãs_Æloˇãd
 = buf.
byãs_u£d
 = 
msg
->
hdr
.
nbyãs
;

516 
buf
.
u≈ack_±r
 = buf.
ba£_±r
;

517 
buf
.
∑ck_±r
 = ((*)buf.
ba£_±r
Ë+ buf.
byãs_u£d
;

519 
msg
->
d©a
 = 
NULL
;

520 i‡(
NULL
 !
rcv
->
cbfunc
) {

521 
rcv
->
	`cbfunc
(
msg
->
≥î
, &msg->
hdr
, &
buf
,Ñcv->
cbd©a
);

523 
	`PMIX_DESTRUCT
(&
buf
);

525 i‡(
UINT32_MAX
 !
rcv
->
èg
 && 0 !=Ñcv->tag) {

526 
	`pmix_li°_ªmove_ôem
(&
pmix_usock_globÆs
.
po°ed_ªcvs
, &
rcv
->
su≥r
);

527 
	`PMIX_RELEASE
(
rcv
);

529 
	`PMIX_RELEASE
(
msg
);

536 
	`pmix_ouçut
(0, "UNEXPECTED MESSAGEÅag =%d", 
msg
->
hdr
.
èg
);

537 
	`PMIX_RELEASE
(
msg
);

538 
	`PMIX_REPORT_EVENT
(
PMIX_ERROR
);

539 
	}
}

	@util/argv.c

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 #ifde‡
HAVE_STDLIB_H


29 
	~<°dlib.h
>

31 #ifde‡
HAVE_STRING_H


32 
	~<°rög.h
>

35 
	~"§c/utû/¨gv.h
"

37 
	#ARGSIZE
 128

	)

43 
pmix_°©us_t
 
	$pmix_¨gv_≠≥nd
(*
¨gc
, ***
¨gv
, c⁄° *
¨g
)

45 
pmix_°©us_t
 
rc
;

48 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`pmix_¨gv_≠≥nd_nosize
(
¨gv
, 
¨g
))) {

49  
rc
;

52 *
¨gc
 = 
	`pmix_¨gv_cou¡
(*
¨gv
);

54  
PMIX_SUCCESS
;

55 
	}
}

57 
pmix_°©us_t
 
	$pmix_¨gv_≠≥nd_nosize
(***
¨gv
, c⁄° *
¨g
)

59 
¨gc
;

63 i‡(
NULL
 =*
¨gv
) {

64 *
¨gv
 = (**Ë
	`mÆloc
(2 * (*));

65 i‡(
NULL
 =*
¨gv
) {

66  
PMIX_ERR_OUT_OF_RESOURCE
;

68 
¨gc
 = 0;

69 (*
¨gv
)[0] = 
NULL
;

70 (*
¨gv
)[1] = 
NULL
;

76 
¨gc
 = 
	`pmix_¨gv_cou¡
(*
¨gv
);

78 *
¨gv
 = (**Ë
	`ªÆloc
(*¨gv, (
¨gc
 + 2) * (*));

79 i‡(
NULL
 =*
¨gv
) {

80  
PMIX_ERR_OUT_OF_RESOURCE
;

86 (*
¨gv
)[
¨gc
] = 
	`°rdup
(
¨g
);

87 i‡(
NULL
 =(*
¨gv
)[
¨gc
]) {

88  
PMIX_ERR_OUT_OF_RESOURCE
;

91 
¨gc
 =árgc + 1;

92 (*
¨gv
)[
¨gc
] = 
NULL
;

94  
PMIX_SUCCESS
;

95 
	}
}

97 
pmix_°©us_t
 
	$pmix_¨gv_¥ïíd_nosize
(***
¨gv
, c⁄° *
¨g
)

99 
¨gc
;

100 
i
;

104 i‡(
NULL
 =*
¨gv
) {

105 *
¨gv
 = (**Ë
	`mÆloc
(2 * (*));

106 i‡(
NULL
 =*
¨gv
) {

107  
PMIX_ERR_OUT_OF_RESOURCE
;

109 (*
¨gv
)[0] = 
	`°rdup
(
¨g
);

110 (*
¨gv
)[1] = 
NULL
;

113 
¨gc
 = 
	`pmix_¨gv_cou¡
(*
¨gv
);

115 *
¨gv
 = (**Ë
	`ªÆloc
(*¨gv, (
¨gc
 + 2) * (*));

116 i‡(
NULL
 =*
¨gv
) {

117  
PMIX_ERR_OUT_OF_RESOURCE
;

119 (*
¨gv
)[
¨gc
+1] = 
NULL
;

122 
i
=
¨gc
; 0 < i; i--) {

123 (*
¨gv
)[
i
] = (*argv)[i-1];

125 (*
¨gv
)[0] = 
	`°rdup
(
¨g
);

128  
PMIX_SUCCESS
;

129 
	}
}

131 
pmix_°©us_t
 
	$pmix_¨gv_≠≥nd_unique_nosize
(***
¨gv
, c⁄° *
¨g
, 
boﬁ
 
ovîwrôe
)

133 
i
;

138 i‡(
NULL
 =*
¨gv
) {

139  
	`pmix_¨gv_≠≥nd_nosize
(
¨gv
, 
¨g
);

143 
i
=0; 
NULL
 !(*
¨gv
)[i]; i++) {

144 i‡(0 =
	`°rcmp
(
¨g
, (*
¨gv
)[
i
])) {

146 i‡(
ovîwrôe
) {

147 
	`‰ì
((*
¨gv
)[
i
]);

148 (*
¨gv
)[
i
] = 
	`°rdup
(
¨g
);

150  
PMIX_SUCCESS
;

155  
	`pmix_¨gv_≠≥nd_nosize
(
¨gv
, 
¨g
);

156 
	}
}

161 
	$pmix_¨gv_‰ì
(**
¨gv
)

163 **
p
;

165 i‡(
NULL
 =
¨gv
)

168 
p
 = 
¨gv
; 
NULL
 != *p; ++p) {

169 
	`‰ì
(*
p
);

172 
	`‰ì
(
¨gv
);

173 
	}
}

179 **
	$pmix_¨gv_•lô_öãr
(c⁄° *
§c_°rög
, 
dñimôî
,

180 
ö˛ude_em±y
)

182 
¨g
[
ARGSIZE
];

183 **
¨gv
 = 
NULL
;

184 c⁄° *
p
;

185 *
¨gãmp
;

186 
¨gc
 = 0;

187 
size_t
 
¨gÀn
;

189 
§c_°rög
 && *src_string) {

190 
p
 = 
§c_°rög
;

191 
¨gÀn
 = 0;

193 ('\0' !*
p
Ë&& (*∞!
dñimôî
)) {

194 ++
p
;

195 ++
¨gÀn
;

200 i‡(
§c_°rög
 =
p
) {

201 i‡(
ö˛ude_em±y
) {

202 
¨g
[0] = '\0';

203 i‡(
PMIX_SUCCESS
 !
	`pmix_¨gv_≠≥nd
(&
¨gc
, &
¨gv
, 
¨g
))

204  
NULL
;

210 i‡('\0' =*
p
) {

211 i‡(
PMIX_SUCCESS
 !
	`pmix_¨gv_≠≥nd
(&
¨gc
, &
¨gv
, 
§c_°rög
))

212  
NULL
;

213 
§c_°rög
 = 
p
;

219 i‡(
¨gÀn
 > (
ARGSIZE
 - 1)) {

220 
¨gãmp
 = (*Ë
	`mÆloc
(
¨gÀn
 + 1);

221 i‡(
NULL
 =
¨gãmp
)

222  
NULL
;

224 
	`°∫˝y
(
¨gãmp
, 
§c_°rög
, 
¨gÀn
);

225 
¨gãmp
[
¨gÀn
] = '\0';

227 i‡(
PMIX_SUCCESS
 !
	`pmix_¨gv_≠≥nd
(&
¨gc
, &
¨gv
, 
¨gãmp
)) {

228 
	`‰ì
(
¨gãmp
);

229  
NULL
;

232 
	`‰ì
(
¨gãmp
);

238 
	`°∫˝y
(
¨g
, 
§c_°rög
, 
¨gÀn
);

239 
¨g
[
¨gÀn
] = '\0';

241 i‡(
PMIX_SUCCESS
 !
	`pmix_¨gv_≠≥nd
(&
¨gc
, &
¨gv
, 
¨g
))

242  
NULL
;

245 
§c_°rög
 = 
p
 + 1;

250  
¨gv
;

251 
	}
}

253 **
	$pmix_¨gv_•lô
(c⁄° *
§c_°rög
, 
dñimôî
)

255  
	`pmix_¨gv_•lô_öãr
(
§c_°rög
, 
dñimôî
, 0);

256 
	}
}

258 **
	$pmix_¨gv_•lô_wôh_em±y
(c⁄° *
§c_°rög
, 
dñimôî
)

260  
	`pmix_¨gv_•lô_öãr
(
§c_°rög
, 
dñimôî
, 1);

261 
	}
}

266 
	$pmix_¨gv_cou¡
(**
¨gv
)

268 **
p
;

269 
i
;

271 i‡(
NULL
 =
¨gv
)

274 
i
 = 0, 
p
 = 
¨gv
; *p; i++,Ö++)

277  
i
;

278 
	}
}

285 *
	$pmix_¨gv_joö
(**
¨gv
, 
dñimôî
)

287 **
p
;

288 *
µ
;

289 *
°r
;

290 
size_t
 
°r_Àn
 = 0;

291 
size_t
 
i
;

295 i‡(
NULL
 =
¨gv
 || NULL ==árgv[0]) {

296  
	`°rdup
("");

302 
p
 = 
¨gv
; *p; ++p) {

303 
°r_Àn
 +
	`°æí
(*
p
) + 1;

308 i‡(
NULL
 =(
°r
 = (*Ë
	`mÆloc
(
°r_Àn
)))

309  
NULL
;

313 
°r
[--
°r_Àn
] = '\0';

314 
p
 = 
¨gv
;

315 
µ
 = *
p
;

317 
i
 = 0; i < 
°r_Àn
; ++i) {

318 i‡('\0' =*
µ
) {

323 
°r
[
i
] = (Ë
dñimôî
;

324 ++
p
;

325 
µ
 = *
p
;

327 
°r
[
i
] = *
µ
++;

333  
°r
;

334 
	}
}

341 *
	$pmix_¨gv_joö_ønge
(**
¨gv
, 
size_t
 
°¨t
, size_à
íd
, 
dñimôî
)

343 **
p
;

344 *
µ
;

345 *
°r
;

346 
size_t
 
°r_Àn
 = 0;

347 
size_t
 
i
;

351 i‡(
NULL
 =
¨gv
 || NULL =¨gv[0] || ()
°¨t
 > 
	`pmix_¨gv_cou¡
(argv)) {

352  
	`°rdup
("");

358 
p
 = &
¨gv
[
°¨t
], 
i
=°¨t; *∞&& i < 
íd
; ++p, ++i) {

359 
°r_Àn
 +
	`°æí
(*
p
) + 1;

364 i‡(
NULL
 =(
°r
 = (*Ë
	`mÆloc
(
°r_Àn
)))

365  
NULL
;

369 
°r
[--
°r_Àn
] = '\0';

370 
p
 = &
¨gv
[
°¨t
];

371 
µ
 = *
p
;

373 
i
 = 0; i < 
°r_Àn
; ++i) {

374 i‡('\0' =*
µ
) {

379 
°r
[
i
] = (Ë
dñimôî
;

380 ++
p
;

381 
µ
 = *
p
;

383 
°r
[
i
] = *
µ
++;

389  
°r
;

390 
	}
}

396 
size_t
 
	$pmix_¨gv_Àn
(**
¨gv
)

398 **
p
;

399 
size_t
 
Àngth
;

401 i‡(
NULL
 =
¨gv
)

402  (
size_t
) 0;

404 
Àngth
 = (*);

406 
p
 = 
¨gv
; *p; ++p) {

407 
Àngth
 +
	`°æí
(*
p
) + 1 + (*);

410  
Àngth
;

411 
	}
}

417 **
	$pmix_¨gv_c›y
(**
¨gv
)

419 **
dupv
 = 
NULL
;

420 
dupc
 = 0;

422 i‡(
NULL
 =
¨gv
)

423  
NULL
;

427 
dupv
 = (**Ë
	`mÆloc
((*));

428 
dupv
[0] = 
NULL
;

430 
NULL
 !*
¨gv
) {

431 i‡(
PMIX_SUCCESS
 !
	`pmix_¨gv_≠≥nd
(&
dupc
, &
dupv
, *
¨gv
)) {

432 
	`pmix_¨gv_‰ì
(
dupv
);

433  
NULL
;

436 ++
¨gv
;

441  
dupv
;

442 
	}
}

445 
pmix_°©us_t
 
	$pmix_¨gv_dñëe
(*
¨gc
, ***
¨gv
, 
°¨t
, 
num_to_dñëe
)

447 
i
;

448 
cou¡
;

449 
suffix_cou¡
;

450 **
tmp
;

453 i‡(
NULL
 =
¨gv
 || NULL =*¨gv || 0 =
num_to_dñëe
) {

454  
PMIX_SUCCESS
;

456 
cou¡
 = 
	`pmix_¨gv_cou¡
(*
¨gv
);

457 i‡(
°¨t
 > 
cou¡
) {

458  
PMIX_SUCCESS
;

459 } i‡(
°¨t
 < 0 || 
num_to_dñëe
 < 0) {

460  
PMIX_ERR_BAD_PARAM
;

466 
suffix_cou¡
 = 
cou¡
 - (
°¨t
 + 
num_to_dñëe
);

467 i‡(
suffix_cou¡
 < 0) {

468 
suffix_cou¡
 = 0;

473 
i
 = 
°¨t
; i < 
cou¡
 && i < sèπ + 
num_to_dñëe
; ++i) {

474 
	`‰ì
((*
¨gv
)[
i
]);

479 
i
 = 
°¨t
; i < sèπ + 
suffix_cou¡
; ++i) {

480 (*
¨gv
)[
i
] = (*¨gv)[ò+ 
num_to_dñëe
];

485 (*
¨gv
)[
i
] = 
NULL
;

488 
tmp
 = (**)
	`ªÆloc
(*
¨gv
, (*Ë* (
i
 + 1));

489 i‡(
NULL
 !
tmp
Ë*
¨gv
 =Åmp;

492 (*
¨gc
Ë-
num_to_dñëe
;

494  
PMIX_SUCCESS
;

495 
	}
}

498 
pmix_°©us_t
 
	$pmix_¨gv_ö£π
(***
èrgë
, 
°¨t
, **
sour˚
)

500 
i
, 
sour˚_cou¡
, 
èrgë_cou¡
;

501 
suffix_cou¡
;

505 i‡(
NULL
 =
èrgë
 || NULL =*èrgë || 
°¨t
 < 0) {

506  
PMIX_ERR_BAD_PARAM
;

507 } i‡(
NULL
 =
sour˚
) {

508  
PMIX_SUCCESS
;

513 
èrgë_cou¡
 = 
	`pmix_¨gv_cou¡
(*
èrgë
);

514 
sour˚_cou¡
 = 
	`pmix_¨gv_cou¡
(
sour˚
);

515 i‡(
°¨t
 > 
èrgë_cou¡
) {

516 
i
 = 0; i < 
sour˚_cou¡
; ++i) {

517 
	`pmix_¨gv_≠≥nd
(&
èrgë_cou¡
, 
èrgë
, 
sour˚
[
i
]);

527 *
èrgë
 = (**Ë
	`ªÆloc
(*target,

528 (*Ë* (
èrgë_cou¡
 + 
sour˚_cou¡
 + 1));

532 
suffix_cou¡
 = 
èrgë_cou¡
 - 
°¨t
;

533 
i
 = 
suffix_cou¡
 - 1; i >= 0; --i) {

534 (*
èrgë
)[
°¨t
 + 
sour˚_cou¡
 + 
i
] =

535 (*
èrgë
)[
°¨t
 + 
i
];

537 (*
èrgë
)[
°¨t
 + 
suffix_cou¡
 + 
sour˚_cou¡
] = 
NULL
;

541 
i
 = 
°¨t
; i < sèπ + 
sour˚_cou¡
; ++i) {

542 (*
èrgë
)[
i
] = 
	`°rdup
(
sour˚
[ò- 
°¨t
]);

548  
PMIX_SUCCESS
;

549 
	}
}

551 
pmix_°©us_t
 
	$pmix_¨gv_ö£π_ñemít
(***
èrgë
, 
loˇti⁄
, *
sour˚
)

553 
i
, 
èrgë_cou¡
;

554 
suffix_cou¡
;

558 i‡(
NULL
 =
èrgë
 || NULL =*èrgë || 
loˇti⁄
 < 0) {

559  
PMIX_ERR_BAD_PARAM
;

560 } i‡(
NULL
 =
sour˚
) {

561  
PMIX_SUCCESS
;

565 
èrgë_cou¡
 = 
	`pmix_¨gv_cou¡
(*
èrgë
);

566 i‡(
loˇti⁄
 > 
èrgë_cou¡
) {

567 
	`pmix_¨gv_≠≥nd
(&
èrgë_cou¡
, 
èrgë
, 
sour˚
);

568  
PMIX_SUCCESS
;

572 *
èrgë
 = (**Ë
	`ªÆloc
(*target,

573 (*Ë* (
èrgë_cou¡
 + 2));

576 
suffix_cou¡
 = 
èrgë_cou¡
 - 
loˇti⁄
;

577 
i
 = 
suffix_cou¡
 - 1; i >= 0; --i) {

578 (*
èrgë
)[
loˇti⁄
 + 1 + 
i
] =

579 (*
èrgë
)[
loˇti⁄
 + 
i
];

581 (*
èrgë
)[
loˇti⁄
 + 
suffix_cou¡
 + 1] = 
NULL
;

584 (*
èrgë
)[
loˇti⁄
] = 
	`°rdup
(
sour˚
);

587  
PMIX_SUCCESS
;

588 
	}
}

	@util/argv.h

34 #i‚de‡
PMIX_ARGV_H


35 
	#PMIX_ARGV_H


	)

37 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

40 #ifde‡
HAVE_SYS_TYPES_H


41 
	~<sys/ty≥s.h
>

44 
	~<pmix_comm⁄.h
>

46 
BEGIN_C_DECLS


77 
pmix_°©us_t
 
	$pmix_¨gv_≠≥nd
(*
¨gc
, ***
¨gv
, c⁄° *
¨g
Ë
	$__pmix_©åibuã_n⁄nuŒ__
(1Ë
	`__pmix_©åibuã_n⁄nuŒ__
(3);

94 
pmix_°©us_t
 
	`pmix_¨gv_≠≥nd_nosize
(***
¨gv
, c⁄° *
¨g
);

105 
pmix_°©us_t
 
	`pmix_¨gv_¥ïíd_nosize
(***
¨gv
, c⁄° *
¨g
);

122 
pmix_°©us_t
 
	`pmix_¨gv_≠≥nd_unique_nosize
(***
¨gv
, c⁄° *
¨g
, 
boﬁ
 
ovîwrôe
);

137 
	`pmix_¨gv_‰ì
(**
¨gv
);

154 **
	$pmix_¨gv_•lô
(c⁄° *
§c_°rög
, 
dñimôî
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

171 **
	$pmix_¨gv_•lô_wôh_em±y
(c⁄° *
§c_°rög
, 
dñimôî
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

183 
	`pmix_¨gv_cou¡
(**
¨gv
);

201 *
	$pmix_¨gv_joö
(**
¨gv
, 
dñimôî
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

203 *
	$pmix_¨gv_joö_ønge
(**
¨gv
, 
size_t
 
°¨t
, size_à
íd
, 
dñimôî
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

214 
size_t
 
	`pmix_¨gv_Àn
(**
¨gv
);

228 **
	$pmix_¨gv_c›y
(**
¨gv
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

255 
pmix_°©us_t
 
	`pmix_¨gv_dñëe
(*
¨gc
, ***
¨gv
,

256 
°¨t
, 
num_to_dñëe
);

279 
pmix_°©us_t
 
	`pmix_¨gv_ö£π
(***
èrgë
, 
°¨t
, **
sour˚
);

302 
pmix_°©us_t
 
	`pmix_¨gv_ö£π_ñemít
(***
èrgë
, 
loˇti⁄
, *
sour˚
);

304 
END_C_DECLS


	@util/basename.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<°dlib.h
>

27 #ifde‡
HAVE_STRING_H


28 
	~<°rög.h
>

30 #ifde‡
HAVE_LIBGEN_H


31 
	~<libgí.h
>

34 
	~"§c/utû/ba£«me.h
"

35 
	~"§c/utû/os_∑th.h
"

44 
ölöe
 * 
	$pmix_föd_œ°_∑th_£∑øt‹
–c⁄° * 
fûíame
, 
size_t
 
n
 )

46 * 
p
 = (*)
fûíame
 + 
n
;

49  ; 
p
 >
fûíame
;Ö-- ) {

50 if–*
p
 !
PMIX_PATH_SEP
[0] )

54  ; 
p
 >
fûíame
;Ö-- ) {

55 if–*
p
 =
PMIX_PATH_SEP
[0] )

56  
p
;

59  
NULL
;

60 
	}
}

62 *
	$pmix_ba£«me
(c⁄° *
fûíame
)

64 
size_t
 
i
;

65 *
tmp
, *
ªt
 = 
NULL
;

66 c⁄° 
£p
 = 
PMIX_PATH_SEP
[0];

69 i‡(
NULL
 =
fûíame
) {

70  
NULL
;

72 i‡(0 =
	`°æí
(
fûíame
)) {

73  
	`°rdup
("");

75 i‡(
£p
 =
fûíame
[0] && '\0' == filename[1]) {

76  
	`°rdup
(
fûíame
);

80 
tmp
 = 
	`°rdup
(
fûíame
);

81 
i
 = 
	`°æí
(
tmp
) - 1; i > 0; --i) {

82 i‡(
£p
 =
tmp
[
i
]) {

83 
tmp
[
i
] = '\0';

88 i‡(0 =
i
) {

89 
tmp
[0] = 
£p
;

90  
tmp
;

94 
ªt
 = 
	`pmix_föd_œ°_∑th_£∑øt‹
–
tmp
, 
	`°æí
(tmp) );

95 i‡(
NULL
 =
ªt
) {

96  
tmp
;

98 
ªt
 = 
	`°rdup
(ret + 1);

99 
	`‰ì
(
tmp
);

100  
ªt
;

101 
	}
}

103 * 
	$pmix_dú«me
(c⁄° * 
fûíame
)

105 #i‡
	`deföed
(
HAVE_DIRNAME
Ë|| 
PMIX_HAVE_DIRNAME


106 * 
ß„_tmp
 = 
	`°rdup
(
fûíame
), *
ªsu…
;

107 
ªsu…
 = 
	`°rdup
(
	`dú«me
(
ß„_tmp
));

108 
	`‰ì
(
ß„_tmp
);

109  
ªsu…
;

111 c⁄° * 
p
 = 
	`pmix_föd_œ°_∑th_£∑øt‹
(
fûíame
, 
	`°æí
(filename));

115  ; 
NULL
 !
p
 &&Ö !
fûíame
;Ö-- ) {

116 if–(*
p
 == '\\') || (*p == '/') ) {

118  --
p
;Ö !
fûíame
;Ö-- ) {

119 if–(*
p
 != '\\') && (*p != '/') ) {

120 
p
++;

124 if–
p
 !
fûíame
 ) {

125 * 
ªt
 = (*)
	`mÆloc
–
p
 - 
fûíame
 + 1 );

126 #ifde‡
HAVE_STRNCPY_S


127 
	`°∫˝y_s
–
ªt
, (
p
 - 
fûíame
 + 1), filename,Ö - filename );

129 
	`°∫˝y
(
ªt
, 
fûíame
, 
p
 - filename);

131 
ªt
[
p
 - 
fûíame
] = '\0';

132  
	`pmix_make_fûíame_os_‰õndly
(
ªt
);

137  
	`°rdup
(".");

139 
	}
}

	@util/basename.h

26 #i‚de‡
PMIX_BASENAME_H


27 
	#PMIX_BASENAME_H


	)

29 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

32 
BEGIN_C_DECLS


71 *
	$pmix_ba£«me
(c⁄° * 
fûíame
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

110 *
	$pmix_dú«me
(c⁄° * 
fûíame
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

112 
END_C_DECLS


	@util/crc.c

21 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

24 #ifde‡
HAVE_STDIO_H


25 
	~<°dio.h
>

27 #ifde‡
HAVE_STDLIB_H


28 
	~<°dlib.h
>

30 #ifde‡
HAVE_STRINGS_H


31 
	~<°rögs.h
>

33 #ifde‡
HAVE_STRING_H


34 
	~<°rög.h
>

36 #ifde‡
HAVE_UNISTD_H


37 
	~<uni°d.h
>

40 
	~"§c/utû/¸c.h
"

43 #i‡(
PMIX_ALIGNMENT_LONG
 == 8)

44 
	#PMIX_CRC_WORD_MASK_
 0x7

	)

45 #ñi‡(
PMIX_ALIGNMENT_LONG
 == 4)

46 
	#PMIX_CRC_WORD_MASK_
 0x3

	)

48 
	#PMIX_CRC_WORD_MASK_
 0xFFFF

	)

52 
	#WORDALIGNED
(
v
) \

53 (((
öçå_t
)
v
 & 
PMIX_CRC_WORD_MASK_
Ë? 
Ál£
 : 
åue
)

	)

56 
	#INTALIGNED
(
v
) \

57 (((
öçå_t
)
v
 & 3Ë? 
Ál£
 : 
åue
)

	)

70 
	$pmix_bc›y_csum_∑πül
 (

71 c⁄° * 
sour˚
,

72 * 
de°ö©i⁄
,

73 
size_t
 
c›yÀn
,

74 
size_t
 
csumÀn
,

75 * 
œ°P¨tülL⁄g
,

76 
size_t
* 
œ°P¨tülLígth


79 * 
§c
 = (*Ë
sour˚
;

80 * 
de°
 = (*Ë
de°ö©i⁄
;

81 
csum
 = 0;

82 
size_t
 
csumÀƒesidue
;

83 
i
, 
ãmp
;

85 
csumÀƒesidue
 = (
csumÀn
 > 
c›yÀn
) ? (csumlen - copylen) : 0;

86 
ãmp
 = *
œ°P¨tülL⁄g
;

88 i‡(
	`WORDALIGNED
(
sour˚
Ë&& WORDALIGNED(
de°
)) {

89 i‡(*
œ°P¨tülLígth
) {

91 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

92 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

93 ((Ë- *
œ°P¨tülLígth
));

94 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

95 ((Ë- *
œ°P¨tülLígth
));

96 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

97 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

98 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

99 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

101  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

102 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

103 
§c
++;

104 
csum
 +
ãmp
;

105 
	`mem˝y
(
de°
, &
ãmp
, (temp));

106 
de°
++;

108 *
œ°P¨tülLígth
 = 0;

109 *
œ°P¨tülL⁄g
 = 0;

112 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

113 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

114 
§c
 = (*)((*)§¯+ 
c›yÀn
);

115 
de°
 = (*)((*)de° + 
c›yÀn
);

116 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

117 *
œ°P¨tülL⁄g
 = 
ãmp
;

118 *
œ°P¨tülLígth
 +
c›yÀn
;

119 
c›yÀn
 = 0;

123 
size_t
 
numL⁄gs
 = 
c›yÀn
/();

124 
i
 = 0; i < 
numL⁄gs
; i++) {

125 
csum
 +*
§c
;

126 *
de°
++ = *
§c
++;

128 *
œ°P¨tülL⁄g
 = 0;

129 *
œ°P¨tülLígth
 = 0;

130 i‡(
	`WORDALIGNED
(
c›yÀn
Ë&& (
csumÀƒesidue
 == 0)) {

131 (
csum
);

134 
c›yÀn
 -
i
 * ();

137 } i‡(
	`WORDALIGNED
(
sour˚
)) {

138 i‡(*
œ°P¨tülLígth
) {

140 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

141 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

142 ((Ë- *
œ°P¨tülLígth
));

143 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

144 ((Ë- *
œ°P¨tülLígth
));

145 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

146 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

147 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

148 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

150 i‡(
	`WORDALIGNED
(
de°
)) {

151 
size_t
 
numL⁄gs
 = 
c›yÀn
/();

152 
i
 = 0; i < 
numL⁄gs
; i++) {

153 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

154 
§c
++;

155 
csum
 +
ãmp
;

156 *
de°
++ = 
ãmp
;

158 
c›yÀn
 -
i
 * ();

161  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

162 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

163 
§c
++;

164 
csum
 +
ãmp
;

165 
	`mem˝y
(
de°
, &
ãmp
, (temp));

166 
de°
++;

169 *
œ°P¨tülL⁄g
 = 0;

170 *
œ°P¨tülLígth
 = 0;

173 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

174 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

175 
§c
 = (*)((*)§¯+ 
c›yÀn
);

176 
de°
 = (*)((*)de° + 
c›yÀn
);

177 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

178 *
œ°P¨tülL⁄g
 = 
ãmp
;

179 *
œ°P¨tülLígth
 +
c›yÀn
;

180 
c›yÀn
 = 0;

184  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

185 
ãmp
 = *
§c
++;

186 
csum
 +
ãmp
;

187 
	`mem˝y
(
de°
, &
ãmp
, (temp));

188 
de°
++;

190 *
œ°P¨tülL⁄g
 = 0;

191 *
œ°P¨tülLígth
 = 0;

193 } i‡(
	`WORDALIGNED
(
de°
)) {

194 i‡(*
œ°P¨tülLígth
) {

196 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

197 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

198 ((Ë- *
œ°P¨tülLígth
));

199 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

200 ((Ë- *
œ°P¨tülLígth
));

201 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

202 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

203 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

204 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

206 i‡(
	`WORDALIGNED
(
§c
)) {

207  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

208 
ãmp
 = *
§c
++;

209 
csum
 +
ãmp
;

210 
	`mem˝y
(
de°
, &
ãmp
, (temp));

211 
de°
++;

213 *
œ°P¨tülL⁄g
 = 0;

214 *
œ°P¨tülLígth
 = 0;

217  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

218 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

219 
§c
++;

220 
csum
 +
ãmp
;

221 
	`mem˝y
(
de°
, &
ãmp
, (temp));

222 
de°
++;

224 *
œ°P¨tülLígth
 = 0;

225 *
œ°P¨tülL⁄g
 = 0;

229 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

230 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

231 
§c
 = (*)((*)§¯+ 
c›yÀn
);

232 
de°
 = (*)((*)de° + 
c›yÀn
);

233 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

234 *
œ°P¨tülL⁄g
 = 
ãmp
;

235 *
œ°P¨tülLígth
 +
c›yÀn
;

236 
c›yÀn
 = 0;

240  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

241 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

242 
§c
++;

243 
csum
 +
ãmp
;

244 *
de°
++ = 
ãmp
;

246 *
œ°P¨tülLígth
 = 0;

247 *
œ°P¨tülL⁄g
 = 0;

250 i‡(*
œ°P¨tülLígth
) {

252 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

253 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

254 ((Ë- *
œ°P¨tülLígth
));

255 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

256 ((Ë- *
œ°P¨tülLígth
));

257 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

258 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

259 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

260 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

262 i‡(
	`WORDALIGNED
(
§c
Ë&& WORDALIGNED(
de°
)) {

263 
size_t
 
numL⁄gs
 = 
c›yÀn
/();

264 
i
 = 0; i < 
numL⁄gs
; i++) {

265 
csum
 +*
§c
;

266 *
de°
++ = *
§c
++;

268 
c›yÀn
 -
i
 * ();

271  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

272 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

273 
§c
++;

274 
csum
 +
ãmp
;

275 
	`mem˝y
(
de°
, &
ãmp
, (temp));

276 
de°
++;

279 *
œ°P¨tülL⁄g
 = 0;

280 *
œ°P¨tülLígth
 = 0;

283 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

284 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

285 
§c
 = (*)((*)§¯+ 
c›yÀn
);

286 
de°
 = (*)((*)de° + 
c›yÀn
);

287 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

288 *
œ°P¨tülL⁄g
 = 
ãmp
;

289 *
œ°P¨tülLígth
 +
c›yÀn
;

290 
c›yÀn
 = 0;

294  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

295 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

296 
§c
++;

297 
csum
 +
ãmp
;

298 
	`mem˝y
(
de°
, &
ãmp
, (temp));

299 
de°
++;

301 *
œ°P¨tülLígth
 = 0;

302 *
œ°P¨tülL⁄g
 = 0;

307 i‡((
c›yÀn
 !0Ë&& (
csumÀƒesidue
 == 0)) {

308 
ãmp
 = *
œ°P¨tülL⁄g
;

309 i‡(*
œ°P¨tülLígth
) {

310 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

312 
c›yãmp
 = 0;

313 
	`mem˝y
(&
c›yãmp
, 
§c
, 
c›yÀn
);

314 
	`mem˝y
(
de°
, &
c›yãmp
, 
c›yÀn
);

316 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

317 ((Ë- *
œ°P¨tülLígth
));

321 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

322 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

323 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

324 *
œ°P¨tülLígth
 = 
c›yÀn
;

326 
ãmp
 = 0;

327 i‡(
c›yÀn
) {

328 
	`mem˝y
(&
ãmp
, 
§c
, 
c›yÀn
);

331 
csum
 +
ãmp
;

332 *
œ°P¨tülL⁄g
 = 
ãmp
;

336 
c›yãmp
 = 0;

337 
	`mem˝y
(&
c›yãmp
, 
§c
, 
c›yÀn
);

338 
	`mem˝y
(
de°
, &
c›yãmp
, 
c›yÀn
);

340 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

341 
c›yÀn
);

345 
csum
 +
ãmp
 - *
œ°P¨tülL⁄g
;

346 *
œ°P¨tülL⁄g
 = 
ãmp
;

347 *
œ°P¨tülLígth
 +
c›yÀn
;

352 
	`mem˝y
(&
ãmp
, 
§c
, 
c›yÀn
);

353 
csum
 +
ãmp
;

354 
	`mem˝y
(
de°
, &
ãmp
, 
c›yÀn
);

355 *
œ°P¨tülL⁄g
 = 
ãmp
;

356 *
œ°P¨tülLígth
 = 
c›yÀn
;

360 i‡(
csumÀƒesidue
 != 0) {

361 i‡(
c›yÀn
 != 0) {

362 
ãmp
 = 0;

363 
	`mem˝y
(&
ãmp
, 
§c
, 
c›yÀn
);

364 
	`mem˝y
(
de°
, &
ãmp
, 
c›yÀn
);

366 i‡(
csumÀƒesidue
 < ((Ë- 
c›yÀn
 - *
œ°P¨tülLígth
)) {

367 
ãmp
 = *
œ°P¨tülL⁄g
;

368 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, (
c›yÀn
 + 
csumÀƒesidue
));

371 
csum
 +
ãmp
 - *
œ°P¨tülL⁄g
;

372 
§c
++;

373 *
œ°P¨tülL⁄g
 = 
ãmp
;

374 *
œ°P¨tülLígth
 +
c›yÀn
 + 
csumÀƒesidue
;

375 
csumÀƒesidue
 = 0;

380 
ãmp
 = *
œ°P¨tülL⁄g
;

381 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

382 ((Ë- *
œ°P¨tülLígth
));

385 
csum
 +
ãmp
 - *
œ°P¨tülL⁄g
;

386 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

387 
csumÀƒesidue
 -(Ë- *
œ°P¨tülLígth
 - 
c›yÀn
;

388 *
œ°P¨tülLígth
 = 0;

389 *
œ°P¨tülL⁄g
 = 0;

391 i‡(
	`WORDALIGNED
(
§c
)) {

392 
i
 = 0; i < 
csumÀƒesidue
/(); i++) {

393 
csum
 +*
§c
++;

397 
i
 = 0; i < 
csumÀƒesidue
/(); i++) {

398 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

399 
csum
 +
ãmp
;

400 
§c
++;

403 
csumÀƒesidue
 -
i
 * ();

404 i‡(
csumÀƒesidue
) {

405 
ãmp
 = 0;

406 
	`mem˝y
(&
ãmp
, 
§c
, 
csumÀƒesidue
);

407 
csum
 +
ãmp
;

408 *
œ°P¨tülL⁄g
 = 
ãmp
;

409 *
œ°P¨tülLígth
 = 
csumÀƒesidue
;

413  
csum
;

414 
	}
}

417 
	$pmix_bc›y_uicsum_∑πül
 (

418 c⁄° * 
sour˚
,

419 * 
de°ö©i⁄
,

420 
size_t
 
c›yÀn
,

421 
size_t
 
csumÀn
,

422 * 
œ°P¨tülI¡
,

423 
size_t
* 
œ°P¨tülLígth


426 * 
§c
 = (*Ë
sour˚
;

427 * 
de°
 = (*Ë
de°ö©i⁄
;

428 
csum
 = 0;

429 
size_t
 
csumÀƒesidue
;

430 
i
;

431 
ãmp
;

433 
csumÀƒesidue
 = (
csumÀn
 > 
c›yÀn
) ? (csumlen - copylen) : 0;

434 
ãmp
 = *
œ°P¨tülI¡
;

436 i‡(
	`INTALIGNED
(
sour˚
Ë&& INTALIGNED(
de°
)) {

437 i‡(*
œ°P¨tülLígth
) {

439 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

440 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

441 ((Ë- *
œ°P¨tülLígth
));

442 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

443 ((Ë- *
œ°P¨tülLígth
));

444 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

445 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

446 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

447 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

449  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

450 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

451 
§c
++;

452 
csum
 +
ãmp
;

453 
	`mem˝y
(
de°
, &
ãmp
, (temp));

454 
de°
++;

456 *
œ°P¨tülLígth
 = 0;

457 *
œ°P¨tülI¡
 = 0;

460 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

461 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

462 
§c
 = (*)((*)§¯+ 
c›yÀn
);

463 
de°
 = (*)((*)de° + 
c›yÀn
);

464 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

465 *
œ°P¨tülI¡
 = 
ãmp
;

466 *
œ°P¨tülLígth
 +
c›yÀn
;

467 
c›yÀn
 = 0;

471 
size_t
 
numL⁄gs
 = 
c›yÀn
/();

472 
i
 = 0; i < 
numL⁄gs
; i++) {

473 
csum
 +*
§c
;

474 *
de°
++ = *
§c
++;

476 *
œ°P¨tülI¡
 = 0;

477 *
œ°P¨tülLígth
 = 0;

478 i‡(
	`INTALIGNED
(
c›yÀn
Ë&& (
csumÀƒesidue
 == 0)) {

479 (
csum
);

482 
c›yÀn
 -
i
 * ();

485 } i‡(
	`INTALIGNED
(
sour˚
)) {

486 i‡(*
œ°P¨tülLígth
) {

488 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

489 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

490 ((Ë- *
œ°P¨tülLígth
));

491 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

492 ((Ë- *
œ°P¨tülLígth
));

493 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

494 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

495 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

496 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

498 i‡(
	`INTALIGNED
(
de°
)) {

499 
size_t
 
numL⁄gs
 = 
c›yÀn
/();

500 
i
 = 0; i < 
numL⁄gs
; i++) {

501 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

502 
§c
++;

503 
csum
 +
ãmp
;

504 *
de°
++ = 
ãmp
;

506 
c›yÀn
 -
i
 * ();

509  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

510 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

511 
§c
++;

512 
csum
 +
ãmp
;

513 
	`mem˝y
(
de°
, &
ãmp
, (temp));

514 
de°
++;

517 *
œ°P¨tülI¡
 = 0;

518 *
œ°P¨tülLígth
 = 0;

521 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

522 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

523 
§c
 = (*)((*)§¯+ 
c›yÀn
);

524 
de°
 = (*)((*)de° + 
c›yÀn
);

525 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

526 *
œ°P¨tülI¡
 = 
ãmp
;

527 *
œ°P¨tülLígth
 +
c›yÀn
;

528 
c›yÀn
 = 0;

532  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

533 
ãmp
 = *
§c
++;

534 
csum
 +
ãmp
;

535 
	`mem˝y
(
de°
, &
ãmp
, (temp));

536 
de°
++;

538 *
œ°P¨tülI¡
 = 0;

539 *
œ°P¨tülLígth
 = 0;

541 } i‡(
	`INTALIGNED
(
de°
)) {

542 i‡(*
œ°P¨tülLígth
) {

544 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

545 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

546 ((Ë- *
œ°P¨tülLígth
));

547 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

548 ((Ë- *
œ°P¨tülLígth
));

549 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

550 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

551 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

552 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

554 i‡(
	`INTALIGNED
(
§c
)) {

555  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

556 
ãmp
 = *
§c
++;

557 
csum
 +
ãmp
;

558 
	`mem˝y
(
de°
, &
ãmp
, (temp));

559 
de°
++;

561 *
œ°P¨tülI¡
 = 0;

562 *
œ°P¨tülLígth
 = 0;

565  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

566 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

567 
§c
++;

568 
csum
 +
ãmp
;

569 
	`mem˝y
(
de°
, &
ãmp
, (temp));

570 
de°
++;

572 *
œ°P¨tülLígth
 = 0;

573 *
œ°P¨tülI¡
 = 0;

577 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

578 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

579 
§c
 = (*)((*)§¯+ 
c›yÀn
);

580 
de°
 = (*)((*)de° + 
c›yÀn
);

581 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

582 *
œ°P¨tülI¡
 = 
ãmp
;

583 *
œ°P¨tülLígth
 +
c›yÀn
;

584 
c›yÀn
 = 0;

588  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

589 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

590 
§c
++;

591 
csum
 +
ãmp
;

592 *
de°
++ = 
ãmp
;

594 *
œ°P¨tülLígth
 = 0;

595 *
œ°P¨tülI¡
 = 0;

598 i‡(*
œ°P¨tülLígth
) {

600 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

601 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

602 ((Ë- *
œ°P¨tülLígth
));

603 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
),

604 ((Ë- *
œ°P¨tülLígth
));

605 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

606 
de°
 = (*)((*)de° + (Ë- *
œ°P¨tülLígth
);

607 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

608 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

610 i‡(
	`INTALIGNED
(
§c
Ë&& INTALIGNED(
de°
)) {

611 
size_t
 
numL⁄gs
 = 
c›yÀn
/();

612 
i
 = 0; i < 
numL⁄gs
; i++) {

613 
csum
 +*
§c
;

614 *
de°
++ = *
§c
++;

616 
c›yÀn
 -
i
 * ();

619  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

620 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

621 
§c
++;

622 
csum
 +
ãmp
;

623 
	`mem˝y
(
de°
, &
ãmp
, (temp));

624 
de°
++;

627 *
œ°P¨tülI¡
 = 0;

628 *
œ°P¨tülLígth
 = 0;

631 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
c›yÀn
);

632 
	`mem˝y
(
de°
, ((*)&
ãmp
 + *
œ°P¨tülLígth
), 
c›yÀn
);

633 
§c
 = (*)((*)§¯+ 
c›yÀn
);

634 
de°
 = (*)((*)de° + 
c›yÀn
);

635 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

636 *
œ°P¨tülI¡
 = 
ãmp
;

637 *
œ°P¨tülLígth
 +
c›yÀn
;

638 
c›yÀn
 = 0;

642  ;
c›yÀn
 >(*
§c
); copylen -= (*src)) {

643 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

644 
§c
++;

645 
csum
 +
ãmp
;

646 
	`mem˝y
(
de°
, &
ãmp
, (temp));

647 
de°
++;

649 *
œ°P¨tülLígth
 = 0;

650 *
œ°P¨tülI¡
 = 0;

655 i‡((
c›yÀn
 !0Ë&& (
csumÀƒesidue
 == 0)) {

656 
ãmp
 = *
œ°P¨tülI¡
;

657 i‡(*
œ°P¨tülLígth
) {

658 i‡(
c›yÀn
 >((Ë- *
œ°P¨tülLígth
)) {

660 
c›yãmp
 = 0;

661 
	`mem˝y
(&
c›yãmp
, 
§c
, 
c›yÀn
);

662 
	`mem˝y
(
de°
, &
c›yãmp
, 
c›yÀn
);

664 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

665 ((Ë- *
œ°P¨tülLígth
));

669 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

670 
c›yÀn
 -(Ë- *
œ°P¨tülLígth
;

671 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

672 *
œ°P¨tülLígth
 = 
c›yÀn
;

674 
ãmp
 = 0;

675 i‡(
c›yÀn
) {

676 
	`mem˝y
(&
ãmp
, 
§c
, 
c›yÀn
);

679 
csum
 +
ãmp
;

680 *
œ°P¨tülI¡
 = 
ãmp
;

684 
c›yãmp
 = 0;

685 
	`mem˝y
(&
c›yãmp
, 
§c
, 
c›yÀn
);

686 
	`mem˝y
(
de°
, &
c›yãmp
, 
c›yÀn
);

688 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

689 
c›yÀn
);

693 
csum
 +
ãmp
 - *
œ°P¨tülI¡
;

694 *
œ°P¨tülI¡
 = 
ãmp
;

695 *
œ°P¨tülLígth
 +
c›yÀn
;

700 
	`mem˝y
(&
ãmp
, 
§c
, 
c›yÀn
);

701 
csum
 +
ãmp
;

702 
	`mem˝y
(
de°
, &
ãmp
, 
c›yÀn
);

703 *
œ°P¨tülI¡
 = 
ãmp
;

704 *
œ°P¨tülLígth
 = 
c›yÀn
;

708 i‡(
csumÀƒesidue
 != 0) {

709 i‡(
c›yÀn
 != 0) {

710 
ãmp
 = 0;

711 
	`mem˝y
(&
ãmp
, 
§c
, 
c›yÀn
);

712 
	`mem˝y
(
de°
, &
ãmp
, 
c›yÀn
);

714 i‡(
csumÀƒesidue
 < ((Ë- 
c›yÀn
 - *
œ°P¨tülLígth
)) {

715 
ãmp
 = *
œ°P¨tülI¡
;

716 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, (
c›yÀn
 + 
csumÀƒesidue
));

720 
csum
 +
ãmp
 - *
œ°P¨tülI¡
;

721 
§c
++;

722 *
œ°P¨tülI¡
 = 
ãmp
;

723 *
œ°P¨tülLígth
 +
c›yÀn
 + 
csumÀƒesidue
;

724 
csumÀƒesidue
 = 0;

730 
ãmp
 = *
œ°P¨tülI¡
;

731 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

732 ((Ë- *
œ°P¨tülLígth
));

736 
csum
 +
ãmp
 - *
œ°P¨tülI¡
;

737 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

738 
csumÀƒesidue
 -(Ë- *
œ°P¨tülLígth
 - 
c›yÀn
;

739 *
œ°P¨tülLígth
 = 0;

740 *
œ°P¨tülI¡
 = 0;

742 i‡(
	`INTALIGNED
(
§c
)) {

743 
i
 = 0; i < 
csumÀƒesidue
/(); i++) {

744 
csum
 +*
§c
++;

748 
i
 = 0; i < 
csumÀƒesidue
/(); i++) {

749 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

750 
csum
 +
ãmp
;

751 
§c
++;

754 
csumÀƒesidue
 -
i
 * ();

755 i‡(
csumÀƒesidue
) {

756 
ãmp
 = 0;

757 
	`mem˝y
(&
ãmp
, 
§c
, 
csumÀƒesidue
);

758 
csum
 +
ãmp
;

759 *
œ°P¨tülI¡
 = 
ãmp
;

760 *
œ°P¨tülLígth
 = 
csumÀƒesidue
;

764  
csum
;

765 
	}
}

774 
	$pmix_csum_∑πül
 (

775 c⁄° * 
sour˚
,

776 
size_t
 
csumÀn
,

777 * 
œ°P¨tülL⁄g
,

778 
size_t
* 
œ°P¨tülLígth


781 * 
§c
 = (*Ë
sour˚
;

782 
csum
 = 0;

783 
i
, 
ãmp
;

787 
ãmp
 = *
œ°P¨tülL⁄g
;

789 i‡(
	`WORDALIGNED
(
sour˚
)) {

790 i‡(*
œ°P¨tülLígth
) {

792 i‡(
csumÀn
 >((Ë- *
œ°P¨tülLígth
)) {

793 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

794 ((Ë- *
œ°P¨tülLígth
));

795 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

796 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

797 
csumÀn
 -(Ë- *
œ°P¨tülLígth
;

799 
i
 = 0; i < 
csumÀn
/(); i++) {

800 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

801 
csum
 +
ãmp
;

802 
§c
++;

804 
csumÀn
 -
i
 * ();

805 *
œ°P¨tülL⁄g
 = 0;

806 *
œ°P¨tülLígth
 = 0;

809 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
csumÀn
);

810 
§c
 = (*)((*)§¯+ 
csumÀn
);

811 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

812 *
œ°P¨tülL⁄g
 = 
ãmp
;

813 *
œ°P¨tülLígth
 +
csumÀn
;

814 
csumÀn
 = 0;

818 
size_t
 
numL⁄gs
 = 
csumÀn
/();

819 
i
 = 0; i < 
numL⁄gs
; i++) {

820 
csum
 +*
§c
++;

822 *
œ°P¨tülL⁄g
 = 0;

823 *
œ°P¨tülLígth
 = 0;

824 i‡(
	`WORDALIGNED
(
csumÀn
)) {

825 (
csum
);

828 
csumÀn
 -
i
 * ();

832 i‡(*
œ°P¨tülLígth
) {

834 i‡(
csumÀn
 >((Ë- *
œ°P¨tülLígth
)) {

835 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

836 ((Ë- *
œ°P¨tülLígth
));

837 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

838 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

839 
csumÀn
 -(Ë- *
œ°P¨tülLígth
;

841 i‡(
	`WORDALIGNED
(
§c
)) {

842 
i
 = 0; i < 
csumÀn
/(); i++) {

843 
csum
 +*
§c
++;

845 
csumÀn
 -
i
 * ();

846 *
œ°P¨tülL⁄g
 = 0;

847 *
œ°P¨tülLígth
 = 0;

850 
i
 = 0; i < 
csumÀn
/(); i++) {

851 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

852 
csum
 +
ãmp
;

853 
§c
++;

855 
csumÀn
 -
i
 * ();

856 *
œ°P¨tülL⁄g
 = 0;

857 *
œ°P¨tülLígth
 = 0;

861 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
csumÀn
);

862 
§c
 = (*)((*)§¯+ 
csumÀn
);

863 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

864 *
œ°P¨tülL⁄g
 = 
ãmp
;

865 *
œ°P¨tülLígth
 +
csumÀn
;

866 
csumÀn
 = 0;

870  ;
csumÀn
 >(*
§c
); csumlen -= (*src)) {

871 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

872 
§c
++;

873 
csum
 +
ãmp
;

875 *
œ°P¨tülLígth
 = 0;

876 *
œ°P¨tülL⁄g
 = 0;

881 i‡(
csumÀn
 != 0) {

882 
ãmp
 = *
œ°P¨tülL⁄g
;

883 i‡(*
œ°P¨tülLígth
) {

884 i‡(
csumÀn
 >((Ë- *
œ°P¨tülLígth
)) {

886 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

887 ((Ë- *
œ°P¨tülLígth
));

888 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

889 
csumÀn
 -(Ë- *
œ°P¨tülLígth
;

890 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

891 *
œ°P¨tülLígth
 = 
csumÀn
;

893 
ãmp
 = 0;

894 i‡(
csumÀn
) {

895 
	`mem˝y
(&
ãmp
, 
§c
, 
csumÀn
);

898 
csum
 +
ãmp
;

899 *
œ°P¨tülL⁄g
 = 
ãmp
;

903 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

904 
csumÀn
);

905 
csum
 +(
ãmp
 - *
œ°P¨tülL⁄g
);

906 *
œ°P¨tülL⁄g
 = 
ãmp
;

907 *
œ°P¨tülLígth
 +
csumÀn
;

912 
	`mem˝y
(&
ãmp
, 
§c
, 
csumÀn
);

913 
csum
 +
ãmp
;

914 *
œ°P¨tülL⁄g
 = 
ãmp
;

915 *
œ°P¨tülLígth
 = 
csumÀn
;

920  
csum
;

921 
	}
}

924 
	$pmix_uicsum_∑πül
 (

925 c⁄° * 
sour˚
,

926 
size_t
 
csumÀn
,

927 * 
œ°P¨tülI¡
,

928 
size_t
* 
œ°P¨tülLígth


931 * 
§c
 = (*Ë
sour˚
;

932 
csum
 = 0;

933 
ãmp
;

934 
i
;

937 
ãmp
 = *
œ°P¨tülI¡
;

939 i‡(
	`INTALIGNED
(
sour˚
)) {

940 i‡(*
œ°P¨tülLígth
) {

942 i‡(
csumÀn
 >((Ë- *
œ°P¨tülLígth
)) {

943 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

944 ((Ë- *
œ°P¨tülLígth
));

945 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

946 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

947 
csumÀn
 -(Ë- *
œ°P¨tülLígth
;

949 
i
 = 0; i < 
csumÀn
/(); i++) {

950 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

951 
csum
 +
ãmp
;

952 
§c
++;

954 
csumÀn
 -
i
 * ();

955 *
œ°P¨tülI¡
 = 0;

956 *
œ°P¨tülLígth
 = 0;

959 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
csumÀn
);

960 
§c
 = (*)((*)§¯+ 
csumÀn
);

961 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

962 *
œ°P¨tülI¡
 = 
ãmp
;

963 *
œ°P¨tülLígth
 +
csumÀn
;

964 
csumÀn
 = 0;

968 
size_t
 
numL⁄gs
 = 
csumÀn
/();

969 
i
 = 0; i < 
numL⁄gs
; i++) {

970 
csum
 +*
§c
++;

972 *
œ°P¨tülI¡
 = 0;

973 *
œ°P¨tülLígth
 = 0;

974 i‡(
	`INTALIGNED
(
csumÀn
)) {

975 (
csum
);

978 
csumÀn
 -
i
 * ();

982 i‡(*
œ°P¨tülLígth
) {

984 i‡(
csumÀn
 >((Ë- *
œ°P¨tülLígth
)) {

985 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

986 ((Ë- *
œ°P¨tülLígth
));

987 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

988 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

989 
csumÀn
 -(Ë- *
œ°P¨tülLígth
;

991 i‡(
	`INTALIGNED
(
§c
)) {

992 
i
 = 0; i < 
csumÀn
/(); i++) {

993 
csum
 +*
§c
++;

995 
csumÀn
 -
i
 * ();

996 *
œ°P¨tülI¡
 = 0;

997 *
œ°P¨tülLígth
 = 0;

1000 
i
 = 0; i < 
csumÀn
/(); i++) {

1001 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

1002 
csum
 +
ãmp
;

1003 
§c
++;

1005 
csumÀn
 -
i
 * ();

1006 *
œ°P¨tülI¡
 = 0;

1007 *
œ°P¨tülLígth
 = 0;

1011 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
, 
csumÀn
);

1012 
§c
 = (*)((*)§¯+ 
csumÀn
);

1013 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

1014 *
œ°P¨tülI¡
 = 
ãmp
;

1015 *
œ°P¨tülLígth
 +
csumÀn
;

1016 
csumÀn
 = 0;

1020  ;
csumÀn
 >(*
§c
); csumlen -= (*src)) {

1021 
	`mem˝y
(&
ãmp
, 
§c
, (temp));

1022 
§c
++;

1023 
csum
 +
ãmp
;

1025 *
œ°P¨tülLígth
 = 0;

1026 *
œ°P¨tülI¡
 = 0;

1031 i‡(
csumÀn
 != 0) {

1032 
ãmp
 = *
œ°P¨tülI¡
;

1033 i‡(*
œ°P¨tülLígth
) {

1034 i‡(
csumÀn
 >((Ë- *
œ°P¨tülLígth
)) {

1036 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

1037 ((Ë- *
œ°P¨tülLígth
));

1038 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

1039 
csumÀn
 -(Ë- *
œ°P¨tülLígth
;

1040 
§c
 = (*)((*)§¯+ (Ë- *
œ°P¨tülLígth
);

1041 *
œ°P¨tülLígth
 = 
csumÀn
;

1043 
ãmp
 = 0;

1044 i‡(
csumÀn
) {

1045 
	`mem˝y
(&
ãmp
, 
§c
, 
csumÀn
);

1048 
csum
 +
ãmp
;

1049 *
œ°P¨tülI¡
 = 
ãmp
;

1053 
	`mem˝y
(((*)&
ãmp
 + *
œ°P¨tülLígth
), 
§c
,

1054 
csumÀn
);

1055 
csum
 +(
ãmp
 - *
œ°P¨tülI¡
);

1056 *
œ°P¨tülI¡
 = 
ãmp
;

1057 *
œ°P¨tülLígth
 +
csumÀn
;

1062 
	`mem˝y
(&
ãmp
, 
§c
, 
csumÀn
);

1063 
csum
 +
ãmp
;

1064 *
œ°P¨tülI¡
 = 
ãmp
;

1065 *
œ°P¨tülLígth
 = 
csumÀn
;

1070  
csum
;

1071 
	}
}

1075 
boﬁ
 
	g_pmix_¸c_èbÀ_öôülized
 = 
Ál£
;

1076 
	g_pmix_¸c_èbÀ
[256];

1082 
	$pmix_öôülize_¸c_èbÀ
()

1084 
i
,
j
;

1085 
¸c_accum
;

1087 
i
 = 0; i < 256; i++) {

1088 
¸c_accum
 = (
i
 << 24);

1089 
j
 = 0; j < 8; j++) {

1090 i‡(
¸c_accum
 & 0x80000000)

1091 
¸c_accum
 = (¸c_accum << 1Ë^ 
CRC_POLYNOMIAL
;

1093 
¸c_accum
 = (crc_accum << 1);

1095 
_pmix_¸c_èbÀ
[
i
] = 
¸c_accum
;

1099 
_pmix_¸c_èbÀ_öôülized
 = 
åue
;

1101 
	}
}

1103 
	$pmix_bc›y_ui¸c_∑πül
(

1104 c⁄° * 
sour˚
,

1105 * 
de°ö©i⁄
,

1106 
size_t
 
c›yÀn
,

1107 
size_t
 
¸˛í
,

1108 
∑πül_¸c
)

1110 
size_t
 
¸˛íªsidue
 = (
¸˛í
 > 
c›yÀn
) ? (crclen - copylen) : 0;

1111 
i
, 
j
;

1112 
t
;

1113 
tmp
;

1115 i‡(!
_pmix_¸c_èbÀ_öôülized
) {

1116 
	`pmix_öôülize_¸c_èbÀ
();

1119 i‡(
	`INTALIGNED
(
sour˚
Ë&& INTALIGNED(
de°ö©i⁄
)) {

1120 * 
§c
 = (*)
sour˚
;

1121 * 
d°
 = (*)
de°ö©i⁄
;

1122 *
ts
, *
td
;

1124 
c›yÀn
 >= ()) {

1125 
tmp
 = *
§c
++;

1126 *
d°
++ = 
tmp
;

1127 
ts
 = (*)&
tmp
;

1128 
j
 = 0; j < ()(); j++) {

1129 
i
 = ((
∑πül_¸c
 >> 24Ë^ *
ts
++) & 0xff;

1130 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1132 
c›yÀn
 -= ();

1134 
ts
 = (*)
§c
;

1135 
td
 = (*)
d°
;

1137 
c›yÀn
--) {

1138 
t
 = *
ts
++;

1139 *
td
++ = 
t
;

1140 
i
 = ((
∑πül_¸c
 >> 24Ë^ 
t
) & 0xff;

1141 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1144 
¸˛íªsidue
--) {

1145 
i
 = ((
∑πül_¸c
 >> 24Ë^ *
ts
++) & 0xff;

1146 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1150 * 
§c
 = (*)
sour˚
;

1151 * 
d°
 = (*)
de°ö©i⁄
;

1152 
c›yÀn
--) {

1153 
t
 = *
§c
++;

1154 *
d°
++ = 
t
;

1155 
i
 = ((
∑πül_¸c
 >> 24Ë^ 
t
) & 0xff;

1156 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1158 
¸˛íªsidue
--) {

1159 
i
 = ((
∑πül_¸c
 >> 24Ë^ *
§c
++) & 0xff;

1160 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1164  
∑πül_¸c
;

1165 
	}
}

1168 
	$pmix_ui¸c_∑πül
(

1169 c⁄° * 
sour˚
, 
size_t
 
¸˛í
, 
∑πül_¸c
)

1171 
i
, 
j
;

1172 * 
t
;

1173 
tmp
;

1175 i‡(!
_pmix_¸c_èbÀ_öôülized
) {

1176 
	`pmix_öôülize_¸c_èbÀ
();

1179 i‡(
	`INTALIGNED
(
sour˚
)) {

1180 * 
§c
 = (*)
sour˚
;

1181 
¸˛í
 >= ()) {

1182 
tmp
 = *
§c
++;

1183 
t
 = (*)&
tmp
;

1184 
j
 = 0; j < ()(); j++) {

1185 
i
 = ((
∑πül_¸c
 >> 24Ë^ *
t
++) & 0xff;

1186 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1188 
¸˛í
 -= ();

1190 
t
 = (*)
§c
;

1191 
¸˛í
--) {

1192 
i
 = ((
∑πül_¸c
 >> 24Ë^ *
t
++) & 0xff;

1193 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1197 * 
§c
 = (*)
sour˚
;

1198 
¸˛í
--) {

1199 
i
 = ((
∑πül_¸c
 >> 24Ë^ *
§c
++) & 0xff;

1200 
∑πül_¸c
 = (∑πül_¸¯<< 8Ë^ 
_pmix_¸c_èbÀ
[
i
];

1204  
∑πül_¸c
;

1205 
	}
}

	@util/crc.h

23 #i‚de‡
_PMIX_CRC_H_


24 
	#_PMIX_CRC_H_


	)

26 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

29 
	~<°ddef.h
>

31 
	gBEGIN_C_DECLS


33 
	#CRC_POLYNOMIAL
 (()0x04c11db7)

	)

34 
	#CRC_INITIAL_REGISTER
 (()0xffffffff)

	)

37 
	#PMIX_CSUM
–
SRC
, 
LEN
 ) 
	`pmix_uicsum
–SRC, LEN )

	)

38 
	#PMIX_CSUM_PARTIAL
–
SRC
, 
LEN
, 
UI1
, 
UI2
 ) \

39 
	`pmix_uicsum_∑πül
–
SRC
, 
LEN
, 
UI1
, 
UI2
 )

	)

40 
	#PMIX_CSUM_BCOPY_PARTIAL
–
SRC
, 
DST
, 
LEN1
, 
LEN2
, 
UI1
, 
UI2
 ) \

41 
	`pmix_bc›y_uicsum_∑πül
–
SRC
, 
DST
, 
LEN1
, 
LEN2
, 
UI1
, 
UI2
 )

	)

42 
	#PMIX_CSUM_ZERO
 0

	)

46 
pmix_bc›y_csum_∑πül
(

47 c⁄° * 
sour˚
,

48 * 
de°ö©i⁄
,

49 
size_t
 
c›yÀn
,

50 
size_t
 
csumÀn
,

51 * 
œ°P¨tülL⁄g
,

52 
size_t
* 
œ°P¨tülLígth


55 
ölöe
 

56 
	$pmix_bc›y_csum
 (

57 c⁄° * 
sour˚
,

58 * 
de°ö©i⁄
,

59 
size_t
 
c›yÀn
,

60 
size_t
 
csumÀn


63 
∂⁄g
 = 0;

64 
size_t
 
∂ígth
 = 0;

65  
	`pmix_bc›y_csum_∑πül
(
sour˚
, 
de°ö©i⁄
, 
c›yÀn
, 
csumÀn
, &
∂⁄g
, &
∂ígth
);

66 
	}
}

69 
pmix_bc›y_uicsum_∑πül
 (

70 c⁄° * 
sour˚
,

71 * 
de°ö©i⁄
,

72 
size_t
 
c›yÀn
,

73 
size_t
 
csumÀn
,

74 * 
œ°P¨tülI¡
,

75 
size_t
* 
œ°P¨tülLígth


78 
ölöe
 

79 
	$pmix_bc›y_uicsum
 (

80 c⁄° * 
sour˚
,

81 * 
de°ö©i⁄
,

82 
size_t
 
c›yÀn
,

83 
size_t
 
csumÀn


86 
pöt
 = 0;

87 
size_t
 
∂ígth
 = 0;

88  
	`pmix_bc›y_uicsum_∑πül
(
sour˚
, 
de°ö©i⁄
, 
c›yÀn
, 
csumÀn
, &
pöt
, &
∂ígth
);

89 
	}
}

92 
pmix_csum_∑πül
 (

93 c⁄° * 
sour˚
,

94 
size_t
 
csumÀn
,

95 * 
œ°P¨tülL⁄g
,

96 
size_t
* 
œ°P¨tülLígth


100 
ölöe
 

101 
	$pmix_csum
(c⁄° * 
sour˚
, 
size_t
 
csumÀn
)

103 
œ°P¨tülL⁄g
 = 0;

104 
size_t
 
œ°P¨tülLígth
 = 0;

105  
	`pmix_csum_∑πül
(
sour˚
, 
csumÀn
, &
œ°P¨tülL⁄g
, &
œ°P¨tülLígth
);

106 
	}
}

110 
ölöe
 
uöt16_t


111 
	$pmix_csum16
 (c⁄° * 
sour˚
, 
size_t
 
csumÀn
)

113 
uöt16_t
 *
§c
 = (uöt16_à*Ë
sour˚
;

114 
uöt32_t
 
csum
 = 0;

116 
csumÀn
 > 1) {

117 
csum
 +*
§c
++;

118 
csumÀn
 -= 2;

121 if(
csumÀn
 > 0)

122 
csum
 +*((*)
§c
);

124 
csum
 >> 16) {

125 
csum
 = (csum & 0xFFFF) + (csum >> 16);

127  
csum
;

128 
	}
}

131 
pmix_uicsum_∑πül
 (

132 c⁄° * 
sour˚
,

133 
size_t
 
csumÀn
,

134 * 
œ°P¨tülI¡
,

135 
size_t
* 
œ°P¨tülLígth


138 
ölöe
 

139 
	$pmix_uicsum
(c⁄° * 
sour˚
, 
size_t
 
csumÀn
)

141 
œ°P¨tülI¡
 = 0;

142 
size_t
 
œ°P¨tülLígth
 = 0;

143  
	`pmix_uicsum_∑πül
(
sour˚
, 
csumÀn
, &
œ°P¨tülI¡
, &
œ°P¨tülLígth
);

144 
	}
}

150 
pmix_öôülize_¸c_èbÀ
();

153 
pmix_bc›y_ui¸c_∑πül
(

154 c⁄° * 
sour˚
,

155 * 
de°ö©i⁄
,

156 
size_t
 
c›yÀn
,

157 
size_t
 
¸˛í
,

158 
∑πül_¸c
);

160 
ölöe
 

161 
	$pmix_bc›y_ui¸c
(

162 c⁄° * 
sour˚
,

163 * 
de°ö©i⁄
,

164 
size_t
 
c›yÀn
,

165 
size_t
 
¸˛í
)

167  
	`pmix_bc›y_ui¸c_∑πül
(
sour˚
, 
de°ö©i⁄
, 
c›yÀn
, 
¸˛í
, 
CRC_INITIAL_REGISTER
);

168 
	}
}

171 
pmix_ui¸c_∑πül
(

172 c⁄° * 
sour˚
,

173 
size_t
 
¸˛í
,

174 
∑πül_¸c
);

177 
ölöe
 

178 
	$pmix_ui¸c
(c⁄° * 
sour˚
, 
size_t
 
¸˛í
)

180  
	`pmix_ui¸c_∑πül
(
sour˚
, 
¸˛í
, 
CRC_INITIAL_REGISTER
);

181 
	}
}

183 
	gEND_C_DECLS


	@util/error.c

22 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 #ifde‡
HAVE_STRING_H


26 
	~<°rög.h
>

28 
	~<î∫o.h
>

29 
	~<°dio.h
>

30 #ifde‡
HAVE_STDLIB_H


31 
	~<°dlib.h
>

34 
	~<pmix_comm⁄.h
>

36 
	~"§c/utû/îr‹.h
"

38 c⁄° * 
	$PMIx_Eº‹_°rög
(
pmix_°©us_t
 
î∫um
)

40 
î∫um
) {

41 
PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
:

43 
PMIX_ERR_LOST_CONNECTION_TO_SERVER
:

45 
PMIX_ERR_NOT_SUPPORTED
:

47 
PMIX_ERR_NOT_FOUND
:

49 
PMIX_ERR_SERVER_NOT_AVAIL
:

51 
PMIX_ERR_INVALID_NAMESPACE
:

53 
PMIX_ERR_INVALID_SIZE
:

55 
PMIX_ERR_INVALID_KEYVALP
:

57 
PMIX_ERR_INVALID_NUM_PARSED
:

60 
PMIX_ERR_INVALID_ARGS
:

62 
PMIX_ERR_INVALID_NUM_ARGS
:

64 
PMIX_ERR_INVALID_LENGTH
:

66 
PMIX_ERR_INVALID_VAL_LENGTH
:

68 
PMIX_ERR_INVALID_VAL
:

70 
PMIX_ERR_INVALID_KEY_LENGTH
:

72 
PMIX_ERR_INVALID_KEY
:

74 
PMIX_ERR_INVALID_ARG
:

76 
PMIX_ERR_NOMEM
:

78 
PMIX_ERR_INIT
:

81 
PMIX_ERR_DATA_VALUE_NOT_FOUND
:

83 
PMIX_ERR_OUT_OF_RESOURCE
:

85 
PMIX_ERR_BAD_PARAM
:

87 
PMIX_ERR_IN_ERRNO
:

89 
PMIX_ERR_UNREACH
:

91 
PMIX_ERR_TIMEOUT
:

93 
PMIX_ERR_NO_PERMISSIONS
:

95 
PMIX_ERR_PACK_MISMATCH
:

97 
PMIX_ERR_PACK_FAILURE
:

100 
PMIX_ERR_UNPACK_FAILURE
:

102 
PMIX_ERR_UNPACK_INADEQUATE_SPACE
:

104 
PMIX_ERR_TYPE_MISMATCH
:

106 
PMIX_ERR_PROC_ENTRY_NOT_FOUND
:

108 
PMIX_ERR_UNKNOWN_DATA_TYPE
:

110 
PMIX_ERR_WOULD_BLOCK
:

112 
PMIX_ERR_READY_FOR_HANDSHAKE
:

114 
PMIX_ERR_HANDSHAKE_FAILED
:

116 
PMIX_ERR_INVALID_CRED
:

118 
PMIX_EXISTS
:

120 
PMIX_ERR_SERVER_FAILED_REQUEST
:

122 
PMIX_ERR_PROC_MIGRATE
:

124 
PMIX_ERR_PROC_CHECKPOINT
:

126 
PMIX_ERR_PROC_RESTART
:

128 
PMIX_ERR_PROC_ABORTING
:

130 
PMIX_ERR_PROC_REQUESTED_ABORT
:

132 
PMIX_ERR_PROC_ABORTED
:

134 
PMIX_ERR_DEBUGGER_RELEASE
:

136 
PMIX_ERR_SILENT
:

138 
PMIX_ERROR
:

140 
PMIX_ERR_NOT_AVAILABLE
:

142 
PMIX_ERR_FATAL
:

144 
PMIX_ERR_VALUE_OUT_OF_BOUNDS
:

146 
PMIX_ERR_PERM
:

148 
PMIX_SUCCESS
:

153 
	}
}

	@util/error.h

20 #i‚de‡
PMIX_UTIL_ERROR_H


21 
	#PMIX_UTIL_ERROR_H


	)

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<pmix_comm⁄.h
>

27 
	~"§c/utû/ouçut.h
"

29 
	gBEGIN_C_DECLS


32 
	#PMIX_ERR_INVALID_CRED
 (
PMIX_INTERNAL_ERR_BASE
 - 1)

	)

33 
	#PMIX_ERR_HANDSHAKE_FAILED
 (
PMIX_INTERNAL_ERR_BASE
 - 2)

	)

34 
	#PMIX_ERR_READY_FOR_HANDSHAKE
 (
PMIX_INTERNAL_ERR_BASE
 - 3)

	)

35 
	#PMIX_ERR_UNKNOWN_DATA_TYPE
 (
PMIX_INTERNAL_ERR_BASE
 - 4)

	)

36 
	#PMIX_ERR_TYPE_MISMATCH
 (
PMIX_INTERNAL_ERR_BASE
 - 5)

	)

37 
	#PMIX_ERR_UNPACK_INADEQUATE_SPACE
 (
PMIX_INTERNAL_ERR_BASE
 - 6)

	)

38 
	#PMIX_ERR_UNPACK_FAILURE
 (
PMIX_INTERNAL_ERR_BASE
 - 7)

	)

39 
	#PMIX_ERR_PACK_FAILURE
 (
PMIX_INTERNAL_ERR_BASE
 - 8)

	)

40 
	#PMIX_ERR_PACK_MISMATCH
 (
PMIX_INTERNAL_ERR_BASE
 - 9)

	)

41 
	#PMIX_ERR_PROC_ENTRY_NOT_FOUND
 (
PMIX_INTERNAL_ERR_BASE
 - 10)

	)

42 
	#PMIX_ERR_UNPACK_READ_PAST_END_OF_BUFFER
 (
PMIX_INTERNAL_ERR_BASE
 - 11)

	)

43 
	#PMIX_ERR_SERVER_NOT_AVAIL
 (
PMIX_INTERNAL_ERR_BASE
 - 12)

	)

44 
	#PMIX_ERR_INVALID_KEYVALP
 (
PMIX_INTERNAL_ERR_BASE
 - 13)

	)

45 
	#PMIX_ERR_INVALID_NUM_PARSED
 (
PMIX_INTERNAL_ERR_BASE
 - 14)

	)

46 
	#PMIX_ERR_INVALID_ARGS
 (
PMIX_INTERNAL_ERR_BASE
 - 15)

	)

47 
	#PMIX_ERR_INVALID_NUM_ARGS
 (
PMIX_INTERNAL_ERR_BASE
 - 16)

	)

48 
	#PMIX_ERR_INVALID_LENGTH
 (
PMIX_INTERNAL_ERR_BASE
 - 17)

	)

49 
	#PMIX_ERR_INVALID_VAL_LENGTH
 (
PMIX_INTERNAL_ERR_BASE
 - 18)

	)

50 
	#PMIX_ERR_INVALID_VAL
 (
PMIX_INTERNAL_ERR_BASE
 - 19)

	)

51 
	#PMIX_ERR_INVALID_KEY_LENGTH
 (
PMIX_INTERNAL_ERR_BASE
 - 20)

	)

52 
	#PMIX_ERR_INVALID_KEY
 (
PMIX_INTERNAL_ERR_BASE
 - 21)

	)

53 
	#PMIX_ERR_INVALID_ARG
 (
PMIX_INTERNAL_ERR_BASE
 - 22)

	)

54 
	#PMIX_ERR_NOMEM
 (
PMIX_INTERNAL_ERR_BASE
 - 23)

	)

55 
	#PMIX_ERR_IN_ERRNO
 (
PMIX_INTERNAL_ERR_BASE
 - 24)

	)

56 
	#PMIX_ERR_SILENT
 (
PMIX_INTERNAL_ERR_BASE
 - 25)

	)

57 
	#PMIX_ERR_UNKNOWN_DATATYPE
 (
PMIX_INTERNAL_ERR_BASE
 - 26)

	)

58 
	#PMIX_ERR_RESOURCE_BUSY
 (
PMIX_INTERNAL_ERR_BASE
 - 27)

	)

59 
	#PMIX_ERR_NOT_AVAILABLE
 (
PMIX_INTERNAL_ERR_BASE
 - 28)

	)

60 
	#PMIX_ERR_FATAL
 (
PMIX_INTERNAL_ERR_BASE
 - 29)

	)

61 
	#PMIX_ERR_VALUE_OUT_OF_BOUNDS
 (
PMIX_INTERNAL_ERR_BASE
 - 30)

	)

62 
	#PMIX_ERR_PERM
 (
PMIX_INTERNAL_ERR_BASE
 - 31)

	)

63 
	#PMIX_ERR_OPERATION_IN_PROGRESS
 (
PMIX_INTERNAL_ERR_BASE
 - 32)

	)

65 
	#PMIX_ERROR_LOG
(
r
) \

67 i‡(
PMIX_ERR_SILENT
 !(
r
)) { \

68 
	`pmix_ouçut
(0, "PMIX ERROR: %s in file %sátÜine %d", \

69 
	`PMIx_Eº‹_°rög
((
r
)), 
__FILE__
, 
__LINE__
); \

71 } 0)

	)

73 
	gEND_C_DECLS


	@util/fd.c

14 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

16 
	~<pmix_comm⁄.h
>

18 #ifde‡
HAVE_UNISTD_H


19 
	~<uni°d.h
>

21 
	~<î∫o.h
>

22 
	~<f˙é.h
>

24 
	~"§c/utû/îr‹.h
"

25 
	~"§c/utû/fd.h
"

31 
pmix_°©us_t
 
	$pmix_fd_ªad
(
fd
, 
Àn
, *
buf„r
)

33 
rc
;

34 *
b
 = 
buf„r
;

36 
Àn
 > 0) {

37 
rc
 = 
	`ªad
(
fd
, 
b
, 
Àn
);

38 i‡(
rc
 < 0 && (
EAGAIN
 =
î∫o
 || 
EINTR
 ==Érrno)) {

40 } i‡(
rc
 > 0) {

41 
Àn
 -
rc
;

42 
b
 +
rc
;

43 } i‡(0 =
rc
) {

44  
PMIX_ERR_TIMEOUT
;

46  
PMIX_ERR_IN_ERRNO
;

49  
PMIX_SUCCESS
;

50 
	}
}

56 
pmix_°©us_t
 
	$pmix_fd_wrôe
(
fd
, 
Àn
, c⁄° *
buf„r
)

58 
rc
;

59 c⁄° *
b
 = 
buf„r
;

61 
Àn
 > 0) {

62 
rc
 = 
	`wrôe
(
fd
, 
b
, 
Àn
);

63 i‡(
rc
 < 0 && (
EAGAIN
 =
î∫o
 || 
EINTR
 ==Érrno)) {

65 } i‡(
rc
 > 0) {

66 
Àn
 -
rc
;

67 
b
 +
rc
;

69  
PMIX_ERR_IN_ERRNO
;

73  
PMIX_SUCCESS
;

74 
	}
}

77 
pmix_°©us_t
 
	$pmix_fd_£t_˛€xec
(
fd
)

79 #ifde‡
FD_CLOEXEC


80 
Êags
;

84 
Êags
 = 
	`f˙é
(
fd
, 
F_GETFD
, 0);

85 i‡(-1 =
Êags
) {

86  
PMIX_ERR_IN_ERRNO
;

89 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
 | 
Êags
) == -1) {

90  
PMIX_ERR_IN_ERRNO
;

94  
PMIX_SUCCESS
;

95 
	}
}

	@util/fd.h

17 #i‚de‡
PMIX_UTIL_FD_H_


18 
	#PMIX_UTIL_FD_H_


	)

20 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

23 
BEGIN_C_DECLS


39 
pmix_°©us_t
 
pmix_fd_ªad
(
fd
, 
Àn
, *
buf„r
);

54 
pmix_°©us_t
 
pmix_fd_wrôe
(
fd
, 
Àn
, c⁄° *
buf„r
);

68 
pmix_°©us_t
 
pmix_fd_£t_˛€xec
(
fd
);

70 
	gEND_C_DECLS


	@util/getid.c

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~"ö˛ude/pmix_comm⁄.h
"

27 
	~"§c/ö˛ude/pmix_sockë_î∫o.h
"

29 #ifde‡
HAVE_UNISTD_H


30 
	~<uni°d.h
>

32 #ifde‡
HAVE_SYS_TYPES_H


33 
	~<sys/ty≥s.h
>

36 
	~"§c/ö˛ude/pmix_globÆs.h
"

37 
	~"§c/utû/îr‹.h
"

38 
	~"§c/utû/ouçut.h
"

40 
	~"§c/utû/gëid.h
"

42 
pmix_°©us_t
 
	$pmix_utû_gëid
(
sd
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

44 #i‡
	`deföed
(
SO_PEERCRED
)

45 #ifde‡
HAVE_STRUCT_SOCKPEERCRED_UID


46 
	#HAVE_STRUCT_UCRED_UID


	)

47 
sock≥î¸ed
 
u¸ed
;

49 
u¸ed
 ucred;

51 
sockÀn_t
 
¸Àn
 =  (
u¸ed
);

54 #i‡
	`deföed
(
SO_PEERCRED
Ë&& (deföed(
HAVE_STRUCT_UCRED_UID
Ë|| deföed(
HAVE_STRUCT_UCRED_CR_UID
))

56 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

58 i‡(
	`gësock›t
(
sd
, 
SOL_SOCKET
, 
SO_PEERCRED
, &
u¸ed
, &
¸Àn
) < 0) {

59 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

61 
	`°ªº‹
 (
pmix_sockë_î∫o
));

62  
PMIX_ERR_INVALID_CRED
;

64 #i‡
	`deföed
(
HAVE_STRUCT_UCRED_UID
)

65 *
uid
 = 
u¸ed
.uid;

66 *
gid
 = 
u¸ed
.gid;

68 *
uid
 = 
u¸ed
.
¸_uid
;

69 *
gid
 = 
u¸ed
.
¸_gid
;

72 #ñi‡
	`deföed
(
HAVE_GETPEEREID
)

73 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

75 i‡(0 !
	`gë≥îeid
(
sd
, 
uid
, 
gid
)) {

76 
	`pmix_ouçut_vîbo£
(2, 
pmix_globÆs
.
debug_ouçut
,

78 
	`°ªº‹
 (
pmix_sockë_î∫o
));

79  
PMIX_ERR_INVALID_CRED
;

82  
PMIX_ERR_NOT_SUPPORTED
;

85  
PMIX_SUCCESS
;

86 
	}
}

	@util/getid.h

10 #i‚de‡
PMIX_GETID_H


11 
	#PMIX_GETID_H


	)

13 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

14 
	~"ö˛ude/pmix_comm⁄.h
"

16 #ifde‡
HAVE_UNISTD_H


17 
	~<uni°d.h
>

19 #ifde‡
HAVE_SYS_TYPES_H


20 
	~<sys/ty≥s.h
>

23 
BEGIN_C_DECLS


26 
pmix_°©us_t
 
pmix_utû_gëid
(
sd
, 
uid_t
 *
uid
, 
gid_t
 *
gid
);

28 
	gEND_C_DECLS


	@util/hash.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<§c/ö˛ude/pmix_°döt.h
>

26 
	~<§c/ö˛ude/hash_°rög.h
>

28 
	~<°rög.h
>

30 
	~"§c/ö˛ude/pmix_globÆs.h
"

31 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

32 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

33 
	~"§c/buf„r_›s/buf„r_›s.h
"

34 
	~"§c/utû/îr‹.h
"

35 
	~"§c/utû/ouçut.h
"

37 
	~"§c/utû/hash.h
"

46 
pmix_li°_ôem_t
 
	msu≥r
;

49 
pmix_li°_t
 
	md©a
;

50 } 
	tpmix_¥oc_d©a_t
;

51 
	$pdc⁄
(
pmix_¥oc_d©a_t
 *
p
)

53 
	`PMIX_CONSTRUCT
(&
p
->
d©a
, 
pmix_li°_t
);

54 
	}
}

55 
	$pddes
(
pmix_¥oc_d©a_t
 *
p
)

57 
	`PMIX_LIST_DESTRUCT
(&
p
->
d©a
);

58 
	}
}

59 
PMIX_CLASS_INSTANCE
(
pmix_¥oc_d©a_t
,

60 
pmix_li°_ôem_t
,

61 
pdc⁄
, 
pddes
);

63 
pmix_kvÆ_t
* 
lookup_keyvÆ
(
pmix_li°_t
 *
d©a
,

64 c⁄° *
key
);

65 
pmix_¥oc_d©a_t
* 
lookup_¥oc
(
pmix_hash_èbÀ_t
 *
jèbÀ
,

66 
uöt64_t
 
id
, 
boﬁ
 
¸óã
);

68 
pmix_°©us_t
 
	$pmix_hash_°‹e
(
pmix_hash_èbÀ_t
 *
èbÀ
,

69 
pmix_ønk_t
 
ønk
, 
pmix_kvÆ_t
 *
kö
)

71 
pmix_¥oc_d©a_t
 *
¥oc_d©a
;

72 
uöt64_t
 
id
;

73 
pmix_kvÆ_t
 *
hv
;

75 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

77 
ønk
, 
kö
->
key
);

79 
id
 = (
uöt64_t
)
ønk
;

83 i‡(
NULL
 =(
¥oc_d©a
 = 
	`lookup_¥oc
(
èbÀ
, 
id
, 
åue
))) {

84  
PMIX_ERR_OUT_OF_RESOURCE
;

88 
hv
 = 
	`lookup_keyvÆ
(&
¥oc_d©a
->
d©a
, 
kö
->
key
);

89 i‡(
NULL
 !
hv
) {

92 
	`pmix_li°_ªmove_ôem
(&
¥oc_d©a
->
d©a
, &
hv
->
su≥r
);

93 
	`PMIX_RELEASE
(
hv
);

95 
	`PMIX_RETAIN
(
kö
);

96 
	`pmix_li°_≠≥nd
(&
¥oc_d©a
->
d©a
, &
kö
->
su≥r
);

98  
PMIX_SUCCESS
;

99 
	}
}

101 
pmix_°©us_t
 
	$pmix_hash_„tch
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
pmix_ønk_t
 
ønk
,

102 c⁄° *
key
, 
pmix_vÆue_t
 **
kvs
)

104 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

105 
pmix_¥oc_d©a_t
 *
¥oc_d©a
;

106 
pmix_kvÆ_t
 *
hv
;

107 
uöt64_t
 
id
;

108 *
node
;

110 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

112 
ønk
, (
NULL
 =
key
) ? "NULL" : key);

114 
id
 = (
uöt64_t
)
ønk
;

121 i‡(
PMIX_RANK_UNDEF
 =
ønk
) {

122 
rc
 = 
	`pmix_hash_èbÀ_gë_fú°_key_uöt64
(
èbÀ
, &
id
,

123 (**)&
¥oc_d©a
, (**)&
node
);

124 i‡(
PMIX_SUCCESS
 !
rc
) {

125 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

127 
ønk
);

128  
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

132 
PMIX_SUCCESS
 =
rc
) {

133 
¥oc_d©a
 = 
	`lookup_¥oc
(
èbÀ
, 
id
, 
Ál£
);

134 i‡(
NULL
 =
¥oc_d©a
) {

135 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

137 
ønk
);

138  
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

143 i‡(
NULL
 =
key
) {

149 
hv
 = 
	`lookup_keyvÆ
(&
¥oc_d©a
->
d©a
, 
key
);

150 i‡(
NULL
 !
hv
) {

152 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`c›y
((**)
kvs
, 
hv
->
vÆue
, 
PMIX_VALUE
))) {

153 
	`PMIX_ERROR_LOG
(
rc
);

154  
rc
;

157 } i‡(
PMIX_RANK_UNDEF
 !
ønk
) {

158 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

159 "HASH:FETCH d©®f‹ key %†nŸ found", 
key
);

160  
PMIX_ERR_NOT_FOUND
;

164 
rc
 = 
	`pmix_hash_èbÀ_gë_√xt_key_uöt64
(
èbÀ
, &
id
,

165 (**)&
¥oc_d©a
, 
node
, (**)&node);

166 i‡(
PMIX_SUCCESS
 !
rc
) {

167 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

168 "HASH:FETCH d©®f‹ key %†nŸ found", 
key
);

169  
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

173  
rc
;

174 
	}
}

176 
pmix_°©us_t
 
	$pmix_hash_„tch_by_key
(
pmix_hash_èbÀ_t
 *
èbÀ
, c⁄° *
key
,

177 
pmix_ønk_t
 *
ønk
, 
pmix_vÆue_t
 **
kvs
, **
œ°
)

179 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

180 
pmix_¥oc_d©a_t
 *
¥oc_d©a
;

181 
pmix_kvÆ_t
 *
hv
;

182 
uöt64_t
 
id
;

183 *
node
;

184 c⁄° *
key_r
 = 
NULL
;

186 i‡(
key
 =
NULL
 && (
node
 = *
œ°
) == NULL) {

187  
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

190 i‡(
key
 =
NULL
 && 
key_r
 == NULL) {

191  
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

194 i‡(
key
) {

195 
rc
 = 
	`pmix_hash_èbÀ_gë_fú°_key_uöt64
(
èbÀ
, &
id
,

196 (**)&
¥oc_d©a
, (**)&
node
);

197 
key_r
 = 
key
;

199 
rc
 = 
	`pmix_hash_èbÀ_gë_√xt_key_uöt64
(
èbÀ
, &
id
,

200 (**)&
¥oc_d©a
, 
node
, (**)&node);

203 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

205 ()
id
, 
key_r
);

207 i‡(
PMIX_SUCCESS
 !
rc
) {

208 
	`pmix_ouçut_vîbo£
(10, 
pmix_globÆs
.
debug_ouçut
,

210 
key_r
);

211  
PMIX_ERR_PROC_ENTRY_NOT_FOUND
;

215 
hv
 = 
	`lookup_keyvÆ
(&
¥oc_d©a
->
d©a
, 
key_r
);

216 i‡(
hv
) {

218 i‡(
PMIX_SUCCESS
 !(
rc
 = 
pmix_b‰›
.
	`c›y
((**)
kvs
, 
hv
->
vÆue
, 
PMIX_VALUE
))) {

219 
	`PMIX_ERROR_LOG
(
rc
);

220  
rc
;

223  
PMIX_ERR_NOT_FOUND
;

226 *
ønk
 = ()
id
;

227 *
œ°
 = 
node
;

229  
PMIX_SUCCESS
;

230 
	}
}

232 
pmix_°©us_t
 
	$pmix_hash_ªmove_d©a
(
pmix_hash_èbÀ_t
 *
èbÀ
,

233 
pmix_ønk_t
 
ønk
, c⁄° *
key
)

235 
pmix_°©us_t
 
rc
 = 
PMIX_SUCCESS
;

236 
pmix_¥oc_d©a_t
 *
¥oc_d©a
;

237 
pmix_kvÆ_t
 *
kv
;

238 
uöt64_t
 
id
;

239 *
node
;

241 
id
 = (
uöt64_t
)
ønk
;

245 i‡(
PMIX_RANK_UNDEF
 =
ønk
) {

246 
rc
 = 
	`pmix_hash_èbÀ_gë_fú°_key_uöt64
(
èbÀ
, &
id
,

247 (**)&
¥oc_d©a
, (**)&
node
);

248 
PMIX_SUCCESS
 =
rc
) {

249 i‡(
NULL
 !
¥oc_d©a
) {

250 i‡(
NULL
 =
key
) {

251 
	`PMIX_RELEASE
(
¥oc_d©a
);

253 
	`PMIX_LIST_FOREACH
(
kv
, &
¥oc_d©a
->
d©a
, 
pmix_kvÆ_t
) {

254 i‡(0 =
	`°rcmp
(
key
, 
kv
->key)) {

255 
	`pmix_li°_ªmove_ôem
(&
¥oc_d©a
->
d©a
, &
kv
->
su≥r
);

256 
	`PMIX_RELEASE
(
kv
);

262 
rc
 = 
	`pmix_hash_èbÀ_gë_√xt_key_uöt64
(
èbÀ
, &
id
,

263 (**)&
¥oc_d©a
, 
node
, (**)&node);

268 i‡(
NULL
 =(
¥oc_d©a
 = 
	`lookup_¥oc
(
èbÀ
, 
id
, 
Ál£
))) {

270  
PMIX_SUCCESS
;

274 i‡(
NULL
 =
key
) {

275 
NULL
 !(
kv
 = (
pmix_kvÆ_t
*)
	`pmix_li°_ªmove_fú°
(&
¥oc_d©a
->
d©a
))) {

276 
	`PMIX_RELEASE
(
kv
);

279 
	`pmix_hash_èbÀ_ªmove_vÆue_uöt64
(
èbÀ
, 
id
);

281 
	`PMIX_RELEASE
(
¥oc_d©a
);

282  
PMIX_SUCCESS
;

286 
	`PMIX_LIST_FOREACH
(
kv
, &
¥oc_d©a
->
d©a
, 
pmix_kvÆ_t
) {

287 i‡(0 =
	`°rcmp
(
key
, 
kv
->key)) {

288 
	`pmix_li°_ªmove_ôem
(&
¥oc_d©a
->
d©a
, &
kv
->
su≥r
);

289 
	`PMIX_RELEASE
(
kv
);

294  
PMIX_SUCCESS
;

295 
	}
}

300 
pmix_kvÆ_t
* 
	$lookup_keyvÆ
(
pmix_li°_t
 *
d©a
,

301 c⁄° *
key
)

303 
pmix_kvÆ_t
 *
kv
;

305 
	`PMIX_LIST_FOREACH
(
kv
, 
d©a
, 
pmix_kvÆ_t
) {

306 i‡(0 =
	`°rcmp
(
key
, 
kv
->key)) {

307  
kv
;

310  
NULL
;

311 
	}
}

318 
pmix_¥oc_d©a_t
* 
	$lookup_¥oc
(
pmix_hash_èbÀ_t
 *
jèbÀ
,

319 
uöt64_t
 
id
, 
boﬁ
 
¸óã
)

321 
pmix_¥oc_d©a_t
 *
¥oc_d©a
 = 
NULL
;

323 
	`pmix_hash_èbÀ_gë_vÆue_uöt64
(
jèbÀ
, 
id
, (**)&
¥oc_d©a
);

324 i‡(
NULL
 =
¥oc_d©a
 && 
¸óã
) {

326 
¥oc_d©a
 = 
	`PMIX_NEW
(
pmix_¥oc_d©a_t
);

327 i‡(
NULL
 =
¥oc_d©a
) {

328 
	`pmix_ouçut
(0, "pmix:client:hash:lookup_pmix_proc: unableÅoállocateÖroc_data_t\n");

329  
NULL
;

331 
	`pmix_hash_èbÀ_£t_vÆue_uöt64
(
jèbÀ
, 
id
, 
¥oc_d©a
);

334  
¥oc_d©a
;

335 
	}
}

	@util/hash.h

14 #i‚de‡
PMIX_HASH_H


15 
	#PMIX_HASH_H


	)

17 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 
	~"§c/buf„r_›s/buf„r_›s.h
"

21 
	~"§c/˛ass/pmix_hash_èbÀ.h
"

23 
BEGIN_C_DECLS


27 
pmix_°©us_t
 
pmix_hash_°‹e
(
pmix_hash_èbÀ_t
 *
èbÀ
,

28 
pmix_ønk_t
 
ønk
, 
pmix_kvÆ_t
 *
kv
);

32 
pmix_°©us_t
 
pmix_hash_„tch
(
pmix_hash_èbÀ_t
 *
èbÀ
, 
pmix_ønk_t
 
ønk
,

33 c⁄° *
key
, 
pmix_vÆue_t
 **
kvs
);

40 
pmix_°©us_t
 
pmix_hash_„tch_by_key
(
pmix_hash_èbÀ_t
 *
èbÀ
, c⁄° *
key
,

41 
pmix_ønk_t
 *
ønk
, 
pmix_vÆue_t
 **
kvs
, **
œ°
);

50 
pmix_°©us_t
 
pmix_hash_ªmove_d©a
(
pmix_hash_èbÀ_t
 *
èbÀ
,

51 
pmix_ønk_t
 
ønk
, c⁄° *
key
);

53 
	gEND_C_DECLS


	@util/keyval/keyval_lex.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#yy_¸óã_buf„r
 
pmix_utû_keyvÆ_yy_¸óã_buf„r


	)

9 
	#yy_dñëe_buf„r
 
pmix_utû_keyvÆ_yy_dñëe_buf„r


	)

10 
	#yy_Êex_debug
 
pmix_utû_keyvÆ_yy_Êex_debug


	)

11 
	#yy_öô_buf„r
 
pmix_utû_keyvÆ_yy_öô_buf„r


	)

12 
	#yy_Êush_buf„r
 
pmix_utû_keyvÆ_yy_Êush_buf„r


	)

13 
	#yy_lﬂd_buf„r_°©e
 
pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e


	)

14 
	#yy_swôch_to_buf„r
 
pmix_utû_keyvÆ_yy_swôch_to_buf„r


	)

15 
	#yyö
 
pmix_utû_keyvÆ_yyö


	)

16 
	#yyÀng
 
pmix_utû_keyvÆ_yyÀng


	)

17 
	#yyÀx
 
pmix_utû_keyvÆ_yyÀx


	)

18 
	#yylöío
 
pmix_utû_keyvÆ_yylöío


	)

19 
	#yyout
 
pmix_utû_keyvÆ_yyout


	)

20 
	#yyª°¨t
 
pmix_utû_keyvÆ_yyª°¨t


	)

21 
	#yyãxt
 
pmix_utû_keyvÆ_yyãxt


	)

22 
	#yywøp
 
pmix_utû_keyvÆ_yywøp


	)

23 
	#yyÆloc
 
pmix_utû_keyvÆ_yyÆloc


	)

24 
	#yyªÆloc
 
pmix_utû_keyvÆ_yyªÆloc


	)

25 
	#yy‰ì
 
pmix_utû_keyvÆ_yy‰ì


	)

27 
	#FLEX_SCANNER


	)

28 
	#YY_FLEX_MAJOR_VERSION
 2

	)

29 
	#YY_FLEX_MINOR_VERSION
 5

	)

30 
	#YY_FLEX_SUBMINOR_VERSION
 37

	)

31 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

32 
	#FLEX_BETA


	)

38 
	~<°dio.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<°dlib.h
>

47 #i‚de‡
FLEXINT_H


48 
	#FLEXINT_H


	)

52 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

57 #i‚de‡
__STDC_LIMIT_MACROS


58 
	#__STDC_LIMIT_MACROS
 1

	)

61 
	~<öây≥s.h
>

62 
öt8_t
 
	tÊex_öt8_t
;

63 
uöt8_t
 
	tÊex_uöt8_t
;

64 
öt16_t
 
	tÊex_öt16_t
;

65 
uöt16_t
 
	tÊex_uöt16_t
;

66 
öt32_t
 
	tÊex_öt32_t
;

67 
uöt32_t
 
	tÊex_uöt32_t
;

69 sig√d 
	tÊex_öt8_t
;

70 
	tÊex_öt16_t
;

71 
	tÊex_öt32_t
;

72 
	tÊex_uöt8_t
;

73 
	tÊex_uöt16_t
;

74 
	tÊex_uöt32_t
;

77 #i‚de‡
INT8_MIN


78 
	#INT8_MIN
 (-128)

	)

80 #i‚de‡
INT16_MIN


81 
	#INT16_MIN
 (-32767-1)

	)

83 #i‚de‡
INT32_MIN


84 
	#INT32_MIN
 (-2147483647-1)

	)

86 #i‚de‡
INT8_MAX


87 
	#INT8_MAX
 (127)

	)

89 #i‚de‡
INT16_MAX


90 
	#INT16_MAX
 (32767)

	)

92 #i‚de‡
INT32_MAX


93 
	#INT32_MAX
 (2147483647)

	)

95 #i‚de‡
UINT8_MAX


96 
	#UINT8_MAX
 (255U)

	)

98 #i‚de‡
UINT16_MAX


99 
	#UINT16_MAX
 (65535U)

	)

101 #i‚de‡
UINT32_MAX


102 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`pmix_utû_keyvÆ_yyª°¨t
(
pmix_utû_keyvÆ_yyö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 
	#YY_BUF_SIZE
 16384

	)

168 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

170 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


171 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

172 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

175 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


176 
	#YY_TYPEDEF_YY_SIZE_T


	)

177 
size_t
 
	tyy_size_t
;

180 
yy_size_t
 
pmix_utû_keyvÆ_yyÀng
;

182 
FILE
 *
pmix_utû_keyvÆ_yyö
, *
pmix_utû_keyvÆ_yyout
;

184 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

185 
	#EOB_ACT_END_OF_FILE
 1

	)

186 
	#EOB_ACT_LAST_MATCH
 2

	)

195 
	#YY_LESS_LINENO
(
n
) \

197 
yyl
;\

198  
yyl
 = 
n
; yy»< 
pmix_utû_keyvÆ_yyÀng
; ++yyl )\

199 i‡–
pmix_utû_keyvÆ_yyãxt
[
yyl
] == '\n' )\

200 --
pmix_utû_keyvÆ_yylöío
;\

201 }0)

	)

204 
	#yyÀss
(
n
) \

208 
yyÀss_ma¸o_¨g
 = (
n
); \

209 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

210 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

211 
YY_RESTORE_YY_MORE_OFFSET
 \

212 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

213 
YY_DO_BEFORE_ACTION
; \

215  0 )

	)

217 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

219 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


220 
	#YY_STRUCT_YY_BUFFER_STATE


	)

221 
	syy_buf„r_°©e


223 
FILE
 *
	myy_öput_fûe
;

225 *
	myy_ch_buf
;

226 *
	myy_buf_pos
;

231 
yy_size_t
 
	myy_buf_size
;

236 
yy_size_t
 
	myy_n_ch¨s
;

242 
	myy_is_our_buf„r
;

249 
	myy_is_öãø˘ive
;

255 
	myy_©_bﬁ
;

257 
	myy_bs_löío
;

258 
	myy_bs_cﬁumn
;

263 
	myy_fûl_buf„r
;

265 
	myy_buf„r_°©us
;

267 
	#YY_BUFFER_NEW
 0

	)

268 
	#YY_BUFFER_NORMAL
 1

	)

279 
	#YY_BUFFER_EOF_PENDING
 2

	)

285 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

286 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

287 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

295 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

296 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

297 : 
NULL
)

	)

302 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

305 
	gyy_hﬁd_ch¨
;

306 
yy_size_t
 
	gyy_n_ch¨s
;

307 
yy_size_t
 
	gpmix_utû_keyvÆ_yyÀng
;

310 *
	gyy_c_buf_p
 = (*) 0;

311 
	gyy_öô
 = 0;

312 
	gyy_°¨t
 = 0;

317 
	gyy_did_buf„r_swôch_⁄_eof
;

319 
pmix_utû_keyvÆ_yyª°¨t
 (
FILE
 *
öput_fûe
 );

320 
pmix_utû_keyvÆ_yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

321 
YY_BUFFER_STATE
 
pmix_utû_keyvÆ_yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

322 
pmix_utû_keyvÆ_yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

323 
pmix_utû_keyvÆ_yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

324 
pmix_utû_keyvÆ_yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

325 
pmix_utû_keyvÆ_yyp›_buf„r_°©e
 ();

327 
pmix_utû_keyvÆ_yyísuª_buf„r_°ack
 ();

328 
pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
 ();

329 
pmix_utû_keyvÆ_yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

331 
	#YY_FLUSH_BUFFER
 
	`pmix_utû_keyvÆ_yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

333 
YY_BUFFER_STATE
 
pmix_utû_keyvÆ_yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

334 
YY_BUFFER_STATE
 
pmix_utû_keyvÆ_yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

335 
YY_BUFFER_STATE
 
pmix_utû_keyvÆ_yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

337 *
pmix_utû_keyvÆ_yyÆloc
 (
yy_size_t
 );

338 *
pmix_utû_keyvÆ_yyªÆloc
 (*,
yy_size_t
 );

339 
pmix_utû_keyvÆ_yy‰ì
 (* );

341 
	#yy_√w_buf„r
 
pmix_utû_keyvÆ_yy_¸óã_buf„r


	)

343 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

345 i‡–! 
YY_CURRENT_BUFFER
 ){ \

346 
	`pmix_utû_keyvÆ_yyísuª_buf„r_°ack
 (); \

347 
YY_CURRENT_BUFFER_LVALUE
 = \

348 
	`pmix_utû_keyvÆ_yy_¸óã_buf„r
(
pmix_utû_keyvÆ_yyö
,
YY_BUF_SIZE
 ); \

350 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

351 }

	)

353 
	#yy_£t_bﬁ
(
©_bﬁ
) \

355 i‡–! 
YY_CURRENT_BUFFER
 ){\

356 
	`pmix_utû_keyvÆ_yyísuª_buf„r_°ack
 (); \

357 
YY_CURRENT_BUFFER_LVALUE
 = \

358 
	`pmix_utû_keyvÆ_yy_¸óã_buf„r
(
pmix_utû_keyvÆ_yyö
,
YY_BUF_SIZE
 ); \

360 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

361 }

	)

363 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

367 
	tYY_CHAR
;

369 
FILE
 *
	gpmix_utû_keyvÆ_yyö
 = (FILE *Ë0, *
	gpmix_utû_keyvÆ_yyout
 = (FILE *) 0;

371 
	tyy_°©e_ty≥
;

373 
pmix_utû_keyvÆ_yylöío
;

375 
	gpmix_utû_keyvÆ_yylöío
 = 1;

377 *
pmix_utû_keyvÆ_yyãxt
;

378 
	#yyãxt_±r
 
pmix_utû_keyvÆ_yyãxt


	)

380 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

381 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

382 
yy_gë_√xt_buf„r
 ();

383 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

388 
	#YY_DO_BEFORE_ACTION
 \

389 (
yyãxt_±r
Ë
yy_bp
; \

390 
pmix_utû_keyvÆ_yyÀng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

391 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

392 *
yy_˝
 = '\0'; \

393 (
yy_c_buf_p
Ë
yy_˝
;

	)

395 
	#YY_NUM_RULES
 22

	)

396 
	#YY_END_OF_BUFFER
 23

	)

399 
	syy_å™s_öfo


401 
Êex_öt32_t
 
	myy_vîify
;

402 
Êex_öt32_t
 
	myy_nxt
;

404 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˛i°
[93] =

419 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[85] =

432 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

464 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[17] =

470 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[100] =

485 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[100] =

500 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[269] =

533 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[269] =

567 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ruÀ_ˇn_m©ch_eﬁ
[23] =

572 
pmix_utû_keyvÆ_yy_Êex_debug
;

573 
	gpmix_utû_keyvÆ_yy_Êex_debug
 = 0;

575 
yy_°©e_ty≥
 *
	gyy_°©e_buf
=0, *
	gyy_°©e_±r
=0;

576 *
	gyy_fuŒ_m©ch
;

577 
	gyy_Õ
;

578 
	gyy_lookög_f‹_åaû_begö
 = 0;

579 
	gyy_fuŒ_Õ
;

580 *
	gyy_fuŒ_°©e
;

581 
	#YY_TRAILING_MASK
 0x2000

	)

582 
	#YY_TRAILING_HEAD_MASK
 0x4000

	)

583 
	#REJECT
 \

585 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

586 
yy_˝
 = (
yy_fuŒ_m©ch
); \

587 (
yy_Õ
Ë(
yy_fuŒ_Õ
); \

588 (
yy_°©e_±r
Ë(
yy_fuŒ_°©e
); \

589 
yy_cuºít_°©e
 = *(
yy_°©e_±r
); \

590 ++(
yy_Õ
); \

591 
föd_ruÀ
; \

592 }

	)

594 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

595 
	#YY_MORE_ADJ
 0

	)

596 
	#YY_RESTORE_YY_MORE_OFFSET


	)

597 *
	gpmix_utû_keyvÆ_yyãxt
;

599 
	#YY_NO_INPUT
 1

	)

621 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

623 
	~<°dio.h
>

624 #ifde‡
HAVE_UNISTD_H


625 
	~<uni°d.h
>

628 
	~"§c/utû/keyvÆ/keyvÆ_Àx.h
"

634 
BEGIN_C_DECLS


636 
pmix_utû_keyvÆ_yywøp
();

638 
END_C_DECLS


643 
	gpmix_utû_keyvÆ_yy√wlöes
 = 1;

644 
boﬁ
 
	gpmix_utû_keyvÆ_∑r£_d⁄e
 = 
Ál£
;

645 *
	gpmix_utû_keyvÆ_°rög
 = 
NULL
;

652 
	#INITIAL
 0

	)

653 
	#VALUE
 1

	)

654 
	#commít
 2

	)

655 
	#MCA_VALUE
 3

	)

657 #i‚de‡
YY_NO_UNISTD_H


662 
	~<uni°d.h
>

665 #i‚de‡
YY_EXTRA_TYPE


666 
	#YY_EXTRA_TYPE
 *

	)

669 
yy_öô_globÆs
 ();

674 
pmix_utû_keyvÆ_yyÀx_de°roy
 ();

676 
pmix_utû_keyvÆ_yygë_debug
 ();

678 
pmix_utû_keyvÆ_yy£t_debug
 (
debug_Êag
 );

680 
YY_EXTRA_TYPE
 
pmix_utû_keyvÆ_yygë_exåa
 ();

682 
pmix_utû_keyvÆ_yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

684 
FILE
 *
pmix_utû_keyvÆ_yygë_ö
 ();

686 
pmix_utû_keyvÆ_yy£t_ö
 (
FILE
 * 
ö_°r
 );

688 
FILE
 *
pmix_utû_keyvÆ_yygë_out
 ();

690 
pmix_utû_keyvÆ_yy£t_out
 (
FILE
 * 
out_°r
 );

692 
yy_size_t
 
pmix_utû_keyvÆ_yygë_Àng
 ();

694 *
pmix_utû_keyvÆ_yygë_ãxt
 ();

696 
pmix_utû_keyvÆ_yygë_löío
 ();

698 
pmix_utû_keyvÆ_yy£t_löío
 (
löe_numbî
 );

704 #i‚de‡
YY_SKIP_YYWRAP


705 #ifde‡
__˝lu•lus


706 "C" 
pmix_utû_keyvÆ_yywøp
 ();

708 
pmix_utû_keyvÆ_yywøp
 ();

712 #i‚de‡
yyãxt_±r


713 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

716 #ifde‡
YY_NEED_STRLEN


717 
yy_Êex_°æí
 (
yyc⁄°
 * );

720 #i‚de‡
YY_NO_INPUT


722 #ifde‡
__˝lu•lus


723 
yyöput
 ();

725 
öput
 ();

731 #i‚de‡
YY_READ_BUF_SIZE


732 
	#YY_READ_BUF_SIZE
 8192

	)

736 #i‚de‡
ECHO


740 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
pmix_utû_keyvÆ_yyãxt
, 
pmix_utû_keyvÆ_yyÀng
, 1, 
pmix_utû_keyvÆ_yyout
 )Ë{} } 0)

	)

746 #i‚de‡
YY_INPUT


747 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

748 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

750 
c
 = '*'; \

751 
size_t
 
n
; \

752  
n
 = 0;Ç < 
max_size
 && \

753 (
c
 = 
	`gëc
–
pmix_utû_keyvÆ_yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

754 
buf
[
n
] = (Ë
c
; \

755 i‡–
c
 == '\n' ) \

756 
buf
[
n
++] = (Ë
c
; \

757 i‡–
c
 =
EOF
 && 
	`„º‹
–
pmix_utû_keyvÆ_yyö
 ) ) \

758 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

759 
ªsu…
 = 
n
; \

763 
î∫o
=0; \

764  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
pmix_utû_keyvÆ_yyö
))==0 && 
	`„º‹
(pmix_util_keyval_yyin)) \

766 if–
î∫o
 !
EINTR
) \

768 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

771 
î∫o
=0; \

772 
	`˛óªº
(
pmix_utû_keyvÆ_yyö
); \

776 

	)

783 #i‚de‡
yyãrmö©e


784 
	#yyãrmö©e
(Ë 
YY_NULL


	)

788 #i‚de‡
YY_START_STACK_INCR


789 
	#YY_START_STACK_INCR
 25

	)

793 #i‚de‡
YY_FATAL_ERROR


794 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

802 #i‚de‡
YY_DECL


803 
	#YY_DECL_IS_OURS
 1

	)

805 
pmix_utû_keyvÆ_yyÀx
 ();

807 
	#YY_DECL
 
	`pmix_utû_keyvÆ_yyÀx
 ()

	)

813 #i‚de‡
YY_USER_ACTION


814 
	#YY_USER_ACTION


	)

818 #i‚de‡
YY_BREAK


819 
	#YY_BREAK
 ;

	)

822 
	#YY_RULE_SETUP
 \

823 
YY_USER_ACTION


	)

827 
	gYY_DECL


829 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

830 *
	gyy_˝
, *
	gyy_bp
;

831 
	gyy_a˘
;

838 i‡–!(
	gyy_öô
) )

840 (
	gyy_öô
) = 1;

842 #ifde‡
YY_USER_INIT


843 
	gYY_USER_INIT
;

847 i‡–! (
	gyy_°©e_buf
) )

848 (
	gyy_°©e_buf
Ë(
yy_°©e_ty≥
 *)
pmix_utû_keyvÆ_yyÆloc
(
YY_STATE_BUF_SIZE
 );

849 i‡–! (
	gyy_°©e_buf
) )

850 
YY_FATAL_ERROR
( "out of dynamic memory inÖmix_util_keyval_yylex()" );

852 i‡–! (
	gyy_°¨t
) )

853 (
	gyy_°¨t
) = 1;

855 i‡–! 
	gpmix_utû_keyvÆ_yyö
 )

856 
	gpmix_utû_keyvÆ_yyö
 = 
°dö
;

858 i‡–! 
	gpmix_utû_keyvÆ_yyout
 )

859 
	gpmix_utû_keyvÆ_yyout
 = 
°dout
;

861 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

862 
pmix_utû_keyvÆ_yyísuª_buf„r_°ack
 ();

863 
	gYY_CURRENT_BUFFER_LVALUE
 =

864 
pmix_utû_keyvÆ_yy_¸óã_buf„r
(
pmix_utû_keyvÆ_yyö
,
YY_BUF_SIZE
 );

867 
pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
( );

872 
	gyy_˝
 = (
yy_c_buf_p
);

875 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

880 
	gyy_bp
 = 
yy_˝
;

882 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

884 (
	gyy_°©e_±r
Ë(
yy_°©e_buf
);

885 *(
	gyy_°©e_±r
)++ = 
yy_cuºít_°©e
;

887 
	gyy_m©ch
:

890 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

891  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

893 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

894 i‡–
	gyy_cuºít_°©e
 >= 84 )

895 
yy_c
 = 
yy_mëa
[() yy_c];

897 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

898 *(
	gyy_°©e_±r
)++ = 
yy_cuºít_°©e
;

899 ++
	gyy_˝
;

901  
	gyy_ba£
[
yy_cuºít_°©e
] != 252 );

903 
	gyy_föd_a˘i⁄
:

904 
yy_cuºít_°©e
 = *--(
yy_°©e_±r
);

905 (
	gyy_Õ
Ë
yy_ac˚±
[
yy_cuºít_°©e
];

906 
	gföd_ruÀ
:

909 i‡–(
	gyy_Õ
Ë&& (yy_ÕË< 
	gyy_ac˚±
[
yy_cuºít_°©e
 + 1] )

911 
	gyy_a˘
 = 
yy_ac˛i°
[(
yy_Õ
)];

912 i‡–
	gyy_a˘
 & 
	gYY_TRAILING_HEAD_MASK
 ||

913 (
	gyy_lookög_f‹_åaû_begö
) )

915 i‡–
	gyy_a˘
 =(
yy_lookög_f‹_åaû_begö
) )

917 (
yy_lookög_f‹_åaû_begö
) = 0;

918 
	gyy_a˘
 &~
YY_TRAILING_HEAD_MASK
;

922 i‡–
	gyy_a˘
 & 
	gYY_TRAILING_MASK
 )

924 (
	gyy_lookög_f‹_åaû_begö
Ë
yy_a˘
 & ~
YY_TRAILING_MASK
;

925 (
	gyy_lookög_f‹_åaû_begö
Ë|
YY_TRAILING_HEAD_MASK
;

929 (
	gyy_fuŒ_m©ch
Ë
yy_˝
;

930 (
	gyy_fuŒ_°©e
Ë(
yy_°©e_±r
);

931 (
	gyy_fuŒ_Õ
Ë(
yy_Õ
);

934 ++(
	gyy_Õ
);

935 
	gföd_ruÀ
;

937 --
	gyy_˝
;

938 
	gyy_cuºít_°©e
 = *--(
yy_°©e_±r
);

939 (
	gyy_Õ
Ë
yy_ac˚±
[
yy_cuºít_°©e
];

942 
	gYY_DO_BEFORE_ACTION
;

944 i‡–
	gyy_a˘
 !
YY_END_OF_BUFFER
 && 
yy_ruÀ_ˇn_m©ch_eﬁ
[
yy_a˘
] )

946 
yyl
;

947  
	gyyl
 = 0; yy»< 
	gpmix_utû_keyvÆ_yyÀng
; ++yyl )

948 i‡–
	gpmix_utû_keyvÆ_yyãxt
[
yyl
] == '\n' )

950 
pmix_utû_keyvÆ_yylöío
++;

954 
	gdo_a˘i⁄
:

956  
yy_a˘
 )

960 
YY_RULE_SETUP


962 { 
pmix_utû_keyvÆ_yy√wlöes
++;  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

963 
YY_BREAK


966 
YY_RULE_SETUP


968 { 
pmix_utû_keyvÆ_yy√wlöes
++;  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

969 
YY_BREAK


972 
YY_RULE_SETUP


974 { 
pmix_utû_keyvÆ_yy√wlöes
++;  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

975 
YY_BREAK


977 
YY_RULE_SETUP


979 { 
BEGIN
(
commít
);

980  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

981 
YY_BREAK


983 
YY_RULE_SETUP


986 
YY_BREAK


988 
YY_RULE_SETUP


991 
YY_BREAK


994 
YY_RULE_SETUP


996 { 
pmix_utû_keyvÆ_yy√wlöes
++;

997  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

998 
YY_BREAK


1000 
YY_RULE_SETUP


1002 { 
BEGIN
(
INITIAL
);

1003  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

1004 
YY_BREAK


1006 
YY_RULE_SETUP


1008 { 
BEGIN
(
VALUE
);  
	gPMIX_UTIL_KEYVAL_PARSE_EQUAL
; }

1009 
YY_BREAK


1011 
YY_RULE_SETUP


1014 
YY_BREAK


1016 
YY_RULE_SETUP


1018 {  
PMIX_UTIL_KEYVAL_PARSE_SINGLE_WORD
; }

1019 
YY_BREAK


1022 
YY_RULE_SETUP


1024 { 
BEGIN
(
INITIAL
);  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

1025 
YY_BREAK


1027 
YY_RULE_SETUP


1029 {  
PMIX_UTIL_KEYVAL_PARSE_VALUE
; }

1030 
YY_BREAK


1032 
YY_RULE_SETUP


1034 { 
BEGIN
(
INITIAL
);  
	gPMIX_UTIL_KEYVAL_PARSE_VALUE
; }

1035 
YY_BREAK


1037 
YY_RULE_SETUP


1039 { 
BEGIN
(
INITIAL
);  
	gPMIX_UTIL_KEYVAL_PARSE_VALUE
; }

1040 
YY_BREAK


1042 
YY_RULE_SETUP


1044 { 
BEGIN
(
INITIAL
);  
	gPMIX_UTIL_KEYVAL_PARSE_VALUE
; }

1045 
YY_BREAK


1048 
YY_RULE_SETUP


1050 { 
BEGIN
(
INITIAL
); BEGIN(INITIAL);  
	gPMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

1051 
YY_BREAK


1053 
YY_RULE_SETUP


1055 {
BEGIN
(
MCA_VALUE
);  
	gPMIX_UTIL_KEYVAL_PARSE_MCAVAR
; }

1056 
YY_BREAK


1058 
YY_RULE_SETUP


1060 {
BEGIN
(
MCA_VALUE
);  
	gPMIX_UTIL_KEYVAL_PARSE_ENVEQL
; }

1061 
YY_BREAK


1064 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1065 (
	gyy_c_buf_p
Ë
yy_˝
 -= 1;

1066 
	gYY_DO_BEFORE_ACTION
;

1067 
	gYY_RULE_SETUP


1069 {  
	gPMIX_UTIL_KEYVAL_PARSE_ENVVAR
; }

1070 
YY_BREAK


1072 
YY_RULE_SETUP


1074 {  
PMIX_UTIL_KEYVAL_PARSE_ERROR
; }

1075 
YY_BREAK


1077 
YY_RULE_SETUP


1079 
ECHO
;

1080 
	gYY_BREAK


1082 
YY_STATE_EOF
(
INITIAL
):

1083 
YY_STATE_EOF
(
VALUE
):

1084 
YY_STATE_EOF
(
commít
):

1085 
YY_STATE_EOF
(
MCA_VALUE
):

1086 
yyãrmö©e
();

1088 
	gYY_END_OF_BUFFER
:

1091 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

1094 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1095 
YY_RESTORE_YY_MORE_OFFSET


1097 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1108 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1109 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
pmix_utû_keyvÆ_yyö
;

1110 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1120 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1122 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1124 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1126 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1137 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1139 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1141 i‡–
	gyy_√xt_°©e
 )

1144 
	gyy_˝
 = ++(
yy_c_buf_p
);

1145 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1146 
	gyy_m©ch
;

1151 
	gyy_˝
 = (
yy_c_buf_p
);

1152 
	gyy_föd_a˘i⁄
;

1156  
yy_gë_√xt_buf„r
( ) )

1158 
	gEOB_ACT_END_OF_FILE
:

1160 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1162 i‡–
pmix_utû_keyvÆ_yywøp
( ) )

1173 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1175 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1176 
	gdo_a˘i⁄
;

1181 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1182 
	gYY_NEW_FILE
;

1187 
	gEOB_ACT_CONTINUE_SCAN
:

1188 (
yy_c_buf_p
) =

1189 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1191 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1193 
	gyy_˝
 = (
yy_c_buf_p
);

1194 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1195 
	gyy_m©ch
;

1197 
	gEOB_ACT_LAST_MATCH
:

1198 (
yy_c_buf_p
) =

1199 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1201 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1203 
	gyy_˝
 = (
yy_c_buf_p
);

1204 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1205 
	gyy_föd_a˘i⁄
;

1211 
YY_FATAL_ERROR
(

1224 
	$yy_gë_√xt_buf„r
 ()

1226 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1227 *
sour˚
 = (
yyãxt_±r
);

1228 
numbî_to_move
, 
i
;

1229 
ªt_vÆ
;

1231 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1232 
	`YY_FATAL_ERROR
(

1235 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1237 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1242  
EOB_ACT_END_OF_FILE
;

1250  
EOB_ACT_LAST_MATCH
;

1257 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1259  
i
 = 0; i < 
numbî_to_move
; ++i )

1260 *(
de°
++Ë*(
sour˚
++);

1262 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1266 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1270 
yy_size_t
 
num_to_ªad
 =

1271 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1273  
num_to_ªad
 <= 0 )

1276 
	`YY_FATAL_ERROR
(

1281 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1282 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1285 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1286 (
yy_n_ch¨s
), 
num_to_ªad
 );

1288 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1291 i‡–(
yy_n_ch¨s
) == 0 )

1293 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1295 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1296 
	`pmix_utû_keyvÆ_yyª°¨t
(
pmix_utû_keyvÆ_yyö
 );

1301 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1302 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1303 
YY_BUFFER_EOF_PENDING
;

1308 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1310 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1312 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1313 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`pmix_utû_keyvÆ_yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1314 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1315 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1318 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1319 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1320 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1322 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1324  
ªt_vÆ
;

1325 
	}
}

1329 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1331 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1332 *
yy_˝
;

1334 
yy_cuºít_°©e
 = (
yy_°¨t
);

1336 (
yy_°©e_±r
Ë(
yy_°©e_buf
);

1337 *(
yy_°©e_±r
)++ = 
yy_cuºít_°©e
;

1339  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1341 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1342  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1344 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1345 i‡–
yy_cuºít_°©e
 >= 84 )

1346 
yy_c
 = 
yy_mëa
[() yy_c];

1348 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1349 *(
yy_°©e_±r
)++ = 
yy_cuºít_°©e
;

1352  
yy_cuºít_°©e
;

1353 
	}
}

1360 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1362 
yy_is_jam
;

1364 
YY_CHAR
 
yy_c
 = 1;

1365  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1367 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1368 i‡–
yy_cuºít_°©e
 >= 84 )

1369 
yy_c
 = 
yy_mëa
[() yy_c];

1371 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1372 
yy_is_jam
 = (
yy_cuºít_°©e
 == 83);

1373 i‡–! 
yy_is_jam
 )

1374 *(
yy_°©e_±r
)++ = 
yy_cuºít_°©e
;

1376  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1377 
	}
}

1379 #i‚de‡
YY_NO_INPUT


1380 #ifde‡
__˝lu•lus


1381 
	$yyöput
 ()

1383 
	$öput
 ()

1387 
c
;

1389 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1391 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1397 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1399 *(
yy_c_buf_p
) = '\0';

1403 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1404 ++(
yy_c_buf_p
);

1406  
	`yy_gë_√xt_buf„r
( ) )

1408 
EOB_ACT_LAST_MATCH
:

1420 
	`pmix_utû_keyvÆ_yyª°¨t
(
pmix_utû_keyvÆ_yyö
 );

1424 
EOB_ACT_END_OF_FILE
:

1426 i‡–
	`pmix_utû_keyvÆ_yywøp
( ) )

1427  
EOF
;

1429 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1430 
YY_NEW_FILE
;

1431 #ifde‡
__˝lu•lus


1432  
	`yyöput
();

1434  
	`öput
();

1438 
EOB_ACT_CONTINUE_SCAN
:

1439 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1445 
c
 = *(*Ë(
yy_c_buf_p
);

1446 *(
yy_c_buf_p
) = '\0';

1447 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1449 i‡–
c
 == '\n' )

1451 
pmix_utû_keyvÆ_yylöío
++;

1454  
c
;

1455 
	}
}

1463 
	$pmix_utû_keyvÆ_yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1466 i‡–! 
YY_CURRENT_BUFFER
 ){

1467 
	`pmix_utû_keyvÆ_yyísuª_buf„r_°ack
 ();

1468 
YY_CURRENT_BUFFER_LVALUE
 =

1469 
	`pmix_utû_keyvÆ_yy_¸óã_buf„r
(
pmix_utû_keyvÆ_yyö
,
YY_BUF_SIZE
 );

1472 
	`pmix_utû_keyvÆ_yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1473 
	`pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
( );

1474 
	}
}

1480 
	$pmix_utû_keyvÆ_yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1488 
	`pmix_utû_keyvÆ_yyísuª_buf„r_°ack
 ();

1489 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1492 i‡–
YY_CURRENT_BUFFER
 )

1495 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1496 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1497 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1500 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1501 
	`pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
( );

1508 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1509 
	}
}

1511 
	$pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
 ()

1513 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1514 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1515 
pmix_utû_keyvÆ_yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1516 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1517 
	}
}

1525 
YY_BUFFER_STATE
 
	$pmix_utû_keyvÆ_yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1527 
YY_BUFFER_STATE
 
b
;

1529 
b
 = (
YY_BUFFER_STATE
Ë
	`pmix_utû_keyvÆ_yyÆloc
(–
yy_buf„r_°©e
 ) );

1530 i‡–! 
b
 )

1531 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_util_keyval_yy_create_buffer()" );

1533 
b
->
yy_buf_size
 = 
size
;

1538 
b
->
yy_ch_buf
 = (*Ë
	`pmix_utû_keyvÆ_yyÆloc
(b->
yy_buf_size
 + 2 );

1539 i‡–! 
b
->
yy_ch_buf
 )

1540 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_util_keyval_yy_create_buffer()" );

1542 
b
->
yy_is_our_buf„r
 = 1;

1544 
	`pmix_utû_keyvÆ_yy_öô_buf„r
(
b
,
fûe
 );

1546  
b
;

1547 
	}
}

1553 
	$pmix_utû_keyvÆ_yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1556 i‡–! 
b
 )

1559 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1560 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1562 i‡–
b
->
yy_is_our_buf„r
 )

1563 
	`pmix_utû_keyvÆ_yy‰ì
((*Ë
b
->
yy_ch_buf
 );

1565 
	`pmix_utû_keyvÆ_yy‰ì
((*Ë
b
 );

1566 
	}
}

1572 
	$pmix_utû_keyvÆ_yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1575 
€ºno
 = 
î∫o
;

1577 
	`pmix_utû_keyvÆ_yy_Êush_buf„r
(
b
 );

1579 
b
->
yy_öput_fûe
 = 
fûe
;

1580 
b
->
yy_fûl_buf„r
 = 1;

1586 i‡(
b
 !
YY_CURRENT_BUFFER
){

1587 
b
->
yy_bs_löío
 = 1;

1588 
b
->
yy_bs_cﬁumn
 = 0;

1591 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1593 
î∫o
 = 
€ºno
;

1594 
	}
}

1600 
	$pmix_utû_keyvÆ_yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1602 i‡–! 
b
 )

1605 
b
->
yy_n_ch¨s
 = 0;

1611 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1612 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1614 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1616 
b
->
yy_©_bﬁ
 = 1;

1617 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1619 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1620 
	`pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
( );

1621 
	}
}

1629 
	$pmix_utû_keyvÆ_yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1631 i‡(
√w_buf„r
 =
NULL
)

1634 
	`pmix_utû_keyvÆ_yyísuª_buf„r_°ack
();

1637 i‡–
YY_CURRENT_BUFFER
 )

1640 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1641 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1642 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1646 i‡(
YY_CURRENT_BUFFER
)

1647 (
yy_buf„r_°ack_t›
)++;

1648 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1651 
	`pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
( );

1652 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1653 
	}
}

1659 
	$pmix_utû_keyvÆ_yyp›_buf„r_°©e
 ()

1661 i‡(!
YY_CURRENT_BUFFER
)

1664 
	`pmix_utû_keyvÆ_yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1665 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1666 i‡((
yy_buf„r_°ack_t›
) > 0)

1667 --(
yy_buf„r_°ack_t›
);

1669 i‡(
YY_CURRENT_BUFFER
) {

1670 
	`pmix_utû_keyvÆ_yy_lﬂd_buf„r_°©e
( );

1671 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1673 
	}
}

1678 
	$pmix_utû_keyvÆ_yyísuª_buf„r_°ack
 ()

1680 
yy_size_t
 
num_to_Æloc
;

1682 i‡(!(
yy_buf„r_°ack
)) {

1688 
num_to_Æloc
 = 1;

1689 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
pmix_utû_keyvÆ_yyÆloc


1690 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1692 i‡–! (
yy_buf„r_°ack
) )

1693 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_util_keyval_yyensure_buffer_stack()" );

1695 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1697 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1698 (
yy_buf„r_°ack_t›
) = 0;

1702 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1705 
grow_size
 = 8 ;

1707 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1708 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
pmix_utû_keyvÆ_yyªÆloc


1709 ((
yy_buf„r_°ack
),

1710 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1712 i‡–! (
yy_buf„r_°ack
) )

1713 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_util_keyval_yyensure_buffer_stack()" );

1716 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1717 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1719 
	}
}

1727 
YY_BUFFER_STATE
 
	$pmix_utû_keyvÆ_yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1729 
YY_BUFFER_STATE
 
b
;

1731 i‡–
size
 < 2 ||

1732 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1733 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1737 
b
 = (
YY_BUFFER_STATE
Ë
	`pmix_utû_keyvÆ_yyÆloc
(–
yy_buf„r_°©e
 ) );

1738 i‡–! 
b
 )

1739 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_util_keyval_yy_scan_buffer()" );

1741 
b
->
yy_buf_size
 = 
size
 - 2;

1742 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1743 
b
->
yy_is_our_buf„r
 = 0;

1744 
b
->
yy_öput_fûe
 = 0;

1745 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1746 
b
->
yy_is_öãø˘ive
 = 0;

1747 
b
->
yy_©_bﬁ
 = 1;

1748 
b
->
yy_fûl_buf„r
 = 0;

1749 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1751 
	`pmix_utû_keyvÆ_yy_swôch_to_buf„r
(
b
 );

1753  
b
;

1754 
	}
}

1764 
YY_BUFFER_STATE
 
	$pmix_utû_keyvÆ_yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1767  
	`pmix_utû_keyvÆ_yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1768 
	}
}

1777 
YY_BUFFER_STATE
 
	$pmix_utû_keyvÆ_yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

1779 
YY_BUFFER_STATE
 
b
;

1780 *
buf
;

1781 
yy_size_t
 
n
;

1782 
i
;

1785 
n
 = 
_yybyãs_Àn
 + 2;

1786 
buf
 = (*Ë
	`pmix_utû_keyvÆ_yyÆloc
(
n
 );

1787 i‡–! 
buf
 )

1788 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_util_keyval_yy_scan_bytes()" );

1790  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1791 
buf
[
i
] = 
yybyãs
[i];

1793 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1795 
b
 = 
	`pmix_utû_keyvÆ_yy_sˇn_buf„r
(
buf
,
n
 );

1796 i‡–! 
b
 )

1797 
	`YY_FATAL_ERROR
( "bad buffer inÖmix_util_keyval_yy_scan_bytes()" );

1802 
b
->
yy_is_our_buf„r
 = 1;

1804  
b
;

1805 
	}
}

1807 #i‚de‡
YY_EXIT_FAILURE


1808 
	#YY_EXIT_FAILURE
 2

	)

1811 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1813 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1814 
	`exô
–
YY_EXIT_FAILURE
 );

1815 
	}
}

1819 #unde‡
yyÀss


1820 
	#yyÀss
(
n
) \

1824 
yyÀss_ma¸o_¨g
 = (
n
); \

1825 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1826 
pmix_utû_keyvÆ_yyãxt
[
pmix_utû_keyvÆ_yyÀng
] = (
yy_hﬁd_ch¨
); \

1827 (
yy_c_buf_p
Ë
pmix_utû_keyvÆ_yyãxt
 + 
yyÀss_ma¸o_¨g
; \

1828 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1829 *(
yy_c_buf_p
) = '\0'; \

1830 
pmix_utû_keyvÆ_yyÀng
 = 
yyÀss_ma¸o_¨g
; \

1832  0 )

	)

1839 
	$pmix_utû_keyvÆ_yygë_löío
 ()

1842  
pmix_utû_keyvÆ_yylöío
;

1843 
	}
}

1848 
FILE
 *
	$pmix_utû_keyvÆ_yygë_ö
 ()

1850  
pmix_utû_keyvÆ_yyö
;

1851 
	}
}

1856 
FILE
 *
	$pmix_utû_keyvÆ_yygë_out
 ()

1858  
pmix_utû_keyvÆ_yyout
;

1859 
	}
}

1864 
yy_size_t
 
	$pmix_utû_keyvÆ_yygë_Àng
 ()

1866  
pmix_utû_keyvÆ_yyÀng
;

1867 
	}
}

1873 *
	$pmix_utû_keyvÆ_yygë_ãxt
 ()

1875  
pmix_utû_keyvÆ_yyãxt
;

1876 
	}
}

1882 
	$pmix_utû_keyvÆ_yy£t_löío
 (
löe_numbî
 )

1885 
pmix_utû_keyvÆ_yylöío
 = 
löe_numbî
;

1886 
	}
}

1894 
	$pmix_utû_keyvÆ_yy£t_ö
 (
FILE
 * 
ö_°r
 )

1896 
pmix_utû_keyvÆ_yyö
 = 
ö_°r
 ;

1897 
	}
}

1899 
	$pmix_utû_keyvÆ_yy£t_out
 (
FILE
 * 
out_°r
 )

1901 
pmix_utû_keyvÆ_yyout
 = 
out_°r
 ;

1902 
	}
}

1904 
	$pmix_utû_keyvÆ_yygë_debug
 ()

1906  
pmix_utû_keyvÆ_yy_Êex_debug
;

1907 
	}
}

1909 
	$pmix_utû_keyvÆ_yy£t_debug
 (
bdebug
 )

1911 
pmix_utû_keyvÆ_yy_Êex_debug
 = 
bdebug
 ;

1912 
	}
}

1914 
	$yy_öô_globÆs
 ()

1921 
pmix_utû_keyvÆ_yylöío
 = 1;

1923 (
yy_buf„r_°ack
) = 0;

1924 (
yy_buf„r_°ack_t›
) = 0;

1925 (
yy_buf„r_°ack_max
) = 0;

1926 (
yy_c_buf_p
) = (*) 0;

1927 (
yy_öô
) = 0;

1928 (
yy_°¨t
) = 0;

1930 (
yy_°©e_buf
) = 0;

1931 (
yy_°©e_±r
) = 0;

1932 (
yy_fuŒ_m©ch
) = 0;

1933 (
yy_Õ
) = 0;

1936 #ifde‡
YY_STDINIT


1937 
pmix_utû_keyvÆ_yyö
 = 
°dö
;

1938 
pmix_utû_keyvÆ_yyout
 = 
°dout
;

1940 
pmix_utû_keyvÆ_yyö
 = (
FILE
 *) 0;

1941 
pmix_utû_keyvÆ_yyout
 = (
FILE
 *) 0;

1948 
	}
}

1951 
	$pmix_utû_keyvÆ_yyÀx_de°roy
 ()

1955 
YY_CURRENT_BUFFER
){

1956 
	`pmix_utû_keyvÆ_yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1957 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1958 
	`pmix_utû_keyvÆ_yyp›_buf„r_°©e
();

1962 
	`pmix_utû_keyvÆ_yy‰ì
((
yy_buf„r_°ack
) );

1963 (
yy_buf„r_°ack
Ë
NULL
;

1965 
	`pmix_utû_keyvÆ_yy‰ì
 ( (
yy_°©e_buf
) );

1966 (
yy_°©e_buf
Ë
NULL
;

1970 
	`yy_öô_globÆs
( );

1973 
	}
}

1979 #i‚de‡
yyãxt_±r


1980 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

1982 
i
;

1983  
i
 = 0; i < 
n
; ++i )

1984 
s1
[
i
] = 
s2
[i];

1985 
	}
}

1988 #ifde‡
YY_NEED_STRLEN


1989 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

1991 
n
;

1992  
n
 = 0; 
s
[n]; ++n )

1995  
n
;

1996 
	}
}

1999 *
	$pmix_utû_keyvÆ_yyÆloc
 (
yy_size_t
 
size
 )

2001  (*Ë
	`mÆloc
–
size
 );

2002 
	}
}

2004 *
	$pmix_utû_keyvÆ_yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2013  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

2014 
	}
}

2016 
	$pmix_utû_keyvÆ_yy‰ì
 (* 
±r
 )

2018 
	`‰ì
–(*Ë
±r
 );

2019 
	}
}

2021 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2028 #i‡!
deföed
(
YY_FLEX_SUBMINOR_VERSION
)

2029 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

2032 #i‡(
YY_FLEX_MAJOR_VERSION
 < 2Ë|| (YY_FLEX_MAJOR_VERSION =2 && (
YY_FLEX_MINOR_VERSION
 < 5 || (YY_FLEX_MINOR_VERSION =5 && 
YY_FLEX_SUBMINOR_VERSION
 < 5)))

2033 
	$pmix_utû_keyvÆ_yyÀx_de°roy
()

2035 i‡(
NULL
 !
YY_CURRENT_BUFFER
) {

2036 
	`pmix_utû_keyvÆ_yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
);

2037 #i‡
	`deföed
(
YY_CURRENT_BUFFER_LVALUE
)

2038 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2040 
YY_CURRENT_BUFFER
 = 
NULL
;

2043  
YY_NULL
;

2044 
	}
}

2047 
	$pmix_utû_keyvÆ_yywøp
()

2049 
pmix_utû_keyvÆ_∑r£_d⁄e
 = 
åue
;

2051 
	}
}

2062 
	$pmix_utû_keyvÆ_öô_buf„r
(
FILE
 *
fûe
)

2064 
YY_BUFFER_STATE
 
buf
 = 
	`pmix_utû_keyvÆ_yy_¸óã_buf„r
(
fûe
,
YY_BUF_SIZE
);

2065 
	`pmix_utû_keyvÆ_yy_swôch_to_buf„r
(
buf
);

2068 
	}
}

	@util/keyval/keyval_lex.h

21 #i‚de‡
PMIX_UTIL_KEYVAL_LEX_H_


22 
	#PMIX_UTIL_KEYVAL_LEX_H_


	)

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 #ifde‡
mÆloc


27 #unde‡
mÆloc


29 #ifde‡
ªÆloc


30 #unde‡
ªÆloc


32 #ifde‡
‰ì


33 #unde‡
‰ì


36 
	~<°dio.h
>

38 
pmix_utû_keyvÆ_yyÀx
();

39 
pmix_utû_keyvÆ_öô_buf„r
(
FILE
 *
fûe
);

40 
pmix_utû_keyvÆ_yyÀx_de°roy
();

42 
FILE
 *
pmix_utû_keyvÆ_yyö
;

43 
boﬁ
 
pmix_utû_keyvÆ_∑r£_d⁄e
;

44 *
pmix_utû_keyvÆ_yyãxt
;

45 
pmix_utû_keyvÆ_yy√wlöes
;

46 
pmix_utû_keyvÆ_yylöío
;

51 
	#YY_STACK_USED
 0

	)

52 
	#YY_ALWAYS_INTERACTIVE
 0

	)

53 
	#YY_NEVER_INTERACTIVE
 0

	)

54 
	#YY_MAIN
 0

	)

55 
	#YY_NO_UNPUT
 1

	)

56 
	#YY_SKIP_YYWRAP
 1

	)

58 
	epmix_keyvÆ_∑r£_°©e_t
 {

59 
	mPMIX_UTIL_KEYVAL_PARSE_DONE
,

60 
	mPMIX_UTIL_KEYVAL_PARSE_ERROR
,

62 
	mPMIX_UTIL_KEYVAL_PARSE_NEWLINE
,

63 
	mPMIX_UTIL_KEYVAL_PARSE_EQUAL
,

64 
	mPMIX_UTIL_KEYVAL_PARSE_SINGLE_WORD
,

65 
	mPMIX_UTIL_KEYVAL_PARSE_VALUE
,

66 
	mPMIX_UTIL_KEYVAL_PARSE_MCAVAR
,

67 
	mPMIX_UTIL_KEYVAL_PARSE_ENVVAR
,

68 
	mPMIX_UTIL_KEYVAL_PARSE_ENVEQL
,

70 
	mPMIX_UTIL_KEYVAL_PARSE_MAX


72 
pmix_keyvÆ_∑r£_°©e_t
 
	tpmix_keyvÆ_∑r£_°©e_t
;

	@util/keyval/keyval_lex.l

1 %
›ti⁄
 
nou≈ut


2 %
›ti⁄
 
noöput


3 %
›ti⁄
 
yylöío


26 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 
	~<°dio.h
>

29 #ifde‡
HAVE_UNISTD_H


30 
	~<uni°d.h
>

33 
	~"§c/utû/keyvÆ/keyvÆ_Àx.h
"

39 
BEGIN_C_DECLS


41 
pmix_utû_keyvÆ_yywøp
();

43 
END_C_DECLS


48 
	gpmix_utû_keyvÆ_yy√wlöes
 = 1;

49 
boﬁ
 
	gpmix_utû_keyvÆ_∑r£_d⁄e
 = 
Ál£
;

50 *
	gpmix_utû_keyvÆ_°rög
 = 
NULL
;

54 
WHITE
 [\
f
\
t
\
v
 ]

55 
CHAR
 [
A
-
Za
-
z0
-9
_
\-\.]

57 %
x
 
VALUE


58 %
x
 
commít


59 %
x
 
MCA_VALUE


61 %% /* 
	$yyÀx
 */

63 {
WHITE
}*\
n
 { 
pmix_utû_keyvÆ_yy√wlöes
++;  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

64 #.*\
n
 { 
pmix_utû_keyvÆ_yy√wlöes
++;  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

65 "//".*\
n
 { 
pmix_utû_keyvÆ_yy√wlöes
++;  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

67 "/*" { 
	`BEGIN
(
commít
);

68  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

69 <
commít
>[^*\
n
]* ;

70 <
commít
>"*"+[^*/\
n
]* ;

71 <
commít
>\
n
 { 
pmix_utû_keyvÆ_yy√wlöes
++;

72  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

73 <
commít
>"*"+"/" { 
	`BEGIN
(
INITIAL
);

74  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

76 {
WHITE
}*"="{WHITE}* { 
	`BEGIN
(
VALUE
);  
PMIX_UTIL_KEYVAL_PARSE_EQUAL
; }

77 {
WHITE
}+ ;

78 {
CHAR
}+ {  
PMIX_UTIL_KEYVAL_PARSE_SINGLE_WORD
; }

80 <
VALUE
>{
WHITE
}*\
n
 { 
	`BEGIN
(
INITIAL
);  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

81 <
VALUE
>[^\
n
]*[^\
t
 \n]/[\à]* {  
PMIX_UTIL_KEYVAL_PARSE_VALUE
; }

83 <
MCA_VALUE
>[^\
n
 \
t
]+ { 
	`BEGIN
(
INITIAL
);  
PMIX_UTIL_KEYVAL_PARSE_VALUE
; }

84 <
MCA_VALUE
>"'"[^\
n
]*"'"{
WHITE
}+ { 
	`BEGIN
(
INITIAL
);  
PMIX_UTIL_KEYVAL_PARSE_VALUE
; }

85 <
MCA_VALUE
>"\""[^\
n
]*"\""{
WHITE
}+ { 
	`BEGIN
(
INITIAL
);  
PMIX_UTIL_KEYVAL_PARSE_VALUE
; }

86 <
MCA_VALUE
>{
WHITE
}*\
n
 { 
	`BEGIN
(
INITIAL
); BEGIN(INITIAL);  
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
; }

88 "-"?"-mˇ"{
WHITE
}+{
CHAR
}+{WHITE}+ {
	`BEGIN
(
MCA_VALUE
);  
PMIX_UTIL_KEYVAL_PARSE_MCAVAR
; }

89 "-"?"-x"{
WHITE
}+{
CHAR
}+{WHITE}*"="{WHITE}* {
	`BEGIN
(
MCA_VALUE
);  
PMIX_UTIL_KEYVAL_PARSE_ENVEQL
; }

90 "-"?"-x"{
WHITE
}+{
CHAR
}+{WHITE}*/[^=] {  
PMIX_UTIL_KEYVAL_PARSE_ENVVAR
; }

92 . {  
PMIX_UTIL_KEYVAL_PARSE_ERROR
; }

94 
	}
%%

97 #i‡!
deföed
(
YY_FLEX_SUBMINOR_VERSION
)

98 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

101 #i‡(
YY_FLEX_MAJOR_VERSION
 < 2Ë|| (YY_FLEX_MAJOR_VERSION =2 && (
YY_FLEX_MINOR_VERSION
 < 5 || (YY_FLEX_MINOR_VERSION =5 && 
YY_FLEX_SUBMINOR_VERSION
 < 5)))

102 
	$pmix_utû_keyvÆ_yyÀx_de°roy
()

104 i‡(
NULL
 !
YY_CURRENT_BUFFER
) {

105 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
);

106 #i‡
	`deföed
(
YY_CURRENT_BUFFER_LVALUE
)

107 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

109 
YY_CURRENT_BUFFER
 = 
NULL
;

112  
YY_NULL
;

113 
	}
}

116 
	$pmix_utû_keyvÆ_yywøp
()

118 
pmix_utû_keyvÆ_∑r£_d⁄e
 = 
åue
;

120 
	}
}

131 
	$pmix_utû_keyvÆ_öô_buf„r
(
FILE
 *
fûe
)

133 
YY_BUFFER_STATE
 
buf
 = 
	`yy_¸óã_buf„r
(
fûe
, 
YY_BUF_SIZE
);

134 
	`yy_swôch_to_buf„r
(
buf
);

137 
	}
}

	@util/keyval_parse.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~"pmix_comm⁄.h
"

26 
	~"§c/utû/keyvÆ_∑r£.h
"

27 
	~"§c/utû/keyvÆ/keyvÆ_Àx.h
"

28 
	~"§c/utû/ouçut.h
"

29 
	~<°rög.h
>

30 
	~<˘y≥.h
>

32 
	gpmix_utû_keyvÆ_∑r£_löío
 = 0;

34 c⁄° *
	gkeyvÆ_fûíame
;

35 
pmix_keyvÆ_∑r£_‚_t
 
	gkeyvÆ_ˇŒback
;

36 *
	gkey_buf„r
 = 
NULL
;

37 
size_t
 
	gkey_buf„r_Àn
 = 0;

39 
∑r£_löe
();

40 
∑r£_löe_√w
(
pmix_keyvÆ_∑r£_°©e_t
 
fú°_vÆ
);

41 
∑r£_îr‹
(
num
);

43 *
	gív_°r
 = 
NULL
;

44 
	gívsize
 = 1024;

46 
	$pmix_utû_keyvÆ_∑r£_öô
()

48  
PMIX_SUCCESS
;

49 
	}
}

53 
	$pmix_utû_keyvÆ_∑r£_föÆize
()

55 i‡(
NULL
 !
key_buf„r
Ë
	`‰ì
(key_buffer);

56 
key_buf„r
 = 
NULL
;

57 
key_buf„r_Àn
 = 0;

59  
PMIX_SUCCESS
;

60 
	}
}

63 
	$pmix_utû_keyvÆ_∑r£
(c⁄° *
fûíame
,

64 
pmix_keyvÆ_∑r£_‚_t
 
ˇŒback
)

66 
vÆ
;

67 
ªt
 = 
PMIX_SUCCESS
;;

69 
keyvÆ_fûíame
 = 
fûíame
;

70 
keyvÆ_ˇŒback
 = 
ˇŒback
;

73 
pmix_utû_keyvÆ_yyö
 = 
	`f›í
(
keyvÆ_fûíame
, "r");

74 i‡(
NULL
 =
pmix_utû_keyvÆ_yyö
) {

75 
ªt
 = 
PMIX_ERR_NOT_FOUND
;

76 
˛ónup
;

79 
pmix_utû_keyvÆ_∑r£_d⁄e
 = 
Ál£
;

80 
pmix_utû_keyvÆ_yy√wlöes
 = 1;

81 
	`pmix_utû_keyvÆ_öô_buf„r
(
pmix_utû_keyvÆ_yyö
);

82 !
pmix_utû_keyvÆ_∑r£_d⁄e
) {

83 
vÆ
 = 
	`pmix_utû_keyvÆ_yyÀx
();

84 
vÆ
) {

85 
PMIX_UTIL_KEYVAL_PARSE_DONE
:

90 
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
:

94 
PMIX_UTIL_KEYVAL_PARSE_SINGLE_WORD
:

95 
	`∑r£_löe
();

98 
PMIX_UTIL_KEYVAL_PARSE_MCAVAR
:

99 
PMIX_UTIL_KEYVAL_PARSE_ENVVAR
:

100 
PMIX_UTIL_KEYVAL_PARSE_ENVEQL
:

101 
	`∑r£_löe_√w
(
vÆ
);

106 
	`∑r£_îr‹
(1);

110 
	`f˛o£
(
pmix_utû_keyvÆ_yyö
);

111 
	`pmix_utû_keyvÆ_yyÀx_de°roy
 ();

113 
˛ónup
:

114  
ªt
;

115 
	}
}

119 
	$∑r£_löe
()

121 
vÆ
;

123 
pmix_utû_keyvÆ_∑r£_löío
 = 
pmix_utû_keyvÆ_yylöío
;

126 i‡(
key_buf„r_Àn
 < 
	`°æí
(
pmix_utû_keyvÆ_yyãxt
) + 1) {

127 *
tmp
;

128 
key_buf„r_Àn
 = 
	`°æí
(
pmix_utû_keyvÆ_yyãxt
) + 1;

129 
tmp
 = (*)
	`ªÆloc
(
key_buf„r
, 
key_buf„r_Àn
);

130 i‡(
NULL
 =
tmp
) {

131 
	`‰ì
(
key_buf„r
);

132 
key_buf„r_Àn
 = 0;

133 
key_buf„r
 = 
NULL
;

134  
PMIX_ERR_OUT_OF_RESOURCE
;

136 
key_buf„r
 = 
tmp
;

139 
	`°∫˝y
(
key_buf„r
, 
pmix_utû_keyvÆ_yyãxt
, 
key_buf„r_Àn
);

143 
vÆ
 = 
	`pmix_utû_keyvÆ_yyÀx
();

144 i‡(
pmix_utû_keyvÆ_∑r£_d⁄e
 || 
PMIX_UTIL_KEYVAL_PARSE_EQUAL
 !
vÆ
) {

145 
	`∑r£_îr‹
(2);

146  
PMIX_ERROR
;

151 
vÆ
 = 
	`pmix_utû_keyvÆ_yyÀx
();

152 i‡(
PMIX_UTIL_KEYVAL_PARSE_SINGLE_WORD
 =
vÆ
 ||

153 
PMIX_UTIL_KEYVAL_PARSE_VALUE
 =
vÆ
) {

154 
	`keyvÆ_ˇŒback
(
key_buf„r
, 
pmix_utû_keyvÆ_yyãxt
);

158 
vÆ
 = 
	`pmix_utû_keyvÆ_yyÀx
();

159 i‡(
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
 =
vÆ
 ||

160 
PMIX_UTIL_KEYVAL_PARSE_DONE
 =
vÆ
) {

161  
PMIX_SUCCESS
;

167 i‡(
PMIX_UTIL_KEYVAL_PARSE_DONE
 =
vÆ
 ||

168 
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
 =
vÆ
) {

169 
	`keyvÆ_ˇŒback
(
key_buf„r
, 
NULL
);

170  
PMIX_SUCCESS
;

174 
	`∑r£_îr‹
(3);

175  
PMIX_ERROR
;

176 
	}
}

179 
	$∑r£_îr‹
(
num
)

182 
	`pmix_ouçut
(0, "keyvalÖarser:Érror %dÑeading file %sátÜine %d:\n %s\n",

183 
num
, 
keyvÆ_fûíame
, 
pmix_utû_keyvÆ_yy√wlöes
, 
pmix_utû_keyvÆ_yyãxt
);

184 
	}
}

186 
	$pmix_utû_keyvÆ_ßve_öã∫Æ_ív¨s
(
pmix_keyvÆ_∑r£_‚_t
 
ˇŒback
)

188 i‡(
NULL
 !
ív_°r
 && 0 < 
	`°æí
(env_str)) {

189 
	`ˇŒback
("mˇ_ba£_ív_li°_öã∫Æ", 
ív_°r
);

190 
	`‰ì
(
ív_°r
);

191 
ív_°r
 = 
NULL
;

193  
PMIX_SUCCESS
;

194 
	}
}

196 
	$åim_«me
(*
buf„r
, c⁄° * 
¥efix
, c⁄° * 
suffix
)

198 *
pchr
, *
echr
;

199 
size_t
 
buf„r_Àn
;

201 i‡(
NULL
 =
buf„r
) {

205 
buf„r_Àn
 = 
	`°æí
 (
buf„r
);

207 
pchr
 = 
buf„r
;

208 i‡(
NULL
 !
¥efix
) {

209 
size_t
 
¥efix_Àn
 = 
	`°æí
 (
¥efix
);

211 i‡(0 =
	`°∫cmp
 (
buf„r
, 
¥efix
, 
¥efix_Àn
)) {

212 
pchr
 +
¥efix_Àn
;

217 
	`is•a˚
 (*
pchr
)) {

218 
pchr
++;

222 
echr
 = 
buf„r
 + 
buf„r_Àn
;

223 
echr
 > 
buf„r
 && 
	`is•a˚
 (*(echr - 1))) {

224 
echr
--;

226 
echr
[0] = '\0';

228 i‡(
NULL
 !
suffix
 && (
uöçå_t
Ë(
echr
 - 
buf„r
Ë> 
	`°æí
 (suffix)) {

229 
size_t
 
suffix_Àn
 = 
	`°æí
 (
suffix
);

231 
echr
 -
suffix_Àn
;

233 i‡(0 =
	`°∫cmp
 (
echr
, 
suffix
, 
	`°æí
(suffix))) {

235 
echr
--;

236 } 
	`is•a˚
 (*
echr
));

237 
echr
[1] = '\0';

241 i‡(
buf„r
 !
pchr
) {

243 
	`memmove
 (
buf„r
, 
pchr
, 
	`°æí
 (pchr) + 1);

245 
	}
}

247 
	$ßve_∑øm_«me
 ()

249 i‡(
key_buf„r_Àn
 < 
	`°æí
(
pmix_utû_keyvÆ_yyãxt
) + 1) {

250 *
tmp
;

251 
key_buf„r_Àn
 = 
	`°æí
(
pmix_utû_keyvÆ_yyãxt
) + 1;

252 
tmp
 = (*)
	`ªÆloc
(
key_buf„r
, 
key_buf„r_Àn
);

253 i‡(
NULL
 =
tmp
) {

254 
	`‰ì
(
key_buf„r
);

255 
key_buf„r_Àn
 = 0;

256 
key_buf„r
 = 
NULL
;

257  
PMIX_ERR_OUT_OF_RESOURCE
;

259 
key_buf„r
 = 
tmp
;

262 
	`°∫˝y
 (
key_buf„r
, 
pmix_utû_keyvÆ_yyãxt
, 
key_buf„r_Àn
);

264  
PMIX_SUCCESS
;

265 
	}
}

267 
	$add_to_ív_°r
(*
v¨
, *
vÆ
)

269 
sz
, 
v¨sz
, 
vÆsz
;

270 *
tmp
;

272 i‡(
NULL
 =
v¨
) {

273  
PMIX_ERR_BAD_PARAM
;

276 i‡(
NULL
 !
ív_°r
) {

277 
v¨sz
 = 
	`°æí
(
v¨
);

278 
vÆsz
 = (
NULL
 !
vÆ
Ë? 
	`°æí
(val) : 0;

279 
sz
 = 
	`°æí
(
ív_°r
)+
v¨sz
+
vÆsz
+2;

280 i‡(
ívsize
 <
sz
) {

281 
ívsize
 *=2;

283 
tmp
 = 
	`ªÆloc
(
ív_°r
, 
ívsize
);

284 i‡(
NULL
 =
tmp
) {

285  
PMIX_ERR_OUT_OF_RESOURCE
;

287 
ív_°r
 = 
tmp
;

289 
	`°rˇt
(
ív_°r
, ";");

291 
ív_°r
 = 
	`ˇŒoc
(1, 
ívsize
);

292 i‡(
NULL
 =
ív_°r
) {

293  
PMIX_ERR_OUT_OF_RESOURCE
;

297 
	`°rˇt
(
ív_°r
, 
v¨
);

298 i‡(
NULL
 !
vÆ
) {

299 
	`°rˇt
(
ív_°r
, "=");

300 
	`°rˇt
(
ív_°r
, 
vÆ
);

303  
PMIX_SUCCESS
;

304 
	}
}

306 
	$∑r£_löe_√w
(
pmix_keyvÆ_∑r£_°©e_t
 
fú°_vÆ
)

308 
pmix_keyvÆ_∑r£_°©e_t
 
vÆ
;

309 *
tmp
;

310 
rc
;

312 
vÆ
 = 
fú°_vÆ
;

313 
PMIX_UTIL_KEYVAL_PARSE_NEWLINE
 !
vÆ
 && 
PMIX_UTIL_KEYVAL_PARSE_DONE
 != val) {

314 
rc
 = 
	`ßve_∑øm_«me
 ();

315 i‡(
PMIX_SUCCESS
 !
rc
) {

316  
rc
;

319 i‡(
PMIX_UTIL_KEYVAL_PARSE_MCAVAR
 =
vÆ
) {

320 
	`åim_«me
 (
key_buf„r
, "-mˇ", 
NULL
);

321 
	`åim_«me
 (
key_buf„r
, "--mˇ", 
NULL
);

323 
vÆ
 = 
	`pmix_utû_keyvÆ_yyÀx
();

324 i‡(
PMIX_UTIL_KEYVAL_PARSE_VALUE
 =
vÆ
) {

325 i‡(
NULL
 !
pmix_utû_keyvÆ_yyãxt
) {

326 
tmp
 = 
	`°rdup
(
pmix_utû_keyvÆ_yyãxt
);

327 i‡('\'' =
tmp
[0] || '\"' ==Åmp[0]) {

328 
	`åim_«me
 (
tmp
, "\'", "\'");

329 
	`åim_«me
 (
tmp
, "\"", "\"");

331 
	`keyvÆ_ˇŒback
(
key_buf„r
, 
tmp
);

332 
	`‰ì
(
tmp
);

335 
	`∑r£_îr‹
(4);

336  
PMIX_ERROR
;

338 } i‡(
PMIX_UTIL_KEYVAL_PARSE_ENVEQL
 =
vÆ
) {

339 
	`åim_«me
 (
key_buf„r
, "-x", "=");

340 
	`åim_«me
 (
key_buf„r
, "--x", 
NULL
);

342 
vÆ
 = 
	`pmix_utû_keyvÆ_yyÀx
();

343 i‡(
PMIX_UTIL_KEYVAL_PARSE_VALUE
 =
vÆ
) {

344 
	`add_to_ív_°r
(
key_buf„r
, 
pmix_utû_keyvÆ_yyãxt
);

346 
	`∑r£_îr‹
(5);

347  
PMIX_ERROR
;

349 } i‡(
PMIX_UTIL_KEYVAL_PARSE_ENVVAR
 =
vÆ
) {

350 
	`åim_«me
 (
key_buf„r
, "-x", "=");

351 
	`åim_«me
 (
key_buf„r
, "--x", 
NULL
);

352 
	`add_to_ív_°r
(
key_buf„r
, 
NULL
);

355 
	`∑r£_îr‹
(6);

356  
PMIX_ERROR
;

359 
vÆ
 = 
	`pmix_utû_keyvÆ_yyÀx
();

362  
PMIX_SUCCESS
;

363 
	}
}

	@util/keyval_parse.h

22 #i‚de‡
PMIX_UTIL_KEYVAL_PARSE_H


23 
	#PMIX_UTIL_KEYVAL_PARSE_H


	)

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

27 
BEGIN_C_DECLS


29 
pmix_utû_keyvÆ_∑r£_löío
;

39 (*
	tpmix_keyvÆ_∑r£_‚_t
)(c⁄° *
	tkey
, c⁄° *
	tvÆue
);

49 
	`pmix_utû_keyvÆ_∑r£
(c⁄° *
fûíame
,

50 
pmix_keyvÆ_∑r£_‚_t
 
ˇŒback
);

52 
	`pmix_utû_keyvÆ_∑r£_öô
();

54 
	`pmix_utû_keyvÆ_∑r£_föÆize
();

56 
	`pmix_utû_keyvÆ_ßve_öã∫Æ_ív¨s
(
pmix_keyvÆ_∑r£_‚_t
 
ˇŒback
);

58 
END_C_DECLS


	@util/os_path.c

20 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

23 
	~<°rög.h
>

24 #ifde‡
HAVE_UNISTD_H


25 
	~<uni°d.h
>

27 #ifde‡
HAVE_SYS_PARAM_H


28 
	~<sys/∑øm.h
>

30 
	~<°dlib.h
>

31 
	~<°d¨g.h
>

33 
	~"§c/utû/os_∑th.h
"

35 c⁄° *
	g∑th_£p
 = 
PMIX_PATH_SEP
;

37 *
	$pmix_os_∑th
(
boﬁ
 
ªœtive
, ...)

39 
va_li°
 
≠
;

40 *
ñemít
, *
∑th
;

41 
size_t
 
num_ñemíts
, 
tŸÆ_Àngth
;

43 
	`va_°¨t
(
≠
, 
ªœtive
);

48 
num_ñemíts
 = 0;

49 
tŸÆ_Àngth
 = 0;

50 
NULL
 !(
ñemít
 = 
	`va_¨g
(
≠
, *))) {

51 
num_ñemíts
++;

52 
tŸÆ_Àngth
 =ÅŸÆ_Àngth + 
	`°æí
(
ñemít
);

53 if–
∑th_£p
[0] !
ñemít
[0] ) 
tŸÆ_Àngth
++;

55 
	`va_íd
(
≠
);

57 i‡(0 =
num_ñemíts
) {

58 
∑th
 = (*)
	`mÆloc
(3);

59 
∑th
[0] = '\0';

60 i‡(
ªœtive
) {

61 
	`°r˝y
(
∑th
, ".");

62 
	`°rˇt
(
∑th
, 
∑th_£p
);

64 
	`°r˝y
(
∑th
, 
∑th_£p
);

66 (
∑th
);

71 
tŸÆ_Àngth
 =ÅŸÆ_Àngth + 
num_ñemíts
 * 
	`°æí
(
∑th_£p
) + 1;

72 if(
ªœtive
) {

73 
tŸÆ_Àngth
++;

76 i‡(
tŸÆ_Àngth
 > 
PMIX_PATH_MAX
) {

77 (
NULL
);

80 
∑th
 = (*)
	`mÆloc
(
tŸÆ_Àngth
);

81 i‡(
NULL
 =
∑th
) {

82 (
NULL
);

84 
∑th
[0] = 0;

86 i‡(
ªœtive
) {

87 
	`°r˝y
(
∑th
, ".");

90 
	`va_°¨t
(
≠
, 
ªœtive
);

91 if–
NULL
 !(
ñemít
 = 
	`va_¨g
(
≠
, *)) ) {

92 i‡(
∑th_£p
[0] !
ñemít
[0]) {

93 
	`°rˇt
(
∑th
, 
∑th_£p
);

95 
	`°rˇt
(
∑th
, 
ñemít
);

97 
NULL
 !(
ñemít
=
	`va_¨g
(
≠
, *))) {

98 i‡(
∑th_£p
[0] !
ñemít
[0]) {

99 
	`°rˇt
(
∑th
, 
∑th_£p
);

101 
	`°rˇt
(
∑th
, 
ñemít
);

104 
	`va_íd
(
≠
);

105  
	`pmix_make_fûíame_os_‰õndly
(
∑th
);

106 
	}
}

	@util/os_path.h

42 #i‚de‡
PMIX_OS_PATH_H


43 
	#PMIX_OS_PATH_H


	)

45 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

48 
	~<°dio.h
>

49 
	~<°d¨g.h
>

51 
BEGIN_C_DECLS


68 *
	$pmix_os_∑th
(
boﬁ
 
ªœtive
, ...Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_£¡öñ__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

74 
	#pmix_make_fûíame_os_‰õndly
(
PATH
Ë(PATH)

	)

76 
END_C_DECLS


	@util/output.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<pmix_comm⁄.h
>

27 
	~<°dio.h
>

28 
	~<˘y≥.h
>

29 
	~<°d¨g.h
>

30 
	~<°dlib.h
>

31 #ifde‡
HAVE_SYSLOG_H


32 
	~<sy¶og.h
>

34 
	~<°rög.h
>

35 
	~<f˙é.h
>

36 #ifde‡
HAVE_UNISTD_H


37 
	~<uni°d.h
>

39 #ifde‡
HAVE_SYS_PARAM_H


40 
	~<sys/∑øm.h
>

43 
	~"§c/utû/pmix_ívú⁄.h
"

44 
	~"§c/utû/îr‹.h
"

45 
	~"§c/utû/ouçut.h
"

50 
	gvîbo£_°ªam
 = -1;

51 
pmix_ouçut_°ªam_t
 
	gvîbo£
;

52 *
	gouçut_dú
 = 
NULL
;

53 *
	gouçut_¥efix
 = 
NULL
;

61 
boﬁ
 
	mldi_u£d
;

62 
boﬁ
 
	mldi_íabÀd
;

63 
	mldi_vîbo£_Àvñ
;

65 
boﬁ
 
	mldi_sy¶og
;

66 
	mldi_sy¶og_¥i‹ôy
;

68 *
	mldi_sy¶og_idít
;

69 *
	mldi_¥efix
;

70 
	mldi_¥efix_Àn
;

72 *
	mldi_suffix
;

73 
	mldi_suffix_Àn
;

75 
boﬁ
 
	mldi_°dout
;

76 
boﬁ
 
	mldi_°dîr
;

78 
boﬁ
 
	mldi_fûe
;

79 
boﬁ
 
	mldi_fûe_w™t_≠≥nd
;

80 *
	mldi_fûe_suffix
;

81 
	mldi_fd
;

82 
	mldi_fûe_num_löes_lo°
;

83 } 
	touçut_desc_t
;

88 
c⁄°ru˘
(
pmix_obje˘_t
 *
°ªam
);

89 
do_›í
(
ouçut_id
, 
pmix_ouçut_°ªam_t
 * 
lds
);

90 
›í_fûe
(
i
);

91 
‰ì_des¸ùt‹
(
ouçut_id
);

92 
make_°rög
(**
no_√wlöe_°rög
, 
ouçut_desc_t
 *
ldi
,

93 c⁄° *
f‹m©
, 
va_li°
 
¨gli°
);

94 
ouçut
(
ouçut_id
, c⁄° *
f‹m©
, 
va_li°
 
¨gli°
);

97 
	#PMIX_OUTPUT_MAX_STREAMS
 64

	)

98 #i‡
deföed
(
HAVE_SYSLOG
)

99 
	#USE_SYSLOG
 1

	)

101 
	#USE_SYSLOG
 0

	)

105 
boﬁ
 
	gpmix_ouçut_ªdúe˘ed_to_sy¶og
 = 
Ál£
;

106 
	gpmix_ouçut_ªdúe˘ed_sy¶og_¥i
 = 0;

111 
boﬁ
 
	göôülized
 = 
Ál£
;

112 
	gdeÁu…_°dîr_fd
 = -1;

113 
ouçut_desc_t
 
	göfo
[
PMIX_OUTPUT_MAX_STREAMS
];

114 *
	gãmp_°r
 = 0;

115 
size_t
 
	gãmp_°r_Àn
 = 0;

116 #i‡
deföed
(
HAVE_SYSLOG
)

117 
boﬁ
 
	gsy¶og_›íed
 = 
Ál£
;

119 *
	gªdúe˘_sy¶og_idít
 = 
NULL
;

121 
PMIX_CLASS_INSTANCE
(
pmix_ouçut_°ªam_t
, 
pmix_obje˘_t
, 
c⁄°ru˘
, 
NULL
);

126 
boﬁ
 
	$pmix_ouçut_öô
()

128 
i
;

129 
ho°«me
[
PMIX_MAXHOSTNAMELEN
];

130 *
°r
;

132 i‡(
öôülized
) {

133  
åue
;

136 
°r
 = 
	`gëív
("PMIX_OUTPUT_STDERR_FD");

137 i‡(
NULL
 !
°r
) {

138 
deÁu…_°dîr_fd
 = 
	`©oi
(
°r
);

140 
°r
 = 
	`gëív
("PMIX_OUTPUT_REDIRECT");

141 i‡(
NULL
 !
°r
) {

142 i‡(0 =
	`°rˇ£cmp
(
°r
, "syslog")) {

143 
pmix_ouçut_ªdúe˘ed_to_sy¶og
 = 
åue
;

146 
°r
 = 
	`gëív
("PMIX_OUTPUT_SYSLOG_PRI");

147 i‡(
NULL
 !
°r
) {

148 i‡(0 =
	`°rˇ£cmp
(
°r
, "info")) {

149 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
 = 
LOG_INFO
;

150 } i‡(0 =
	`°rˇ£cmp
(
°r
, "error")) {

151 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
 = 
LOG_ERR
;

152 } i‡(0 =
	`°rˇ£cmp
(
°r
, "warn")) {

153 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
 = 
LOG_WARNING
;

155 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
 = 
LOG_ERR
;

158 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
 = 
LOG_ERR
;

161 
°r
 = 
	`gëív
("PMIX_OUTPUT_SYSLOG_IDENT");

162 i‡(
NULL
 !
°r
) {

163 
ªdúe˘_sy¶og_idít
 = 
	`°rdup
(
°r
);

166 
	`PMIX_CONSTRUCT
(&
vîbo£
, 
pmix_ouçut_°ªam_t
);

167 i‡(
pmix_ouçut_ªdúe˘ed_to_sy¶og
) {

168 
vîbo£
.
lds_w™t_sy¶og
 = 
åue
;

169 
vîbo£
.
lds_sy¶og_¥i‹ôy
 = 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
;

170 i‡(
NULL
 !
°r
) {

171 
vîbo£
.
lds_sy¶og_idít
 = 
	`°rdup
(
ªdúe˘_sy¶og_idít
);

173 
vîbo£
.
lds_w™t_°dîr
 = 
Ál£
;

174 
vîbo£
.
lds_w™t_°dout
 = 
Ál£
;

176 
vîbo£
.
lds_w™t_°dîr
 = 
åue
;

178 
	`gëho°«me
(
ho°«me
, (hostname));

179 
ho°«me
[(hostname)-1] = '\0';

180 i‡(0 > 
	`a•rötf
(&
vîbo£
.
lds_¥efix
, "[%s:%05d] ", 
ho°«me
, 
	`gëpid
())) {

181  
PMIX_ERR_NOMEM
;

184 
i
 = 0; i < 
PMIX_OUTPUT_MAX_STREAMS
; ++i) {

185 
öfo
[
i
].
ldi_u£d
 = 
Ál£
;

186 
öfo
[
i
].
ldi_íabÀd
 = 
Ál£
;

188 
öfo
[
i
].
ldi_sy¶og
 = 
pmix_ouçut_ªdúe˘ed_to_sy¶og
;

189 
öfo
[
i
].
ldi_fûe
 = 
Ál£
;

190 
öfo
[
i
].
ldi_fûe_suffix
 = 
NULL
;

191 
öfo
[
i
].
ldi_fûe_w™t_≠≥nd
 = 
Ál£
;

192 
öfo
[
i
].
ldi_fd
 = -1;

193 
öfo
[
i
].
ldi_fûe_num_löes_lo°
 = 0;

197 
öôülized
 = 
åue
;

201 i‡(0 > 
	`a•rötf
(&
ouçut_¥efix
, "ouçut-pid%d-", 
	`gëpid
())) {

202  
Ál£
;

204 
ouçut_dú
 = 
	`°rdup
(
	`pmix_tmp_dúe˘‹y
());

207 
vîbo£_°ªam
 = 
	`pmix_ouçut_›í
(&
vîbo£
);

208  
åue
;

209 
	}
}

215 
	$pmix_ouçut_›í
(
pmix_ouçut_°ªam_t
 * 
lds
)

217  
	`do_›í
(-1, 
lds
);

218 
	}
}

224 
	$pmix_ouçut_ª›í
(
ouçut_id
, 
pmix_ouçut_°ªam_t
 * 
lds
)

226  
	`do_›í
(
ouçut_id
, 
lds
);

227 
	}
}

233 
boﬁ
 
	$pmix_ouçut_swôch
(
ouçut_id
, 
boﬁ
 
íabÀ
)

235 
boﬁ
 
ªt
 = 
Ál£
;

239 i‡(!
öôülized
) {

240 
	`pmix_ouçut_öô
();

243 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
) {

244 
ªt
 = 
öfo
[
ouçut_id
].
ldi_íabÀd
;

245 
öfo
[
ouçut_id
].
ldi_íabÀd
 = 
íabÀ
;

248  
ªt
;

249 
	}
}

255 
	$pmix_ouçut_ª›í_Æl
()

257 *
°r
;

258 
ho°«me
[
PMIX_MAXHOSTNAMELEN
];

260 
°r
 = 
	`gëív
("PMIX_OUTPUT_STDERR_FD");

261 i‡(
NULL
 !
°r
) {

262 
deÁu…_°dîr_fd
 = 
	`©oi
(
°r
);

264 
deÁu…_°dîr_fd
 = -1;

267 
	`gëho°«me
(
ho°«me
, (hostname));

268 if–
NULL
 !
vîbo£
.
lds_¥efix
 ) {

269 
	`‰ì
(
vîbo£
.
lds_¥efix
);

270 
vîbo£
.
lds_¥efix
 = 
NULL
;

272 i‡(0 > 
	`a•rötf
(&
vîbo£
.
lds_¥efix
, "[%s:%05d] ", 
ho°«me
, 
	`gëpid
())) {

273 
vîbo£
.
lds_¥efix
 = 
NULL
;

276 
	}
}

282 
	$pmix_ouçut_˛o£
(
ouçut_id
)

284 
i
;

288 i‡(!
öôülized
) {

295 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

296 
öfo
[
ouçut_id
].
ldi_u£d
 && info[ouçut_id].
ldi_íabÀd
) {

297 
	`‰ì_des¸ùt‹
(
ouçut_id
);

301 
i
 = 0; i < 
PMIX_OUTPUT_MAX_STREAMS
; ++i) {

302 i‡(
öfo
[
i
].
ldi_u£d
 && info[i].
ldi_sy¶og
) {

307 #i‡
	`deföed
(
HAVE_SYSLOG
)

308 i‡(
i
 >
PMIX_OUTPUT_MAX_STREAMS
 && 
sy¶og_›íed
) {

309 
	`˛o£log
();

314 
	}
}

320 
	$pmix_ouçut
(
ouçut_id
, c⁄° *
f‹m©
, ...)

322 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
) {

323 
va_li°
 
¨gli°
;

324 
	`va_°¨t
(
¨gli°
, 
f‹m©
);

325 
	`ouçut
(
ouçut_id
, 
f‹m©
, 
¨gli°
);

326 
	`va_íd
(
¨gli°
);

328 
	}
}

334 
	$pmix_ouçut_vîbo£
(
Àvñ
, 
ouçut_id
, c⁄° *
f‹m©
, ...)

336 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

337 
öfo
[
ouçut_id
].
ldi_vîbo£_Àvñ
 >
Àvñ
) {

338 
va_li°
 
¨gli°
;

339 
	`va_°¨t
(
¨gli°
, 
f‹m©
);

340 
	`ouçut
(
ouçut_id
, 
f‹m©
, 
¨gli°
);

341 
	`va_íd
(
¨gli°
);

343 
	}
}

349 
	$pmix_ouçut_vvîbo£
(
Àvñ
, 
ouçut_id
, c⁄° *
f‹m©
,

350 
va_li°
 
¨gli°
)

352 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

353 
öfo
[
ouçut_id
].
ldi_vîbo£_Àvñ
 >
Àvñ
) {

354 
	`ouçut
(
ouçut_id
, 
f‹m©
, 
¨gli°
);

356 
	}
}

362 *
	$pmix_ouçut_°rög
(
Àvñ
, 
ouçut_id
, c⁄° *
f‹m©
, ...)

364 
rc
;

365 *
ªt
 = 
NULL
;

367 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

368 
öfo
[
ouçut_id
].
ldi_vîbo£_Àvñ
 >
Àvñ
) {

369 
va_li°
 
¨gli°
;

370 
	`va_°¨t
(
¨gli°
, 
f‹m©
);

371 
rc
 = 
	`make_°rög
(&
ªt
, &
öfo
[
ouçut_id
], 
f‹m©
, 
¨gli°
);

372 
	`va_íd
(
¨gli°
);

373 i‡(
PMIX_SUCCESS
 !
rc
) {

374 
ªt
 = 
NULL
;

378  
ªt
;

379 
	}
}

385 *
	$pmix_ouçut_v°rög
(
Àvñ
, 
ouçut_id
, c⁄° *
f‹m©
,

386 
va_li°
 
¨gli°
)

388 
rc
;

389 *
ªt
 = 
NULL
;

391 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

392 
öfo
[
ouçut_id
].
ldi_vîbo£_Àvñ
 >
Àvñ
) {

393 
rc
 = 
	`make_°rög
(&
ªt
, &
öfo
[
ouçut_id
], 
f‹m©
, 
¨gli°
);

394 i‡(
PMIX_SUCCESS
 !
rc
) {

395 
ªt
 = 
NULL
;

399  
ªt
;

400 
	}
}

406 
	$pmix_ouçut_£t_vîbosôy
(
ouçut_id
, 
Àvñ
)

408 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
) {

409 
öfo
[
ouçut_id
].
ldi_vîbo£_Àvñ
 = 
Àvñ
;

411 
	}
}

417 
	$pmix_ouçut_£t_ouçut_fûe_öfo
(c⁄° *
dú
,

418 c⁄° *
¥efix
,

419 **
ﬁddú
,

420 **
ﬁd¥efix
)

422 i‡(
NULL
 !
ﬁddú
) {

423 *
ﬁddú
 = 
	`°rdup
(
ouçut_dú
);

425 i‡(
NULL
 !
ﬁd¥efix
) {

426 *
ﬁd¥efix
 = 
	`°rdup
(
ouçut_¥efix
);

429 i‡(
NULL
 !
dú
) {

430 
	`‰ì
(
ouçut_dú
);

431 
ouçut_dú
 = 
	`°rdup
(
dú
);

433 i‡(
NULL
 !
¥efix
) {

434 
	`‰ì
(
ouçut_¥efix
);

435 
ouçut_¥efix
 = 
	`°rdup
(
¥efix
);

437 
	}
}

439 
	$pmix_ouçut_hexdump
(
vîbo£_Àvñ
, 
ouçut_id
,

440 *
±r
, 
buÊí
)

442 *
buf
 = (*Ë
±r
;

443 
out_buf
[120];

444 
ªt
 = 0;

445 
out_pos
 = 0;

446 
i
, 
j
;

448 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

449 
öfo
[
ouçut_id
].
ldi_vîbo£_Àvñ
 >
vîbo£_Àvñ
) {

450 
	`pmix_ouçut_vîbo£
(
vîbo£_Àvñ
, 
ouçut_id
, "dum∞d©®© %∞%d byãs\n", 
±r
, 
buÊí
);

451 
i
 = 0; i < 
buÊí
; i += 16) {

452 
out_pos
 = 0;

453 
ªt
 = 
	`•rötf
(
out_buf
 + 
out_pos
, "%06x: ", 
i
);

454 i‡(
ªt
 < 0)

456 
out_pos
 +
ªt
;

457 
j
 = 0; j < 16; j++) {

458 i‡(
i
 + 
j
 < 
buÊí
)

459 
ªt
 = 
	`•rötf
(
out_buf
 + 
out_pos
, "%02x ",

460 
buf
[
i
 + 
j
]);

462 
ªt
 = 
	`•rötf
(
out_buf
 + 
out_pos
, " ");

463 i‡(
ªt
 < 0)

465 
out_pos
 +
ªt
;

467 
ªt
 = 
	`•rötf
(
out_buf
 + 
out_pos
, " ");

468 i‡(
ªt
 < 0)

470 
out_pos
 +
ªt
;

471 
j
 = 0; j < 16; j++)

472 i‡(
i
 + 
j
 < 
buÊí
) {

473 
ªt
 = 
	`•rötf
(
out_buf
 + 
out_pos
, "%c",

474 
	`i•röt
(
buf
[
i
+
j
]) ?

475 
buf
[
i
 + 
j
] :

477 i‡(
ªt
 < 0)

479 
out_pos
 +
ªt
;

481 
ªt
 = 
	`•rötf
(
out_buf
 + 
out_pos
, "\n");

482 i‡(
ªt
 < 0)

484 
	`pmix_ouçut_vîbo£
(
vîbo£_Àvñ
, 
ouçut_id
, "%s", 
out_buf
);

487 
	}
}

493 
	$pmix_ouçut_föÆize
()

495 i‡(
öôülized
) {

496 i‡(
vîbo£_°ªam
 != -1) {

497 
	`pmix_ouçut_˛o£
(
vîbo£_°ªam
);

499 
	`‰ì
(
vîbo£
.
lds_¥efix
);

500 
vîbo£_°ªam
 = -1;

502 
	`‰ì
 (
ouçut_¥efix
);

503 
	`‰ì
 (
ouçut_dú
);

504 if(
NULL
 !
ãmp_°r
) {

505 
	`‰ì
(
ãmp_°r
);

506 
ãmp_°r
 = 
NULL
;

507 
ãmp_°r_Àn
 = 0;

509 
	`PMIX_DESTRUCT
(&
vîbo£
);

511 
	}
}

518 
	$c⁄°ru˘
(
pmix_obje˘_t
 *
obj
)

520 
pmix_ouçut_°ªam_t
 *
°ªam
 = (pmix_ouçut_°ªam_t*Ë
obj
;

522 
°ªam
->
lds_vîbo£_Àvñ
 = 0;

523 
°ªam
->
lds_sy¶og_¥i‹ôy
 = 0;

524 
°ªam
->
lds_sy¶og_idít
 = 
NULL
;

525 
°ªam
->
lds_¥efix
 = 
NULL
;

526 
°ªam
->
lds_suffix
 = 
NULL
;

527 
°ªam
->
lds_is_debuggög
 = 
Ál£
;

528 
°ªam
->
lds_w™t_sy¶og
 = 
Ál£
;

529 
°ªam
->
lds_w™t_°dout
 = 
Ál£
;

530 
°ªam
->
lds_w™t_°dîr
 = 
Ál£
;

531 
°ªam
->
lds_w™t_fûe
 = 
Ál£
;

532 
°ªam
->
lds_w™t_fûe_≠≥nd
 = 
Ál£
;

533 
°ªam
->
lds_fûe_suffix
 = 
NULL
;

534 
	}
}

539 
	$do_›í
(
ouçut_id
, 
pmix_ouçut_°ªam_t
 * 
lds
)

541 
i
;

542 
boﬁ
 
ªdúe˘_to_fûe
 = 
Ál£
;

543 *
°r
, *
sfx
;

547 i‡(!
öôülized
) {

548 
	`pmix_ouçut_öô
();

551 
°r
 = 
	`gëív
("PMIX_OUTPUT_REDIRECT");

552 i‡(
NULL
 !
°r
 && 0 =
	`°rˇ£cmp
(str, "file")) {

553 
ªdúe˘_to_fûe
 = 
åue
;

555 
sfx
 = 
	`gëív
("PMIX_OUTPUT_SUFFIX");

560 i‡(-1 =
ouçut_id
) {

561 
i
 = 0; i < 
PMIX_OUTPUT_MAX_STREAMS
; ++i) {

562 i‡(!
öfo
[
i
].
ldi_u£d
) {

566 i‡(
i
 >
PMIX_OUTPUT_MAX_STREAMS
) {

567  
PMIX_ERR_OUT_OF_RESOURCE
;

575 
	`‰ì_des¸ùt‹
(
ouçut_id
);

576 
i
 = 
ouçut_id
;

582 i‡(
NULL
 =
lds
) {

583 
lds
 = &
vîbo£
;

588 
öfo
[
i
].
ldi_u£d
 = 
åue
;

589 
öfo
[
i
].
ldi_íabÀd
 = 
lds
->
lds_is_debuggög
 ?

590 (
boﬁ
Ë
PMIX_ENABLE_DEBUG
 : 
åue
;

591 
öfo
[
i
].
ldi_vîbo£_Àvñ
 = 
lds
->
lds_vîbo£_Àvñ
;

593 #i‡
USE_SYSLOG


594 #i‡
	`deföed
(
HAVE_SYSLOG
)

595 i‡(
pmix_ouçut_ªdúe˘ed_to_sy¶og
) {

596 
öfo
[
i
].
ldi_sy¶og
 = 
åue
;

597 
öfo
[
i
].
ldi_sy¶og_¥i‹ôy
 = 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
;

598 i‡(
NULL
 !
ªdúe˘_sy¶og_idít
) {

599 
öfo
[
i
].
ldi_sy¶og_idít
 = 
	`°rdup
(
ªdúe˘_sy¶og_idít
);

600 
	`›ílog
(
ªdúe˘_sy¶og_idít
, 
LOG_PID
, 
LOG_USER
);

602 
öfo
[
i
].
ldi_sy¶og_idít
 = 
NULL
;

603 
	`›ílog
("pmix", 
LOG_PID
, 
LOG_USER
);

605 
sy¶og_›íed
 = 
åue
;

608 
öfo
[
i
].
ldi_sy¶og
 = 
lds
->
lds_w™t_sy¶og
;

609 i‡(
lds
->
lds_w™t_sy¶og
) {

611 #i‡
	`deföed
(
HAVE_SYSLOG
)

612 i‡(
NULL
 !
lds
->
lds_sy¶og_idít
) {

613 
öfo
[
i
].
ldi_sy¶og_idít
 = 
	`°rdup
(
lds
->
lds_sy¶og_idít
);

614 
	`›ílog
(
lds
->
lds_sy¶og_idít
, 
LOG_PID
, 
LOG_USER
);

616 
öfo
[
i
].
ldi_sy¶og_idít
 = 
NULL
;

617 
	`›ílog
("pmix", 
LOG_PID
, 
LOG_USER
);

620 
sy¶og_›íed
 = 
åue
;

621 
öfo
[
i
].
ldi_sy¶og_¥i‹ôy
 = 
lds
->
lds_sy¶og_¥i‹ôy
;

624 #i‡
	`deföed
(
HAVE_SYSLOG
)

629 
öfo
[
i
].
ldi_sy¶og
 = 
Ál£
;

632 i‡(
NULL
 !
lds
->
lds_¥efix
) {

633 
öfo
[
i
].
ldi_¥efix
 = 
	`°rdup
(
lds
->
lds_¥efix
);

634 
öfo
[
i
].
ldi_¥efix_Àn
 = ()
	`°æí
(
lds
->
lds_¥efix
);

636 
öfo
[
i
].
ldi_¥efix
 = 
NULL
;

637 
öfo
[
i
].
ldi_¥efix_Àn
 = 0;

640 i‡(
NULL
 !
lds
->
lds_suffix
) {

641 
öfo
[
i
].
ldi_suffix
 = 
	`°rdup
(
lds
->
lds_suffix
);

642 
öfo
[
i
].
ldi_suffix_Àn
 = ()
	`°æí
(
lds
->
lds_suffix
);

644 
öfo
[
i
].
ldi_suffix
 = 
NULL
;

645 
öfo
[
i
].
ldi_suffix_Àn
 = 0;

648 i‡(
pmix_ouçut_ªdúe˘ed_to_sy¶og
) {

652 
öfo
[
i
].
ldi_°dout
 = 
Ál£
;

653 
öfo
[
i
].
ldi_°dîr
 = 
Ál£
;

654 
öfo
[
i
].
ldi_fûe
 = 
Ál£
;

655 
öfo
[
i
].
ldi_fd
 = -1;

660 i‡(
NULL
 !
°r
 && 
ªdúe˘_to_fûe
) {

661 
öfo
[
i
].
ldi_°dout
 = 
Ál£
;

662 
öfo
[
i
].
ldi_°dîr
 = 
Ál£
;

663 
öfo
[
i
].
ldi_fûe
 = 
åue
;

665 
öfo
[
i
].
ldi_°dout
 = 
lds
->
lds_w™t_°dout
;

666 
öfo
[
i
].
ldi_°dîr
 = 
lds
->
lds_w™t_°dîr
;

668 
öfo
[
i
].
ldi_fd
 = -1;

669 
öfo
[
i
].
ldi_fûe
 = 
lds
->
lds_w™t_fûe
;

671 i‡(
NULL
 !
sfx
) {

672 
öfo
[
i
].
ldi_fûe_suffix
 = 
	`°rdup
(
sfx
);

674 
öfo
[
i
].
ldi_fûe_suffix
 = (
NULL
 =
lds
->
lds_fûe_suffix
) ? NULL :

675 
	`°rdup
(
lds
->
lds_fûe_suffix
);

677 
öfo
[
i
].
ldi_fûe_w™t_≠≥nd
 = 
lds
->
lds_w™t_fûe_≠≥nd
;

678 
öfo
[
i
].
ldi_fûe_num_löes_lo°
 = 0;

684  
i
;

685 
	}
}

688 
	$›í_fûe
(
i
)

690 
Êags
;

691 *
fûíame
;

692 
n
;

698 
n
=0;Ç < 
PMIX_OUTPUT_MAX_STREAMS
;Ç++) {

699 i‡(
i
 =
n
) {

702 i‡(!
öfo
[
n
].
ldi_u£d
) {

705 i‡(!
öfo
[
n
].
ldi_fûe
) {

708 i‡(
NULL
 !
öfo
[
i
].
ldi_fûe_suffix
 &&

709 
NULL
 !
öfo
[
n
].
ldi_fûe_suffix
) {

710 i‡(0 !
	`°rcmp
(
öfo
[
i
].
ldi_fûe_suffix
, info[
n
].ldi_file_suffix)) {

714 i‡(
NULL
 =
öfo
[
i
].
ldi_fûe_suffix
 &&

715 
NULL
 !
öfo
[
n
].
ldi_fûe_suffix
) {

718 i‡(
NULL
 !
öfo
[
i
].
ldi_fûe_suffix
 &&

719 
NULL
 =
öfo
[
n
].
ldi_fûe_suffix
) {

722 i‡(
öfo
[
n
].
ldi_fd
 < 0) {

725 
öfo
[
i
].
ldi_fd
 = info[
n
].ldi_fd;

726  
PMIX_SUCCESS
;

731 i‡(
NULL
 !
ouçut_dú
) {

732 
fûíame
 = (*Ë
	`mÆloc
(
PMIX_PATH_MAX
);

733 i‡(
NULL
 =
fûíame
) {

734  
PMIX_ERR_OUT_OF_RESOURCE
;

736 
	`°∫˝y
(
fûíame
, 
ouçut_dú
, 
PMIX_PATH_MAX
);

737 
	`°rˇt
(
fûíame
, "/");

738 i‡(
NULL
 !
ouçut_¥efix
) {

739 
	`°rˇt
(
fûíame
, 
ouçut_¥efix
);

741 i‡(
öfo
[
i
].
ldi_fûe_suffix
 !
NULL
) {

742 
	`°rˇt
(
fûíame
, 
öfo
[
i
].
ldi_fûe_suffix
);

744 
öfo
[
i
].
ldi_fûe_suffix
 = 
NULL
;

745 
	`°rˇt
(
fûíame
, "output.txt");

747 
Êags
 = 
O_CREAT
 | 
O_RDWR
;

748 i‡(!
öfo
[
i
].
ldi_fûe_w™t_≠≥nd
) {

749 
Êags
 |
O_TRUNC
;

753 
öfo
[
i
].
ldi_fd
 = 
	`›í
(
fûíame
, 
Êags
, 0644);

754 
	`‰ì
(
fûíame
);

755 i‡(-1 =
öfo
[
i
].
ldi_fd
) {

756 
öfo
[
i
].
ldi_u£d
 = 
Ál£
;

757  
PMIX_ERR_IN_ERRNO
;

762 i‡(-1 =
	`f˙é
(
öfo
[
i
].
ldi_fd
, 
F_SETFD
, 1)) {

763  
PMIX_ERR_IN_ERRNO
;

771  
PMIX_SUCCESS
;

772 
	}
}

778 
	$‰ì_des¸ùt‹
(
ouçut_id
)

780 
ouçut_desc_t
 *
ldi
;

782 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

783 
öfo
[
ouçut_id
].
ldi_u£d
 && info[ouçut_id].
ldi_íabÀd
) {

784 
ldi
 = &
öfo
[
ouçut_id
];

786 i‡(-1 !
ldi
->
ldi_fd
) {

787 
	`˛o£
(
ldi
->
ldi_fd
);

789 
ldi
->
ldi_u£d
 = 
Ál£
;

793 i‡(
NULL
 !
ldi
->
ldi_¥efix
) {

794 
	`‰ì
(
ldi
->
ldi_¥efix
);

796 
ldi
->
ldi_¥efix
 = 
NULL
;

798 i‡(
NULL
 !
ldi
->
ldi_suffix
) {

799 
	`‰ì
(
ldi
->
ldi_suffix
);

801 
ldi
->
ldi_suffix
 = 
NULL
;

803 i‡(
NULL
 !
ldi
->
ldi_fûe_suffix
) {

804 
	`‰ì
(
ldi
->
ldi_fûe_suffix
);

806 
ldi
->
ldi_fûe_suffix
 = 
NULL
;

808 i‡(
NULL
 !
ldi
->
ldi_sy¶og_idít
) {

809 
	`‰ì
(
ldi
->
ldi_sy¶og_idít
);

811 
ldi
->
ldi_sy¶og_idít
 = 
NULL
;

813 
	}
}

816 
	$make_°rög
(**
no_√wlöe_°rög
, 
ouçut_desc_t
 *
ldi
,

817 c⁄° *
f‹m©
, 
va_li°
 
¨gli°
)

819 
size_t
 
Àn
, 
tŸÆ_Àn
;

820 
boﬁ
 
w™t_√wlöe
 = 
Ál£
;

824 i‡(0 > 
	`va•rötf
(
no_√wlöe_°rög
, 
f‹m©
, 
¨gli°
)) {

825  
PMIX_ERR_NOMEM
;

827 
tŸÆ_Àn
 = 
Àn
 = 
	`°æí
(*
no_√wlöe_°rög
);

828 i‡('\n' !(*
no_√wlöe_°rög
)[
Àn
 - 1]) {

829 
w™t_√wlöe
 = 
åue
;

830 ++
tŸÆ_Àn
;

831 } i‡(
NULL
 !
ldi
->
ldi_suffix
) {

835 (*
no_√wlöe_°rög
)[
Àn
 - 1] = '\0';

836 
w™t_√wlöe
 = 
åue
;

841 i‡(
NULL
 !
ldi
->
ldi_¥efix
) {

842 
tŸÆ_Àn
 +
	`°æí
(
ldi
->
ldi_¥efix
);

844 i‡(
NULL
 !
ldi
->
ldi_suffix
) {

845 
tŸÆ_Àn
 +
	`°æí
(
ldi
->
ldi_suffix
);

847 i‡(
ãmp_°r_Àn
 < 
tŸÆ_Àn
 + 
w™t_√wlöe
) {

848 i‡(
NULL
 !
ãmp_°r
) {

849 
	`‰ì
(
ãmp_°r
);

851 
ãmp_°r
 = (*Ë
	`mÆloc
(
tŸÆ_Àn
 * 2);

852 i‡(
NULL
 =
ãmp_°r
) {

853  
PMIX_ERR_OUT_OF_RESOURCE
;

855 
ãmp_°r_Àn
 = 
tŸÆ_Àn
 * 2;

857 i‡(
NULL
 !
ldi
->
ldi_¥efix
 && NULL !ldi->
ldi_suffix
) {

858 i‡(
w™t_√wlöe
) {

859 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s%s%s\n",

860 
ldi
->
ldi_¥efix
, *
no_√wlöe_°rög
,Üdi->
ldi_suffix
);

862 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s%s%s", 
ldi
->
ldi_¥efix
,

863 *
no_√wlöe_°rög
, 
ldi
->
ldi_suffix
);

865 } i‡(
NULL
 !
ldi
->
ldi_¥efix
) {

866 i‡(
w™t_√wlöe
) {

867 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s%s\n",

868 
ldi
->
ldi_¥efix
, *
no_√wlöe_°rög
);

870 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s%s", 
ldi
->
ldi_¥efix
,

871 *
no_√wlöe_°rög
);

873 } i‡(
NULL
 !
ldi
->
ldi_suffix
) {

874 i‡(
w™t_√wlöe
) {

875 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s%s\n",

876 *
no_√wlöe_°rög
, 
ldi
->
ldi_suffix
);

878 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s%s",

879 *
no_√wlöe_°rög
, 
ldi
->
ldi_suffix
);

882 i‡(
w™t_√wlöe
) {

883 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s\n", *
no_√wlöe_°rög
);

885 
	`¢¥ötf
(
ãmp_°r
, 
ãmp_°r_Àn
, "%s", *
no_√wlöe_°rög
);

889  
PMIX_SUCCESS
;

890 
	}
}

897 
	$ouçut
(
ouçut_id
, c⁄° *
f‹m©
, 
va_li°
 
¨gli°
)

899 
rc
 = 
PMIX_SUCCESS
;

900 *
°r
, *
out
 = 
NULL
;

901 
ouçut_desc_t
 *
ldi
;

905 i‡(!
öôülized
) {

906 
	`pmix_ouçut_öô
();

911 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 &&

912 
öfo
[
ouçut_id
].
ldi_u£d
 && info[ouçut_id].
ldi_íabÀd
) {

913 
ldi
 = &
öfo
[
ouçut_id
];

916 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`make_°rög
(&
°r
, 
ldi
, 
f‹m©
, 
¨gli°
))) {

917  
rc
;

921 #i‡
	`deföed
(
HAVE_SYSLOG
)

922 i‡(
ldi
->
ldi_sy¶og
) {

923 
	`sy¶og
(
ldi
->
ldi_sy¶og_¥i‹ôy
, "%s", 
°r
);

930 
out
 = 
ãmp_°r
;

933 i‡(
ldi
->
ldi_°dout
) {

934 i‡(0 > 
	`wrôe
(
	`fûío
(
°dout
), 
out
, ()
	`°æí
(out))) {

935  
PMIX_ERROR
;

937 
	`fÊush
(
°dout
);

941 i‡(
ldi
->
ldi_°dîr
) {

942 i‡(0 > 
	`wrôe
((-1 =
deÁu…_°dîr_fd
) ?

943 
	`fûío
(
°dîr
Ë: 
deÁu…_°dîr_fd
,

944 
out
, ()
	`°æí
(out))) {

945  
PMIX_ERROR
;

947 
	`fÊush
(
°dîr
);

955 i‡(
ldi
->
ldi_fûe
) {

956 i‡(
ldi
->
ldi_fd
 == -1) {

957 i‡(
PMIX_SUCCESS
 !
	`›í_fûe
(
ouçut_id
)) {

958 ++
ldi
->
ldi_fûe_num_löes_lo°
;

959 } i‡(
ldi
->
ldi_fûe_num_löes_lo°
 > 0 && 0 <ldi->
ldi_fd
) {

960 
buf„r
[
BUFSIZ
];

961 *
out
 = 
buf„r
;

962 
	`mem£t
(
buf„r
, 0, 
BUFSIZ
);

963 
	`¢¥ötf
(
buf„r
, 
BUFSIZ
 - 1,

965 
ldi
->
ldi_fûe_num_löes_lo°
);

966 i‡(0 > 
	`wrôe
(
ldi
->
ldi_fd
, 
buf„r
, ()
	`°æí
(buffer))) {

967  
PMIX_ERROR
;

969 
ldi
->
ldi_fûe_num_löes_lo°
 = 0;

970 i‡(
out
 !
buf„r
) {

971 
	`‰ì
(
out
);

975 i‡(
ldi
->
ldi_fd
 != -1) {

976 i‡(0 > 
	`wrôe
(
ldi
->
ldi_fd
, 
out
, ()
	`°æí
(out))) {

977  
PMIX_ERROR
;

981 
	`‰ì
(
°r
);

984  
rc
;

985 
	}
}

987 
	$pmix_ouçut_gë_vîbosôy
(
ouçut_id
)

989 i‡(
ouçut_id
 >0 && ouçut_id < 
PMIX_OUTPUT_MAX_STREAMS
 && 
öfo
[ouçut_id].
ldi_u£d
) {

990  
öfo
[
ouçut_id
].
ldi_vîbo£_Àvñ
;

994 
	}
}

	@util/output.h

64 #i‚de‡
PMIX_OUTPUT_H_


65 
	#PMIX_OUTPUT_H_


	)

67 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

70 #ifde‡
HAVE_STDARG_H


71 
	~<°d¨g.h
>

74 
	~"§c/˛ass/pmix_obje˘.h
"

76 
BEGIN_C_DECLS


97 
boﬁ
 
pmix_ouçut_ªdúe˘ed_to_sy¶og
;

98 
pmix_ouçut_ªdúe˘ed_sy¶og_¥i
;

114 
	spmix_ouçut_°ªam_t
 {

116 
pmix_obje˘_t
 
	msu≥r
;

130 
	mlds_vîbo£_Àvñ
;

141 
	mlds_sy¶og_¥i‹ôy
;

148 #i‡!
deföed
(
__WINDOWS__
)

149 *
	mlds_sy¶og_idít
;

150 #ñi‡!
deföed
(
_MSC_VER
)

151 *
	mlds_sy¶og_idít
;

153 
HANDLE
 
	mlds_sy¶og_idít
;

164 *
	mlds_¥efix
;

174 *
	mlds_suffix
;

184 
boﬁ
 
	mlds_is_debuggög
;

199 
boﬁ
 
	mlds_w™t_sy¶og
;

206 
boﬁ
 
	mlds_w™t_°dout
;

212 
boﬁ
 
	mlds_w™t_°dîr
;

223 
boﬁ
 
	mlds_w™t_fûe
;

231 
boﬁ
 
	mlds_w™t_fûe_≠≥nd
;

245 *
	mlds_fûe_suffix
;

252 
pmix_ouçut_°ªam_t
 
	tpmix_ouçut_°ªam_t
;

269 
boﬁ
 
pmix_ouçut_öô
();

277 
pmix_ouçut_föÆize
();

301 
pmix_ouçut_›í
(
pmix_ouçut_°ªam_t
 *
lds
);

315 
pmix_ouçut_ª›í
(
ouçut_id
, 
pmix_ouçut_°ªam_t
 *
lds
);

334 
boﬁ
 
pmix_ouçut_swôch
(
ouçut_id
, boﬁ 
íabÀ
);

345 
pmix_ouçut_ª›í_Æl
();

357 
pmix_ouçut_˛o£
(
ouçut_id
);

384 
	$pmix_ouçut
(
ouçut_id
, c⁄° *
f‹m©
, ...Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 2, 3);

414 
	$pmix_ouçut_vîbo£
(
vîbo£_Àvñ
, 
ouçut_id
,

415 c⁄° *
f‹m©
, ...Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 3, 4);

420 
	$pmix_ouçut_vvîbo£
(
vîbo£_Àvñ
, 
ouçut_id
,

421 c⁄° *
f‹m©
, 
va_li°
 
≠
Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 3, 0);

437 *
	$pmix_ouçut_°rög
(
vîbo£_Àvñ
, 
ouçut_id
,

438 c⁄° *
f‹m©
, ...Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 3, 4);

443 *
	$pmix_ouçut_v°rög
(
vîbo£_Àvñ
, 
ouçut_id
,

444 c⁄° *
f‹m©
, 
va_li°
 
≠
Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 3, 0);

455 
	`pmix_ouçut_£t_vîbosôy
(
ouçut_id
, 
Àvñ
);

463 
	`pmix_ouçut_gë_vîbosôy
(
ouçut_id
);

505 
	`pmix_ouçut_£t_ouçut_fûe_öfo
(c⁄° *
dú
,

506 c⁄° *
¥efix
,

507 **
ﬁddú
,

508 **
ﬁd¥efix
);

513 
	`pmix_ouçut_hexdump
(
vîbo£_Àvñ
, 
ouçut_id
,

514 *
±r
, 
buÊí
);

516 #i‡
PMIX_ENABLE_DEBUG


524 
	#PMIX_OUTPUT
(
a
Ë
pmix_ouçut
 
	)
a

533 
	#PMIX_OUTPUT_VERBOSE
(
a
Ë
pmix_ouçut_vîbo£
 
	)
a

542 
	#PMIX_OUTPUT
(
a
)

	)

551 
	#PMIX_OUTPUT_VERBOSE
(
a
)

	)

562 
	`PMIX_CLASS_DECLARATION
(
pmix_ouçut_°ªam_t
);

564 
END_C_DECLS


	@util/path.c

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<î∫o.h
>

30 #ifde‡
HAVE_UNISTD_H


31 
	~<uni°d.h
>

33 #ifde‡
HAVE_SHLWAPI_H


34 
	~<shlw≠i.h
>

36 #ifde‡
HAVE_SYS_PARAM_H


37 
	~<sys/∑øm.h
>

39 #ifde‡
HAVE_SYS_MOUNT_H


40 
	~<sys/mou¡.h
>

42 #ifde‡
HAVE_SYS_TYPES_H


43 
	~<sys/ty≥s.h
>

45 #ifde‡
HAVE_SYS_STAT_H


46 
	~<sys/°©.h
>

48 #ifde‡
HAVE_SYS_VFS_H


49 
	~<sys/vfs.h
>

51 #ifde‡
HAVE_SYS_STATFS_H


52 
	~<sys/°©fs.h
>

54 #ifde‡
HAVE_SYS_STATVFS_H


55 
	~<sys/°©vfs.h
>

57 #ifde‡
HAVE_SYS_MOUNT_H


58 
	~<sys/mou¡.h
>

60 #ifde‡
HAVE_MNTENT_H


61 
	~<m¡ít.h
>

63 #ifde‡
HAVE_PATHS_H


64 
	~<∑ths.h
>

67 #ifde‡
_PATH_MOUNTED


68 
	#MOUNTED_FILE
 
_PATH_MOUNTED


	)

70 
	#MOUNTED_FILE
 "/ëc/mèb"

	)

74 
	~"§c/ö˛ude/pmix_°döt.h
"

75 
	~"§c/utû/ouçut.h
"

76 
	~"§c/utû/∑th.h
"

77 
	~"§c/utû/os_∑th.h
"

78 
	~"§c/utû/¨gv.h
"

83 #i‡!
deföed
(
HAVE_STATFS
Ë&& !deföed(
HAVE_STATVFS
)

84 #îr‹ 
Mu°
 
have
 
eôhî
 
°©fs
(Ë
‹
 
°©vfs
()

92 #i‡
deföed
(
HAVE_STATFS
) && \

93 (
deföed
(
HAVE_STRUCT_STATFS_F_FSTYPENAME
) || \

94 
	$deföed
(
HAVE_STRUCT_STATFS_F_TYPE
))

95 
	#USE_STATFS
 1

	)

98 
	`∑th_ív_lﬂd
(*
∑th
, *
∑rgc
, ***
∑rgv
);

99 *
	`li°_ív_gë
(*
v¨
, **
li°
);

101 
boﬁ
 
	$pmix_∑th_is_absﬁuã
–c⁄° *
∑th
 )

103 if–
PMIX_PATH_SEP
[0] =*
∑th
 ) {

104  
åue
;

106  
Ál£
;

107 
	}
}

112 *
	$pmix_∑th_föd
(*
‚ame
, **
∑thv
, 
mode
, **
ívv
)

114 *
fuŒ∑th
;

115 *
dñimô
;

116 *
ív
;

117 *
pfix
;

118 
i
;

121 if–
	`pmix_∑th_is_absﬁuã
(
‚ame
) ) {

122  
	`pmix_∑th_ac˚ss
(
‚ame
, 
NULL
, 
mode
);

127 
fuŒ∑th
 = 
NULL
;

128 
i
 = 0;

133 
∑thv
[
i
] && 
NULL
 =
fuŒ∑th
) {

136 i‡('$' =*
∑thv
[
i
]) {

137 
dñimô
 = 
	`°rchr
(
∑thv
[
i
], 
PMIX_PATH_SEP
[0]);

138 i‡(
dñimô
) {

139 *
dñimô
 = '\0';

141 
ív
 = 
	`li°_ív_gë
(
∑thv
[
i
]+1, 
ívv
);

142 i‡(
dñimô
) {

143 *
dñimô
 = 
PMIX_PATH_SEP
[0];

145 i‡(
NULL
 !
ív
) {

146 i‡(!
dñimô
) {

147 
fuŒ∑th
 = 
	`pmix_∑th_ac˚ss
(
‚ame
, 
ív
, 
mode
);

149 
pfix
 = (*Ë
	`mÆloc
(
	`°æí
(
ív
Ë+ såÀn(
dñimô
) + 1);

150 i‡(
NULL
 =
pfix
) {

151  
NULL
;

153 
	`°r˝y
(
pfix
, 
ív
);

154 
	`°rˇt
(
pfix
, 
dñimô
);

155 
fuŒ∑th
 = 
	`pmix_∑th_ac˚ss
(
‚ame
, 
pfix
, 
mode
);

156 
	`‰ì
(
pfix
);

161 
fuŒ∑th
 = 
	`pmix_∑th_ac˚ss
(
‚ame
, 
∑thv
[
i
], 
mode
);

163 
i
++;

165  
	`pmix_make_fûíame_os_‰õndly
(
fuŒ∑th
);

166 
	}
}

171 *
	$pmix_∑th_födv
(*
‚ame
, 
mode
, **
ívv
, *
wrkdú
)

173 **
dúv
;

174 *
fuŒ∑th
;

175 *
∑th
;

176 
dúc
;

177 
i
;

178 
boﬁ
 
found_dŸ
 = 
Ál£
;

182 
dúc
 = 0;

183 
dúv
 = 
NULL
;

185 i‡(
NULL
 !(
∑th
 = 
	`li°_ív_gë
("PATH", 
ívv
))) {

186 
	`∑th_ív_lﬂd
(
∑th
, &
dúc
, &
dúv
);

191 i‡(
NULL
 !
wrkdú
) {

192 
i
 = 0; i < 
dúc
; ++i) {

193 i‡(0 =
	`°rcmp
(
dúv
[
i
], ".")) {

194 
found_dŸ
 = 
åue
;

195 
	`‰ì
(
dúv
[
i
]);

196 
dúv
[
i
] = 
	`°rdup
(
wrkdú
);

197 i‡(
NULL
 =
dúv
[
i
]){

198  
NULL
;

207 i‡(!
found_dŸ
 && 
NULL
 !
wrkdú
) {

208 
	`pmix_¨gv_≠≥nd
(&
dúc
, &
dúv
, 
wrkdú
);

211 if(
NULL
 =
dúv
)

212  
NULL
;

213 
fuŒ∑th
 = 
	`pmix_∑th_föd
(
‚ame
, 
dúv
, 
mode
, 
ívv
);

214 
	`pmix_¨gv_‰ì
(
dúv
);

215  
fuŒ∑th
;

216 
	}
}

232 *
	$pmix_∑th_ac˚ss
(*
‚ame
, *
∑th
, 
mode
)

234 *
fuŒ∑th
 = 
NULL
;

235 
°©
 
buf
;

238 i‡(
NULL
 =
∑th
) {

239 
fuŒ∑th
 = 
	`pmix_os_∑th
(
Ál£
, 
‚ame
, 
NULL
);

241 
fuŒ∑th
 = 
	`pmix_os_∑th
(
Ál£
, 
∑th
, 
‚ame
, 
NULL
);

243 i‡(
NULL
 =
fuŒ∑th
)

244  
NULL
;

249 i‡(0 !
	`°©
(
fuŒ∑th
, &
buf
)) {

253 
	`‰ì
(
fuŒ∑th
);

254  
NULL
;

257 i‡(!(
S_IFREG
 & 
buf
.
°_mode
) &&

258 !(
S_IFLNK
 & 
buf
.
°_mode
)) {

262 
	`‰ì
(
fuŒ∑th
);

263  
NULL
;

267 i‡((
X_OK
 & 
mode
Ë&& !(
S_IXUSR
 & 
buf
.
°_mode
)) {

271 
	`‰ì
(
fuŒ∑th
);

272  
NULL
;

274 i‡((
R_OK
 & 
mode
Ë&& !(
S_IRUSR
 & 
buf
.
°_mode
)) {

278 
	`‰ì
(
fuŒ∑th
);

279  
NULL
;

281 i‡((
W_OK
 & 
mode
Ë&& !(
S_IWUSR
 & 
buf
.
°_mode
)) {

285 
	`‰ì
(
fuŒ∑th
);

286  
NULL
;

290  
fuŒ∑th
;

291 
	}
}

303 
	$∑th_ív_lﬂd
(*
∑th
, *
∑rgc
, ***
∑rgv
)

305 *
p
;

306 
ßved
;

308 i‡(
NULL
 =
∑th
) {

309 *
∑rgc
 = 0;

316 '\0' !*
∑th
) {

320 
p
 = 
∑th
; *∞&& (*∞!
PMIX_ENV_SEP
); ++p) {

326 i‡(
p
 !
∑th
) {

327 
ßved
 = *
p
;

328 *
p
 = '\0';

329 
	`pmix_¨gv_≠≥nd
(
∑rgc
, 
∑rgv
, 
∑th
);

330 *
p
 = 
ßved
;

331 
∑th
 = 
p
;

336 i‡(*
∑th
) {

337 ++
∑th
;

340 
	}
}

354 *
	$li°_ív_gë
(*
v¨
, **
li°
)

356 
size_t
 
n
;

358 i‡(
NULL
 !
li°
) {

359 
n
 = 
	`°æí
(
v¨
);

361 
NULL
 !*
li°
) {

362 i‡((0 =
	`°∫cmp
(
v¨
, *
li°
, 
n
)) && ('=' == (*list)[n])) {

363  (*
li°
 + 
n
 + 1);

365 ++
li°
;

368  
	`gëív
(
v¨
);

369 
	}
}

381 * 
	$pmix_föd_absﬁuã_∑th
–* 
≠p_«me
 )

383 * 
abs_≠p_«me
;

384 
cwd
[
PMIX_PATH_MAX
], *
pcwd
;

386 if–
	`pmix_∑th_is_absﬁuã
(
≠p_«me
) ) {

387 
abs_≠p_«me
 = 
≠p_«me
;

388 } i‡–'.' =
≠p_«me
[0] ||

389 
NULL
 !
	`°rchr
(
≠p_«me
, 
PMIX_PATH_SEP
[0])) {

391 
pcwd
 = 
	`gëcwd
–
cwd
, 
PMIX_PATH_MAX
 );

392 if–
NULL
 =
pcwd
 ) {

394  
NULL
;

396 
abs_≠p_«me
 = 
	`pmix_os_∑th
–
Ál£
, 
pcwd
, 
≠p_«me
, 
NULL
 );

399 
abs_≠p_«me
 = 
	`pmix_∑th_födv
–
≠p_«me
, 
X_OK
, 
NULL
, NULL );

402 if–
NULL
 !
abs_≠p_«me
 ) {

403 * 
ªsﬁved_∑th
 = (*)
	`mÆloc
(
PMIX_PATH_MAX
);

404 
	`ªÆ∑th
–
abs_≠p_«me
, 
ªsﬁved_∑th
 );

405 if–
abs_≠p_«me
 !
≠p_«me
 ) 
	`‰ì
(abs_app_name);

406  
ªsﬁved_∑th
;

408  
NULL
;

409 
	}
}

417 *
	$pmix_check_mèb
(*
dev_∑th
)

420 #ifde‡
HAVE_MNTENT_H


421 
FILE
 * 
mèb
 = 
NULL
;

422 
m¡ít
 * 
∑π
 = 
NULL
;

424 i‡((
mèb
 = 
	`£tm¡ít
(
MOUNTED_FILE
, "r")Ë!
NULL
) {

425 
NULL
 !(
∑π
 = 
	`gëm¡ít
(
mèb
))) {

426 i‡((
NULL
 !
∑π
->
m¡_dú
) &&

427 (
NULL
 !
∑π
->
m¡_ty≥
) &&

428 (0 =
	`°rcmp
(
∑π
->
m¡_dú
, 
dev_∑th
)))

430 
	`ídm¡ít
(
mèb
);

431  
	`°rdup
(
∑π
->
m¡_ty≥
);

434 
	`ídm¡ít
(
mèb
);

437  
NULL
;

438 
	}
}

485 #i‚de‡
LL_SUPER_MAGIC


486 
	#LL_SUPER_MAGIC
 0x0BD00BD0

	)

488 #i‚de‡
NFS_SUPER_MAGIC


489 
	#NFS_SUPER_MAGIC
 0x6969

	)

491 #i‚de‡
PAN_KERNEL_FS_CLIENT_SUPER_MAGIC


492 
	#PAN_KERNEL_FS_CLIENT_SUPER_MAGIC
 0xAAD7AAEA

	)

494 #i‚de‡
GPFS_SUPER_MAGIC


495 
	#GPFS_SUPER_MAGIC
 0x47504653

	)

497 #i‚de‡
AUTOFS_SUPER_MAGIC


498 
	#AUTOFS_SUPER_MAGIC
 0x0187

	)

500 #i‚de‡
PVFS2_SUPER_MAGIC


501 
	#PVFS2_SUPER_MAGIC
 0x20030528

	)

504 
	#MASK2
 0xffff

	)

505 
	#MASK4
 0xffffffff

	)

507 
boﬁ
 
	$pmix_∑th_nfs
(*
‚ame
, **
ªt_f°y≥
)

509 
i
;

510 
f§c
 = -1;

511 
vf§c
 = -1;

512 
åüls
;

513 * 
fûe
 = 
	`°rdup
 (
‚ame
);

514 #i‡
	`deföed
(
USE_STATFS
)

515 
°©fs
 
fsbuf
;

517 #i‡
	`deföed
(
HAVE_STATVFS
)

518 
°©vfs
 
vfsbuf
;

524 
	sfs_ty≥s_t
 {

525 
f_fsid
;

526 
f_mask
;

527 c⁄° * 
f_f¢ame
;

528 } 
fs_ty≥s
[] = {

529 {
LL_SUPER_MAGIC
, 
MASK4
, "lustre"},

530 {
NFS_SUPER_MAGIC
, 
MASK2
, "nfs"},

531 {
AUTOFS_SUPER_MAGIC
, 
MASK2
, "autofs"},

532 {
PAN_KERNEL_FS_CLIENT_SUPER_MAGIC
, 
MASK4
, "panfs"},

533 {
GPFS_SUPER_MAGIC
, 
MASK4
, "gpfs"},

534 {
PVFS2_SUPER_MAGIC
, 
MASK4
, "pvfs2"}

536 
	#FS_TYPES_NUM
 ()( (
fs_ty≥s
)/ (fs_ty≥s[0]))

	)

543 
agaö
:

544 #i‡
	`deföed
(
USE_STATFS
)

545 
åüls
 = 5;

547 
f§c
 = 
	`°©fs
(
fûe
, &
fsbuf
);

548 } -1 =
f§c
 && 
ESTALE
 =
î∫o
 && (0 < --
åüls
));

550 #i‡
	`deföed
(
HAVE_STATVFS
)

551 
åüls
 = 5;

553 
vf§c
 = 
	`°©vfs
(
fûe
, &
vfsbuf
);

554 } -1 =
vf§c
 && 
ESTALE
 =
î∫o
 && (0 < --
åüls
));

559 i‡(-1 =
f§c
 && -1 =
vf§c
) {

560 * 
œ°_£p
;

562 
	`PMIX_OUTPUT_VERBOSE
((10, 0, "pmix_path_nfs: stat(v)fs on file:%s failedÉrrno:%d directory:%s\n",

563 
‚ame
, 
î∫o
, 
fûe
));

564 i‡(
EPERM
 =
î∫o
) {

565 
	`‰ì
(
fûe
);

566 i‡–
NULL
 !
ªt_f°y≥
 ) {

567 *
ªt_f°y≥
 = 
NULL
;

569  
Ál£
;

572 
œ°_£p
 = 
	`°ºchr
(
fûe
, 
PMIX_PATH_SEP
[0]);

574 i‡(
NULL
 =
œ°_£p
 || (1 =
	`°æí
(last_sep) &&

575 
PMIX_PATH_SEP
[0] =*
œ°_£p
)) {

576 
	`‰ì
 (
fûe
);

577 i‡–
NULL
 !
ªt_f°y≥
 ) {

578 *
ªt_f°y≥
=
NULL
;

580  
Ál£
;

582 *
œ°_£p
 = '\0';

584 
agaö
;

588 
i
 = 0; i < 
FS_TYPES_NUM
; i++) {

589 #i‡
	`deföed
(
USE_STATFS
)

591 #i‡
	`deföed
(
HAVE_STRUCT_STATFS_F_FSTYPENAME
)

592 i‡(0 =
f§c
 &&

593 0 =
	`°∫ˇ£cmp
(
fs_ty≥s
[
i
].
f_f¢ame
, 
fsbuf
.
f_f°y≥«me
,

594 (
fsbuf
.
f_f°y≥«me
))) {

595 
found
;

598 #i‡
	`deföed
(
HAVE_STRUCT_STATFS_F_TYPE
)

599 i‡(0 =
f§c
 &&

600 
fs_ty≥s
[
i
].
f_fsid
 =(
fsbuf
.
f_ty≥
 & fs_ty≥s[i].
f_mask
)) {

601 
found
;

606 #i‡
	`deföed
(
HAVE_STATVFS
)

608 #i‡
	`deföed
(
HAVE_STRUCT_STATVFS_F_BASETYPE
)

609 i‡(0 =
vf§c
 &&

610 0 =
	`°∫ˇ£cmp
(
fs_ty≥s
[
i
].
f_f¢ame
, 
vfsbuf
.
f_ba£ty≥
,

611 (
vfsbuf
.
f_ba£ty≥
))) {

612 
found
;

615 #i‡
	`deföed
(
HAVE_STRUCT_STATVFS_F_FSTYPENAME
)

616 i‡(0 =
vf§c
 &&

617 0 =
	`°∫ˇ£cmp
(
fs_ty≥s
[
i
].
f_f¢ame
, 
vfsbuf
.
f_f°y≥«me
,

618 (
vfsbuf
.
f_f°y≥«me
))) {

619 
found
;

625 
	`‰ì
 (
fûe
);

626 i‡–
NULL
 !
ªt_f°y≥
 ) {

627 *
ªt_f°y≥
=
NULL
;

629  
Ál£
;

631 #i‡
	`deföed
(
HAVE_STRUCT_STATFS_F_FSTYPENAME
) || \

632 
	`deföed
(
HAVE_STRUCT_STATFS_F_TYPE
) || \

633 
	`deföed
(
HAVE_STRUCT_STATVFS_F_BASETYPE
) || \

634 
	`deföed
(
HAVE_STRUCT_STATVFS_F_FSTYPENAME
)

635 
found
:

638 
	`‰ì
 (
fûe
);

639 i‡(
AUTOFS_SUPER_MAGIC
 =
fs_ty≥s
[
i
].
f_fsid
) {

640 *
fs_ty≥
 = 
	`pmix_check_mèb
(
‚ame
);

641 
x
;

642 i‡(
NULL
 !
fs_ty≥
) {

643 
x
 = 0; x < 
FS_TYPES_NUM
; x++) {

644 i‡(
AUTOFS_SUPER_MAGIC
 =
fs_ty≥s
[
x
].
f_fsid
) {

647 i‡(0 =
	`°rˇ£cmp
(
fs_ty≥s
[
x
].
f_f¢ame
, 
fs_ty≥
)) {

648 
	`PMIX_OUTPUT_VERBOSE
((10, 0, "pmix_∑th_nfs: fûe:%†⁄ fs:%s\n", 
‚ame
, 
fs_ty≥
));

649 
	`‰ì
(
fs_ty≥
);

650 i‡–
NULL
 !
ªt_f°y≥
 ) {

651 *
ªt_f°y≥
 = 
	`°rdup
(
fs_ty≥s
[
x
].
f_f¢ame
);

653  
åue
;

656 
	`‰ì
(
fs_ty≥
);

657 i‡–
NULL
 !
ªt_f°y≥
 ) {

658 *
ªt_f°y≥
=
NULL
;

660  
Ál£
;

664 
	`PMIX_OUTPUT_VERBOSE
((10, 0, "pmix_path_nfs: file:%s on fs:%s\n",

665 
‚ame
, 
fs_ty≥s
[
i
].
f_f¢ame
));

666 i‡–
NULL
 !
ªt_f°y≥
 ) {

667 *
ªt_f°y≥
 = 
	`°rdup
 (
fs_ty≥s
[
i
].
f_f¢ame
);

669  
åue
;

671 #unde‡
FS_TYPES_NUM


672 
	}
}

675 
	$pmix_∑th_df
(c⁄° *
∑th
,

676 
uöt64_t
 *
out_avaû
)

678 
rc
 = -1;

679 
åüls
 = 5;

680 
îr
 = 0;

681 #i‡
	`deföed
(
USE_STATFS
)

682 
°©fs
 
buf
;

683 #ñi‡
	`deföed
(
HAVE_STATVFS
)

684 
°©vfs
 
buf
;

687 i‡(
NULL
 =
∑th
 || NULL =
out_avaû
) {

688  
PMIX_ERROR
;

690 *
out_avaû
 = 0;

693 #i‡
	`deföed
(
USE_STATFS
)

694 
rc
 = 
	`°©fs
(
∑th
, &
buf
);

695 #ñi‡
	`deföed
(
HAVE_STATVFS
)

696 
rc
 = 
	`°©vfs
(
∑th
, &
buf
);

698 
îr
 = 
î∫o
;

699 } -1 =
rc
 && 
ESTALE
 =
îr
 && (--
åüls
 > 0));

701 i‡(-1 =
rc
) {

702 
	`PMIX_OUTPUT_VERBOSE
((10, 2, "pmix_path_df: stat(v)fs on "

704 
∑th
, 
îr
, 
	`°ªº‹
(err)));

705  
PMIX_ERROR
;

710 *
out_avaû
 = 
buf
.
f_bsize
 * (()buf.
f_bavaû
 < 0 ? 0 : buf.f_bavail);

712 
	`PMIX_OUTPUT_VERBOSE
((10, 2, "pmix_path_df: stat(v)fs states "

713 "∑th: %†ha†%"
PRIu64
 " B of free space.",

714 
∑th
, *
out_avaû
));

716  
PMIX_SUCCESS
;

717 
	}
}

	@util/path.h

25 #i‚de‡
PMIX_PATH_H


26 
	#PMIX_PATH_H


	)

28 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

30 
	~"pmix_comm⁄.h
"

32 #ifde‡
HAVE_UNISTD_H


33 
	~<uni°d.h
>

36 
BEGIN_C_DECLS


57 *
	$pmix_∑th_föd
(*
‚ame
, **
∑thv
, 
mode
,

58 **
ívv
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

78 *
	$pmix_∑th_födv
(*
‚ame
, 
mode
,

79 **
ívv
, *
wrkdú
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

92 
boﬁ
 
	`pmix_∑th_is_absﬁuã
–c⁄° *
∑th
 );

111 * 
	$pmix_föd_absﬁuã_∑th
–* 
≠p_«me
 ) 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

126 *
	$pmix_∑th_ac˚ss
(*
‚ame
, *
∑th
, 
mode
Ë
__pmix_©åibuã_mÆloc__
 
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

146 
boﬁ
 
	$pmix_∑th_nfs
(*
‚ame
, **
f°y≥
Ë
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

158 
	$pmix_∑th_df
(c⁄° *
∑th
,

159 
uöt64_t
 *
out_avaû
)
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

161 
END_C_DECLS


	@util/pmix_environ.c

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<pmix_comm⁄.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

32 
	~"§c/utû/¥ötf.h
"

33 
	~"§c/utû/¨gv.h
"

34 
	~"§c/utû/pmix_ívú⁄.h
"

36 
	#PMIX_DEFAULT_TMPDIR
 "/tmp"

	)

42 **
	$pmix_ívú⁄_mîge
(**
mö‹
, **
maj‹
)

44 
i
;

45 **
ªt
 = 
NULL
;

46 *
«me
, *
vÆue
;

50 i‡(
NULL
 =
maj‹
) {

51 i‡(
NULL
 =
mö‹
) {

52  
NULL
;

54  
	`pmix_¨gv_c›y
(
mö‹
);

60 
ªt
 = 
	`pmix_¨gv_c›y
(
maj‹
);

64 i‡(
NULL
 =
mö‹
) {

65  
ªt
;

71 
i
 = 0; 
NULL
 !
mö‹
[i]; ++i) {

72 
vÆue
 = 
	`°rchr
(
mö‹
[
i
], '=');

73 i‡(
NULL
 =
vÆue
) {

74 
	`pmix_£ãnv
(
mö‹
[
i
], 
NULL
, 
Ál£
, &
ªt
);

79 
«me
 = 
	`°rdup
(
mö‹
[
i
]);

80 
vÆue
 = 
«me
 + (vÆuê- 
mö‹
[
i
]);

81 *
vÆue
 = '\0';

82 
	`pmix_£ãnv
(
«me
, 
vÆue
 + 1, 
Ál£
, &
ªt
);

83 
	`‰ì
(
«me
);

89  
ªt
;

90 
	}
}

96 
pmix_°©us_t
 
	$pmix_£ãnv
(c⁄° *
«me
, c⁄° *
vÆue
, 
boﬁ
 
ovîwrôe
,

97 ***
ív
)

99 
i
;

100 *
√wvÆue
, *
com∑ª
;

101 
size_t
 
Àn
;

105 i‡(
NULL
 =
vÆue
) {

106 
i
 = 
	`a•rötf
(&
√wvÆue
, "%s=", 
«me
);

108 
i
 = 
	`a•rötf
(&
√wvÆue
, "%s=%s", 
«me
, 
vÆue
);

110 i‡(
NULL
 =
√wvÆue
 || 0 > 
i
) {

111  
PMIX_ERR_OUT_OF_RESOURCE
;

116 if–
NULL
 =
ív
 ) {

117  
PMIX_ERR_BAD_PARAM
;

118 } i‡(
NULL
 =*
ív
) {

119 
i
 = 0;

120 
	`pmix_¨gv_≠≥nd
(&
i
, 
ív
, 
√wvÆue
);

121 
	`‰ì
(
√wvÆue
);

122  
PMIX_SUCCESS
;

126 if–*
ív
 =
ívú⁄
 ) {

132 
	`puãnv
(
√wvÆue
);

133  
PMIX_SUCCESS
;

138 
i
 = 
	`a•rötf
(&
com∑ª
, "%s=", 
«me
);

139 i‡(
NULL
 =
com∑ª
 || 0 > 
i
) {

140 
	`‰ì
(
√wvÆue
);

141  
PMIX_ERR_OUT_OF_RESOURCE
;

143 
Àn
 = 
	`°æí
(
com∑ª
);

147 
i
 = 0; (*
ív
)[i] !
NULL
; ++i) {

148 i‡(0 =
	`°∫cmp
((*
ív
)[
i
], 
com∑ª
, 
Àn
)) {

149 i‡(
ovîwrôe
) {

150 
	`‰ì
((*
ív
)[
i
]);

151 (*
ív
)[
i
] = 
√wvÆue
;

152 
	`‰ì
(
com∑ª
);

153  
PMIX_SUCCESS
;

155 
	`‰ì
(
com∑ª
);

156 
	`‰ì
(
√wvÆue
);

157  
PMIX_EXISTS
;

164 
i
 = 
	`pmix_¨gv_cou¡
(*
ív
);

165 
	`pmix_¨gv_≠≥nd
(&
i
, 
ív
, 
√wvÆue
);

169 
	`‰ì
(
com∑ª
);

170 
	`‰ì
(
√wvÆue
);

171  
PMIX_SUCCESS
;

172 
	}
}

179 
pmix_°©us_t
 
	$pmix_un£ãnv
(c⁄° *
«me
, ***
ív
)

181 
i
;

182 *
com∑ª
;

183 
size_t
 
Àn
;

184 
boﬁ
 
found
;

188 i‡(
NULL
 =*
ív
) {

189  
PMIX_SUCCESS
;

194 
i
 = 
	`a•rötf
(&
com∑ª
, "%s=", 
«me
);

195 i‡(
NULL
 =
com∑ª
 || 0 > 
i
) {

196  
PMIX_ERR_OUT_OF_RESOURCE
;

198 
Àn
 = 
	`°æí
(
com∑ª
);

204 
found
 = 
Ál£
;

205 
i
 = 0; (*
ív
)[i] !
NULL
; ++i) {

206 i‡(0 !
	`°∫cmp
((*
ív
)[
i
], 
com∑ª
, 
Àn
))

208 i‡(
ívú⁄
 !*
ív
) {

209 
	`‰ì
((*
ív
)[
i
]);

211 ; (*
ív
)[
i
] !
NULL
; ++i)

212 (*
ív
)[
i
] = (*env)[i + 1];

213 
found
 = 
åue
;

216 
	`‰ì
(
com∑ª
);

220  (
found
Ë? 
PMIX_SUCCESS
 : 
PMIX_ERR_NOT_FOUND
;

221 
	}
}

223 c⁄° * 
	$pmix_tmp_dúe˘‹y
( )

225 c⁄° * 
°r
;

227 if–
NULL
 =(
°r
 = 
	`gëív
("TMPDIR")) )

228 if–
NULL
 =(
°r
 = 
	`gëív
("TEMP")) )

229 if–
NULL
 =(
°r
 = 
	`gëív
("TMP")) )

230 
°r
 = 
PMIX_DEFAULT_TMPDIR
;

231  
°r
;

232 
	}
}

234 c⁄° * 
	$pmix_home_dúe˘‹y
( )

236 * 
home
 = 
	`gëív
("HOME");

238  
home
;

239 
	}
}

	@util/pmix_environ.h

31 #i‚de‡
PMIX_ENVIRON_H


32 
	#PMIX_ENVIRON_H


	)

34 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

37 #ifde‡
HAVE_CRT_EXTERNS_H


38 
	~<¸t_exã∫s.h
>

41 
	~<pmix_comm⁄.h
>

43 
BEGIN_C_DECLS


68 **
	$pmix_ívú⁄_mîge
(**
mö‹
, **
maj‹
Ë
__pmix_©åibuã_w¨n_unu£d_ªsu…__
;

116 
pmix_°©us_t
 
	$pmix_£ãnv
(c⁄° *
«me
, c⁄° *
vÆue
,

117 
boﬁ
 
ovîwrôe
, ***
ív
Ë
	`__pmix_©åibuã_n⁄nuŒ__
(1);

133 
pmix_°©us_t
 
	$pmix_un£ãnv
(c⁄° *
«me
, ***
ív
Ë
	`__pmix_©åibuã_n⁄nuŒ__
(1);

138 c⁄° * 
	`pmix_home_dúe˘‹y
( );

139 c⁄° * 
	`pmix_tmp_dúe˘‹y
( );

143 #ifde‡
HAVE__NSGETENVIRON


144 
	#ívú⁄
 (*
	`_NSGëEnvú⁄
())

	)

146 **
ívú⁄
;

149 
END_C_DECLS


	@util/printf.c

25 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

28 
	~<î∫o.h
>

29 
	~<°dio.h
>

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

33 
	~"§c/utû/¥ötf.h
"

34 
	~"§c/utû/ouçut.h
"

42 
	$guess_°æí
(c⁄° *
fmt
, 
va_li°
 
≠
)

44 *
ßrg
, 
ˇrg
;

45 
d¨g
;

46 
Árg
;

47 
size_t
 
i
;

48 
ürg
;

49 
Àn
;

50 
œrg
;

55 
Àn
 = ()
	`°æí
(
fmt
) + 128;

56 
i
 = 0; i < 
	`°æí
(
fmt
); ++i) {

57 i‡('%' =
fmt
[
i
] && i + 1 < 
	`°æí
(fmt)

58 && '%' !
fmt
[
i
 + 1]) {

59 ++
i
;

60 
fmt
[
i
]) {

62 
ˇrg
 = 
	`va_¨g
(
≠
, );

63 
Àn
 += 1;

64 ()
ˇrg
;

67 
ßrg
 = 
	`va_¨g
(
≠
, *);

72 i‡(
NULL
 !
ßrg
) {

73 
Àn
 +()
	`°æí
(
ßrg
);

75 #i‡
PMIX_ENABLE_DEBUG


76 
	`pmix_ouçut
(0, "PMIX DEBUG WARNING: Gotá NULLárgumentÅoÖmix_vasprintf!\n");

78 
Àn
 += 5;

84 
ürg
 = 
	`va_¨g
(
≠
, );

86 i‡(
ürg
 < 0)

87 ++
Àn
;

90 ++
Àn
;

91 
ürg
 /= 10;

92 } 0 !
ürg
);

97 
ürg
 = 
	`va_¨g
(
≠
, );

100 ++
Àn
;

101 
ürg
 /= 16;

102 } 0 !
ürg
);

106 
Árg
 = ()
	`va_¨g
(
≠
, );

108 i‡(
Árg
 < 0) {

109 ++
Àn
;

110 
Árg
 = -farg;

113 
Àn
 += 4;

116 ++
Àn
;

117 
Árg
 /= 10.0;

118 } 0 !
Árg
);

122 
d¨g
 = 
	`va_¨g
(
≠
, );

124 i‡(
d¨g
 < 0) {

125 ++
Àn
;

126 
d¨g
 = -darg;

129 
Àn
 += 4;

132 ++
Àn
;

133 
d¨g
 /= 10.0;

134 } 0 !
d¨g
);

139 i‡(
i
 + 1 < 
	`°æí
(
fmt
)) {

140 ++
i
;

141 
fmt
[
i
]) {

144 
œrg
 = 
	`va_¨g
(
≠
, );

147 ++
Àn
;

148 
œrg
 /= 16;

149 } 0 !
œrg
);

153 
d¨g
 = 
	`va_¨g
(
≠
, );

155 i‡(
d¨g
 < 0) {

156 ++
Àn
;

157 
d¨g
 = -darg;

160 
Àn
 += 4;

163 ++
Àn
;

164 
d¨g
 /= 10.0;

165 } 0 !
d¨g
);

170 
œrg
 = 
	`va_¨g
(
≠
, );

173 ++
Àn
;

174 
œrg
 /= 10;

175 } 0 !
œrg
);

186  
Àn
;

187 
	}
}

190 
	$pmix_a•rötf
(**
±r
, c⁄° *
fmt
, ...)

192 
Àngth
;

193 
va_li°
 
≠
;

195 
	`va_°¨t
(
≠
, 
fmt
);

196 
Àngth
 = 
	`pmix_va•rötf
(
±r
, 
fmt
, 
≠
);

197 
	`va_íd
(
≠
);

199  
Àngth
;

200 
	}
}

203 
	$pmix_va•rötf
(**
±r
, c⁄° *
fmt
, 
va_li°
 
≠
)

205 
Àngth
;

206 
va_li°
 
≠2
;

211 #i‡
PMIX_HAVE_VA_COPY


212 
	`va_c›y
(
≠2
, 
≠
);

213 #ñi‡
PMIX_HAVE_UNDERSCORE_VA_COPY


214 
	`__va_c›y
(
≠2
, 
≠
);

216 
	`mem˝y
 (&
≠2
, &
≠
, (
va_li°
));

220 
Àngth
 = 
	`guess_°æí
(
fmt
, 
≠
);

223 *
±r
 = (*Ë
	`mÆloc
((
size_t
Ë
Àngth
 + 1);

224 i‡(
NULL
 =*
±r
) {

225 
î∫o
 = 
ENOMEM
;

226 
	`va_íd
(
≠2
);

231 
Àngth
 = 
	`v•rötf
(*
±r
, 
fmt
, 
≠2
);

232 #i‡
PMIX_HAVE_VA_COPY
 || 
PMIX_HAVE_UNDERSCORE_VA_COPY


233 
	`va_íd
(
≠2
);

237 *
±r
 = (*Ë
	`ªÆloc
(*±r, (
size_t
Ë
Àngth
 + 1);

238 i‡(
NULL
 =*
±r
) {

239 
î∫o
 = 
ENOMEM
;

243  
Àngth
;

244 
	}
}

247 
	$pmix_¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
fmt
, ...)

249 
Àngth
;

250 
va_li°
 
≠
;

252 
	`va_°¨t
(
≠
, 
fmt
);

253 
Àngth
 = 
	`pmix_v¢¥ötf
(
°r
, 
size
, 
fmt
, 
≠
);

254 
	`va_íd
(
≠
);

256  
Àngth
;

257 
	}
}

260 
	$pmix_v¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
≠
)

262 
Àngth
;

263 *
buf
;

265 
Àngth
 = 
	`pmix_va•rötf
(&
buf
, 
fmt
, 
≠
);

266 i‡(
Àngth
 < 0) {

267  
Àngth
;

271 i‡(
°r
) {

272 i‡((
size_t
Ë
Àngth
 < 
size
) {

273 
	`°r˝y
(
°r
, 
buf
);

275 
	`mem˝y
(
°r
, 
buf
, 
size
 - 1);

276 
°r
[
size
] = '\0';

281 
	`‰ì
(
buf
);

283  
Àngth
;

284 
	}
}

287 #ifde‡
TEST


289 
	$maö
(
¨gc
, *
¨gv
[])

291 
a
[10];

292 
b
[173];

293 *
s
;

294 
Àngth
;

296 
	`puts
("test for NULL buffer in snprintf:");

297 
Àngth
 = 
	`pmix_¢¥ötf
(
NULL
, 0, "this isá string %d", 1004);

298 
	`¥ötf
("Àngth = %d\n", 
Àngth
);

300 
	`puts
("test of snprintfÅoán undersize buffer:");

301 
Àngth
 = 
	`pmix_¢¥ötf
(
a
, (a), "this isá string %d", 1004);

302 
	`¥ötf
("°rög = %s\n", 
a
);

303 
	`¥ötf
("Àngth = %d\n", 
Àngth
);

304 
	`¥ötf
("°æí = %d\n", (Ë
	`°æí
(
a
));

306 
	`puts
("test of snprintfÅoán oversize buffer:");

307 
Àngth
 = 
	`pmix_¢¥ötf
(
b
, (b), "this isá string %d", 1004);

308 
	`¥ötf
("°rög = %s\n", 
b
);

309 
	`¥ötf
("Àngth = %d\n", 
Àngth
);

310 
	`¥ötf
("°æí = %d\n", (Ë
	`°æí
(
b
));

312 
	`puts
("test ofásprintf:");

313 
Àngth
 = 
	`pmix_a•rötf
(&
s
, "this isá string %d", 1004);

314 
	`¥ötf
("°rög = %s\n", 
s
);

315 
	`¥ötf
("Àngth = %d\n", 
Àngth
);

316 
	`¥ötf
("°æí = %d\n", (Ë
	`°æí
(
s
));

318 
	`‰ì
(
s
);

321 
	}
}

	@util/printf.h

25 #i‚de‡
PMIX_PRINTF_H


26 
	#PMIX_PRINTF_H


	)

28 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

31 
	~<°d¨g.h
>

32 
	~<°dlib.h
>

34 
BEGIN_C_DECLS


56 
	$pmix_¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
fmt
, ...Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 3, 4);

81 
	$pmix_v¢¥ötf
(*
°r
, 
size_t
 
size
, c⁄° *
fmt
, 
va_li°
 
≠
Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 3, 0);

102 
	$pmix_a•rötf
(**
±r
, c⁄° *
fmt
, ...Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 2, 3);

126 
	$pmix_va•rötf
(**
±r
, c⁄° *
fmt
, 
va_li°
 
≠
Ë
	`__pmix_©åibuã_f‹m©__
(
__¥ötf__
, 2, 0);

129 
END_C_DECLS


	@util/show_help.c

23 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

25 
	~<°dio.h
>

26 
	~<°rög.h
>

27 
	~<loˇÀ.h
>

28 
	~<î∫o.h
>

30 
	~"§c/mˇ/pö°Ældús/pö°Ældús.h
"

31 
	~"§c/utû/show_hñp.h
"

32 
	~"§c/utû/show_hñp_Àx.h
"

33 
	~"§c/utû/¥ötf.h
"

34 
	~"§c/utû/¨gv.h
"

35 
	~"§c/utû/os_∑th.h
"

36 
	~"§c/utû/ouçut.h
"

37 
	~"pmix_comm⁄.h
"

43 c⁄° *
	gdeÁu…_fûíame
 = "help-messages";

44 c⁄° *
	gdash_löe
 = "--------------------------------------------------------------------------\n";

45 
	gouçut_°ªam
 = -1;

46 **
	g£¨ch_dús
 = 
NULL
;

51 
pmix_show_vhñp_öã∫Æ
(c⁄° *
fûíame
, c⁄° *
t›ic
,

52 
boﬁ
 
w™t_îr‹_hódî
, 
va_li°
 
¨gli°
);

53 
pmix_show_hñp_öã∫Æ
(c⁄° *
fûíame
, c⁄° *
t›ic
,

54 
boﬁ
 
w™t_îr‹_hódî
, ...);

56 
pmix_show_hñp_‚_t
 
	gpmix_show_hñp
 = 
pmix_show_hñp_öã∫Æ
;

57 
pmix_show_vhñp_‚_t
 
	gpmix_show_vhñp
 = 
pmix_show_vhñp_öã∫Æ
;

60 
	$pmix_show_hñp_öô
()

62 
pmix_ouçut_°ªam_t
 
lds
;

64 
	`PMIX_CONSTRUCT
(&
lds
, 
pmix_ouçut_°ªam_t
);

65 
lds
.
lds_w™t_°dîr
 = 
åue
;

66 
ouçut_°ªam
 = 
	`pmix_ouçut_›í
(&
lds
);

68 
	`pmix_¨gv_≠≥nd_nosize
(&
£¨ch_dús
, 
pmix_pö°Æl_dús
.
pmixd©adú
);

70  
PMIX_SUCCESS
;

71 
	}
}

73 
	$pmix_show_hñp_föÆize
()

75 
	`pmix_ouçut_˛o£
(
ouçut_°ªam
);

76 
ouçut_°ªam
 = -1;

79 i‡(
NULL
 !
£¨ch_dús
) {

80 
	`pmix_¨gv_‰ì
(
£¨ch_dús
);

81 
£¨ch_dús
 = 
NULL
;

84  
PMIX_SUCCESS
;

85 
	}
}

92 
	$¨øy2°rög
(**
out°rög
,

93 
boﬁ
 
w™t_îr‹_hódî
, **
löes
)

95 
i
, 
cou¡
;

96 
size_t
 
Àn
;

100 
Àn
 = 
w™t_îr‹_hódî
 ? 2 * 
	`°æí
(
dash_löe
) : 0;

101 
cou¡
 = 
	`pmix_¨gv_cou¡
(
löes
);

102 
i
 = 0; i < 
cou¡
; ++i) {

103 i‡(
NULL
 =
löes
[
i
]) {

106 
Àn
 +
	`°æí
(
löes
[
i
]) + 1;

111 (*
out°rög
Ë(*Ë
	`mÆloc
(
Àn
 + 1);

112 i‡(
NULL
 =*
out°rög
) {

113  
PMIX_ERR_OUT_OF_RESOURCE
;

118 *(*
out°rög
) = '\0';

119 i‡(
w™t_îr‹_hódî
) {

120 
	`°rˇt
(*
out°rög
, 
dash_löe
);

122 
i
 = 0; i < 
cou¡
; ++i) {

123 i‡(
NULL
 =
löes
[
i
]) {

126 
	`°rˇt
(*
out°rög
, 
löes
[
i
]);

127 
	`°rˇt
(*
out°rög
, "\n");

129 i‡(
w™t_îr‹_hódî
) {

130 
	`°rˇt
(*
out°rög
, 
dash_löe
);

133  
PMIX_SUCCESS
;

134 
	}
}

140 
	$›í_fûe
(c⁄° *
ba£
, c⁄° *
t›ic
)

142 *
fûíame
;

143 *
îr_msg
 = 
NULL
;

144 
size_t
 
ba£_Àn
;

145 
i
;

149 i‡(
NULL
 =
ba£
) {

150 
ba£
 = 
deÁu…_fûíame
;

156 i‡(
NULL
 !
£¨ch_dús
) {

160 
i
=0; 
NULL
 !
£¨ch_dús
[i]; i++) {

161 
fûíame
 = 
	`pmix_os_∑th
–
Ál£
, 
£¨ch_dús
[
i
], 
ba£
, 
NULL
 );

162 
pmix_show_hñp_yyö
 = 
	`f›í
(
fûíame
, "r");

163 i‡(
NULL
 =
pmix_show_hñp_yyö
) {

164 
	`a•rötf
(&
îr_msg
, "%s: %s", 
fûíame
, 
	`°ªº‹
(
î∫o
));

165 
ba£_Àn
 = 
	`°æí
(
ba£
);

166 i‡(4 > 
ba£_Àn
 || 0 !
	`°rcmp
(
ba£
 + base_len - 4, ".txt")) {

167 
	`‰ì
(
fûíame
);

168 
	`a•rötf
(&
fûíame
, "%s%s%s.txt", 
£¨ch_dús
[
i
], 
PMIX_PATH_SEP
, 
ba£
);

169 
pmix_show_hñp_yyö
 = 
	`f›í
(
fûíame
, "r");

172 
	`‰ì
(
fûíame
);

173 i‡(
NULL
 !
pmix_show_hñp_yyö
) {

180 i‡(
NULL
 =
pmix_show_hñp_yyö
) {

181 
	`pmix_ouçut
(
ouçut_°ªam
, "%sS‹ry! You wîêsuµo£dÅÿgë hñ∞about:\¿ %s\nBuàI couldn'à›íÅhêhñ∞fûe:\¿ %s. S‹ry!\n%s", 
dash_löe
, 
t›ic
, 
îr_msg
, dash_line);

182 
	`‰ì
(
îr_msg
);

183  
PMIX_ERR_NOT_FOUND
;

186 i‡(
NULL
 !
îr_msg
) {

187 
	`‰ì
(
îr_msg
);

192 
	`pmix_show_hñp_öô_buf„r
(
pmix_show_hñp_yyö
);

196  
PMIX_SUCCESS
;

197 
	}
}

204 
	$föd_t›ic
(c⁄° *
ba£
, c⁄° *
t›ic
)

206 
tokí
, 
ªt
;

207 *
tmp
;

212 
tokí
 = 
	`pmix_show_hñp_yyÀx
();

213 
tokí
) {

214 
PMIX_SHOW_HELP_PARSE_TOPIC
:

215 
tmp
 = 
	`°rdup
(
pmix_show_hñp_yyãxt
);

216 i‡(
NULL
 =
tmp
) {

217  
PMIX_ERR_OUT_OF_RESOURCE
;

219 
tmp
[
	`°æí
(tmp) - 1] = '\0';

220 
ªt
 = 
	`°rcmp
(
tmp
 + 1, 
t›ic
);

221 
	`‰ì
(
tmp
);

222 i‡(0 =
ªt
) {

223  
PMIX_SUCCESS
;

227 
PMIX_SHOW_HELP_PARSE_MESSAGE
:

230 
PMIX_SHOW_HELP_PARSE_DONE
:

231 
	`pmix_ouçut
(
ouçut_°ªam
, "%sS‹ry! You wîêsuµo£dÅÿgë hñ∞about:\¿ %s\n‰omÅhêfûe:\¿ %s\nBuàI couldn'àfödÅh©Å›i¯öÅhêfûe. S‹ry!\n%s", 
dash_löe
, 
t›ic
, 
ba£
, dash_line);

232  
PMIX_ERR_NOT_FOUND
;

241 
	}
}

248 
	$ªad_t›ic
(***
¨øy
)

250 
tokí
, 
rc
;

253 
tokí
 = 
	`pmix_show_hñp_yyÀx
();

254 
tokí
) {

255 
PMIX_SHOW_HELP_PARSE_MESSAGE
:

257 
rc
 = 
	`pmix_¨gv_≠≥nd_nosize
(
¨øy
, 
pmix_show_hñp_yyãxt
);

258 i‡(
rc
 !
PMIX_SUCCESS
) {

259  
rc
;

264  
PMIX_SUCCESS
;

270 
	}
}

273 
	$lﬂd_¨øy
(***
¨øy
, c⁄° *
fûíame
, c⁄° *
t›ic
)

275 
ªt
;

277 i‡(
PMIX_SUCCESS
 !(
ªt
 = 
	`›í_fûe
(
fûíame
, 
t›ic
))) {

278  
ªt
;

281 
ªt
 = 
	`föd_t›ic
(
fûíame
, 
t›ic
);

282 i‡(
PMIX_SUCCESS
 =
ªt
) {

283 
ªt
 = 
	`ªad_t›ic
(
¨øy
);

286 
	`f˛o£
(
pmix_show_hñp_yyö
);

287 
	`pmix_show_hñp_yyÀx_de°roy
 ();

289 i‡(
PMIX_SUCCESS
 !
ªt
) {

290 
	`pmix_¨gv_‰ì
(*
¨øy
);

293  
ªt
;

294 
	}
}

296 *
	$pmix_show_hñp_v°rög
(c⁄° *
fûíame
, c⁄° *
t›ic
,

297 
boﬁ
 
w™t_îr‹_hódî
, 
va_li°
 
¨gli°
)

299 
rc
;

300 *
sögÀ_°rög
, *
ouçut
, **
¨øy
 = 
NULL
;

303 i‡(
PMIX_SUCCESS
 !(
rc
 = 
	`lﬂd_¨øy
(&
¨øy
, 
fûíame
, 
t›ic
))) {

304  
NULL
;

308 
rc
 = 
	`¨øy2°rög
(&
sögÀ_°rög
, 
w™t_îr‹_hódî
, 
¨øy
);

310 i‡(
PMIX_SUCCESS
 =
rc
) {

312 
	`va•rötf
(&
ouçut
, 
sögÀ_°rög
, 
¨gli°
);

313 
	`‰ì
(
sögÀ_°rög
);

316 
	`pmix_¨gv_‰ì
(
¨øy
);

317  (
PMIX_SUCCESS
 =
rc
Ë? 
ouçut
 : 
NULL
;

318 
	}
}

320 *
	$pmix_show_hñp_°rög
(c⁄° *
fûíame
, c⁄° *
t›ic
,

321 
boﬁ
 
w™t_îr‹_h™dÀr
, ...)

323 *
ouçut
;

324 
va_li°
 
¨gli°
;

326 
	`va_°¨t
(
¨gli°
, 
w™t_îr‹_h™dÀr
);

327 
ouçut
 = 
	`pmix_show_hñp_v°rög
(
fûíame
, 
t›ic
, 
w™t_îr‹_h™dÀr
,

328 
¨gli°
);

329 
	`va_íd
(
¨gli°
);

331  
ouçut
;

332 
	}
}

334 
	$pmix_show_vhñp_öã∫Æ
(c⁄° *
fûíame
, c⁄° *
t›ic
,

335 
boﬁ
 
w™t_îr‹_hódî
, 
va_li°
 
¨gli°
)

337 *
ouçut
;

340 
ouçut
 = 
	`pmix_show_hñp_v°rög
(
fûíame
, 
t›ic
, 
w™t_îr‹_hódî
,

341 
¨gli°
);

344 i‡(
NULL
 !
ouçut
) {

345 
	`pmix_ouçut
(
ouçut_°ªam
, "%s", 
ouçut
);

346 
	`‰ì
(
ouçut
);

349  (
NULL
 =
ouçut
Ë? 
PMIX_ERROR
 : 
PMIX_SUCCESS
;

350 
	}
}

352 
	$pmix_show_hñp_öã∫Æ
(c⁄° *
fûíame
, c⁄° *
t›ic
,

353 
boﬁ
 
w™t_îr‹_hódî
, ...)

355 
va_li°
 
¨gli°
;

356 
rc
;

359 
	`va_°¨t
(
¨gli°
, 
w™t_îr‹_hódî
);

360 
rc
 = 
	`pmix_show_vhñp
(
fûíame
, 
t›ic
, 
w™t_îr‹_hódî
, 
¨gli°
);

361 
	`va_íd
(
¨gli°
);

363  
rc
;

364 
	}
}

366 
	$pmix_show_hñp_add_dú
(c⁄° *
dúe˘‹y
)

368 
	`pmix_¨gv_≠≥nd_nosize
(&
£¨ch_dús
, 
dúe˘‹y
);

369  
PMIX_SUCCESS
;

370 
	}
}

	@util/show_help.h

90 #i‚de‡
PMIX_SHOW_HELP_H


91 
	#PMIX_SHOW_HELP_H


	)

93 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

95 
	~<°d¨g.h
>

97 
BEGIN_C_DECLS


104 
pmix_show_hñp_öô
();

112 
pmix_show_hñp_föÆize
();

132 (*
	tpmix_show_hñp_‚_t
)(c⁄° *
	tfûíame
, c⁄° *
	tt›ic
,

133 
	tboﬁ
 
	tw™t_îr‹_hódî
, ...);

134 
pmix_show_hñp_‚_t
 
pmix_show_hñp
;

140 (*
	tpmix_show_vhñp_‚_t
)(c⁄° *
	tfûíame
, c⁄° *
	tt›ic
,

141 
	tboﬁ
 
	tw™t_îr‹_hódî
, 
	tva_li°
 
	t≠
);

142 
pmix_show_vhñp_‚_t
 
pmix_show_vhñp
;

148 * 
	`pmix_show_hñp_°rög
(c⁄° *
fûíame
,

149 c⁄° *
t›ic
,

150 
boﬁ
 
w™t_îr‹_hódî
, ...);

156 * 
	`pmix_show_hñp_v°rög
(c⁄° *
fûíame
,

157 c⁄° *
t›ic
,

158 
boﬁ
 
w™t_îr‹_hódî
, 
va_li°
 
≠
);

173 
	`pmix_show_hñp_add_dú
(c⁄° *
dúe˘‹y
);

175 
END_C_DECLS


	@util/show_help_lex.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#yy_¸óã_buf„r
 
pmix_show_hñp_yy_¸óã_buf„r


	)

9 
	#yy_dñëe_buf„r
 
pmix_show_hñp_yy_dñëe_buf„r


	)

10 
	#yy_Êex_debug
 
pmix_show_hñp_yy_Êex_debug


	)

11 
	#yy_öô_buf„r
 
pmix_show_hñp_yy_öô_buf„r


	)

12 
	#yy_Êush_buf„r
 
pmix_show_hñp_yy_Êush_buf„r


	)

13 
	#yy_lﬂd_buf„r_°©e
 
pmix_show_hñp_yy_lﬂd_buf„r_°©e


	)

14 
	#yy_swôch_to_buf„r
 
pmix_show_hñp_yy_swôch_to_buf„r


	)

15 
	#yyö
 
pmix_show_hñp_yyö


	)

16 
	#yyÀng
 
pmix_show_hñp_yyÀng


	)

17 
	#yyÀx
 
pmix_show_hñp_yyÀx


	)

18 
	#yylöío
 
pmix_show_hñp_yylöío


	)

19 
	#yyout
 
pmix_show_hñp_yyout


	)

20 
	#yyª°¨t
 
pmix_show_hñp_yyª°¨t


	)

21 
	#yyãxt
 
pmix_show_hñp_yyãxt


	)

22 
	#yywøp
 
pmix_show_hñp_yywøp


	)

23 
	#yyÆloc
 
pmix_show_hñp_yyÆloc


	)

24 
	#yyªÆloc
 
pmix_show_hñp_yyªÆloc


	)

25 
	#yy‰ì
 
pmix_show_hñp_yy‰ì


	)

27 
	#FLEX_SCANNER


	)

28 
	#YY_FLEX_MAJOR_VERSION
 2

	)

29 
	#YY_FLEX_MINOR_VERSION
 5

	)

30 
	#YY_FLEX_SUBMINOR_VERSION
 37

	)

31 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

32 
	#FLEX_BETA


	)

38 
	~<°dio.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<°dlib.h
>

47 #i‚de‡
FLEXINT_H


48 
	#FLEXINT_H


	)

52 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

57 #i‚de‡
__STDC_LIMIT_MACROS


58 
	#__STDC_LIMIT_MACROS
 1

	)

61 
	~<öây≥s.h
>

62 
öt8_t
 
	tÊex_öt8_t
;

63 
uöt8_t
 
	tÊex_uöt8_t
;

64 
öt16_t
 
	tÊex_öt16_t
;

65 
uöt16_t
 
	tÊex_uöt16_t
;

66 
öt32_t
 
	tÊex_öt32_t
;

67 
uöt32_t
 
	tÊex_uöt32_t
;

69 sig√d 
	tÊex_öt8_t
;

70 
	tÊex_öt16_t
;

71 
	tÊex_öt32_t
;

72 
	tÊex_uöt8_t
;

73 
	tÊex_uöt16_t
;

74 
	tÊex_uöt32_t
;

77 #i‚de‡
INT8_MIN


78 
	#INT8_MIN
 (-128)

	)

80 #i‚de‡
INT16_MIN


81 
	#INT16_MIN
 (-32767-1)

	)

83 #i‚de‡
INT32_MIN


84 
	#INT32_MIN
 (-2147483647-1)

	)

86 #i‚de‡
INT8_MAX


87 
	#INT8_MAX
 (127)

	)

89 #i‚de‡
INT16_MAX


90 
	#INT16_MAX
 (32767)

	)

92 #i‚de‡
INT32_MAX


93 
	#INT32_MAX
 (2147483647)

	)

95 #i‚de‡
UINT8_MAX


96 
	#UINT8_MAX
 (255U)

	)

98 #i‚de‡
UINT16_MAX


99 
	#UINT16_MAX
 (65535U)

	)

101 #i‚de‡
UINT32_MAX


102 
	#UINT32_MAX
 (4294967295U)

	)

109 #ifde‡
__˝lu•lus


112 
	#YY_USE_CONST


	)

117 #i‡
deföed
 (
__STDC__
)

119 
	#YY_USE_CONST


	)

124 #ifde‡
YY_USE_CONST


125 
	#yyc⁄°
 c⁄°

	)

127 
	#yyc⁄°


	)

131 
	#YY_NULL
 0

	)

138 
	#YY_SC_TO_UI
(
c
Ë((Ë(Ëc)

	)

144 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

150 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

151 
	#YYSTATE
 
YY_START


	)

154 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

157 
	#YY_NEW_FILE
 
	`pmix_show_hñp_yyª°¨t
(
pmix_show_hñp_yyö
 )

	)

159 
	#YY_END_OF_BUFFER_CHAR
 0

	)

162 #i‚de‡
YY_BUF_SIZE


163 
	#YY_BUF_SIZE
 16384

	)

168 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

170 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


171 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

172 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

175 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


176 
	#YY_TYPEDEF_YY_SIZE_T


	)

177 
size_t
 
	tyy_size_t
;

180 
yy_size_t
 
pmix_show_hñp_yyÀng
;

182 
FILE
 *
pmix_show_hñp_yyö
, *
pmix_show_hñp_yyout
;

184 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

185 
	#EOB_ACT_END_OF_FILE
 1

	)

186 
	#EOB_ACT_LAST_MATCH
 2

	)

188 
	#YY_LESS_LINENO
(
n
)

	)

191 
	#yyÀss
(
n
) \

195 
yyÀss_ma¸o_¨g
 = (
n
); \

196 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

197 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

198 
YY_RESTORE_YY_MORE_OFFSET
 \

199 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

200 
YY_DO_BEFORE_ACTION
; \

202  0 )

	)

204 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

206 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


207 
	#YY_STRUCT_YY_BUFFER_STATE


	)

208 
	syy_buf„r_°©e


210 
FILE
 *
	myy_öput_fûe
;

212 *
	myy_ch_buf
;

213 *
	myy_buf_pos
;

218 
yy_size_t
 
	myy_buf_size
;

223 
yy_size_t
 
	myy_n_ch¨s
;

229 
	myy_is_our_buf„r
;

236 
	myy_is_öãø˘ive
;

242 
	myy_©_bﬁ
;

244 
	myy_bs_löío
;

245 
	myy_bs_cﬁumn
;

250 
	myy_fûl_buf„r
;

252 
	myy_buf„r_°©us
;

254 
	#YY_BUFFER_NEW
 0

	)

255 
	#YY_BUFFER_NORMAL
 1

	)

266 
	#YY_BUFFER_EOF_PENDING
 2

	)

272 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

273 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

274 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 0;

282 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

283 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

284 : 
NULL
)

	)

289 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

292 
	gyy_hﬁd_ch¨
;

293 
yy_size_t
 
	gyy_n_ch¨s
;

294 
yy_size_t
 
	gpmix_show_hñp_yyÀng
;

297 *
	gyy_c_buf_p
 = (*) 0;

298 
	gyy_öô
 = 0;

299 
	gyy_°¨t
 = 0;

304 
	gyy_did_buf„r_swôch_⁄_eof
;

306 
pmix_show_hñp_yyª°¨t
 (
FILE
 *
öput_fûe
 );

307 
pmix_show_hñp_yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

308 
YY_BUFFER_STATE
 
pmix_show_hñp_yy_¸óã_buf„r
 (
FILE
 *
fûe
,
size
 );

309 
pmix_show_hñp_yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 );

310 
pmix_show_hñp_yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 );

311 
pmix_show_hñp_yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 );

312 
pmix_show_hñp_yyp›_buf„r_°©e
 ();

314 
pmix_show_hñp_yyísuª_buf„r_°ack
 ();

315 
pmix_show_hñp_yy_lﬂd_buf„r_°©e
 ();

316 
pmix_show_hñp_yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
,
FILE
 *
fûe
 );

318 
	#YY_FLUSH_BUFFER
 
	`pmix_show_hñp_yy_Êush_buf„r
(
YY_CURRENT_BUFFER
 )

	)

320 
YY_BUFFER_STATE
 
pmix_show_hñp_yy_sˇn_buf„r
 (*
ba£
,
yy_size_t
 
size
 );

321 
YY_BUFFER_STATE
 
pmix_show_hñp_yy_sˇn_°rög
 (
yyc⁄°
 *
yy_°r
 );

322 
YY_BUFFER_STATE
 
pmix_show_hñp_yy_sˇn_byãs
 (
yyc⁄°
 *
byãs
,
yy_size_t
 
Àn
 );

324 *
pmix_show_hñp_yyÆloc
 (
yy_size_t
 );

325 *
pmix_show_hñp_yyªÆloc
 (*,
yy_size_t
 );

326 
pmix_show_hñp_yy‰ì
 (* );

328 
	#yy_√w_buf„r
 
pmix_show_hñp_yy_¸óã_buf„r


	)

330 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

332 i‡–! 
YY_CURRENT_BUFFER
 ){ \

333 
	`pmix_show_hñp_yyísuª_buf„r_°ack
 (); \

334 
YY_CURRENT_BUFFER_LVALUE
 = \

335 
	`pmix_show_hñp_yy_¸óã_buf„r
(
pmix_show_hñp_yyö
,
YY_BUF_SIZE
 ); \

337 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

338 }

	)

340 
	#yy_£t_bﬁ
(
©_bﬁ
) \

342 i‡–! 
YY_CURRENT_BUFFER
 ){\

343 
	`pmix_show_hñp_yyísuª_buf„r_°ack
 (); \

344 
YY_CURRENT_BUFFER_LVALUE
 = \

345 
	`pmix_show_hñp_yy_¸óã_buf„r
(
pmix_show_hñp_yyö
,
YY_BUF_SIZE
 ); \

347 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

348 }

	)

350 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

354 
	tYY_CHAR
;

356 
FILE
 *
	gpmix_show_hñp_yyö
 = (FILE *Ë0, *
	gpmix_show_hñp_yyout
 = (FILE *) 0;

358 
	tyy_°©e_ty≥
;

360 
pmix_show_hñp_yylöío
;

362 
	gpmix_show_hñp_yylöío
 = 1;

364 *
pmix_show_hñp_yyãxt
;

365 
	#yyãxt_±r
 
pmix_show_hñp_yyãxt


	)

367 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ();

368 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 (yy_°©e_ty≥ 
cuºít_°©e
 );

369 
yy_gë_√xt_buf„r
 ();

370 
yy_Áèl_îr‹
 (
yyc⁄°
 
msg
[] );

375 
	#YY_DO_BEFORE_ACTION
 \

376 (
yyãxt_±r
Ë
yy_bp
; \

377 
pmix_show_hñp_yyÀng
 = (
size_t
Ë(
yy_˝
 - 
yy_bp
); \

378 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

379 *
yy_˝
 = '\0'; \

380 (
yy_c_buf_p
Ë
yy_˝
;

	)

382 
	#YY_NUM_RULES
 5

	)

383 
	#YY_END_OF_BUFFER
 6

	)

386 
	syy_å™s_öfo


388 
Êex_öt32_t
 
	myy_vîify
;

389 
Êex_öt32_t
 
	myy_nxt
;

391 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˛i°
[17] =

397 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ac˚±
[24] =

404 
yyc⁄°
 
Êex_öt32_t
 
	gyy_ec
[256] =

436 
yyc⁄°
 
Êex_öt32_t
 
	gyy_mëa
[6] =

441 
yyc⁄°
 
Êex_öt16_t
 
	gyy_ba£
[30] =

448 
yyc⁄°
 
Êex_öt16_t
 
	gyy_def
[30] =

455 
yyc⁄°
 
Êex_öt16_t
 
	gyy_nxt
[37] =

463 
yyc⁄°
 
Êex_öt16_t
 
	gyy_chk
[37] =

471 
pmix_show_hñp_yy_Êex_debug
;

472 
	gpmix_show_hñp_yy_Êex_debug
 = 0;

474 
yy_°©e_ty≥
 *
	gyy_°©e_buf
=0, *
	gyy_°©e_±r
=0;

475 *
	gyy_fuŒ_m©ch
;

476 
	gyy_Õ
;

477 
	gyy_lookög_f‹_åaû_begö
 = 0;

478 
	gyy_fuŒ_Õ
;

479 *
	gyy_fuŒ_°©e
;

480 
	#YY_TRAILING_MASK
 0x2000

	)

481 
	#YY_TRAILING_HEAD_MASK
 0x4000

	)

482 
	#REJECT
 \

484 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

485 
yy_˝
 = (
yy_fuŒ_m©ch
); \

486 (
yy_Õ
Ë(
yy_fuŒ_Õ
); \

487 (
yy_°©e_±r
Ë(
yy_fuŒ_°©e
); \

488 
yy_cuºít_°©e
 = *(
yy_°©e_±r
); \

489 ++(
yy_Õ
); \

490 
föd_ruÀ
; \

491 }

	)

493 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

494 
	#YY_MORE_ADJ
 0

	)

495 
	#YY_RESTORE_YY_MORE_OFFSET


	)

496 *
	gpmix_show_hñp_yyãxt
;

498 
	#YY_NO_INPUT
 1

	)

519 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

521 
	~<°dio.h
>

522 #ifde‡
HAVE_UNISTD_H


523 
	~<uni°d.h
>

526 
	~"§c/utû/show_hñp_Àx.h
"

528 
BEGIN_C_DECLS


533 
pmix_show_hñp_föish_∑rsög
();

538 
pmix_show_hñp_yywøp
();

540 
END_C_DECLS


545 
	gpmix_show_hñp_yy√wlöes
 = 1;

546 
boﬁ
 
	gpmix_show_hñp_∑r£_d⁄e
 = 
Ál£
;

551 
	#INITIAL
 0

	)

552 
	#CHOMP
 1

	)

554 #i‚de‡
YY_NO_UNISTD_H


559 
	~<uni°d.h
>

562 #i‚de‡
YY_EXTRA_TYPE


563 
	#YY_EXTRA_TYPE
 *

	)

566 
yy_öô_globÆs
 ();

571 
pmix_show_hñp_yyÀx_de°roy
 ();

573 
pmix_show_hñp_yygë_debug
 ();

575 
pmix_show_hñp_yy£t_debug
 (
debug_Êag
 );

577 
YY_EXTRA_TYPE
 
pmix_show_hñp_yygë_exåa
 ();

579 
pmix_show_hñp_yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 );

581 
FILE
 *
pmix_show_hñp_yygë_ö
 ();

583 
pmix_show_hñp_yy£t_ö
 (
FILE
 * 
ö_°r
 );

585 
FILE
 *
pmix_show_hñp_yygë_out
 ();

587 
pmix_show_hñp_yy£t_out
 (
FILE
 * 
out_°r
 );

589 
yy_size_t
 
pmix_show_hñp_yygë_Àng
 ();

591 *
pmix_show_hñp_yygë_ãxt
 ();

593 
pmix_show_hñp_yygë_löío
 ();

595 
pmix_show_hñp_yy£t_löío
 (
löe_numbî
 );

601 #i‚de‡
YY_SKIP_YYWRAP


602 #ifde‡
__˝lu•lus


603 "C" 
pmix_show_hñp_yywøp
 ();

605 
pmix_show_hñp_yywøp
 ();

609 #i‚de‡
yyãxt_±r


610 
yy_Êex_°∫˝y
 (*,
yyc⁄°
 *,);

613 #ifde‡
YY_NEED_STRLEN


614 
yy_Êex_°æí
 (
yyc⁄°
 * );

617 #i‚de‡
YY_NO_INPUT


619 #ifde‡
__˝lu•lus


620 
yyöput
 ();

622 
öput
 ();

628 #i‚de‡
YY_READ_BUF_SIZE


629 
	#YY_READ_BUF_SIZE
 8192

	)

633 #i‚de‡
ECHO


637 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
pmix_show_hñp_yyãxt
, 
pmix_show_hñp_yyÀng
, 1, 
pmix_show_hñp_yyout
 )Ë{} } 0)

	)

643 #i‚de‡
YY_INPUT


644 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

645 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

647 
c
 = '*'; \

648 
size_t
 
n
; \

649  
n
 = 0;Ç < 
max_size
 && \

650 (
c
 = 
	`gëc
–
pmix_show_hñp_yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

651 
buf
[
n
] = (Ë
c
; \

652 i‡–
c
 == '\n' ) \

653 
buf
[
n
++] = (Ë
c
; \

654 i‡–
c
 =
EOF
 && 
	`„º‹
–
pmix_show_hñp_yyö
 ) ) \

655 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

656 
ªsu…
 = 
n
; \

660 
î∫o
=0; \

661  (
ªsu…
 = 
	`‰ód
(
buf
, 1, 
max_size
, 
pmix_show_hñp_yyö
))==0 && 
	`„º‹
(pmix_show_help_yyin)) \

663 if–
î∫o
 !
EINTR
) \

665 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

668 
î∫o
=0; \

669 
	`˛óªº
(
pmix_show_hñp_yyö
); \

673 

	)

680 #i‚de‡
yyãrmö©e


681 
	#yyãrmö©e
(Ë 
YY_NULL


	)

685 #i‚de‡
YY_START_STACK_INCR


686 
	#YY_START_STACK_INCR
 25

	)

690 #i‚de‡
YY_FATAL_ERROR


691 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

699 #i‚de‡
YY_DECL


700 
	#YY_DECL_IS_OURS
 1

	)

702 
pmix_show_hñp_yyÀx
 ();

704 
	#YY_DECL
 
	`pmix_show_hñp_yyÀx
 ()

	)

710 #i‚de‡
YY_USER_ACTION


711 
	#YY_USER_ACTION


	)

715 #i‚de‡
YY_BREAK


716 
	#YY_BREAK
 ;

	)

719 
	#YY_RULE_SETUP
 \

720 i‡–
pmix_show_hñp_yyÀng
 > 0 ) \

721 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = \

722 (
pmix_show_hñp_yyãxt
[
pmix_show_hñp_yyÀng
 - 1] == '\n'); \

723 
YY_USER_ACTION


	)

727 
	gYY_DECL


729 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

730 *
	gyy_˝
, *
	gyy_bp
;

731 
	gyy_a˘
;

738 i‡–!(
	gyy_öô
) )

740 (
	gyy_öô
) = 1;

742 #ifde‡
YY_USER_INIT


743 
	gYY_USER_INIT
;

747 i‡–! (
	gyy_°©e_buf
) )

748 (
	gyy_°©e_buf
Ë(
yy_°©e_ty≥
 *)
pmix_show_hñp_yyÆloc
(
YY_STATE_BUF_SIZE
 );

749 i‡–! (
	gyy_°©e_buf
) )

750 
YY_FATAL_ERROR
( "out of dynamic memory inÖmix_show_help_yylex()" );

752 i‡–! (
	gyy_°¨t
) )

753 (
	gyy_°¨t
) = 1;

755 i‡–! 
	gpmix_show_hñp_yyö
 )

756 
	gpmix_show_hñp_yyö
 = 
°dö
;

758 i‡–! 
	gpmix_show_hñp_yyout
 )

759 
	gpmix_show_hñp_yyout
 = 
°dout
;

761 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

762 
pmix_show_hñp_yyísuª_buf„r_°ack
 ();

763 
	gYY_CURRENT_BUFFER_LVALUE
 =

764 
pmix_show_hñp_yy_¸óã_buf„r
(
pmix_show_hñp_yyö
,
YY_BUF_SIZE
 );

767 
pmix_show_hñp_yy_lﬂd_buf„r_°©e
( );

772 
	gyy_˝
 = (
yy_c_buf_p
);

775 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

780 
	gyy_bp
 = 
yy_˝
;

782 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

783 
	gyy_cuºít_°©e
 +
YY_AT_BOL
();

785 (
	gyy_°©e_±r
Ë(
yy_°©e_buf
);

786 *(
	gyy_°©e_±r
)++ = 
yy_cuºít_°©e
;

788 
	gyy_m©ch
:

791 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)];

792  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

794 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

795 i‡–
	gyy_cuºít_°©e
 >= 23 )

796 
yy_c
 = 
yy_mëa
[() yy_c];

798 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + (Ë
yy_c
];

799 *(
	gyy_°©e_±r
)++ = 
yy_cuºít_°©e
;

800 ++
	gyy_˝
;

802  
	gyy_ba£
[
yy_cuºít_°©e
] != 31 );

804 
	gyy_föd_a˘i⁄
:

805 
yy_cuºít_°©e
 = *--(
yy_°©e_±r
);

806 (
	gyy_Õ
Ë
yy_ac˚±
[
yy_cuºít_°©e
];

807 
	gföd_ruÀ
:

810 i‡–(
	gyy_Õ
Ë&& (yy_ÕË< 
	gyy_ac˚±
[
yy_cuºít_°©e
 + 1] )

812 
	gyy_a˘
 = 
yy_ac˛i°
[(
yy_Õ
)];

813 i‡–
	gyy_a˘
 & 
	gYY_TRAILING_HEAD_MASK
 ||

814 (
	gyy_lookög_f‹_åaû_begö
) )

816 i‡–
	gyy_a˘
 =(
yy_lookög_f‹_åaû_begö
) )

818 (
yy_lookög_f‹_åaû_begö
) = 0;

819 
	gyy_a˘
 &~
YY_TRAILING_HEAD_MASK
;

823 i‡–
	gyy_a˘
 & 
	gYY_TRAILING_MASK
 )

825 (
	gyy_lookög_f‹_åaû_begö
Ë
yy_a˘
 & ~
YY_TRAILING_MASK
;

826 (
	gyy_lookög_f‹_åaû_begö
Ë|
YY_TRAILING_HEAD_MASK
;

830 (
	gyy_fuŒ_m©ch
Ë
yy_˝
;

831 (
	gyy_fuŒ_°©e
Ë(
yy_°©e_±r
);

832 (
	gyy_fuŒ_Õ
Ë(
yy_Õ
);

835 ++(
	gyy_Õ
);

836 
	gföd_ruÀ
;

838 --
	gyy_˝
;

839 
	gyy_cuºít_°©e
 = *--(
yy_°©e_±r
);

840 (
	gyy_Õ
Ë
yy_ac˚±
[
yy_cuºít_°©e
];

843 
	gYY_DO_BEFORE_ACTION
;

845 
	gdo_a˘i⁄
:

847  
yy_a˘
 )

851 
YY_RULE_SETUP


854 
YY_BREAK


857 
YY_RULE_SETUP


859 { 
BEGIN
(
CHOMP
);  
	gPMIX_SHOW_HELP_PARSE_TOPIC
; }

860 
YY_BREAK


863 
YY_RULE_SETUP


865 { 
BEGIN
(
INITIAL
); }

866 
YY_BREAK


869 *
yy_˝
 = (
yy_hﬁd_ch¨
);

870 (
	gyy_c_buf_p
Ë
yy_˝
 -= 1;

871 
	gYY_DO_BEFORE_ACTION
;

872 
	gYY_RULE_SETUP


874 { 
BEGIN
(
CHOMP
);  
	gPMIX_SHOW_HELP_PARSE_MESSAGE
; }

875 
YY_BREAK


877 
YY_RULE_SETUP


879 
ECHO
;

880 
	gYY_BREAK


882 
YY_STATE_EOF
(
INITIAL
):

883 
YY_STATE_EOF
(
CHOMP
):

884 
yyãrmö©e
();

886 
	gYY_END_OF_BUFFER
:

889 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

892 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

893 
YY_RESTORE_YY_MORE_OFFSET


895 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

906 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

907 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
pmix_show_hñp_yyö
;

908 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

918 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

920 
yy_°©e_ty≥
 
yy_√xt_°©e
;

922 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

924 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

935 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

937 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

939 i‡–
	gyy_√xt_°©e
 )

942 
	gyy_˝
 = ++(
yy_c_buf_p
);

943 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

944 
	gyy_m©ch
;

949 
	gyy_˝
 = (
yy_c_buf_p
);

950 
	gyy_föd_a˘i⁄
;

954  
yy_gë_√xt_buf„r
( ) )

956 
	gEOB_ACT_END_OF_FILE
:

958 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

960 i‡–
pmix_show_hñp_yywøp
( ) )

971 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

973 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

974 
	gdo_a˘i⁄
;

979 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

980 
	gYY_NEW_FILE
;

985 
	gEOB_ACT_CONTINUE_SCAN
:

986 (
yy_c_buf_p
) =

987 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

989 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

991 
	gyy_˝
 = (
yy_c_buf_p
);

992 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

993 
	gyy_m©ch
;

995 
	gEOB_ACT_LAST_MATCH
:

996 (
yy_c_buf_p
) =

997 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

999 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1001 
	gyy_˝
 = (
yy_c_buf_p
);

1002 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1003 
	gyy_föd_a˘i⁄
;

1009 
YY_FATAL_ERROR
(

1022 
	$yy_gë_√xt_buf„r
 ()

1024 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1025 *
sour˚
 = (
yyãxt_±r
);

1026 
numbî_to_move
, 
i
;

1027 
ªt_vÆ
;

1029 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1030 
	`YY_FATAL_ERROR
(

1033 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1035 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1040  
EOB_ACT_END_OF_FILE
;

1048  
EOB_ACT_LAST_MATCH
;

1055 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
)) - 1;

1057  
i
 = 0; i < 
numbî_to_move
; ++i )

1058 *(
de°
++Ë*(
sour˚
++);

1060 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1064 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1068 
yy_size_t
 
num_to_ªad
 =

1069 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1071  
num_to_ªad
 <= 0 )

1074 
	`YY_FATAL_ERROR
(

1079 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1080 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1083 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1084 (
yy_n_ch¨s
), 
num_to_ªad
 );

1086 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1089 i‡–(
yy_n_ch¨s
) == 0 )

1091 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1093 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1094 
	`pmix_show_hñp_yyª°¨t
(
pmix_show_hñp_yyö
 );

1099 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1100 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1101 
YY_BUFFER_EOF_PENDING
;

1106 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1108 i‡((
yy_size_t
Ë((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1110 
yy_size_t
 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1111 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`pmix_show_hñp_yyªÆloc
((*ËYY_CURRENT_BUFFER_LVALUE->yy_ch_buf,
√w_size
 );

1112 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1113 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1116 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1117 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1118 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1120 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1122  
ªt_vÆ
;

1123 
	}
}

1127 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1129 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1130 *
yy_˝
;

1132 
yy_cuºít_°©e
 = (
yy_°¨t
);

1133 
yy_cuºít_°©e
 +
	`YY_AT_BOL
();

1135 (
yy_°©e_±r
Ë(
yy_°©e_buf
);

1136 *(
yy_°©e_±r
)++ = 
yy_cuºít_°©e
;

1138  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1140 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1141  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1143 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1144 i‡–
yy_cuºít_°©e
 >= 23 )

1145 
yy_c
 = 
yy_mëa
[() yy_c];

1147 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1148 *(
yy_°©e_±r
)++ = 
yy_cuºít_°©e
;

1151  
yy_cuºít_°©e
;

1152 
	}
}

1159 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1161 
yy_is_jam
;

1163 
YY_CHAR
 
yy_c
 = 1;

1164  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1166 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1167 i‡–
yy_cuºít_°©e
 >= 23 )

1168 
yy_c
 = 
yy_mëa
[() yy_c];

1170 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + (Ë
yy_c
];

1171 
yy_is_jam
 = (
yy_cuºít_°©e
 == 22);

1172 i‡–! 
yy_is_jam
 )

1173 *(
yy_°©e_±r
)++ = 
yy_cuºít_°©e
;

1175  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1176 
	}
}

1178 #i‚de‡
YY_NO_INPUT


1179 #ifde‡
__˝lu•lus


1180 
	$yyöput
 ()

1182 
	$öput
 ()

1186 
c
;

1188 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1190 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1196 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1198 *(
yy_c_buf_p
) = '\0';

1202 
yy_size_t
 
off£t
 = (
yy_c_buf_p
Ë- (
yyãxt_±r
);

1203 ++(
yy_c_buf_p
);

1205  
	`yy_gë_√xt_buf„r
( ) )

1207 
EOB_ACT_LAST_MATCH
:

1219 
	`pmix_show_hñp_yyª°¨t
(
pmix_show_hñp_yyö
 );

1223 
EOB_ACT_END_OF_FILE
:

1225 i‡–
	`pmix_show_hñp_yywøp
( ) )

1226  
EOF
;

1228 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1229 
YY_NEW_FILE
;

1230 #ifde‡
__˝lu•lus


1231  
	`yyöput
();

1233  
	`öput
();

1237 
EOB_ACT_CONTINUE_SCAN
:

1238 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1244 
c
 = *(*Ë(
yy_c_buf_p
);

1245 *(
yy_c_buf_p
) = '\0';

1246 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1248 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = (
c
 == '\n');

1250  
c
;

1251 
	}
}

1259 
	$pmix_show_hñp_yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1262 i‡–! 
YY_CURRENT_BUFFER
 ){

1263 
	`pmix_show_hñp_yyísuª_buf„r_°ack
 ();

1264 
YY_CURRENT_BUFFER_LVALUE
 =

1265 
	`pmix_show_hñp_yy_¸óã_buf„r
(
pmix_show_hñp_yyö
,
YY_BUF_SIZE
 );

1268 
	`pmix_show_hñp_yy_öô_buf„r
(
YY_CURRENT_BUFFER
,
öput_fûe
 );

1269 
	`pmix_show_hñp_yy_lﬂd_buf„r_°©e
( );

1270 
	}
}

1276 
	$pmix_show_hñp_yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1284 
	`pmix_show_hñp_yyísuª_buf„r_°ack
 ();

1285 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1288 i‡–
YY_CURRENT_BUFFER
 )

1291 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1292 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1293 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1296 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1297 
	`pmix_show_hñp_yy_lﬂd_buf„r_°©e
( );

1304 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1305 
	}
}

1307 
	$pmix_show_hñp_yy_lﬂd_buf„r_°©e
 ()

1309 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1310 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1311 
pmix_show_hñp_yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1312 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1313 
	}
}

1321 
YY_BUFFER_STATE
 
	$pmix_show_hñp_yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1323 
YY_BUFFER_STATE
 
b
;

1325 
b
 = (
YY_BUFFER_STATE
Ë
	`pmix_show_hñp_yyÆloc
(–
yy_buf„r_°©e
 ) );

1326 i‡–! 
b
 )

1327 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_show_help_yy_create_buffer()" );

1329 
b
->
yy_buf_size
 = 
size
;

1334 
b
->
yy_ch_buf
 = (*Ë
	`pmix_show_hñp_yyÆloc
(b->
yy_buf_size
 + 2 );

1335 i‡–! 
b
->
yy_ch_buf
 )

1336 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_show_help_yy_create_buffer()" );

1338 
b
->
yy_is_our_buf„r
 = 1;

1340 
	`pmix_show_hñp_yy_öô_buf„r
(
b
,
fûe
 );

1342  
b
;

1343 
	}
}

1349 
	$pmix_show_hñp_yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1352 i‡–! 
b
 )

1355 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1356 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1358 i‡–
b
->
yy_is_our_buf„r
 )

1359 
	`pmix_show_hñp_yy‰ì
((*Ë
b
->
yy_ch_buf
 );

1361 
	`pmix_show_hñp_yy‰ì
((*Ë
b
 );

1362 
	}
}

1368 
	$pmix_show_hñp_yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1371 
€ºno
 = 
î∫o
;

1373 
	`pmix_show_hñp_yy_Êush_buf„r
(
b
 );

1375 
b
->
yy_öput_fûe
 = 
fûe
;

1376 
b
->
yy_fûl_buf„r
 = 1;

1382 i‡(
b
 !
YY_CURRENT_BUFFER
){

1383 
b
->
yy_bs_löío
 = 1;

1384 
b
->
yy_bs_cﬁumn
 = 0;

1387 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1389 
î∫o
 = 
€ºno
;

1390 
	}
}

1396 
	$pmix_show_hñp_yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1398 i‡–! 
b
 )

1401 
b
->
yy_n_ch¨s
 = 0;

1407 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1408 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1410 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1412 
b
->
yy_©_bﬁ
 = 1;

1413 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1415 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1416 
	`pmix_show_hñp_yy_lﬂd_buf„r_°©e
( );

1417 
	}
}

1425 
	$pmix_show_hñp_yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1427 i‡(
√w_buf„r
 =
NULL
)

1430 
	`pmix_show_hñp_yyísuª_buf„r_°ack
();

1433 i‡–
YY_CURRENT_BUFFER
 )

1436 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1437 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1438 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1442 i‡(
YY_CURRENT_BUFFER
)

1443 (
yy_buf„r_°ack_t›
)++;

1444 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1447 
	`pmix_show_hñp_yy_lﬂd_buf„r_°©e
( );

1448 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1449 
	}
}

1455 
	$pmix_show_hñp_yyp›_buf„r_°©e
 ()

1457 i‡(!
YY_CURRENT_BUFFER
)

1460 
	`pmix_show_hñp_yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1461 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1462 i‡((
yy_buf„r_°ack_t›
) > 0)

1463 --(
yy_buf„r_°ack_t›
);

1465 i‡(
YY_CURRENT_BUFFER
) {

1466 
	`pmix_show_hñp_yy_lﬂd_buf„r_°©e
( );

1467 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1469 
	}
}

1474 
	$pmix_show_hñp_yyísuª_buf„r_°ack
 ()

1476 
yy_size_t
 
num_to_Æloc
;

1478 i‡(!(
yy_buf„r_°ack
)) {

1484 
num_to_Æloc
 = 1;

1485 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
pmix_show_hñp_yyÆloc


1486 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1488 i‡–! (
yy_buf„r_°ack
) )

1489 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_show_help_yyensure_buffer_stack()" );

1491 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1493 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1494 (
yy_buf„r_°ack_t›
) = 0;

1498 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1501 
grow_size
 = 8 ;

1503 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1504 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
pmix_show_hñp_yyªÆloc


1505 ((
yy_buf„r_°ack
),

1506 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1508 i‡–! (
yy_buf„r_°ack
) )

1509 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_show_help_yyensure_buffer_stack()" );

1512 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1513 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1515 
	}
}

1523 
YY_BUFFER_STATE
 
	$pmix_show_hñp_yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1525 
YY_BUFFER_STATE
 
b
;

1527 i‡–
size
 < 2 ||

1528 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1529 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1533 
b
 = (
YY_BUFFER_STATE
Ë
	`pmix_show_hñp_yyÆloc
(–
yy_buf„r_°©e
 ) );

1534 i‡–! 
b
 )

1535 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_show_help_yy_scan_buffer()" );

1537 
b
->
yy_buf_size
 = 
size
 - 2;

1538 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1539 
b
->
yy_is_our_buf„r
 = 0;

1540 
b
->
yy_öput_fûe
 = 0;

1541 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1542 
b
->
yy_is_öãø˘ive
 = 0;

1543 
b
->
yy_©_bﬁ
 = 1;

1544 
b
->
yy_fûl_buf„r
 = 0;

1545 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1547 
	`pmix_show_hñp_yy_swôch_to_buf„r
(
b
 );

1549  
b
;

1550 
	}
}

1560 
YY_BUFFER_STATE
 
	$pmix_show_hñp_yy_sˇn_°rög
 (
yyc⁄°
 * 
yy°r
 )

1563  
	`pmix_show_hñp_yy_sˇn_byãs
(
yy°r
,
	`°æí
(yystr) );

1564 
	}
}

1573 
YY_BUFFER_STATE
 
	$pmix_show_hñp_yy_sˇn_byãs
 (
yyc⁄°
 * 
yybyãs
, 
yy_size_t
 
_yybyãs_Àn
 )

1575 
YY_BUFFER_STATE
 
b
;

1576 *
buf
;

1577 
yy_size_t
 
n
;

1578 
i
;

1581 
n
 = 
_yybyãs_Àn
 + 2;

1582 
buf
 = (*Ë
	`pmix_show_hñp_yyÆloc
(
n
 );

1583 i‡–! 
buf
 )

1584 
	`YY_FATAL_ERROR
( "out of dynamic memory inÖmix_show_help_yy_scan_bytes()" );

1586  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1587 
buf
[
i
] = 
yybyãs
[i];

1589 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1591 
b
 = 
	`pmix_show_hñp_yy_sˇn_buf„r
(
buf
,
n
 );

1592 i‡–! 
b
 )

1593 
	`YY_FATAL_ERROR
( "bad buffer inÖmix_show_help_yy_scan_bytes()" );

1598 
b
->
yy_is_our_buf„r
 = 1;

1600  
b
;

1601 
	}
}

1603 #i‚de‡
YY_EXIT_FAILURE


1604 
	#YY_EXIT_FAILURE
 2

	)

1607 
	$yy_Áèl_îr‹
 (
yyc⁄°
 * 
msg
 )

1609 (Ë
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1610 
	`exô
–
YY_EXIT_FAILURE
 );

1611 
	}
}

1615 #unde‡
yyÀss


1616 
	#yyÀss
(
n
) \

1620 
yyÀss_ma¸o_¨g
 = (
n
); \

1621 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1622 
pmix_show_hñp_yyãxt
[
pmix_show_hñp_yyÀng
] = (
yy_hﬁd_ch¨
); \

1623 (
yy_c_buf_p
Ë
pmix_show_hñp_yyãxt
 + 
yyÀss_ma¸o_¨g
; \

1624 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1625 *(
yy_c_buf_p
) = '\0'; \

1626 
pmix_show_hñp_yyÀng
 = 
yyÀss_ma¸o_¨g
; \

1628  0 )

	)

1635 
	$pmix_show_hñp_yygë_löío
 ()

1638  
pmix_show_hñp_yylöío
;

1639 
	}
}

1644 
FILE
 *
	$pmix_show_hñp_yygë_ö
 ()

1646  
pmix_show_hñp_yyö
;

1647 
	}
}

1652 
FILE
 *
	$pmix_show_hñp_yygë_out
 ()

1654  
pmix_show_hñp_yyout
;

1655 
	}
}

1660 
yy_size_t
 
	$pmix_show_hñp_yygë_Àng
 ()

1662  
pmix_show_hñp_yyÀng
;

1663 
	}
}

1669 *
	$pmix_show_hñp_yygë_ãxt
 ()

1671  
pmix_show_hñp_yyãxt
;

1672 
	}
}

1678 
	$pmix_show_hñp_yy£t_löío
 (
löe_numbî
 )

1681 
pmix_show_hñp_yylöío
 = 
löe_numbî
;

1682 
	}
}

1690 
	$pmix_show_hñp_yy£t_ö
 (
FILE
 * 
ö_°r
 )

1692 
pmix_show_hñp_yyö
 = 
ö_°r
 ;

1693 
	}
}

1695 
	$pmix_show_hñp_yy£t_out
 (
FILE
 * 
out_°r
 )

1697 
pmix_show_hñp_yyout
 = 
out_°r
 ;

1698 
	}
}

1700 
	$pmix_show_hñp_yygë_debug
 ()

1702  
pmix_show_hñp_yy_Êex_debug
;

1703 
	}
}

1705 
	$pmix_show_hñp_yy£t_debug
 (
bdebug
 )

1707 
pmix_show_hñp_yy_Êex_debug
 = 
bdebug
 ;

1708 
	}
}

1710 
	$yy_öô_globÆs
 ()

1716 (
yy_buf„r_°ack
) = 0;

1717 (
yy_buf„r_°ack_t›
) = 0;

1718 (
yy_buf„r_°ack_max
) = 0;

1719 (
yy_c_buf_p
) = (*) 0;

1720 (
yy_öô
) = 0;

1721 (
yy_°¨t
) = 0;

1723 (
yy_°©e_buf
) = 0;

1724 (
yy_°©e_±r
) = 0;

1725 (
yy_fuŒ_m©ch
) = 0;

1726 (
yy_Õ
) = 0;

1729 #ifde‡
YY_STDINIT


1730 
pmix_show_hñp_yyö
 = 
°dö
;

1731 
pmix_show_hñp_yyout
 = 
°dout
;

1733 
pmix_show_hñp_yyö
 = (
FILE
 *) 0;

1734 
pmix_show_hñp_yyout
 = (
FILE
 *) 0;

1741 
	}
}

1744 
	$pmix_show_hñp_yyÀx_de°roy
 ()

1748 
YY_CURRENT_BUFFER
){

1749 
	`pmix_show_hñp_yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1750 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1751 
	`pmix_show_hñp_yyp›_buf„r_°©e
();

1755 
	`pmix_show_hñp_yy‰ì
((
yy_buf„r_°ack
) );

1756 (
yy_buf„r_°ack
Ë
NULL
;

1758 
	`pmix_show_hñp_yy‰ì
 ( (
yy_°©e_buf
) );

1759 (
yy_°©e_buf
Ë
NULL
;

1763 
	`yy_öô_globÆs
( );

1766 
	}
}

1772 #i‚de‡
yyãxt_±r


1773 
	$yy_Êex_°∫˝y
 (* 
s1
, 
yyc⁄°
 * 
s2
, 
n
 )

1775 
i
;

1776  
i
 = 0; i < 
n
; ++i )

1777 
s1
[
i
] = 
s2
[i];

1778 
	}
}

1781 #ifde‡
YY_NEED_STRLEN


1782 
	$yy_Êex_°æí
 (
yyc⁄°
 * 
s
 )

1784 
n
;

1785  
n
 = 0; 
s
[n]; ++n )

1788  
n
;

1789 
	}
}

1792 *
	$pmix_show_hñp_yyÆloc
 (
yy_size_t
 
size
 )

1794  (*Ë
	`mÆloc
–
size
 );

1795 
	}
}

1797 *
	$pmix_show_hñp_yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

1806  (*Ë
	`ªÆloc
–(*Ë
±r
, 
size
 );

1807 
	}
}

1809 
	$pmix_show_hñp_yy‰ì
 (* 
±r
 )

1811 
	`‰ì
–(*Ë
±r
 );

1812 
	}
}

1814 
	#YYTABLES_NAME
 "yyèbÀs"

	)

1821 #i‡!
deföed
(
YY_FLEX_SUBMINOR_VERSION
)

1822 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

1825 #i‡(
YY_FLEX_MAJOR_VERSION
 < 2Ë|| (YY_FLEX_MAJOR_VERSION =2 && (
YY_FLEX_MINOR_VERSION
 < 5 || (YY_FLEX_MINOR_VERSION =5 && 
YY_FLEX_SUBMINOR_VERSION
 < 5)))

1826 
	$pmix_show_hñp_yyÀx_de°roy
()

1828 i‡(
NULL
 !
YY_CURRENT_BUFFER
) {

1829 
	`pmix_show_hñp_yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
);

1830 #i‡
	`deföed
(
YY_CURRENT_BUFFER_LVALUE
)

1831 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1833 
YY_CURRENT_BUFFER
 = 
NULL
;

1836  
YY_NULL
;

1837 
	}
}

1840 
	$pmix_show_hñp_yywøp
()

1842 
pmix_show_hñp_∑r£_d⁄e
 = 
åue
;

1844 
	}
}

1856 
	$pmix_show_hñp_öô_buf„r
(
FILE
 *
fûe
)

1858 
YY_BUFFER_STATE
 
buf
 = 
	`pmix_show_hñp_yy_¸óã_buf„r
(
fûe
,
YY_BUF_SIZE
);

1859 
	`pmix_show_hñp_yy_swôch_to_buf„r
(
buf
);

1862 
	}
}

	@util/show_help_lex.h

21 #i‚de‡
PMIX_SHOW_HELP_LEX_H


22 
	#PMIX_SHOW_HELP_LEX_H


	)

24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 #ifde‡
mÆloc


27 #unde‡
mÆloc


29 #ifde‡
ªÆloc


30 #unde‡
ªÆloc


32 #ifde‡
‰ì


33 #unde‡
‰ì


36 
	~<°dio.h
>

37 
BEGIN_C_DECLS


38 
pmix_show_hñp_yyÀx
();

39 
pmix_show_hñp_öô_buf„r
(
FILE
 *
fûe
);

40 
pmix_show_hñp_yyÀx_de°roy
();

42 
FILE
 *
pmix_show_hñp_yyö
;

43 
boﬁ
 
pmix_show_hñp_∑r£_d⁄e
;

44 *
pmix_show_hñp_yyãxt
;

45 
pmix_show_hñp_yy√wlöes
;

50 
	#YY_STACK_USED
 0

	)

51 
	#YY_ALWAYS_INTERACTIVE
 0

	)

52 
	#YY_NEVER_INTERACTIVE
 0

	)

53 
	#YY_MAIN
 0

	)

54 
	#YY_NO_UNPUT
 1

	)

55 
	#YY_SKIP_YYWRAP
 1

	)

58 
	mPMIX_SHOW_HELP_PARSE_DONE
,

59 
	mPMIX_SHOW_HELP_PARSE_ERROR
,

61 
	mPMIX_SHOW_HELP_PARSE_TOPIC
,

62 
	mPMIX_SHOW_HELP_PARSE_MESSAGE
,

64 
	mPMIX_SHOW_HELP_PARSE_MAX


66 
	gEND_C_DECLS


	@util/show_help_lex.l

1 %
›ti⁄
 
nou≈ut


2 %
›ti⁄
 
noöput


24 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

26 
	~<°dio.h
>

27 #ifde‡
HAVE_UNISTD_H


28 
	~<uni°d.h
>

31 
	~"§c/utû/show_hñp_Àx.h
"

33 
BEGIN_C_DECLS


38 
pmix_show_hñp_föish_∑rsög
();

43 
pmix_show_hñp_yywøp
();

45 
END_C_DECLS


50 
	gpmix_show_hñp_yy√wlöes
 = 1;

51 
boﬁ
 
	gpmix_show_hñp_∑r£_d⁄e
 = 
Ál£
;

55 
WHITE
 [\
f
\
t
\
v
 ]

56 
CHAR
 [
A
-
Za
-
z0
-9
_
\-\.]

58 %
x
 
CHOMP


60 %% /* 
	$yyÀx
 */

62 #.*\
n
 ;

64 ^\[.+\]/[^\]\
n
]*\¿{ 
	`BEGIN
(
CHOMP
);  
PMIX_SHOW_HELP_PARSE_TOPIC
; }

66 <
CHOMP
>.*\
n
 { 
	`BEGIN
(
INITIAL
); }

68 .*/\
n
 { 
	`BEGIN
(
CHOMP
);  
PMIX_SHOW_HELP_PARSE_MESSAGE
; }

70 
	}
%%

73 #i‡!
deföed
(
YY_FLEX_SUBMINOR_VERSION
)

74 
	#YY_FLEX_SUBMINOR_VERSION
 0

	)

77 #i‡(
YY_FLEX_MAJOR_VERSION
 < 2Ë|| (YY_FLEX_MAJOR_VERSION =2 && (
YY_FLEX_MINOR_VERSION
 < 5 || (YY_FLEX_MINOR_VERSION =5 && 
YY_FLEX_SUBMINOR_VERSION
 < 5)))

78 
	$pmix_show_hñp_yyÀx_de°roy
()

80 i‡(
NULL
 !
YY_CURRENT_BUFFER
) {

81 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
);

82 #i‡
	`deföed
(
YY_CURRENT_BUFFER_LVALUE
)

83 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

85 
YY_CURRENT_BUFFER
 = 
NULL
;

88  
YY_NULL
;

89 
	}
}

92 
	$pmix_show_hñp_yywøp
()

94 
pmix_show_hñp_∑r£_d⁄e
 = 
åue
;

96 
	}
}

108 
	$pmix_show_hñp_öô_buf„r
(
FILE
 *
fûe
)

110 
YY_BUFFER_STATE
 
buf
 = 
	`yy_¸óã_buf„r
(
fûe
, 
YY_BUF_SIZE
);

111 
	`yy_swôch_to_buf„r
(
buf
);

114 
	}
}

	@util/strnlen.h

15 #i‚de‡
PMIX_STRNLEN_H


16 
	#PMIX_STRNLEN_H


	)

18 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

20 #i‡
deföed
(
HAVE_STRNLEN
)

21 
	#PMIX_STRNLEN
(
c
, 
a
, 
b
) \

22 (
c
Ë()
	`°∫Àn
(
a
, 
b
)

	)

24 
	#PMIX_STRNLEN
(
c
, 
a
, 
b
) \

26 
_x
; \

27 (
c
) = 0; \

28 
_x
=0; _x < (
b
); _x++) { \

29 i‡('\0' =(
a
)[
_x
]) { \

32 ++(
c
); \

34 } 0)

	)

	@util/timings.c

11 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

13 
	~<pmix_comm⁄.h
>

15 
	~<°dlib.h
>

16 
	~<°d¨g.h
>

17 
	~<°dio.h
>

18 
	~<uni°d.h
>

20 #ifde‡
HAVE_STRING_H


21 
	~<°rög.h
>

24 
	~<î∫o.h
>

25 #ifde‡
HAVE_SYS_TYPES_H


26 
	~<sys/ty≥s.h
>

28 #ifde‡
HAVE_SYS_TIME_H


29 
	~<sys/time.h
>

31 #ifde‡
HAVE_SYS_RESOURCE_H


32 
	~<sys/ªsour˚.h
>

36 #i‡
PMIX_ENABLE_TIMING


38 
	~"§c/˛ass/pmix_poöãr_¨øy.h
"

39 
	~"§c/˛ass/pmix_li°.h
"

40 
	~"§c/utû/ouçut.h
"

41 
	~"§c/utû/ba£«me.h
"

43 
	~"§c/utû/timögs.h
"

45 
	#DELTAS_SANE_LIMIT
 (10*1024*1024)

	)

47 
	söãrvÆ_des¸
{

48 
pmix_timög_evít_t
 *
	mdes¸_ev
, *
	mbegö_ev
;

49 
	möãrvÆ
, 
	movîhód
;

52 
pmix_timög_evít_t
 *
pmix_timög_evít_Æloc
(
pmix_timög_t
 *
t
);

53 
pmix_timög_öô
(
pmix_timög_t
 *
t
);

54 
pmix_timög_¥ï_t
 
pmix_timög_¥ï_ev
(
pmix_timög_t
 *
t
, c⁄° *
fmt
, ...);

56 
PMIX_CLASS_INSTANCE
(
pmix_timög_evít_t
, 
pmix_li°_ôem_t
, 
NULL
, NULL);

59 *
	gnodíame
 = 
NULL
;

60 *
	gjobid
 = "";

61 
	gh≈_offs
 = 0;

62 
boﬁ
 
	gpmix_timög_ovîhód
 = 
Ál£
;

64 
	$pmix_öô_id
(* 
n•a˚
, 
ønk
)

66 
	`a•rötf
(&
jobid
, "%s:%d", 
n•a˚
, 
ønk
);

67 
	}
}

71 
	$gë_ts_gëtimeofday
()

73 
ªt
;

75 
timevÆ
 
tv
;

76 
	`gëtimeofday
(&
tv
, 
NULL
);

77 
ªt
 = 
tv
.
tv_£c
;

78 
ªt
 +()
tv
.
tv_u£c
 / 1000000.0;

79  
ªt
;

80 
	}
}

82 
gë_ts_t
 
	$_öô_time°ampög
()

84  
gë_ts_gëtimeofday
;

85 
	}
}

88 
pmix_timög_evít_t
 *
	$pmix_timög_evít_Æloc
(
pmix_timög_t
 *
t
)

90 if–
t
->
buf„r_off£t
 >t->
buf„r_size
 ){

92 
Æloc_begö
 = 
t
->
	`gë_ts
();

94 
t
->
buf„r
 = 
	`mÆloc
((
pmix_timög_evít_t
)*t->
buf„r_size
);

95 if–
t
->
buf„r
 =
NULL
 ){

96  
NULL
;

98 
	`mem£t
(
t
->
buf„r
, 0, (
pmix_timög_evít_t
)*t->
buf„r_size
);

100 
Æloc_íd
 = 
t
->
	`gë_ts
();

102 
t
->
buf„r_off£t
 = 0;

103 
t
->
buf„r
[0].
fib
 = 1;

104 
t
->
buf„r
[0].
ts_ovh
 = 
Æloc_íd
 - 
Æloc_begö
;

106 
tmp
 = 
t
->
buf„r_off£t
;

107 (
t
->
buf„r_off£t
)++;

108  
t
->
buf„r
 + 
tmp
;

109 
	}
}

111 
	$pmix_timög_öô
(
pmix_timög_t
 *
t
)

113 
	`mem£t
(
t
,0,(*t));

115 
t
->
√xt_id_˙å
 = 0;

116 
t
->
cuºít_id
 = -1;

118 
t
->
evíts
 = 
	`PMIX_NEW
(
pmix_li°_t
);

120 
t
->
buf„r_size
 = 
PMIX_TIMING_BUFSIZE
;

123 
t
->
buf„r_off£t
 =Å->
buf„r_size
;

125 
t
->
gë_ts
 = 
	`_öô_time°ampög
();

127 
	}
}

129 
pmix_timög_¥ï_t
 
	$pmix_timög_¥ï_ev
(
pmix_timög_t
 *
t
, c⁄° *
fmt
, ...)

131 
pmix_timög_evít_t
 *
ev
 = 
	`pmix_timög_evít_Æloc
(
t
);

132 if–
ev
 =
NULL
 ){

133 
pmix_timög_¥ï_t
 
p
 = { 
t
, 
NULL
, 
PMIX_ERR_OUT_OF_RESOURCE
 };

134  
p
;

136 
	`PMIX_CONSTRUCT
(
ev
, 
pmix_timög_evít_t
);

137 
ev
->
ts
 = 
t
->
	`gë_ts
();

138 
va_li°
 
¨gs
;

139 
	`va_°¨t
–
¨gs
, 
fmt
 );

140 
	`v¢¥ötf
(
ev
->
des¸
, 
PMIX_TIMING_DESCR_MAX
 - 1, 
fmt
, 
¨gs
);

141 
ev
->
des¸
[
PMIX_TIMING_DESCR_MAX
-1] = '\0';

142 
	`va_íd
–
¨gs
 );

143 
pmix_timög_¥ï_t
 
p
 = { 
t
, 
ev
, 0 };

144  
p
;

145 
	}
}

147 
pmix_timög_¥ï_t
 
	$pmix_timög_¥ï_ev_íd
(
pmix_timög_t
 *
t
, c⁄° *
fmt
, ...)

149 
pmix_timög_¥ï_t
 
p
 = { 
t
, 
NULL
, 0 };

151 if–
t
->
cuºít_id
 >= 0 ){

152 
pmix_timög_evít_t
 *
ev
 = 
	`pmix_timög_evít_Æloc
(
t
);

153 if–
ev
 =
NULL
 ){

154 
pmix_timög_¥ï_t
 
p
 = { 
t
, 
NULL
, 
PMIX_ERR_OUT_OF_RESOURCE
 };

155  
p
;

157 
	`PMIX_CONSTRUCT
(
ev
, 
pmix_timög_evít_t
);

158 
ev
->
ts
 = 
t
->
	`gë_ts
();

159 
p
.
ev
 =Év;

161  
p
;

162 
	}
}

164 
	$pmix_timög_add_°ï
(
pmix_timög_¥ï_t
 
p
,

165 c⁄° *
func
, c⁄° *
fûe
, 
löe
)

167 if–!
p
.
îrcode
 ) {

168 
p
.
ev
->
func
 = func;

169 
p
.
ev
->
fûe
 = file;

170 
p
.
ev
->
löe
 =Üine;

171 
p
.
ev
->
ty≥
 = 
PMIX_TIMING_TRACE
;

172 
	`pmix_li°_≠≥nd
(
p
.
t
->
evíts
, (
pmix_li°_ôem_t
*Ì.
ev
);

174 
	}
}

177 
	$pmix_timög_des¸
(
pmix_timög_¥ï_t
 
p
,

178 c⁄° *
func
, c⁄° *
fûe
, 
löe
)

180 if–!
p
.
îrcode
 ){

181 
p
.
ev
->
func
 = func;

182 
p
.
ev
->
fûe
 = file;

183 
p
.
ev
->
löe
 =Üine;

184 
p
.
ev
->
ty≥
 = 
PMIX_TIMING_INTDESCR
;

185 
p
.
ev
->
id
 =Ö.
t
->
√xt_id_˙å
;

186 (
p
.
t
->
√xt_id_˙å
)++;

187 
	`pmix_li°_≠≥nd
(
p
.
t
->
evíts
, (
pmix_li°_ôem_t
*Ì.
ev
);

188  
p
.
ev
->
id
;

191 
	}
}

193 
	$pmix_timög_°¨t_id
(
pmix_timög_t
 *
t
, 
id
, c⁄° *
func
, c⁄° *
fûe
, 
löe
)

197 
pmix_timög_evít_t
 *
ev
 = 
	`pmix_timög_evít_Æloc
(
t
);

198 if–
ev
 =
NULL
 ){

201 
	`PMIX_CONSTRUCT
(
ev
, 
pmix_timög_evít_t
);

203 
t
->
cuºít_id
 = 
id
;

204 
ev
->
ts
 = 
t
->
	`gë_ts
();

205 
ev
->
func
 = func;

206 
ev
->
fûe
 = file;

207 
ev
->
löe
 =Üine;

208 
ev
->
ty≥
 = 
PMIX_TIMING_INTBEGIN
;

209 
ev
->
id
 = id;

210 
	`pmix_li°_≠≥nd
(
t
->
evíts
, (
pmix_li°_ôem_t
*)
ev
);

211 
	}
}

213 
	$pmix_timög_íd
(
pmix_timög_t
 *
t
, 
id
, c⁄° *
func
, c⁄° *
fûe
, 
löe
 )

217 
pmix_timög_evít_t
 *
ev
 = 
	`pmix_timög_evít_Æloc
(
t
);

218 if–
ev
 =
NULL
 ){

221 
	`PMIX_CONSTRUCT
(
ev
, 
pmix_timög_evít_t
);

223 if–
id
 < 0 ){

224 
ev
->
id
 = 
t
->
cuºít_id
;

225 
t
->
cuºít_id
 = -1;

227 if–
t
->
cuºít_id
 =
id
 ){

228 
t
->
cuºít_id
 = -1;

230 
ev
->
id
 = id;

232 
ev
->
ts
 = 
t
->
	`gë_ts
();

233 
ev
->
func
 = func;

234 
ev
->
fûe
 = file;

235 
ev
->
löe
 =Üine;

236 
ev
->
ty≥
 = 
PMIX_TIMING_INTEND
;

237 
	`pmix_li°_≠≥nd
(
t
->
evíts
, (
pmix_li°_ôem_t
*)
ev
);

238 
	}
}

240 
	$pmix_timög_íd_¥ï
(
pmix_timög_¥ï_t
 
p
,

241 c⁄° *
func
, c⁄° *
fûe
, 
löe
)

243 
pmix_timög_evít_t
 *
ev
 = 
p
.ev;

245 if–!
p
.
îrcode
 && ( 
NULL
 !
ev
 ) ){

246 
	`as£π
–
p
.
t
->
cuºít_id
 >=0 );

247 
ev
->
id
 = 
p
.
t
->
cuºít_id
;

248 
p
.
t
->
cuºít_id
 = -1;

249 
ev
->
func
 = func;

250 
ev
->
fûe
 = file;

251 
ev
->
löe
 =Üine;

252 
ev
->
ty≥
 = 
PMIX_TIMING_INTEND
;

253 
	`pmix_li°_≠≥nd
(
p
.
t
->
evíts
, (
pmix_li°_ôem_t
*)
ev
);

255 
	}
}

257 
	$_¥ï¨e_des¸ùti⁄s
(
pmix_timög_t
 *
t
, 
öãrvÆ_des¸
 **
__des¸
)

259 
öãrvÆ_des¸
 *
des¸
;

260 
pmix_timög_evít_t
 *
ev
, *
√xt
;

262 if–
t
->
√xt_id_˙å
 == 0 ){

266 *
__des¸
 = 
	`mÆloc
((
öãrvÆ_des¸
Ë* 
t
->
√xt_id_˙å
);

267 
des¸
 = *
__des¸
;

268 
	`mem£t
(
des¸
, 0, (
öãrvÆ_des¸
Ë* 
t
->
√xt_id_˙å
);

270 
	`PMIX_LIST_FOREACH_SAFE
(
ev
, 
√xt
, 
t
->
evíts
, 
pmix_timög_evít_t
){

276 
ev
->
ty≥
){

277 
PMIX_TIMING_INTDESCR
:{

278 if–
ev
->
id
 >
t
->
√xt_id_˙å
){

279 *
fûe
 = 
	`pmix_ba£«me
(
ev
->file);

280 
	`pmix_ouçut
(0,"pmix_timing: badÉvent idát %s:%d:%s, ignoreándÑemove",

281 
fûe
, 
ev
->
löe
,Év->
func
);

282 
	`‰ì
(
fûe
);

283 
	`pmix_li°_ªmove_ôem
(
t
->
evíts
, (
pmix_li°_ôem_t
 *)
ev
);

286 if–
NULL
 !
des¸
[
ev
->
id
].
des¸_ev
 ){

287 
pmix_timög_evít_t
 *
¥ev
 = 
des¸
[
ev
->
id
].
des¸_ev
;

288 *
fûe
 = 
	`pmix_ba£«me
(
ev
->file);

289 *
fûe_¥ev
 = 
	`pmix_ba£«me
(
¥ev
->
fûe
);

290 
	`pmix_ouçut
(0,"pmix_timing: duplicated descriptionát %s:%d:%s, "

291 "¥evious: %s:%d:%s, ign‹ê™dÑemove", 
fûe
, 
ev
->
löe
,Év->
func
,

292 
fûe_¥ev
, 
¥ev
->
löe
,Öªv->
func
);

293 
	`‰ì
(
fûe
);

294 
	`‰ì
(
fûe_¥ev
);

295 
	`pmix_li°_ªmove_ôem
(
t
->
evíts
, (
pmix_li°_ôem_t
 *)
ev
);

299 
des¸
[
ev
->
id
].
des¸_ev
 =Év;

300 
des¸
[
ev
->
id
].
begö_ev
 = 
NULL
;

301 
des¸
[
ev
->
id
].
öãrvÆ
 = 0;

302 
des¸
[
ev
->
id
].
ovîhód
 = 0;

305 
PMIX_TIMING_INTBEGIN
:

306 
PMIX_TIMING_INTEND
:{

307 if–
ev
->
id
 >
t
->
√xt_id_˙å
 || (
NULL
 =
des¸
[ev->id].
des¸_ev
 ) ){

308 *
fûe
 = 
	`pmix_ba£«me
(
ev
->file);

309 
	`pmix_ouçut
(0,"pmix_timing: badÉvent idát %s:%d:%s, ignoreándÑemove",

310 
fûe
, 
ev
->
löe
,Év->
func
);

311 
	`‰ì
(
fûe
);

312 
	`pmix_li°_ªmove_ôem
(
t
->
evíts
, (
pmix_li°_ôem_t
 *)
ev
);

317 
PMIX_TIMING_TRACE
:

321  
t
->
√xt_id_˙å
;

322 
	}
}

326 
	$pmix_timög_ªp‹t
(
pmix_timög_t
 *
t
, *
‚ame
)

328 
pmix_timög_evít_t
 *
ev
;

329 
FILE
 *
Â
 = 
NULL
;

330 *
buf
 = 
NULL
;

331 
buf_size
 = 0;

332 
öãrvÆ_des¸
 *
des¸
 = 
NULL
;

333 
rc
 = 
PMIX_SUCCESS
;

335 if–
‚ame
 !
NULL
 ){

336 
Â
 = 
	`f›í
(
‚ame
,"a");

337 if–
Â
 =
NULL
 ){

338 
	`pmix_ouçut
(0, "pmix_timing_report: Cannot open %s file"

339 " f‹ wrôögÅimög inf‹m©i⁄!",
‚ame
);

340 
rc
 = 
PMIX_ERROR
;

341 
îr_exô
;

345 
	`_¥ï¨e_des¸ùti⁄s
(
t
, &
des¸
);

347 
buf
 = 
	`mÆloc
(
PMIX_TIMING_OUTBUF_SIZE
+1);

348 if–
buf
 =
NULL
 ){

349 
rc
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

350 
îr_exô
;

352 
buf
[0] = '\0';

354 
ovîhód
 = 0;

355 
	`PMIX_LIST_FOREACH
(
ev
, 
t
->
evíts
, 
pmix_timög_evít_t
){

356 *
löe
, *
fûe
;

357 if–
ev
->
fib
 && 
pmix_timög_ovîhód
 ){

358 
ovîhód
 +
ev
->
ts_ovh
;

360 
fûe
 = 
	`pmix_ba£«me
(
ev
->file);

361  
ev
->
ty≥
 ){

362 
PMIX_TIMING_INTDESCR
:

365 
PMIX_TIMING_TRACE
:

366 
rc
 = 
	`a•rötf
(&
löe
,"[%s:%d] %s \"%s\" [PMIX_TRACE] %s:%d %.10lf\n",

367 
nodíame
, 
	`gëpid
(), 
jobid
, 
ev
->
des¸
, 
fûe
,Év->
löe
,

368 
ev
->
ts
 + 
h≈_offs
 + 
ovîhód
);

370 
PMIX_TIMING_INTBEGIN
:

371 
rc
 = 
	`a•rötf
(&
löe
,"[%s:%d] %s \"%s [start]\" [PMIX_TRACE] %s:%d %.10lf\n",

372 
nodíame
, 
	`gëpid
(), 
jobid
, 
des¸
[
ev
->
id
].
des¸_ev
->descr,

373 
fûe
, 
ev
->
löe
,Év->
ts
 + 
h≈_offs
 + 
ovîhód
);

375 
PMIX_TIMING_INTEND
:

376 
rc
 = 
	`a•rötf
(&
löe
,"[%s:%d] %s \"%s [stop]\" [PMIX_TRACE] %s:%d %.10lf\n",

377 
nodíame
, 
	`gëpid
(), 
jobid
, 
des¸
[
ev
->
id
].
des¸_ev
->descr,

378 
fûe
, 
ev
->
löe
,Év->
ts
 + 
h≈_offs
 + 
ovîhód
);

381 
	`‰ì
(
fûe
);

383 if–
rc
 < 0 ){

384 
rc
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

385 
îr_exô
;

387 
rc
 = 0;

392 
	`as£π
–
	`°æí
(
löe
Ë<
PMIX_TIMING_OUTBUF_SIZE
 );

395 if–
buf_size
 + 
	`°æí
(
löe
Ë> 
PMIX_TIMING_OUTBUF_SIZE
 ){

397 if–
Â
 !
NULL
 ){

398 
	`Ârötf
(
Â
,"%s", 
buf
);

399 
	`Ârötf
(
Â
,"\n");

401 
	`pmix_ouçut
(0,"\n%s", 
buf
);

403 
buf
[0] = '\0';

404 
buf_size
 = 0;

406 
	`•rötf
(
buf
,"%s%s", buf, 
löe
);

407 
buf_size
 +
	`°æí
(
löe
);

408 
	`‰ì
(
löe
);

411 if–
buf_size
 > 0 ){

413 if–
Â
 !
NULL
 ){

414 
	`Ârötf
(
Â
,"%s", 
buf
);

415 
	`Ârötf
(
Â
,"\n");

417 
	`pmix_ouçut
(0,"\n%s", 
buf
);

419 
buf
[0] = '\0';

420 
buf_size
 = 0;

423 
îr_exô
:

424 if–
NULL
 !
des¸
 ){

425 
	`‰ì
(
des¸
);

427 if–
buf
 !
NULL
 ){

428 
	`‰ì
(
buf
);

430 if–
Â
 !
NULL
 ){

431 
	`fÊush
(
Â
);

432 
	`f˛o£
(
Â
);

434  
rc
;

435 
	}
}

440 
	$pmix_timög_dñès
(
pmix_timög_t
 *
t
, *
‚ame
)

442 
pmix_timög_evít_t
 *
ev
;

443 
FILE
 *
Â
 = 
NULL
;

444 *
buf
 = 
NULL
;

445 
öãrvÆ_des¸
 *
des¸
 = 
NULL
;

446 
i
, 
rc
 = 
PMIX_SUCCESS
;

447 
size_t
 
buf_size
 = 0, 
buf_u£d
 = 0;

449 if–
‚ame
 !
NULL
 ){

450 
Â
 = 
	`f›í
(
‚ame
,"a");

451 if–
Â
 =
NULL
 ){

452 
	`pmix_ouçut
(0, "pmix_timing_report: Cannot open %s file"

453 " f‹ wrôögÅimög inf‹m©i⁄!",
‚ame
);

454 
rc
 = 
PMIX_ERROR
;

455 
îr_exô
;

459 
	`_¥ï¨e_des¸ùti⁄s
(
t
, &
des¸
);

461 
	`PMIX_LIST_FOREACH
(
ev
, 
t
->
evíts
, 
pmix_timög_evít_t
){

462 
id
;

463 if–
ev
->
fib
 ){

467 
i
;

468  
i
 = 0; i < 
t
->
√xt_id_˙å
; i++){

469 if–(
NULL
 !
des¸
[
i
].
des¸_ev
Ë&& (NULL !des¸[i].
begö_ev
) ){

470 if–
pmix_timög_ovîhód
 ){

471 
des¸
[
i
].
ovîhód
 +
ev
->
ts_ovh
;

479 if–
ev
->
ty≥
 =
PMIX_TIMING_INTDESCR
 ||

480 
ev
->
ty≥
 =
PMIX_TIMING_TRACE
){

485 
id
 = 
ev
->id;

486 if–
id
 < 0 || id >
t
->
√xt_id_˙å
 ){

487 *
fûe
 = 
	`pmix_ba£«me
(
ev
->file);

488 
	`pmix_ouçut
(0,"pmix_timing_deltas: bad intervalÉvent id: %dát %s:%d:%s (maxid=%d)",

489 
id
, 
fûe
, 
ev
->
löe
,Év->
func
, 
t
->
√xt_id_˙å
 - 1 );

490 
	`‰ì
(
fûe
);

496 
	`as£π
–
NULL
 !
des¸
[
id
].
des¸_ev
);

498 if–
ev
->
ty≥
 =
PMIX_TIMING_INTBEGIN
 ){

499 if–
NULL
 !
des¸
[
id
].
begö_ev
 ){

502 
pmix_timög_evít_t
 *
¥ev
 = 
des¸
[
ev
->
id
].
begö_ev
;

503 *
fûe
 = 
	`pmix_ba£«me
(
ev
->file);

504 *
fûe_¥ev
 = 
	`pmix_ba£«me
(
¥ev
->
fûe
);

505 
	`pmix_ouçut
(0,"pmix_timing_deltas: duplicated start statementát %s:%d:%s, "

506 "¥evious: %s:%d:%s", 
fûe
, 
ev
->
löe
,Év->
func
,

507 
fûe_¥ev
, 
¥ev
->
löe
,Öªv->
func
);

508 
	`‰ì
(
fûe
);

509 
	`‰ì
(
fûe_¥ev
);

512 
des¸
[
id
].
begö_ev
 = 
ev
;

518 if–
ev
->
ty≥
 =
PMIX_TIMING_INTEND
 ){

519 if–
NULL
 =
des¸
[
id
].
begö_ev
 ){

521 *
fûe
 = 
	`pmix_ba£«me
(
ev
->file);

522 
	`pmix_ouçut
(0,"pmix_timing_deltas: intevalÉnd without startát %s:%d:%s",

523 
fûe
, 
ev
->
löe
,Év->
func
 );

524 
	`‰ì
(
fûe
);

526 
des¸
[
id
].
öãrvÆ
 +
ev
->
ts
 - des¸[id].
begö_ev
->ts;

527 
des¸
[
id
].
begö_ev
 = 
NULL
;

528 if–
ev
->
fib
 ){

529 
des¸
[
id
].
ovîhód
 +
ev
->
ts_ovh
;

536 
	`pmix_ouçut
(0, "pmix_timög_dñès: badÉvíàty≥ %d", 
ev
->
ty≥
);

537 
	`as£π
(0);

540 
buf
 = 
	`mÆloc
(
PMIX_TIMING_OUTBUF_SIZE
 + 1);

541 if–
buf
 =
NULL
 ){

542 
rc
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

543 
îr_exô
;

545 
buf
[0] = '\0';

546 
buf_size
 = 
PMIX_TIMING_OUTBUF_SIZE
 + 1;

547 
buf_u£d
 = 0;

548 
i
 = 0; i < 
t
->
√xt_id_˙å
; i++){

549 *
löe
 = 
NULL
;

550 
size_t
 
löe_size
;

551 
rc
 = 
	`a•rötf
(&
löe
,"[%s:%d] %s \"%s\" [PMIX_OVHD] %le\n",

552 
nodíame
, 
	`gëpid
(), 
jobid
, 
des¸
[
i
].
des¸_ev
->descr,

553 
des¸
[
i
].
öãrvÆ
 - des¸[i].
ovîhód
);

554 if–
rc
 < 0 ){

555 
rc
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

556 
îr_exô
;

558 
rc
 = 0;

559 
löe_size
 = 
	`°æí
(
löe
);

564 
	`as£π
–
löe_size
 <
PMIX_TIMING_OUTBUF_SIZE
 );

566 if–
buf_u£d
 + 
	`°æí
(
löe
Ë> 
buf_size
 ){

568  
buf_u£d
 + 
löe_size
 > 
buf_size
 && buf_sizê< 
DELTAS_SANE_LIMIT
){

569 
buf_size
 +
PMIX_TIMING_OUTBUF_SIZE
 + 1;

571 if–
buf_size
 > 
DELTAS_SANE_LIMIT
 ){

572 
	`pmix_ouçut
(0, "pmix_timing_report: delta saneÜimit overflow (%u > %u)!\n",

573 ()
buf_size
, 
DELTAS_SANE_LIMIT
);

574 
	`‰ì
(
löe
);

575 
rc
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

576 
îr_exô
;

578 
buf
 = 
	`ªÆloc
(buf, 
buf_size
);

579 if–
buf
 =
NULL
 ){

580 
	`pmix_ouçut
(0, "pmix_timing_deltas: Out of memory!\n");

581 
rc
 = 
PMIX_ERR_OUT_OF_RESOURCE
;

582 
îr_exô
;

585 
	`•rötf
(
buf
,"%s%s", buf, 
löe
);

586 
buf_u£d
 +
löe_size
;

587 
	`‰ì
(
löe
);

591 if–
buf_u£d
 > 0 ){

593 if–
Â
 !
NULL
 ){

594 
	`Ârötf
(
Â
,"%s", 
buf
);

595 
	`Ârötf
(
Â
,"\n");

597 
	`pmix_ouçut
(0,"\n%s", 
buf
);

599 
buf
[0] = '\0';

600 
buf_size
 = 0;

603 
îr_exô
:

604 if–
NULL
 !
des¸
 ){

605 
	`‰ì
(
des¸
);

607 if–
NULL
 !
buf
 ){

608 
	`‰ì
(
buf
);

610 if–
Â
 !
NULL
 ){

611 
	`fÊush
(
Â
);

612 
	`f˛o£
(
Â
);

614  
rc
;

615 
	}
}

617 
	$pmix_timög_ªÀa£
(
pmix_timög_t
 *
t
)

619 
˙t
 = 
	`pmix_li°_gë_size
(
t
->
evíts
);

621 if–
˙t
 > 0 ){

622 
pmix_li°_t
 *
tmp
 = 
	`PMIX_NEW
(pmix_list_t);

623 
i
;

624 
i
=0; i<
˙t
; i++){

625 
pmix_timög_evít_t
 *
ev
 = (pmix_timög_evít_à*)
	`pmix_li°_ªmove_fú°
(
t
->
evíts
);

626 if–
ev
->
fib
 ){

627 
	`pmix_li°_≠≥nd
(
tmp
,(
pmix_li°_ôem_t
*)
ev
);

631 
˙t
 = 
	`pmix_li°_gë_size
(
tmp
);

632 
i
=0; i<
˙t
; i++){

633 
pmix_timög_evít_t
 *
ev
 = (pmix_timög_evít_à*)
	`pmix_li°_ªmove_fú°
(
tmp
);

634 
	`‰ì
(
ev
);

636 
	`PMIX_RELEASE
(
tmp
);

642 
	`PMIX_RELEASE
(
t
->
evíts
);

643 
t
->
evíts
 = 
NULL
;

644 
	}
}

	@util/timings.h

13 #i‚de‡
PMIX_UTIL_TIMING_H


14 
	#PMIX_UTIL_TIMING_H


	)

16 
	~<§c/ö˛ude/pmix_c⁄fig.h
>

19 
	~"§c/˛ass/pmix_li°.h
"

21 #i‡
PMIX_ENABLE_TIMING


23 
	#PMIX_TIMING_DESCR_MAX
 1024

	)

24 
	#PMIX_TIMING_BUFSIZE
 32

	)

25 
	#PMIX_TIMING_OUTBUF_SIZE
 (10*1024)

	)

28 
	mPMIX_TIMING_TRACE
,

29 
	mPMIX_TIMING_INTDESCR
,

30 
	mPMIX_TIMING_INTBEGIN
,

31 
	mPMIX_TIMING_INTEND


32 } 
	tpmix_evít_ty≥_t
;

35 
pmix_li°_ôem_t
 
	msu≥r
;

36 
	mfib
;

37 
pmix_evít_ty≥_t
 
	mty≥
;

38 c⁄° *
	mfunc
;

39 c⁄° *
	mfûe
;

40 
	mlöe
;

41 
	mts
, 
	mts_ovh
;

42 
	mdes¸
[
PMIX_TIMING_DESCR_MAX
];

43 
	mid
;

44 } 
	tpmix_timög_evít_t
;

46 (*
	tgë_ts_t
)();

48 
	spmix_timög_t


50 
√xt_id_˙å
;

55 
cuºít_id
;

56 
pmix_li°_t
 *
evíts
;

57 
pmix_timög_evít_t
 *
buf„r
;

58 
size_t
 
buf„r_off£t
, 
buf„r_size
;

59 
gë_ts_t
 
gë_ts
;

60 } 
	tpmix_timög_t
;

63 
pmix_timög_t
 *
t
;

64 
pmix_timög_evít_t
 *
ev
;

65 
îrcode
;

66 } 
	tpmix_timög_¥ï_t
;

69 
	`pmix_öô_id
(* 
n•a˚
, 
ønk
);

76 
	`pmix_timög_öô
(
pmix_timög_t
 *
t
);

88 
pmix_timög_¥ï_t
 
	`pmix_timög_¥ï_ev
(
pmix_timög_t
 *
t
, c⁄° *
fmt
, ...);

100 
pmix_timög_¥ï_t
 
	`pmix_timög_¥ï_ev_íd
(
pmix_timög_t
 *
t
, c⁄° *
fmt
, ...);

112 
	`pmix_timög_add_°ï
(
pmix_timög_¥ï_t
 
p
, c⁄° *
func
,

113 c⁄° *
fûe
, 
löe
);

126 
	`pmix_timög_des¸
(
pmix_timög_¥ï_t
 
p
, c⁄° *
func
,

127 c⁄° *
fûe
, 
löe
);

141 
	`pmix_timög_°¨t_id
(
pmix_timög_t
 *
t
, 
id
, c⁄° *
func
,

142 c⁄° *
fûe
, 
löe
);

156 
	`pmix_timög_íd
(
pmix_timög_t
 *
t
, 
id
, c⁄° *
func
,

157 c⁄° *
fûe
, 
löe
 );

170 
ölöe
 
	$pmix_timög_°¨t_öô
(
pmix_timög_¥ï_t
 
p
,

171 c⁄° *
func
,

172 c⁄° *
fûe
, 
löe
)

174 
id
 = 
	`pmix_timög_des¸
(
p
, 
func
, 
fûe
, 
löe
);

175 if–
id
 < 0 )

176  
id
;

177 
	`pmix_timög_°¨t_id
(
p
.
t
, 
id
, 
func
, 
fûe
, 
löe
);

178  
id
;

179 
	}
}

191 
pmix_timög_íd_¥ï
(
pmix_timög_¥ï_t
 
p
,

192 c⁄° *
func
, c⁄° *
fûe
, 
löe
);

210 
pmix_°©us_t
 
pmix_timög_ªp‹t
(
pmix_timög_t
 *
t
, *
‚ame
);

227 
pmix_°©us_t
 
pmix_timög_dñès
(
pmix_timög_t
 *
t
, *
‚ame
);

236 
pmix_timög_ªÀa£
(
pmix_timög_t
 *
t
);

242 
	#PMIX_TIMING_ID
(
n
, 
r
Ë
	`pmix_timög_id
(“), (r));

	)

250 
	#PMIX_TIMING_DECLARE
(
t
Ë
pmix_timög_t
Å;

	)

258 
	#PMIX_TIMING_DECLARE_EXT
(
x
, 
t
Ëx 
pmix_timög_t
Å;

	)

267 
	#PMIX_TIMING_INIT
(
t
Ë
	`pmix_timög_öô
—)

	)

277 
	#PMIX_TIMING_EVENT
(
x
Ë
	`pmix_timög_add_°ï
–
pmix_timög_¥ï_ev
 x, 
__FUNCTION__
, 
__FILE__
, 
__LINE__
)

	)

288 
	#PMIX_TIMING_MDESCR
(
x
Ë
	`pmix_timög_des¸
–
pmix_timög_¥ï_ev
 x, 
__FUNCTION__
, 
__FILE__
, 
__LINE__
)

	)

299 
	#PMIX_TIMING_MSTART_ID
(
t
, 
id
Ë
	`pmix_timög_°¨t_id
—, id, 
__FUNCTION__
, 
__FILE__
, 
__LINE__
)

	)

310 
	#PMIX_TIMING_MSTART
(
x
Ë
	`pmix_timög_°¨t_öô
–
pmix_timög_¥ï_ev
 x, 
__FUNCTION__
, 
__FILE__
, 
__LINE__
)

	)

320 
	#PMIX_TIMING_MSTOP
(
t
Ë
	`pmix_timög_íd
—, -1, 
__FUNCTION__
, 
__FILE__
, 
__LINE__
)

	)

330 
	#PMIX_TIMING_MSTOP_ID
(
t
, 
id
Ë
	`pmix_timög_íd
—, id, 
__FUNCTION__
, 
__FILE__
, 
__LINE__
)

	)

345 
	#PMIX_TIMING_MNEXT
(
x
) ( \

346 
	`pmix_timög_íd_¥ï
(
pmix_timög_¥ï_ev_íd
 
x
, \

347 
__FUNCTION__
, 
__FILE__
, 
__LINE__
 ), \

348 
	`pmix_timög_°¨t_öô
–
pmix_timög_¥ï_ev
 
x
, \

349 
__FUNCTION__
, 
__FILE__
, 
__LINE__
) \

350 )

	)

360 
	#PMIX_TIMING_REPORT
(
íabÀ
, 
t
) { \

361 if–
íabÀ
 ) { \

362 
	`pmix_timög_ªp‹t
(
t
, 
pmix_timög_ouçut
); \

364 }

	)

374 
	#PMIX_TIMING_DELTAS
(
íabÀ
, 
t
) { \

375 if–
íabÀ
 ) { \

376 
	`pmix_timög_dñès
(
t
, 
pmix_timög_ouçut
); \

378 }

	)

387 
	#PMIX_TIMING_RELEASE
(
t
Ë
	`pmix_timög_ªÀa£
—)

	)

391 
	#PMIX_TIMING_ID
(
n
, 
r
)

	)

393 
	#PMIX_TIMING_DECLARE
(
t
)

	)

395 
	#PMIX_TIMING_DECLARE_EXT
(
x
, 
t
)

	)

397 
	#PMIX_TIMING_INIT
(
t
)

	)

399 
	#PMIX_TIMING_EVENT
(
x
)

	)

401 
	#PMIX_TIMING_MDESCR
(
x
)

	)

403 
	#PMIX_TIMING_MSTART_ID
(
t
, 
id
)

	)

405 
	#PMIX_TIMING_MSTART
(
x
)

	)

407 
	#PMIX_TIMING_MSTOP
(
t
)

	)

409 
	#PMIX_TIMING_MSTOP_ID
(
t
, 
id
)

	)

411 
	#PMIX_TIMING_MNEXT
(
x
)

	)

413 
	#PMIX_TIMING_REPORT
(
íabÀ
, 
t
)

	)

415 
	#PMIX_TIMING_DELTAS
(
íabÀ
, 
t
)

	)

417 
	#PMIX_TIMING_RELEASE
(
t
)

	)

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

23 #ifdef 
_ASSERT_H


25 #unde‡
_ASSERT_H


26 #unde‡
as£π


27 #unde‡
__ASSERT_VOID_CAST


29 #ifdef 
__USE_GNU


30 #unde‡
as£π_≥º‹


35 
	#_ASSERT_H
 1

	)

36 
	~<„©uªs.h
>

38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

39 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

41 
	#__ASSERT_VOID_CAST
 ()

	)

49 #ifdef 
NDEBUG


51 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

59 #ifdef 
__USE_GNU


60 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

65 
__BEGIN_DECLS


68 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

69 
__löe
, c⁄° *
__fun˘i⁄
)

70 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

73 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

74 
__löe
, c⁄° *
__fun˘i⁄
)

75 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

80 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

81 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
__END_DECLS


86 
	#as£π
(
ex¥
) \

87 ((
ex¥
) \

88 ? 
	`__ASSERT_VOID_CAST
 (0) \

89 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

91 #ifdef 
__USE_GNU


92 
	#as£π_≥º‹
(
î∫um
) \

93 (!(
î∫um
) \

94 ? 
	`__ASSERT_VOID_CAST
 (0) \

95 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

103 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

104 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

106 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

107 
	#__ASSERT_FUNCTION
 
__func__


	)

109 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

116 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


118 #unde‡
°©ic_as£π


119 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


	@/usr/include/dlfcn.h

20 #i‚def 
_DLFCN_H


21 
	#_DLFCN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<bôs/dlf˙.h
>

31 #ifde‡
__USE_GNU


36 
	#RTLD_NEXT
 ((*Ë-1l)

	)

41 
	#RTLD_DEFAULT
 ((*Ë0)

	)

45 
	tLmid_t
;

48 
	#LM_ID_BASE
 0

	)

49 
	#LM_ID_NEWLM
 -1

	)

53 
__BEGIN_DECLS


57 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROW
;

61 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

66 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

68 #ifde‡
__USE_GNU


70 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROW
;

74 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

75 c⁄° *
__ª°ri˘
 
__«me
,

76 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

77 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

83 *
	$dÀº‹
 (Ë
__THROW
;

86 #ifde‡
__USE_GNU


91 c⁄° *
dli_‚ame
;

92 *
dli_fba£
;

93 c⁄° *
dli_¢ame
;

94 *
dli_ßddr
;

95 } 
	tDl_öfo
;

99 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

100 
__THROW
 
	`__n⁄nuŒ
 ((2));

103 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

104 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
RTLD_DL_SYMENT
 = 1,

115 
RTLD_DL_LINKMAP
 = 2

124 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

125 
__ªque°
, *
__ª°ri˘
 
__¨g
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

132 
RTLD_DI_LMID
 = 1,

136 
RTLD_DI_LINKMAP
 = 2,

138 
RTLD_DI_CONFIGADDR
 = 3,

145 
RTLD_DI_SERINFO
 = 4,

146 
RTLD_DI_SERINFOSIZE
 = 5,

150 
RTLD_DI_ORIGIN
 = 6,

152 
RTLD_DI_PROFILENAME
 = 7,

153 
RTLD_DI_PROFILEOUT
 = 8,

158 
RTLD_DI_TLS_MODID
 = 9,

164 
RTLD_DI_TLS_DATA
 = 10,

166 
RTLD_DI_MAX
 = 10

174 *
dls_«me
;

175 
dls_Êags
;

176 } 
	tDl_£Ω©h
;

182 
size_t
 
dls_size
;

183 
dls_˙t
;

184 
Dl_£Ω©h
 
dls_£Ω©h
[1];

185 } 
	tDl_£röfo
;

189 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

132 #ifde‡
__USE_ATFILE


133 
	#AT_FDCWD
 -100

	)

136 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

137 
	#AT_REMOVEDIR
 0x200

	)

139 
	#AT_SYMLINK_FOLLOW
 0x400

	)

140 #ifde‡
__USE_GNU


141 
	#AT_NO_AUTOMOUNT
 0x800

	)

143 
	#AT_EMPTY_PATH
 0x1000

	)

145 
	#AT_EACCESS
 0x200

	)

154 
f˙é
 (
__fd
, 
__cmd
, ...);

162 #i‚de‡
__USE_FILE_OFFSET64


163 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#›í
 
›í64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_ATFILE


186 #i‚de‡
__USE_FILE_OFFSET64


187 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

188 
	`__n⁄nuŒ
 ((2));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

192 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

194 
	#›í©
 
›í©64


	)

197 #ifde‡
__USE_LARGEFILE64


198 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

199 
	`__n⁄nuŒ
 ((2));

208 #i‚de‡
__USE_FILE_OFFSET64


209 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__REDIRECT


212 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

213 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

215 
	#¸ót
 
¸ót64


	)

218 #ifde‡
__USE_LARGEFILE64


219 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

222 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

223 && !
deföed
 
__USE_POSIX
))

232 
	#F_ULOCK
 0

	)

233 
	#F_LOCK
 1

	)

234 
	#F_TLOCK
 2

	)

235 
	#F_TEST
 3

	)

237 #i‚de‡
__USE_FILE_OFFSET64


238 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

240 #ifde‡
__REDIRECT


241 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

243 
	#lockf
 
lockf64


	)

246 #ifde‡
__USE_LARGEFILE64


247 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

251 #ifde‡
__USE_XOPEN2K


254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

256 
__advi£
Ë
__THROW
;

258 #ifde‡
__REDIRECT_NTH


259 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

260 
__off64_t
 
__Àn
, 
__advi£
),

261 
posix_Ádvi£64
);

263 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

266 #ifde‡
__USE_LARGEFILE64


267 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

268 
__advi£
Ë
__THROW
;

276 #i‚de‡
__USE_FILE_OFFSET64


277 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

279 #ifde‡
__REDIRECT


280 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

281 
__off64_t
 
__Àn
),

282 
posix_ÁŒoˇã64
);

284 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

287 #ifde‡
__USE_LARGEFILE64


288 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

294 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

295 && 
deföed
 
__va_¨g_∑ck_Àn


296 
	~<bôs/f˙é2.h
>

299 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

46 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


48 #i‡
__WORDSIZE
 == 64

49 
	#__PRI64_PREFIX
 "l"

	)

50 
	#__PRIPTR_PREFIX
 "l"

	)

52 
	#__PRI64_PREFIX
 "Œ"

	)

53 
	#__PRIPTR_PREFIX


	)

59 
	#PRId8
 "d"

	)

60 
	#PRId16
 "d"

	)

61 
	#PRId32
 "d"

	)

62 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdLEAST8
 "d"

	)

65 
	#PRIdLEAST16
 "d"

	)

66 
	#PRIdLEAST32
 "d"

	)

67 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

69 
	#PRIdFAST8
 "d"

	)

70 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

71 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

75 
	#PRIi8
 "i"

	)

76 
	#PRIi16
 "i"

	)

77 
	#PRIi32
 "i"

	)

78 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiLEAST8
 "i"

	)

81 
	#PRIiLEAST16
 "i"

	)

82 
	#PRIiLEAST32
 "i"

	)

83 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

85 
	#PRIiFAST8
 "i"

	)

86 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

87 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

91 
	#PRIo8
 "o"

	)

92 
	#PRIo16
 "o"

	)

93 
	#PRIo32
 "o"

	)

94 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoLEAST8
 "o"

	)

97 
	#PRIoLEAST16
 "o"

	)

98 
	#PRIoLEAST32
 "o"

	)

99 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

101 
	#PRIoFAST8
 "o"

	)

102 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

103 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

107 
	#PRIu8
 "u"

	)

108 
	#PRIu16
 "u"

	)

109 
	#PRIu32
 "u"

	)

110 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuLEAST8
 "u"

	)

113 
	#PRIuLEAST16
 "u"

	)

114 
	#PRIuLEAST32
 "u"

	)

115 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

117 
	#PRIuFAST8
 "u"

	)

118 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

119 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

123 
	#PRIx8
 "x"

	)

124 
	#PRIx16
 "x"

	)

125 
	#PRIx32
 "x"

	)

126 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxLEAST8
 "x"

	)

129 
	#PRIxLEAST16
 "x"

	)

130 
	#PRIxLEAST32
 "x"

	)

131 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

133 
	#PRIxFAST8
 "x"

	)

134 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

135 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

139 
	#PRIX8
 "X"

	)

140 
	#PRIX16
 "X"

	)

141 
	#PRIX32
 "X"

	)

142 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXLEAST8
 "X"

	)

145 
	#PRIXLEAST16
 "X"

	)

146 
	#PRIXLEAST32
 "X"

	)

147 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

149 
	#PRIXFAST8
 "X"

	)

150 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

151 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

156 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

157 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

158 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

159 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

160 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

161 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

165 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

166 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

167 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

168 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

169 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

170 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

176 
	#SCNd8
 "hhd"

	)

177 
	#SCNd16
 "hd"

	)

178 
	#SCNd32
 "d"

	)

179 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdLEAST8
 "hhd"

	)

182 
	#SCNdLEAST16
 "hd"

	)

183 
	#SCNdLEAST32
 "d"

	)

184 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

186 
	#SCNdFAST8
 "hhd"

	)

187 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

188 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

192 
	#SCNi8
 "hhi"

	)

193 
	#SCNi16
 "hi"

	)

194 
	#SCNi32
 "i"

	)

195 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiLEAST8
 "hhi"

	)

198 
	#SCNiLEAST16
 "hi"

	)

199 
	#SCNiLEAST32
 "i"

	)

200 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

202 
	#SCNiFAST8
 "hhi"

	)

203 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

204 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

208 
	#SCNu8
 "hhu"

	)

209 
	#SCNu16
 "hu"

	)

210 
	#SCNu32
 "u"

	)

211 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuLEAST8
 "hhu"

	)

214 
	#SCNuLEAST16
 "hu"

	)

215 
	#SCNuLEAST32
 "u"

	)

216 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

218 
	#SCNuFAST8
 "hhu"

	)

219 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

220 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

224 
	#SCNo8
 "hho"

	)

225 
	#SCNo16
 "ho"

	)

226 
	#SCNo32
 "o"

	)

227 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoLEAST8
 "hho"

	)

230 
	#SCNoLEAST16
 "ho"

	)

231 
	#SCNoLEAST32
 "o"

	)

232 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

234 
	#SCNoFAST8
 "hho"

	)

235 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

236 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

240 
	#SCNx8
 "hhx"

	)

241 
	#SCNx16
 "hx"

	)

242 
	#SCNx32
 "x"

	)

243 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxLEAST8
 "hhx"

	)

246 
	#SCNxLEAST16
 "hx"

	)

247 
	#SCNxLEAST32
 "x"

	)

248 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

250 
	#SCNxFAST8
 "hhx"

	)

251 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

252 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

257 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

258 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

259 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

260 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

261 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

264 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

265 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

266 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

267 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

268 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

273 
	g__BEGIN_DECLS


275 #i‡
__WORDSIZE
 == 64

280 
	mquŸ
;

281 
	mªm
;

282 } 
	timaxdiv_t
;

289 
	mquŸ
;

290 
	mªm
;

291 } 
	timaxdiv_t
;

297 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

300 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

301 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

304 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

308 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

309 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

312 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

313 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

314 
__THROW
;

317 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

318 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

319 
__THROW
;

321 #ifde‡
__USE_EXTERN_INLINES


323 #i‡
__WORDSIZE
 == 64

325 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

326 **
__ª°ri˘
 
__íd±r
,

327 
__ba£
, 
__group
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

330 
__exã∫_ölöe
 
ötmax_t


331 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

332 
ba£
))

334  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

335 
	}
}

337 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 ** 
__ª°ri˘
 
__íd±r
,

339 
__ba£
, 
__group
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

342 
__exã∫_ölöe
 
uötmax_t


343 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

344 
ba£
))

346  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

347 
	}
}

349 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

350 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

351 
__ba£
, 
__group
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

354 
__exã∫_ölöe
 
ötmax_t


355 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

356 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

358  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

359 
	}
}

361 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

362 
__ª°ri˘
 
__≈å
,

363 
__gwch¨_t
 **

364 
__ª°ri˘
 
__íd±r
,

365 
__ba£
, 
__group
)

366 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

368 
__exã∫_ölöe
 
uötmax_t


369 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

370 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

372  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

373 
	}
}

377 
__exãnsi⁄__


378 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

379 **
__ª°ri˘
 
__íd±r
,

380 
__ba£
, 
__group
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

383 
__exã∫_ölöe
 
ötmax_t


384 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

385 
ba£
))

387  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

388 
	}
}

390 
__exãnsi⁄__


391 
	$__°πouŒ_öã∫Æ
 (const *

392 
__ª°ri˘
 
__≈å
,

394 
__ª°ri˘
 
__íd±r
,

395 
__ba£
,

396 
__group
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

399 
__exã∫_ölöe
 
uötmax_t


400 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

401 
ba£
))

403  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

404 
	}
}

406 
__exãnsi⁄__


407 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

409 
__ba£
, 
__group
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

412 
__exã∫_ölöe
 
ötmax_t


413 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

414 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

416  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

417 
	}
}

420 
__exãnsi⁄__


421 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

422 
__ª°ri˘
 
__≈å
,

423 
__gwch¨_t
 **

424 
__ª°ri˘
 
__íd±r
,

425 
__ba£
,

426 
__group
)

427 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

429 
__exã∫_ölöe
 
uötmax_t


430 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

431 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

433  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

434 
	}
}

439 
	g__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/mntent.h

19 #i‚def 
_MNTENT_H


20 
	#_MNTENT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_FILE


	)

24 
	~<°dio.h
>

25 
	~<∑ths.h
>

29 
	#MNTTAB
 
_PATH_MNTTAB


	)

32 
	#MOUNTED
 
_PATH_MOUNTED


	)

36 
	#MNTTYPE_IGNORE
 "ign‹e"

	)

37 
	#MNTTYPE_NFS
 "nfs"

	)

38 
	#MNTTYPE_SWAP
 "sw≠"

	)

42 
	#MNTOPT_DEFAULTS
 "deÁu…s"

	)

43 
	#MNTOPT_RO
 "ro"

	)

44 
	#MNTOPT_RW
 "rw"

	)

45 
	#MNTOPT_SUID
 "suid"

	)

46 
	#MNTOPT_NOSUID
 "nosuid"

	)

47 
	#MNTOPT_NOAUTO
 "nﬂuto"

	)

50 
__BEGIN_DECLS


53 
	sm¡ít


55 *
	mm¡_f¢ame
;

56 *
	mm¡_dú
;

57 *
	mm¡_ty≥
;

58 *
	mm¡_›ts
;

59 
	mm¡_‰eq
;

60 
	mm¡_∑s¢o
;

66 
FILE
 *
	$£tm¡ít
 (c⁄° *
__fûe
, c⁄° *
__mode
Ë
__THROW
;

71 
m¡ít
 *
	$gëm¡ít
 (
FILE
 *
__°ªam
Ë
__THROW
;

73 #ifde‡
__USE_MISC


75 
m¡ít
 *
	$gëm¡ít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

76 
m¡ít
 *
__ª°ri˘
 
__ªsu…
,

77 *
__ª°ri˘
 
__buf„r
,

78 
__bufsize
Ë
__THROW
;

83 
	$addm¡ít
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

84 c⁄° 
m¡ít
 *
__ª°ri˘
 
__m¡
Ë
__THROW
;

87 
	$ídm¡ít
 (
FILE
 *
__°ªam
Ë
__THROW
;

91 *
	$hasm¡›t
 (c⁄° 
m¡ít
 *
__m¡
,

92 c⁄° *
__›t
Ë
__THROW
;

95 
__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__unu£d
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<sys/sockë.h
>

25 
	~<bôs/ty≥s.h
>

28 
__BEGIN_DECLS


33 
	mIPPROTO_IP
 = 0,

34 
	#IPPROTO_IP
 
IPPROTO_IP


	)

35 
	mIPPROTO_HOPOPTS
 = 0,

36 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

37 
	mIPPROTO_ICMP
 = 1,

38 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

39 
	mIPPROTO_IGMP
 = 2,

40 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

41 
	mIPPROTO_IPIP
 = 4,

42 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

43 
	mIPPROTO_TCP
 = 6,

44 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

45 
	mIPPROTO_EGP
 = 8,

46 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

47 
	mIPPROTO_PUP
 = 12,

48 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

49 
	mIPPROTO_UDP
 = 17,

50 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

51 
	mIPPROTO_IDP
 = 22,

52 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

53 
	mIPPROTO_TP
 = 29,

54 
	#IPPROTO_TP
 
IPPROTO_TP


	)

55 
	mIPPROTO_DCCP
 = 33,

56 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

57 
	mIPPROTO_IPV6
 = 41,

58 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

59 
	mIPPROTO_ROUTING
 = 43,

60 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

61 
	mIPPROTO_FRAGMENT
 = 44,

62 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

63 
	mIPPROTO_RSVP
 = 46,

64 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

65 
	mIPPROTO_GRE
 = 47,

66 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

67 
	mIPPROTO_ESP
 = 50,

68 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

69 
	mIPPROTO_AH
 = 51,

70 
	#IPPROTO_AH
 
IPPROTO_AH


	)

71 
	mIPPROTO_ICMPV6
 = 58,

72 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

73 
	mIPPROTO_NONE
 = 59,

74 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

75 
	mIPPROTO_DSTOPTS
 = 60,

76 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

77 
	mIPPROTO_MTP
 = 92,

78 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

79 
	mIPPROTO_ENCAP
 = 98,

80 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

81 
	mIPPROTO_PIM
 = 103,

82 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

83 
	mIPPROTO_COMP
 = 108,

84 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

85 
	mIPPROTO_SCTP
 = 132,

86 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

87 
	mIPPROTO_UDPLITE
 = 136,

88 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

89 
	mIPPROTO_RAW
 = 255,

90 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

91 
	mIPPROTO_MAX


96 
uöt16_t
 
	tö_p‹t_t
;

101 
	mIPPORT_ECHO
 = 7,

102 
	mIPPORT_DISCARD
 = 9,

103 
	mIPPORT_SYSTAT
 = 11,

104 
	mIPPORT_DAYTIME
 = 13,

105 
	mIPPORT_NETSTAT
 = 15,

106 
	mIPPORT_FTP
 = 21,

107 
	mIPPORT_TELNET
 = 23,

108 
	mIPPORT_SMTP
 = 25,

109 
	mIPPORT_TIMESERVER
 = 37,

110 
	mIPPORT_NAMESERVER
 = 42,

111 
	mIPPORT_WHOIS
 = 43,

112 
	mIPPORT_MTP
 = 57,

114 
	mIPPORT_TFTP
 = 69,

115 
	mIPPORT_RJE
 = 77,

116 
	mIPPORT_FINGER
 = 79,

117 
	mIPPORT_TTYLINK
 = 87,

118 
	mIPPORT_SUPDUP
 = 95,

121 
	mIPPORT_EXECSERVER
 = 512,

122 
	mIPPORT_LOGINSERVER
 = 513,

123 
	mIPPORT_CMDSERVER
 = 514,

124 
	mIPPORT_EFSSERVER
 = 520,

127 
	mIPPORT_BIFFUDP
 = 512,

128 
	mIPPORT_WHOSERVER
 = 513,

129 
	mIPPORT_ROUTESERVER
 = 520,

132 
	mIPPORT_RESERVED
 = 1024,

135 
	mIPPORT_USERRESERVED
 = 5000

140 
uöt32_t
 
	tö_addr_t
;

141 
	sö_addr


143 
ö_addr_t
 
	ms_addr
;

152 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

153 
	#IN_CLASSA_NET
 0xff000000

	)

154 
	#IN_CLASSA_NSHIFT
 24

	)

155 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

156 
	#IN_CLASSA_MAX
 128

	)

158 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

159 
	#IN_CLASSB_NET
 0xffff0000

	)

160 
	#IN_CLASSB_NSHIFT
 16

	)

161 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

162 
	#IN_CLASSB_MAX
 65536

	)

164 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

165 
	#IN_CLASSC_NET
 0xffffff00

	)

166 
	#IN_CLASSC_NSHIFT
 8

	)

167 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

169 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

170 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

172 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

173 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

176 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

178 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

180 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

183 
	#IN_LOOPBACKNET
 127

	)

185 #i‚de‡
INADDR_LOOPBACK


186 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

190 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

191 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

192 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

193 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

197 
	sö6_addr


201 
uöt8_t
 
	m__u6_addr8
[16];

202 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


203 
uöt16_t
 
	m__u6_addr16
[8];

204 
uöt32_t
 
	m__u6_addr32
[4];

206 } 
	m__ö6_u
;

207 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

208 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


209 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

210 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

214 c⁄° 
ö6_addr
 
ö6addr_™y
;

215 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

216 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

217 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

219 
	#INET_ADDRSTRLEN
 16

	)

220 
	#INET6_ADDRSTRLEN
 46

	)

224 
	ssockaddr_ö


226 
__SOCKADDR_COMMON
 (
sö_
);

227 
ö_p‹t_t
 
	msö_p‹t
;

228 
ö_addr
 
	msö_addr
;

231 
	msö_zîo
[ (
sockaddr
) -

232 
__SOCKADDR_COMMON_SIZE
 -

233  (
ö_p‹t_t
) -

234  (
ö_addr
)];

238 
	ssockaddr_ö6


240 
__SOCKADDR_COMMON
 (
sö6_
);

241 
ö_p‹t_t
 
	msö6_p‹t
;

242 
uöt32_t
 
	msö6_Êowöfo
;

243 
ö6_addr
 
	msö6_addr
;

244 
uöt32_t
 
	msö6_sc›e_id
;

248 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


250 
	sù_mªq


253 
ö_addr
 
	mimr_mu…üddr
;

256 
ö_addr
 
	mimr_öãrÁ˚
;

259 
	sù_mªq_sour˚


262 
ö_addr
 
	mimr_mu…üddr
;

265 
ö_addr
 
	mimr_öãrÁ˚
;

268 
ö_addr
 
	mimr_sour˚addr
;

274 
	sùv6_mªq


277 
ö6_addr
 
	mùv6mr_mu…üddr
;

280 
	mùv6mr_öãrÁ˚
;

284 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


286 
	sgroup_ªq


289 
uöt32_t
 
	mgr_öãrÁ˚
;

292 
sockaddr_°‹age
 
	mgr_group
;

295 
	sgroup_sour˚_ªq


298 
uöt32_t
 
	mg§_öãrÁ˚
;

301 
sockaddr_°‹age
 
	mg§_group
;

304 
sockaddr_°‹age
 
	mg§_sour˚
;

309 
	sù_msfûãr


312 
ö_addr
 
	mimsf_mu…üddr
;

315 
ö_addr
 
	mimsf_öãrÁ˚
;

318 
uöt32_t
 
	mimsf_fmode
;

321 
uöt32_t
 
	mimsf_num§c
;

323 
ö_addr
 
	mimsf_¶i°
[1];

326 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

327 -  (
ö_addr
) \

328 + (
num§c
Ë*  (
ö_addr
))

	)

330 
	sgroup_fûãr


333 
uöt32_t
 
	mgf_öãrÁ˚
;

336 
sockaddr_°‹age
 
	mgf_group
;

339 
uöt32_t
 
	mgf_fmode
;

342 
uöt32_t
 
	mgf_num§c
;

344 
sockaddr_°‹age
 
	mgf_¶i°
[1];

347 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

348 -  (
sockaddr_°‹age
) \

349 + ((
num§c
) \

350 *  (
sockaddr_°‹age
)))

	)

355 
	~<bôs/ö.h
>

364 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

365 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

366 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

367 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

368 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

369 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

370 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

372 
	~<ídün.h
>

375 
	~<bôs/byãsw≠.h
>

377 #ifde‡
__OPTIMIZE__


381 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


384 
	#¡ohl
(
x
Ë(x)

	)

385 
	#¡ohs
(
x
Ë(x)

	)

386 
	#ht⁄l
(
x
Ë(x)

	)

387 
	#ht⁄s
(
x
Ë(x)

	)

389 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


390 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

391 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

392 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

393 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

398 #ifde‡
__GNUC__


399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (
__exãnsi⁄__
 \

401 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

402 
__a
->
s6_addr32
[0] == 0 \

403 && 
__a
->
s6_addr32
[1] == 0 \

404 && 
__a
->
s6_addr32
[2] == 0 \

405 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

407 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

408 (
__exãnsi⁄__
 \

409 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

410 
__a
->
s6_addr32
[0] == 0 \

411 && 
__a
->
s6_addr32
[1] == 0 \

412 && 
__a
->
s6_addr32
[2] == 0 \

413 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

415 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

416 (
__exãnsi⁄__
 \

417 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

418 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

420 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

421 (
__exãnsi⁄__
 \

422 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

423 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

425 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 
__a
->
s6_addr32
[0] == 0 \

429 && 
__a
->
s6_addr32
[1] == 0 \

430 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

432 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 
__a
->
s6_addr32
[0] == 0 \

436 && 
__a
->
s6_addr32
[1] == 0 \

437 && 
__a
->
s6_addr32
[2] == 0 \

438 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

440 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

441 (
__exãnsi⁄__
 \

442 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

443 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

444 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

445 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

446 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

447 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

449 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

450 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

451 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

452 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

453 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

455 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

456 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

457 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

458 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

459 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

461 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

462 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

463 =
	`ht⁄l
 (0x„800000))

	)

465 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

466 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

467 =
	`ht⁄l
 (0x„c00000))

	)

469 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

470 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

471 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

472 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

474 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

475 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

476 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

477 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

478 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

480 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

481 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

487 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

489 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


491 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

494 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

495 
__THROW
;

499 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

500 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

501 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

503 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

504 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

505 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

507 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

508 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

509 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

511 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

515 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

520 #ifde‡
__USE_GNU


521 
cmsghdr
;

524 
	sö6_pktöfo


526 
ö6_addr
 
ùi6_addr
;

527 
ùi6_ifödex
;

531 
	sù6_mtuöfo


533 
sockaddr_ö6
 
ù6m_addr
;

534 
uöt32_t
 
ù6m_mtu
;

539 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

540 
__THROW
 
__©åibuã_dïªˇãd__
;

541 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

542 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

543 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

544 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

545 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

546 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

547 
__mu…x
, 
__∂usy
)

548 
__THROW
 
__©åibuã_dïªˇãd__
;

549 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

550 
uöt8_t
 **
__çåp
)

551 
__THROW
 
__©åibuã_dïªˇãd__
;

552 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

553 
uöt8_t
 **
__çåp
, 
__ty≥
)

554 
__THROW
 
__©åibuã_dïªˇãd__
;

558 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

559 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

560 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

561 **
__d©abuÂ
Ë
__THROW
;

562 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

563 
__THROW
;

564 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

565 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

566 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

567 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

568 **
__d©abuÂ
Ë
__THROW
;

569 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

573 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

577 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

578 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

579 
__£gmíts
Ë
__THROW
;

580 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

581 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

582 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

583 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

584 
__THROW
;

590 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

591 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

592 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

593 
__THROW
;

596 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

597 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

598 
uöt32_t
 
__num§c
,

599 c⁄° 
ö_addr
 *
__¶i°
)

600 
__THROW
;

604 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

605 c⁄° 
sockaddr
 *
__group
,

606 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

607 
uöt32_t
 *
__num§c
,

608 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

611 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

612 c⁄° 
sockaddr
 *
__group
,

613 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

614 
uöt32_t
 
__num§c
,

615 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

618 
__END_DECLS


	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_GSHADOW
 "/ëc/gshadow"

	)

48 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

49 
	#_PATH_KMEM
 "/dev/kmem"

	)

50 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

51 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

52 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

53 
	#_PATH_MEM
 "/dev/mem"

	)

54 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

55 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

56 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

57 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

58 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

59 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

60 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

61 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

62 
	#_PATH_TTY
 "/dev/ây"

	)

63 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

64 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

65 
	#_PATH_VI
 "/u§/bö/vi"

	)

66 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

69 
	#_PATH_DEV
 "/dev/"

	)

70 
	#_PATH_TMP
 "/tmp/"

	)

71 
	#_PATH_VARDB
 "/v¨/db/"

	)

72 
	#_PATH_VARRUN
 "/v¨/run/"

	)

73 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


125 #i‡
__WORDSIZE
 == 64

126 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

131 
	#PTHREAD_RWLOCK_INITIALIZER
 \

132 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

133 #ifde‡
__USE_GNU


134 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

141 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

142 0, 0, 0, 0 } }

	)

144 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

145 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

146 0 } }

	)

156 
	mPTHREAD_INHERIT_SCHED
,

157 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

158 
	mPTHREAD_EXPLICIT_SCHED


159 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

166 
	mPTHREAD_SCOPE_SYSTEM
,

167 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

168 
	mPTHREAD_SCOPE_PROCESS


169 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

176 
	mPTHREAD_PROCESS_PRIVATE
,

177 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

178 
	mPTHREAD_PROCESS_SHARED


179 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

185 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

189 
	s_±hªad_˛ónup_buf„r


191 (*
	m__routöe
) (*);

192 *
	m__¨g
;

193 
	m__ˇn˚…y≥
;

194 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

200 
	mPTHREAD_CANCEL_ENABLE
,

201 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

202 
	mPTHREAD_CANCEL_DISABLE


203 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

207 
	mPTHREAD_CANCEL_DEFERRED
,

208 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

209 
	mPTHREAD_CANCEL_ASYNCHRONOUS


210 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

212 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

216 
	#PTHREAD_ONCE_INIT
 0

	)

219 #ifde‡
__USE_XOPEN2K


223 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

227 
__BEGIN_DECLS


232 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

233 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

234 *(*
__°¨t_routöe
) (*),

235 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

241 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

249 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

251 #ifde‡
__USE_GNU


254 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

262 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

263 c⁄° 
time•ec
 *
__ab°ime
);

270 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

274 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

277 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

278 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

286 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

293 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

294 *
__dëach°©e
)

295 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

298 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

299 
__dëach°©e
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

304 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

305 
size_t
 *
__gu¨dsize
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

310 
size_t
 
__gu¨dsize
)

311 
__THROW
 
	`__n⁄nuŒ
 ((1));

315 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

321 c⁄° 
sched_∑øm
 *
__ª°ri˘


322 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


326 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

330 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


335 
__©å
, *
__ª°ri˘
 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

340 
__öhîô
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1));

345 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

346 *
__ª°ri˘
 
__sc›e
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

350 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


355 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

363 *
__°ackaddr
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

367 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


368 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

374 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

375 
size_t
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1));

378 #ifde‡
__USE_XOPEN2K


380 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

381 **
__ª°ri˘
 
__°ackaddr
,

382 
size_t
 *
__ª°ri˘
 
__°acksize
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

388 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

389 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #ifde‡
__USE_GNU


395 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 c⁄° 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

402 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

403 
size_t
 
__˝u£tsize
,

404 
˝u_£t_t
 *
__˝u£t
)

405 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((2));

420 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

421 c⁄° 
sched_∑øm
 *
__∑øm
)

422 
__THROW
 
	`__n⁄nuŒ
 ((3));

425 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

426 *
__ª°ri˘
 
__pﬁicy
,

427 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

431 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

432 
__THROW
;

435 #ifde‡
__USE_GNU


437 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

438 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

442 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2));

447 #ifde‡
__USE_UNIX98


449 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

452 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

455 #ifde‡
__USE_GNU


460 
	$±hªad_yõld
 (Ë
__THROW
;

465 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

466 c⁄° 
˝u_£t_t
 *
__˝u£t
)

467 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

471 
˝u_£t_t
 *
__˝u£t
)

472 
__THROW
 
	`__n⁄nuŒ
 ((3));

485 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

486 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

497 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

501 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

504 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

509 
	`±hªad_ã°ˇn˚l
 ();

518 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

519 
__mask_was_ßved
;

520 } 
__ˇn˚l_jmp_buf
[1];

521 *
__∑d
[4];

522 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

525 #i‚de‡
__˛ónup_f˘_©åibuã


526 
	#__˛ónup_f˘_©åibuã


	)

531 
	s__±hªad_˛ónup_‰ame


533 (*
__ˇn˚l_routöe
) (*);

534 *
__ˇn˚l_¨g
;

535 
__do_ô
;

536 
__ˇn˚l_ty≥
;

539 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


540 #ifde‡
__˝lu•lus


542 ˛as†
	c__±hªad_˛ónup_˛ass


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

549 
public
:

550 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

551 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

552 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

553 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

554 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

555 &
__ˇn˚l_ty≥
); 
	}
}

556 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

566 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

568 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

572 
	#±hªad_˛ónup_p›
(
execuã
) \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

576 #ifde‡
__USE_GNU


580 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

582 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

583 
__˛‰ame
.
	`__de„r
 ()

	)

588 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

589 
__˛‰ame
.
	`__ª°‹e
 (); \

590 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

591 } 0)

	)

598 
__exã∫_ölöe
 

599 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

601 i‡(
__‰ame
->
__do_ô
)

602 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

603 
	}
}

612 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 };

	)

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
__˛‰ame
.
__do_ô
 = (
execuã
); \

623 } 0)

	)

625 #ifde‡
__USE_GNU


629 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

631 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

632 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

633 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

634 .
__do_ô
 = 1 }; \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

636 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

641 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

642 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

643 
__˛‰ame
.
__do_ô
 = (
execuã
); \

644 } 0)

	)

655 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

657 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

658 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

659 *
__ˇn˚l_¨g
 = (
¨g
); \

660 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

661 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

662 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

669 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

670 dÿ{

	)

671 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

672 
__˛ónup_f˘_©åibuã
;

676 
	#±hªad_˛ónup_p›
(
execuã
) \

679 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

680 i‡(
execuã
) \

681 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

682 } 0)

	)

683 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

684 
__˛ónup_f˘_©åibuã
;

686 #ifde‡
__USE_GNU


690 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

692 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

693 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

694 *
__ˇn˚l_¨g
 = (
¨g
); \

695 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

696 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

697 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

699 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

700 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

704 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

705 dÿ{

	)

706 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

707 
__˛ónup_f˘_©åibuã
;

712 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

715 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

716 i‡(
execuã
) \

717 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

718 
	}
} 0)

	)

719 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

720 
__˛ónup_f˘_©åibuã
;

724 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

725 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

726 #i‚de‡
SHARED


727 
	`__©åibuã__
 ((
__wók__
))

733 
__jmp_buf_èg
;

734 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

740 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

741 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

742 
__THROW
 
	`__n⁄nuŒ
 ((1));

745 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

750 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

753 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

754 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

756 #ifde‡
__USE_XOPEN2K


758 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 c⁄° 
time•ec
 *
__ª°ri˘


760 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

764 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

770 
__ª°ri˘
 
__muãx
,

771 *
__ª°ri˘
 
__¥io˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

776 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

777 
__¥io˚ûög
,

778 *
__ª°ri˘
 
__ﬁd_˚ûög
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

782 #ifde‡
__USE_XOPEN2K8


784 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 #ifde‡
__USE_GNU


787 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__psh¨ed
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__psh¨ed
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

815 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


817 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


818 
__©å
, *
__ª°ri˘
 
__köd
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

824 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

829 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

830 
__ª°ri˘
 
__©å
,

831 *
__ª°ri˘
 
__¥Ÿocﬁ
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

836 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

837 
__¥Ÿocﬁ
)

838 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

842 
__ª°ri˘
 
__©å
,

843 *
__ª°ri˘
 
__¥io˚ûög
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥io˚ûög
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_XOPEN2K


853 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

854 *
__robu°√ss
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 #ifde‡
__USE_GNU


857 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

858 *
__robu°√ss
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

863 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

864 
__robu°√ss
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_GNU


867 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__robu°√ss
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


881 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 c⁄° 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

908 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2K


912 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

913 c⁄° 
time•ec
 *
__ª°ri˘


914 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

918 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

934 
__ª°ri˘
 
__©å
,

935 *
__ª°ri˘
 
__psh¨ed
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

939 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

940 
__psh¨ed
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__¥ef
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

959 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

960 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

965 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

969 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

973 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

981 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

982 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

994 
	`__n⁄nuŒ
 ((1, 2, 3));

999 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1000 
__THROW
 
	`__n⁄nuŒ
 ((1));

1003 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1008 
__ª°ri˘
 
__©å
,

1009 *
__ª°ri˘
 
__psh¨ed
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1013 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1014 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 #ifde‡
__USE_XOPEN2K


1018 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__˛ockid_t
 
__˛ock_id
)

1026 
__THROW
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1035 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1040 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1044 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1048 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1052 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1060 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1061 
__©å
, 
__cou¡
)

1062 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1066 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1070 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1083 
__ª°ri˘
 
__©å
,

1084 *
__ª°ri˘
 
__psh¨ed
)

1085 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1088 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1089 
__psh¨ed
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1103 (*
__de°r_fun˘i⁄
) (*))

1104 
__THROW
 
	`__n⁄nuŒ
 ((1));

1107 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1110 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1113 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1114 c⁄° *
__poöãr
Ë
__THROW
 ;

1117 #ifde‡
__USE_XOPEN2K


1119 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1120 
__˛ockid_t
 *
__˛ock_id
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((2));

1136 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1137 (*
__∑ª¡
) (),

1138 (*
__chûd
Ë()Ë
__THROW
;

1141 #ifde‡
__USE_EXTERN_INLINES


1143 
__exã∫_ölöe
 

1144 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1146  
__thªad1
 =
__thªad2
;

1147 
	}
}

1150 
	g__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

146 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


148 #i‡
__WORDSIZE
 == 64

149 
	#__INT64_C
(
c
Ë¯## 
L


	)

150 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

152 
	#__INT64_C
(
c
Ë¯## 
LL


	)

153 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

159 
	#INT8_MIN
 (-128)

	)

160 
	#INT16_MIN
 (-32767-1)

	)

161 
	#INT32_MIN
 (-2147483647-1)

	)

162 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

164 
	#INT8_MAX
 (127)

	)

165 
	#INT16_MAX
 (32767)

	)

166 
	#INT32_MAX
 (2147483647)

	)

167 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

170 
	#UINT8_MAX
 (255)

	)

171 
	#UINT16_MAX
 (65535)

	)

172 
	#UINT32_MAX
 (4294967295U)

	)

173 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

177 
	#INT_LEAST8_MIN
 (-128)

	)

178 
	#INT_LEAST16_MIN
 (-32767-1)

	)

179 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

180 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

182 
	#INT_LEAST8_MAX
 (127)

	)

183 
	#INT_LEAST16_MAX
 (32767)

	)

184 
	#INT_LEAST32_MAX
 (2147483647)

	)

185 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

188 
	#UINT_LEAST8_MAX
 (255)

	)

189 
	#UINT_LEAST16_MAX
 (65535)

	)

190 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

191 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

195 
	#INT_FAST8_MIN
 (-128)

	)

196 #i‡
__WORDSIZE
 == 64

197 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

198 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

200 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

201 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

203 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

205 
	#INT_FAST8_MAX
 (127)

	)

206 #i‡
__WORDSIZE
 == 64

207 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

208 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

210 
	#INT_FAST16_MAX
 (2147483647)

	)

211 
	#INT_FAST32_MAX
 (2147483647)

	)

213 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

216 
	#UINT_FAST8_MAX
 (255)

	)

217 #i‡
__WORDSIZE
 == 64

218 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

219 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

221 
	#UINT_FAST16_MAX
 (4294967295U)

	)

222 
	#UINT_FAST32_MAX
 (4294967295U)

	)

224 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

228 #i‡
__WORDSIZE
 == 64

229 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

230 
	#INTPTR_MAX
 (9223372036854775807L)

	)

231 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

233 
	#INTPTR_MIN
 (-2147483647-1)

	)

234 
	#INTPTR_MAX
 (2147483647)

	)

235 
	#UINTPTR_MAX
 (4294967295U)

	)

240 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

242 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

245 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

251 #i‡
__WORDSIZE
 == 64

252 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

253 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

255 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

256 
	#PTRDIFF_MAX
 (2147483647)

	)

260 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

261 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#SIZE_MAX
 (18446744073709551615UL)

	)

267 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

286 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


289 
	#INT8_C
(
c
Ë
	)
c

290 
	#INT16_C
(
c
Ë
	)
c

291 
	#INT32_C
(
c
Ë
	)
c

292 #i‡
__WORDSIZE
 == 64

293 
	#INT64_C
(
c
Ë¯## 
L


	)

295 
	#INT64_C
(
c
Ë¯## 
LL


	)

299 
	#UINT8_C
(
c
Ë
	)
c

300 
	#UINT16_C
(
c
Ë
	)
c

301 
	#UINT32_C
(
c
Ë¯## 
U


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#UINT64_C
(
c
Ë¯## 
UL


	)

305 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

309 #i‡
__WORDSIZE
 == 64

310 
	#INTMAX_C
(
c
Ë¯## 
L


	)

311 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

313 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

314 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

33 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

36 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


40 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

41 
__THROW
 
__©åibuã_puª__
;

44 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

47 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

50 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


53 *
	`ödex
 (*
__s
, 
__c
)

54 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

55 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

56 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


59 
__exã∫_Æways_ölöe
 *

60 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


62  
	`__buûtö_ödex
 (
__s
, 
__c
);

65 
__exã∫_Æways_ölöe
 const *

66 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


68  
	`__buûtö_ödex
 (
__s
, 
__c
);

71 
	}
}

73 *
	$ödex
 (c⁄° *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


81 *
	`rödex
 (*
__s
, 
__c
)

82 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

83 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

84 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


87 
__exã∫_Æways_ölöe
 *

88 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


90  
	`__buûtö_rödex
 (
__s
, 
__c
);

93 
__exã∫_Æways_ölöe
 const *

94 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


96  
	`__buûtö_rödex
 (
__s
, 
__c
);

99 
	}
}

101 *
	$rödex
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


109 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

113 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

114 
__THROW
 
__©åibuã_puª__
;

117 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
;

120 #ifdef 
__USE_XOPEN2K8


124 
	~<xloˇÀ.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

131 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

132 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

133 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

136 
__END_DECLS


	@/usr/include/sys/file.h

18 #i‚def 
_SYS_FILE_H


19 
	#_SYS_FILE_H
 1

	)

21 
	~<„©uªs.h
>

23 #i‚def 
_FCNTL_H


24 
	~<f˙é.h
>

27 
	g__BEGIN_DECLS


32 #i‚de‡
L_SET


33 
	#L_SET
 0

	)

34 
	#L_INCR
 1

	)

35 
	#L_XTND
 2

	)

40 
	#LOCK_SH
 1

	)

41 
	#LOCK_EX
 2

	)

42 
	#LOCK_UN
 8

	)

45 
	#LOCK_NB
 4

	)

50 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

53 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_BSD


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/mount.h

21 #i‚de‡
_SYS_MOUNT_H


22 
	#_SYS_MOUNT_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<sys/io˘l.h
>

27 
	#BLOCK_SIZE
 1024

	)

28 
	#BLOCK_SIZE_BITS
 10

	)

35 
	mMS_RDONLY
 = 1,

36 
	#MS_RDONLY
 
MS_RDONLY


	)

37 
	mMS_NOSUID
 = 2,

38 
	#MS_NOSUID
 
MS_NOSUID


	)

39 
	mMS_NODEV
 = 4,

40 
	#MS_NODEV
 
MS_NODEV


	)

41 
	mMS_NOEXEC
 = 8,

42 
	#MS_NOEXEC
 
MS_NOEXEC


	)

43 
	mMS_SYNCHRONOUS
 = 16,

44 
	#MS_SYNCHRONOUS
 
MS_SYNCHRONOUS


	)

45 
	mMS_REMOUNT
 = 32,

46 
	#MS_REMOUNT
 
MS_REMOUNT


	)

47 
	mMS_MANDLOCK
 = 64,

48 
	#MS_MANDLOCK
 
MS_MANDLOCK


	)

49 
	mMS_DIRSYNC
 = 128,

50 
	#MS_DIRSYNC
 
MS_DIRSYNC


	)

51 
	mMS_NOATIME
 = 1024,

52 
	#MS_NOATIME
 
MS_NOATIME


	)

53 
	mMS_NODIRATIME
 = 2048,

54 
	#MS_NODIRATIME
 
MS_NODIRATIME


	)

55 
	mMS_BIND
 = 4096,

56 
	#MS_BIND
 
MS_BIND


	)

57 
	mMS_MOVE
 = 8192,

58 
	#MS_MOVE
 
MS_MOVE


	)

59 
	mMS_REC
 = 16384,

60 
	#MS_REC
 
MS_REC


	)

61 
	mMS_SILENT
 = 32768,

62 
	#MS_SILENT
 
MS_SILENT


	)

63 
	mMS_POSIXACL
 = 1 << 16,

64 
	#MS_POSIXACL
 
MS_POSIXACL


	)

65 
	mMS_UNBINDABLE
 = 1 << 17,

66 
	#MS_UNBINDABLE
 
MS_UNBINDABLE


	)

67 
	mMS_PRIVATE
 = 1 << 18,

68 
	#MS_PRIVATE
 
MS_PRIVATE


	)

69 
	mMS_SLAVE
 = 1 << 19,

70 
	#MS_SLAVE
 
MS_SLAVE


	)

71 
	mMS_SHARED
 = 1 << 20,

72 
	#MS_SHARED
 
MS_SHARED


	)

73 
	mMS_RELATIME
 = 1 << 21,

74 
	#MS_RELATIME
 
MS_RELATIME


	)

75 
	mMS_KERNMOUNT
 = 1 << 22,

76 
	#MS_KERNMOUNT
 
MS_KERNMOUNT


	)

77 
	mMS_I_VERSION
 = 1 << 23,

78 
	#MS_I_VERSION
 
MS_I_VERSION


	)

79 
	mMS_STRICTATIME
 = 1 << 24,

80 
	#MS_STRICTATIME
 
MS_STRICTATIME


	)

81 
	mMS_ACTIVE
 = 1 << 30,

82 
	#MS_ACTIVE
 
MS_ACTIVE


	)

83 
	mMS_NOUSER
 = 1 << 31

84 
	#MS_NOUSER
 
MS_NOUSER


	)

88 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

93 
	#MS_MGC_VAL
 0xc0ed0000

	)

94 
	#MS_MGC_MSK
 0xffff0000

	)

101 
	#BLKROSET
 
	`_IO
(0x12, 93Ë

	)

102 
	#BLKROGET
 
	`_IO
(0x12, 94Ë

	)

103 
	#BLKRRPART
 
	`_IO
(0x12, 95Ë

	)

104 
	#BLKGETSIZE
 
	`_IO
(0x12, 96Ë

	)

105 
	#BLKFLSBUF
 
	`_IO
(0x12, 97Ë

	)

106 
	#BLKRASET
 
	`_IO
(0x12, 98Ë

	)

107 
	#BLKRAGET
 
	`_IO
(0x12, 99Ë

	)

108 
	#BLKFRASET
 
	`_IO
(0x12,100Ë

	)

109 
	#BLKFRAGET
 
	`_IO
(0x12,101Ë

	)

110 
	#BLKSECTSET
 
	`_IO
(0x12,102Ë

	)

111 
	#BLKSECTGET
 
	`_IO
(0x12,103Ë

	)

112 
	#BLKSSZGET
 
	`_IO
(0x12,104Ë

	)

113 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

114 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

115 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

121 
	mMNT_FORCE
 = 1,

122 
	#MNT_FORCE
 
MNT_FORCE


	)

123 
	mMNT_DETACH
 = 2,

124 
	#MNT_DETACH
 
MNT_DETACH


	)

125 
	mMNT_EXPIRE
 = 4,

126 
	#MNT_EXPIRE
 
MNT_EXPIRE


	)

127 
	mUMOUNT_NOFOLLOW
 = 8

128 
	#UMOUNT_NOFOLLOW
 
UMOUNT_NOFOLLOW


	)

132 
__BEGIN_DECLS


135 
	$mou¡
 (c⁄° *
__•ecül_fûe
, c⁄° *
__dú
,

136 c⁄° *
__f°y≥
, 
__rwÊag
,

137 c⁄° *
__d©a
Ë
__THROW
;

140 
	$umou¡
 (c⁄° *
__•ecül_fûe
Ë
__THROW
;

143 
	$umou¡2
 (c⁄° *
__•ecül_fûe
, 
__Êags
Ë
__THROW
;

145 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‚de‡
NCARGS


54 #ifde‡
ARG_MAX


55 
	#NCARGS
 
ARG_MAX


	)

59 
	#NCARGS
 
INT_MAX


	)

65 #i‚de‡
NOGROUP


66 
	#NOGROUP
 65535

	)

68 #i‚de‡
NODEV


69 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

74 
	#DEV_BSIZE
 512

	)

78 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

79 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

80 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

81 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

84 #i‚de‡
howm™y


85 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

87 #ifde‡
__GNUC__


88 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

89 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

90 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

92 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

94 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

97 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

98 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 c⁄° 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

30 #ifde‡
__USE_GNU


32 
	~<bôs/sig£t.h
>

39 
	~<bôs/sockë.h
>

41 #ifde‡
__USE_BSD


44 
	sosockaddr


46 
	mß_Ámûy
;

47 
	mß_d©a
[14];

55 
	mSHUT_RD
 = 0,

56 
	#SHUT_RD
 
SHUT_RD


	)

57 
	mSHUT_WR
,

58 
	#SHUT_WR
 
SHUT_WR


	)

59 
	mSHUT_RDWR


60 
	#SHUT_RDWR
 
SHUT_RDWR


	)

69 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


70 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

71 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

75 
	#__SOCKADDR_ALLTYPES
 \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


94 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

95 uni⁄ { 
	m__SOCKADDR_ALLTYPES


96 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

97 #unde‡
__SOCKADDR_ONETYPE


100 #ifde‡
__USE_GNU


102 
	smmsghdr


104 
msghdr
 
	mmsg_hdr
;

105 
	mmsg_Àn
;

114 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

120 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

121 
__fds
[2]Ë
__THROW
;

124 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

125 
__THROW
;

128 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

129 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

138 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

142 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

143 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

150 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

157 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

164 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

165 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

166 
sockÀn_t
 
__addr_Àn
);

175 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

176 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

177 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

185 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

186 
__Êags
);

188 #ifde‡
__USE_GNU


194 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

195 
__vÀn
, 
__Êags
);

203 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

205 #ifde‡
__USE_GNU


211 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

212 
__vÀn
, 
__Êags
,

213 c⁄° 
time•ec
 *
__tmo
);

220 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

221 *
__ª°ri˘
 
__›tvÆ
,

222 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

227 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

228 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

234 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

244 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

245 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

247 #ifde‡
__USE_GNU


252 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

253 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

262 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

265 #ifde‡
__USE_XOPEN2K


267 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

271 #ifde‡
__USE_MISC


275 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

280 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


281 
	~<bôs/sockë2.h
>

284 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

31 || 
deföed
 
	g__USE_ATFILE


32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

35 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


36 
	#__√ed_time•ec


	)

38 
	~<time.h
>

41 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


44 #i‚de‡
__dev_t_deföed


45 
__dev_t
 
	tdev_t
;

46 
	#__dev_t_deföed


	)

49 #i‚de‡
__gid_t_deföed


50 
__gid_t
 
	tgid_t
;

51 
	#__gid_t_deföed


	)

54 #i‚de‡
__öo_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__öo_t
 
	töo_t
;

58 
__öo64_t
 
	töo_t
;

60 
	#__öo_t_deföed


	)

63 #i‚de‡
__mode_t_deföed


64 
__mode_t
 
	tmode_t
;

65 
	#__mode_t_deföed


	)

68 #i‚de‡
__∆ök_t_deföed


69 
__∆ök_t
 
	t∆ök_t
;

70 
	#__∆ök_t_deföed


	)

73 #i‚de‡
__off_t_deföed


74 #i‚de‡
__USE_FILE_OFFSET64


75 
__off_t
 
	toff_t
;

77 
__off64_t
 
	toff_t
;

79 
	#__off_t_deföed


	)

82 #i‚de‡
__uid_t_deföed


83 
__uid_t
 
	tuid_t
;

84 
	#__uid_t_deföed


	)

88 #ifde‡
__USE_UNIX98


89 #i‚de‡
__blk˙t_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__blk˙t_t
 
	tblk˙t_t
;

93 
__blk˙t64_t
 
	tblk˙t_t
;

95 
	#__blk˙t_t_deföed


	)

98 #i‚de‡
__blksize_t_deföed


99 
__blksize_t
 
	tblksize_t
;

100 
	#__blksize_t_deföed


	)

104 
	g__BEGIN_DECLS


106 
	~<bôs/°©.h
>

108 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


109 
	#S_IFMT
 
__S_IFMT


	)

110 
	#S_IFDIR
 
__S_IFDIR


	)

111 
	#S_IFCHR
 
__S_IFCHR


	)

112 
	#S_IFBLK
 
__S_IFBLK


	)

113 
	#S_IFREG
 
__S_IFREG


	)

114 #ifde‡
__S_IFIFO


115 
	#S_IFIFO
 
__S_IFIFO


	)

117 #ifde‡
__S_IFLNK


118 
	#S_IFLNK
 
__S_IFLNK


	)

120 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

121 && 
deföed
 
	g__S_IFSOCK


122 
	#S_IFSOCK
 
__S_IFSOCK


	)

128 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

130 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

131 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

132 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

133 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

134 #ifde‡
__S_IFIFO


135 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

137 #ifde‡
__S_IFLNK


138 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

141 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


142 
	#S_ISLNK
(
mode
Ë0

	)

145 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

146 && 
deföed
 
	g__S_IFSOCK


147 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

148 #ñi‡
deföed
 
__USE_XOPEN2K


149 
	#S_ISSOCK
(
mode
Ë0

	)

156 #ifdef 
__USE_POSIX199309


157 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

158 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

159 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

165 
	#S_ISUID
 
__S_ISUID


	)

166 
	#S_ISGID
 
__S_ISGID


	)

168 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


170 
	#S_ISVTX
 
__S_ISVTX


	)

173 
	#S_IRUSR
 
__S_IREAD


	)

174 
	#S_IWUSR
 
__S_IWRITE


	)

175 
	#S_IXUSR
 
__S_IEXEC


	)

177 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

179 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


180 
	#S_IREAD
 
S_IRUSR


	)

181 
	#S_IWRITE
 
S_IWUSR


	)

182 
	#S_IEXEC
 
S_IXUSR


	)

185 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

186 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

187 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

189 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

191 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

192 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

193 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

195 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

198 #ifdef 
__USE_BSD


200 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

201 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

202 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

204 
	#S_BLKSIZE
 512

	)

208 #i‚de‡
__USE_FILE_OFFSET64


210 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

211 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

215 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

217 #ifde‡
__REDIRECT_NTH


218 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

219 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

220 
	`__n⁄nuŒ
 ((1, 2));

221 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

222 
	`__n⁄nuŒ
 ((2));

224 
	#°©
 
°©64


	)

225 
	#f°©
 
f°©64


	)

228 #ifde‡
__USE_LARGEFILE64


229 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

230 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

231 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

234 #ifde‡
__USE_ATFILE


238 #i‚de‡
__USE_FILE_OFFSET64


239 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

241 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

243 #ifde‡
__REDIRECT_NTH


244 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

245 
°©
 *
__ª°ri˘
 
__buf
,

246 
__Êag
),

247 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

249 
	#f°©©
 
f°©©64


	)

253 #ifde‡
__USE_LARGEFILE64


254 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

255 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

256 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

260 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


261 #i‚de‡
__USE_FILE_OFFSET64


264 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

267 #ifde‡
__REDIRECT_NTH


268 
	`__REDIRECT_NTH
 (
l°©
,

269 (c⁄° *
__ª°ri˘
 
__fûe
,

270 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 
	#l°©
 
l°©64


	)

276 #ifde‡
__USE_LARGEFILE64


277 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

278 
°©64
 *
__ª°ri˘
 
__buf
)

279 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

285 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

286 
__THROW
 
	`__n⁄nuŒ
 ((1));

288 #ifde‡
__USE_BSD


292 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX


298 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

301 #ifde‡
__USE_ATFILE


304 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

305 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

315 #ifdef 
__USE_GNU


318 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

322 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

325 #ifde‡
__USE_ATFILE


329 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

330 
__THROW
 
	`__n⁄nuŒ
 ((2));

336 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


337 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

338 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 #ifde‡
__USE_ATFILE


344 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

345 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

351 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 #ifde‡
__USE_ATFILE


358 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2));

362 #ifde‡
__USE_ATFILE


365 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

366 c⁄° 
time•ec
 
__times
[2],

367 
__Êags
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2));

371 #ifde‡
__USE_XOPEN2K8


373 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

391 #i‚de‡
_STAT_VER


392 
	#_STAT_VER
 0

	)

394 #i‚de‡
_MKNOD_VER


395 
	#_MKNOD_VER
 0

	)

399 #i‚de‡
__USE_FILE_OFFSET64


400 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

401 
__THROW
 
	`__n⁄nuŒ
 ((3));

402 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

403 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

404 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

405 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

406 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

407 
°©
 *
__°©_buf
, 
__Êag
)

408 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

410 #ifde‡
__REDIRECT_NTH


411 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

412 
°©
 *
__°©_buf
), 
__fx°©64
)

413 
	`__n⁄nuŒ
 ((3));

414 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

415 
°©
 *
__°©_buf
), 
__x°©64
)

416 
	`__n⁄nuŒ
 ((2, 3));

417 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

418 
°©
 *
__°©_buf
), 
__lx°©64
)

419 
	`__n⁄nuŒ
 ((2, 3));

420 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

421 c⁄° *
__fûíame
,

422 
°©
 *
__°©_buf
, 
__Êag
),

423 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

426 
	#__fx°©
 
__fx°©64


	)

427 
	#__x°©
 
__x°©64


	)

428 
	#__lx°©
 
__lx°©64


	)

432 #ifde‡
__USE_LARGEFILE64


433 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

434 
__THROW
 
	`__n⁄nuŒ
 ((3));

435 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

436 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

437 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

438 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

439 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

440 
°©64
 *
__°©_buf
, 
__Êag
)

441 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

443 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

444 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

447 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

450 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


453 
__exã∫_ölöe
 

454 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

456  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

457 
	}
}

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


460 
__exã∫_ölöe
 

461 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

463  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

464 
	}
}

467 
__exã∫_ölöe
 

468 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

470  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

471 
	}
}

473 #ifde‡
__USE_ATFILE


474 
__exã∫_ölöe
 

475 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

476 
__Êag
))

478  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

479 
	}
}

482 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


483 
__exã∫_ölöe
 

484 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

486  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

487 
	}
}

490 #ifde‡
__USE_ATFILE


491 
__exã∫_ölöe
 

492 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

493 
__dev_t
 
__dev
))

495  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

496 
	}
}

499 #i‡
deföed
 
__USE_LARGEFILE64
 \

500 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

501 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

502 
__exã∫_ölöe
 

503 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

505  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

506 
	}
}

508 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


509 
__exã∫_ölöe
 

510 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

512  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

513 
	}
}

516 
__exã∫_ölöe
 

517 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

519  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

520 
	}
}

522 #ifde‡
__USE_ATFILE


523 
__exã∫_ölöe
 

524 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

525 
__Êag
))

527  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

528 
	}
}

535 
	g__END_DECLS


	@/usr/include/sys/statfs.h

19 #i‚def 
_SYS_STATFS_H


20 
	#_SYS_STATFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©fs.h
>

27 
	g__BEGIN_DECLS


30 #i‚de‡
__USE_FILE_OFFSET64


31 
	$°©fs
 (c⁄° *
__fûe
, 
°©fs
 *
__buf
)

32 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

34 #ifde‡
__REDIRECT_NTH


35 
	`__REDIRECT_NTH
 (
°©fs
,

36 (c⁄° *
__fûe
, 
°©fs
 *
__buf
),

37 
°©fs64
Ë
	`__n⁄nuŒ
 ((1, 2));

39 
	#°©fs
 
°©fs64


	)

42 #ifde‡
__USE_LARGEFILE64


43 
	$°©fs64
 (c⁄° *
__fûe
, 
°©fs64
 *
__buf
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$f°©fs
 (
__fûdes
, 
°©fs
 *
__buf
)

51 
__THROW
 
	`__n⁄nuŒ
 ((2));

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
f°©fs
, (
__fûdes
, 
°©fs
 *
__buf
),

55 
f°©fs64
Ë
	`__n⁄nuŒ
 ((2));

57 
	#f°©fs
 
f°©fs64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$f°©fs64
 (
__fûdes
, 
°©fs64
 *
__buf
)

62 
__THROW
 
	`__n⁄nuŒ
 ((2));

65 
__END_DECLS


	@/usr/include/sys/statvfs.h

19 #i‚def 
_SYS_STATVFS_H


20 
	#_SYS_STATVFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©vfs.h
>

27 #i‚de‡
__USE_FILE_OFFSET64


28 #i‚de‡
__fsblk˙t_t_deföed


29 
__fsblk˙t_t
 
	tfsblk˙t_t
;

30 
	#__fsblk˙t_t_deföed


	)

32 #i‚de‡
__fsfû˙t_t_deföed


33 
__fsfû˙t_t
 
	tfsfû˙t_t
;

34 
	#__fsfû˙t_t_deföed


	)

37 #i‚de‡
__fsblk˙t_t_deföed


38 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

39 
	#__fsblk˙t_t_deföed


	)

41 #i‚de‡
__fsfû˙t_t_deföed


42 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

43 
	#__fsfû˙t_t_deföed


	)

47 
	g__BEGIN_DECLS


50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$°©vfs
 (c⁄° *
__ª°ri˘
 
__fûe
,

52 
°©vfs
 *
__ª°ri˘
 
__buf
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

55 #ifde‡
__REDIRECT_NTH


56 
	`__REDIRECT_NTH
 (
°©vfs
,

57 (c⁄° *
__ª°ri˘
 
__fûe
,

58 
°©vfs
 *
__ª°ri˘
 
__buf
), 
°©vfs64
)

59 
	`__n⁄nuŒ
 ((1, 2));

61 
	#°©vfs
 
°©vfs64


	)

64 #ifde‡
__USE_LARGEFILE64


65 
	$°©vfs64
 (c⁄° *
__ª°ri˘
 
__fûe
,

66 
°©vfs64
 *
__ª°ri˘
 
__buf
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$f°©vfs
 (
__fûdes
, 
°©vfs
 *
__buf
)

74 
__THROW
 
	`__n⁄nuŒ
 ((2));

76 #ifde‡
__REDIRECT_NTH


77 
	`__REDIRECT_NTH
 (
f°©vfs
, (
__fûdes
, 
°©vfs
 *
__buf
),

78 
f°©vfs64
Ë
	`__n⁄nuŒ
 ((2));

80 
	#f°©vfs
 
f°©vfs64


	)

83 #ifde‡
__USE_LARGEFILE64


84 
	$f°©vfs64
 (
__fûdes
, 
°©vfs64
 *
__buf
)

85 
__THROW
 
	`__n⁄nuŒ
 ((2));

88 
__END_DECLS


	@/usr/include/sys/time.h

19 #i‚de‡
_SYS_TIME_H


20 
	#_SYS_TIME_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_time_t


	)

26 
	~<time.h
>

27 
	#__√ed_timevÆ


	)

28 
	~<bôs/time.h
>

30 
	~<sys/£À˘.h
>

32 #i‚de‡
__su£c⁄ds_t_deföed


33 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

34 
	#__su£c⁄ds_t_deföed


	)

38 
	g__BEGIN_DECLS


40 #ifde‡
__USE_GNU


42 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

43 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

44 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

45 }

	)

46 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

47 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

48 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

49 }

	)

53 #ifde‡
__USE_BSD


56 
	stimez⁄e


58 
	mtz_möuãswe°
;

59 
	mtz_d°time
;

62 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

64 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

72 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

73 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__USE_BSD


78 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

79 c⁄° 
timez⁄e
 *
__tz
)

80 
__THROW
;

86 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

87 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

92 
	e__ôimî_which


95 
ITIMER_REAL
 = 0,

96 
	#ITIMER_REAL
 
ITIMER_REAL


	)

98 
ITIMER_VIRTUAL
 = 1,

99 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

102 
ITIMER_PROF
 = 2

103 
	#ITIMER_PROF
 
ITIMER_PROF


	)

108 
	sôimîvÆ


111 
timevÆ
 
ô_öãrvÆ
;

113 
timevÆ
 
ô_vÆue
;

116 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


119 
__ôimî_which
 
	t__ôimî_which_t
;

121 
	t__ôimî_which_t
;

126 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

127 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

132 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

133 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

134 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

139 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

140 
__THROW
 
	`__n⁄nuŒ
 ((1));

142 #ifde‡
__USE_BSD


144 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

145 
__THROW
 
	`__n⁄nuŒ
 ((1));

148 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

151 #ifde‡
__USE_GNU


155 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

156 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

160 #ifde‡
__USE_BSD


163 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

164 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

165 
	#timîcmp
(
a
, 
b
, 
CMP
) \

166 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

167 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

168 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

169 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

171 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

172 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

173 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

175 ++(
ªsu…
)->
tv_£c
; \

176 (
ªsu…
)->
tv_u£c
 -= 1000000; \

178 
	}
} 0)

	)

179 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

181 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

182 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

183 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

184 --(
ªsu…
)->
tv_£c
; \

185 (
ªsu…
)->
tv_u£c
 += 1000000; \

187 } 0)

	)

190 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

167 #ñi‡
__GLIBC_HAVE_LONG_LONG


168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

178 #ñi‡
__GLIBC_HAVE_LONG_LONG


179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/sys/un.h

18 #i‚def 
_SYS_UN_H


19 
	#_SYS_UN_H
 1

	)

21 
	~<sys/cdefs.h
>

24 
	~<bôs/sockaddr.h
>

26 
__BEGIN_DECLS


29 
	ssockaddr_un


31 
__SOCKADDR_COMMON
 (
sun_
);

32 
	msun_∑th
[108];

36 #ifde‡
__USE_MISC


37 
	~<°rög.h
>

40 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

41 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

44 
	g__END_DECLS


	@/usr/include/sys/vfs.h

4 
	~<sys/°©fs.h
>

	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

635 #i‚de‡
__FAVOR_BSD


636 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

638 #ifde‡
__REDIRECT_NTH


639 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

641 
	#gëpgΩ
 
__gëpgid


	)

646 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

647 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


648 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

655 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

657 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


668 #i‚de‡
__FAVOR_BSD


672 
	$£çgΩ
 (Ë
__THROW
;

677 #ifde‡
__REDIRECT_NTH


678 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

680 
	#£çgΩ
 
£çgid


	)

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_BSD


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

792 *
	$ây«me
 (
__fd
Ë
__THROW
;

796 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

801 
	$ißây
 (
__fd
Ë
__THROW
;

803 #i‡
deföed
 
__USE_BSD
 \

804 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

807 
	$ây¶Ÿ
 (Ë
__THROW
;

812 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

815 #ifde‡
__USE_ATFILE


818 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
, 
__Êags
)

820 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

823 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


825 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

831 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

832 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

836 #ifde‡
__USE_ATFILE


838 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

839 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

842 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

843 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

844 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

848 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 #ifde‡
__USE_ATFILE


852 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2));

857 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

864 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

871 *
	`gëlogö
 ();

872 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


879 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_BSD


884 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifdef 
__USE_POSIX2


892 
	#__√ed_gë›t


	)

893 
	~<gë›t.h
>

897 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


901 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

908 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

913 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

919 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

921 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

928 
	$vh™gup
 (Ë
__THROW
;

931 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

939 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

940 
size_t
 
__off£t
, 
__sˇÀ
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

951 *
	$gëu£rshñl
 (Ë
__THROW
;

952 
	$ídu£rshñl
 (Ë
__THROW
;

953 
	$£tu£rshñl
 (Ë
__THROW
;

959 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

963 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

966 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

970 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

978 
	`fsync
 (
__fd
);

981 #ifde‡
__USE_GNU


984 
	$syncfs
 (
__fd
Ë
__THROW
;

988 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


991 
	`gëho°id
 ();

994 
	$sync
 (Ë
__THROW
;

997 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1000 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1005 
	$gëdèbÀsize
 (Ë
__THROW
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1014 #i‚de‡
__USE_FILE_OFFSET64


1015 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1016 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
åunˇã
,

1020 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1021 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 
	#åunˇã
 
åunˇã64


	)

1026 #ifde‡
__USE_LARGEFILE64


1027 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1033 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1034 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1037 #i‚de‡
__USE_FILE_OFFSET64


1038 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1040 #ifde‡
__REDIRECT_NTH


1041 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1042 
·runˇã64
Ë
__wur
;

1044 
	#·runˇã
 
·runˇã64


	)

1047 #ifde‡
__USE_LARGEFILE64


1048 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1054 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1055 || 
deföed
 
__USE_MISC


1059 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1065 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1069 #ifde‡
__USE_MISC


1080 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1085 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1097 
	#F_ULOCK
 0

	)

1098 
	#F_LOCK
 1

	)

1099 
	#F_TLOCK
 2

	)

1100 
	#F_TEST
 3

	)

1102 #i‚de‡
__USE_FILE_OFFSET64


1103 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1105 #ifde‡
__REDIRECT


1106 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1107 
lockf64
Ë
__wur
;

1109 
	#lockf
 
lockf64


	)

1112 #ifde‡
__USE_LARGEFILE64


1113 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1118 #ifde‡
__USE_GNU


1123 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1124 (
__exãnsi⁄__
 \

1125 ({ 
__ªsu…
; \

1126 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1127 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1128 
__ªsu…
; 
	}
}))

	)

1131 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1134 
fd©async
 (
__fûdes
);

1140 #ifdef 
__USE_XOPEN


1142 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1143 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1147 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1154 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1155 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1161 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1163 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1168 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1169 
	~<bôs/uni°d.h
>

1172 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 (()((((
x
Ë>> 8Ë& 0xffuË| (((xË& 0xffuË<< 8)))

	)

34 
	~<bôs/byãsw≠-16.h
>

37 
	#__bsw≠_c⁄°™t_32
(
x
) \

38 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) | \

39 (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

41 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 3)

43 
__ölöe
 

44 
	$__bsw≠_32
 (
__bsx
)

46  
	`__buûtö_bsw≠32
 (
__bsx
);

47 
	}
}

49 
	#__bsw≠_32
(
x
) \

50 (
__exãnsi⁄__
 \

51 ({ 
__bsx
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__bsx); }))

	)

54 
__ölöe
 

55 
	$__bsw≠_32
 (
__bsx
)

57  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

58 
	}
}

62 #i‡
__GNUC_PREREQ
 (2, 0)

63 
	#__bsw≠_c⁄°™t_64
(
x
) \

64 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

65 | (((
x
) & 0x00ff000000000000ull) >> 40) \

66 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

67 | (((
x
) & 0x000000ff00000000ull) >> 8) \

68 | (((
x
) & 0x00000000ff000000ull) << 8) \

69 | (((
x
) & 0x0000000000ff0000ull) << 24) \

70 | (((
x
) & 0x000000000000ff00ull) << 40) \

71 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

73 #i‡
__GNUC_PREREQ
 (4, 3)

74 
__ölöe
 
__uöt64_t


75 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

77  
	`__buûtö_bsw≠64
 (
__bsx
);

78 
	}
}

80 
	#__bsw≠_64
(
x
) \

81 (
__exãnsi⁄__
 \

82 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

83 
__l
[2]; } 
__w
, 
__r
; \

84 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

85 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

88 
__w
.
__Œ
 = (
x
); \

89 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

90 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

92 
__r
.
__Œ
; }))

	)

94 #ñi‡
__GLIBC_HAVE_LONG_LONG


95 
	#__bsw≠_c⁄°™t_64
(
x
) \

96 ((((
x
) & 0xff00000000000000ull) >> 56) \

97 | (((
x
) & 0x00ff000000000000ull) >> 40) \

98 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

99 | (((
x
) & 0x000000ff00000000ull) >> 8) \

100 | (((
x
) & 0x00000000ff000000ull) << 8) \

101 | (((
x
) & 0x0000000000ff0000ull) << 24) \

102 | (((
x
) & 0x000000000000ff00ull) << 40) \

103 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

105 
__ölöe
 
__uöt64_t


106 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

108  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

109 
	}
}

	@/usr/include/bits/confname.h

20 #i‚de‡
_UNISTD_H


27 
	m_PC_LINK_MAX
,

28 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

29 
	m_PC_MAX_CANON
,

30 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

31 
	m_PC_MAX_INPUT
,

32 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

33 
	m_PC_NAME_MAX
,

34 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

35 
	m_PC_PATH_MAX
,

36 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

37 
	m_PC_PIPE_BUF
,

38 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

39 
	m_PC_CHOWN_RESTRICTED
,

40 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

41 
	m_PC_NO_TRUNC
,

42 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

43 
	m_PC_VDISABLE
,

44 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

45 
	m_PC_SYNC_IO
,

46 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

47 
	m_PC_ASYNC_IO
,

48 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

49 
	m_PC_PRIO_IO
,

50 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

51 
	m_PC_SOCK_MAXBUF
,

52 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

53 
	m_PC_FILESIZEBITS
,

54 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

55 
	m_PC_REC_INCR_XFER_SIZE
,

56 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

57 
	m_PC_REC_MAX_XFER_SIZE
,

58 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

59 
	m_PC_REC_MIN_XFER_SIZE
,

60 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

61 
	m_PC_REC_XFER_ALIGN
,

62 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

63 
	m_PC_ALLOC_SIZE_MIN
,

64 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

65 
	m_PC_SYMLINK_MAX
,

66 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

67 
	m_PC_2_SYMLINKS


68 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

74 
	m_SC_ARG_MAX
,

75 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

76 
	m_SC_CHILD_MAX
,

77 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

78 
	m_SC_CLK_TCK
,

79 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

80 
	m_SC_NGROUPS_MAX
,

81 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

82 
	m_SC_OPEN_MAX
,

83 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

84 
	m_SC_STREAM_MAX
,

85 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

86 
	m_SC_TZNAME_MAX
,

87 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

88 
	m_SC_JOB_CONTROL
,

89 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

90 
	m_SC_SAVED_IDS
,

91 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

92 
	m_SC_REALTIME_SIGNALS
,

93 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

94 
	m_SC_PRIORITY_SCHEDULING
,

95 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

96 
	m_SC_TIMERS
,

97 
	#_SC_TIMERS
 
_SC_TIMERS


	)

98 
	m_SC_ASYNCHRONOUS_IO
,

99 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

100 
	m_SC_PRIORITIZED_IO
,

101 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

102 
	m_SC_SYNCHRONIZED_IO
,

103 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

104 
	m_SC_FSYNC
,

105 
	#_SC_FSYNC
 
_SC_FSYNC


	)

106 
	m_SC_MAPPED_FILES
,

107 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

108 
	m_SC_MEMLOCK
,

109 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

110 
	m_SC_MEMLOCK_RANGE
,

111 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

112 
	m_SC_MEMORY_PROTECTION
,

113 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

114 
	m_SC_MESSAGE_PASSING
,

115 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

116 
	m_SC_SEMAPHORES
,

117 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

118 
	m_SC_SHARED_MEMORY_OBJECTS
,

119 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

120 
	m_SC_AIO_LISTIO_MAX
,

121 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

122 
	m_SC_AIO_MAX
,

123 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

124 
	m_SC_AIO_PRIO_DELTA_MAX
,

125 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

126 
	m_SC_DELAYTIMER_MAX
,

127 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

128 
	m_SC_MQ_OPEN_MAX
,

129 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

130 
	m_SC_MQ_PRIO_MAX
,

131 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

132 
	m_SC_VERSION
,

133 
	#_SC_VERSION
 
_SC_VERSION


	)

134 
	m_SC_PAGESIZE
,

135 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

136 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

137 
	m_SC_RTSIG_MAX
,

138 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

139 
	m_SC_SEM_NSEMS_MAX
,

140 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

141 
	m_SC_SEM_VALUE_MAX
,

142 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

143 
	m_SC_SIGQUEUE_MAX
,

144 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

145 
	m_SC_TIMER_MAX
,

146 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

150 
	m_SC_BC_BASE_MAX
,

151 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

152 
	m_SC_BC_DIM_MAX
,

153 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

154 
	m_SC_BC_SCALE_MAX
,

155 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

156 
	m_SC_BC_STRING_MAX
,

157 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

158 
	m_SC_COLL_WEIGHTS_MAX
,

159 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

160 
	m_SC_EQUIV_CLASS_MAX
,

161 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

162 
	m_SC_EXPR_NEST_MAX
,

163 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

164 
	m_SC_LINE_MAX
,

165 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

166 
	m_SC_RE_DUP_MAX
,

167 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

168 
	m_SC_CHARCLASS_NAME_MAX
,

169 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

171 
	m_SC_2_VERSION
,

172 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

173 
	m_SC_2_C_BIND
,

174 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

175 
	m_SC_2_C_DEV
,

176 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

177 
	m_SC_2_FORT_DEV
,

178 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

179 
	m_SC_2_FORT_RUN
,

180 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

181 
	m_SC_2_SW_DEV
,

182 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

183 
	m_SC_2_LOCALEDEF
,

184 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

186 
	m_SC_PII
,

187 
	#_SC_PII
 
_SC_PII


	)

188 
	m_SC_PII_XTI
,

189 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

190 
	m_SC_PII_SOCKET
,

191 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

192 
	m_SC_PII_INTERNET
,

193 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

194 
	m_SC_PII_OSI
,

195 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

196 
	m_SC_POLL
,

197 
	#_SC_POLL
 
_SC_POLL


	)

198 
	m_SC_SELECT
,

199 
	#_SC_SELECT
 
_SC_SELECT


	)

200 
	m_SC_UIO_MAXIOV
,

201 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

202 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

203 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

204 
	m_SC_PII_INTERNET_STREAM
,

205 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

206 
	m_SC_PII_INTERNET_DGRAM
,

207 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

208 
	m_SC_PII_OSI_COTS
,

209 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

210 
	m_SC_PII_OSI_CLTS
,

211 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

212 
	m_SC_PII_OSI_M
,

213 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

214 
	m_SC_T_IOV_MAX
,

215 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

218 
	m_SC_THREADS
,

219 
	#_SC_THREADS
 
_SC_THREADS


	)

220 
	m_SC_THREAD_SAFE_FUNCTIONS
,

221 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

222 
	m_SC_GETGR_R_SIZE_MAX
,

223 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

224 
	m_SC_GETPW_R_SIZE_MAX
,

225 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

226 
	m_SC_LOGIN_NAME_MAX
,

227 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

228 
	m_SC_TTY_NAME_MAX
,

229 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

230 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

231 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

232 
	m_SC_THREAD_KEYS_MAX
,

233 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

234 
	m_SC_THREAD_STACK_MIN
,

235 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

236 
	m_SC_THREAD_THREADS_MAX
,

237 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

238 
	m_SC_THREAD_ATTR_STACKADDR
,

239 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

240 
	m_SC_THREAD_ATTR_STACKSIZE
,

241 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

242 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

243 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

244 
	m_SC_THREAD_PRIO_INHERIT
,

245 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

246 
	m_SC_THREAD_PRIO_PROTECT
,

247 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

248 
	m_SC_THREAD_PROCESS_SHARED
,

249 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

251 
	m_SC_NPROCESSORS_CONF
,

252 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

253 
	m_SC_NPROCESSORS_ONLN
,

254 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

255 
	m_SC_PHYS_PAGES
,

256 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

257 
	m_SC_AVPHYS_PAGES
,

258 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

259 
	m_SC_ATEXIT_MAX
,

260 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

261 
	m_SC_PASS_MAX
,

262 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

264 
	m_SC_XOPEN_VERSION
,

265 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

266 
	m_SC_XOPEN_XCU_VERSION
,

267 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

268 
	m_SC_XOPEN_UNIX
,

269 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

270 
	m_SC_XOPEN_CRYPT
,

271 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

272 
	m_SC_XOPEN_ENH_I18N
,

273 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

274 
	m_SC_XOPEN_SHM
,

275 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

277 
	m_SC_2_CHAR_TERM
,

278 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

279 
	m_SC_2_C_VERSION
,

280 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

281 
	m_SC_2_UPE
,

282 
	#_SC_2_UPE
 
_SC_2_UPE


	)

284 
	m_SC_XOPEN_XPG2
,

285 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

286 
	m_SC_XOPEN_XPG3
,

287 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

288 
	m_SC_XOPEN_XPG4
,

289 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

291 
	m_SC_CHAR_BIT
,

292 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

293 
	m_SC_CHAR_MAX
,

294 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

295 
	m_SC_CHAR_MIN
,

296 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

297 
	m_SC_INT_MAX
,

298 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

299 
	m_SC_INT_MIN
,

300 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

301 
	m_SC_LONG_BIT
,

302 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

303 
	m_SC_WORD_BIT
,

304 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

305 
	m_SC_MB_LEN_MAX
,

306 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

307 
	m_SC_NZERO
,

308 
	#_SC_NZERO
 
_SC_NZERO


	)

309 
	m_SC_SSIZE_MAX
,

310 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

311 
	m_SC_SCHAR_MAX
,

312 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

313 
	m_SC_SCHAR_MIN
,

314 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

315 
	m_SC_SHRT_MAX
,

316 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

317 
	m_SC_SHRT_MIN
,

318 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

319 
	m_SC_UCHAR_MAX
,

320 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

321 
	m_SC_UINT_MAX
,

322 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

323 
	m_SC_ULONG_MAX
,

324 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

325 
	m_SC_USHRT_MAX
,

326 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

328 
	m_SC_NL_ARGMAX
,

329 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

330 
	m_SC_NL_LANGMAX
,

331 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

332 
	m_SC_NL_MSGMAX
,

333 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

334 
	m_SC_NL_NMAX
,

335 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

336 
	m_SC_NL_SETMAX
,

337 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

338 
	m_SC_NL_TEXTMAX
,

339 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

341 
	m_SC_XBS5_ILP32_OFF32
,

342 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

343 
	m_SC_XBS5_ILP32_OFFBIG
,

344 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

345 
	m_SC_XBS5_LP64_OFF64
,

346 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

347 
	m_SC_XBS5_LPBIG_OFFBIG
,

348 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

350 
	m_SC_XOPEN_LEGACY
,

351 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

352 
	m_SC_XOPEN_REALTIME
,

353 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

354 
	m_SC_XOPEN_REALTIME_THREADS
,

355 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

357 
	m_SC_ADVISORY_INFO
,

358 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

359 
	m_SC_BARRIERS
,

360 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

361 
	m_SC_BASE
,

362 
	#_SC_BASE
 
_SC_BASE


	)

363 
	m_SC_C_LANG_SUPPORT
,

364 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

365 
	m_SC_C_LANG_SUPPORT_R
,

366 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

367 
	m_SC_CLOCK_SELECTION
,

368 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

369 
	m_SC_CPUTIME
,

370 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

371 
	m_SC_THREAD_CPUTIME
,

372 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

373 
	m_SC_DEVICE_IO
,

374 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

375 
	m_SC_DEVICE_SPECIFIC
,

376 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

377 
	m_SC_DEVICE_SPECIFIC_R
,

378 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

379 
	m_SC_FD_MGMT
,

380 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

381 
	m_SC_FIFO
,

382 
	#_SC_FIFO
 
_SC_FIFO


	)

383 
	m_SC_PIPE
,

384 
	#_SC_PIPE
 
_SC_PIPE


	)

385 
	m_SC_FILE_ATTRIBUTES
,

386 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

387 
	m_SC_FILE_LOCKING
,

388 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

389 
	m_SC_FILE_SYSTEM
,

390 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

391 
	m_SC_MONOTONIC_CLOCK
,

392 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

393 
	m_SC_MULTI_PROCESS
,

394 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

395 
	m_SC_SINGLE_PROCESS
,

396 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

397 
	m_SC_NETWORKING
,

398 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

399 
	m_SC_READER_WRITER_LOCKS
,

400 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

401 
	m_SC_SPIN_LOCKS
,

402 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

403 
	m_SC_REGEXP
,

404 
	#_SC_REGEXP
 
_SC_REGEXP


	)

405 
	m_SC_REGEX_VERSION
,

406 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

407 
	m_SC_SHELL
,

408 
	#_SC_SHELL
 
_SC_SHELL


	)

409 
	m_SC_SIGNALS
,

410 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

411 
	m_SC_SPAWN
,

412 
	#_SC_SPAWN
 
_SC_SPAWN


	)

413 
	m_SC_SPORADIC_SERVER
,

414 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

415 
	m_SC_THREAD_SPORADIC_SERVER
,

416 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

417 
	m_SC_SYSTEM_DATABASE
,

418 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

419 
	m_SC_SYSTEM_DATABASE_R
,

420 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

421 
	m_SC_TIMEOUTS
,

422 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

423 
	m_SC_TYPED_MEMORY_OBJECTS
,

424 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

425 
	m_SC_USER_GROUPS
,

426 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

427 
	m_SC_USER_GROUPS_R
,

428 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

429 
	m_SC_2_PBS
,

430 
	#_SC_2_PBS
 
_SC_2_PBS


	)

431 
	m_SC_2_PBS_ACCOUNTING
,

432 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

433 
	m_SC_2_PBS_LOCATE
,

434 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

435 
	m_SC_2_PBS_MESSAGE
,

436 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

437 
	m_SC_2_PBS_TRACK
,

438 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

439 
	m_SC_SYMLOOP_MAX
,

440 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

441 
	m_SC_STREAMS
,

442 
	#_SC_STREAMS
 
_SC_STREAMS


	)

443 
	m_SC_2_PBS_CHECKPOINT
,

444 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

446 
	m_SC_V6_ILP32_OFF32
,

447 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

448 
	m_SC_V6_ILP32_OFFBIG
,

449 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

450 
	m_SC_V6_LP64_OFF64
,

451 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

452 
	m_SC_V6_LPBIG_OFFBIG
,

453 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

455 
	m_SC_HOST_NAME_MAX
,

456 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

457 
	m_SC_TRACE
,

458 
	#_SC_TRACE
 
_SC_TRACE


	)

459 
	m_SC_TRACE_EVENT_FILTER
,

460 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

461 
	m_SC_TRACE_INHERIT
,

462 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

463 
	m_SC_TRACE_LOG
,

464 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

466 
	m_SC_LEVEL1_ICACHE_SIZE
,

467 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

468 
	m_SC_LEVEL1_ICACHE_ASSOC
,

469 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

470 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

471 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

472 
	m_SC_LEVEL1_DCACHE_SIZE
,

473 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

474 
	m_SC_LEVEL1_DCACHE_ASSOC
,

475 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

476 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

477 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

478 
	m_SC_LEVEL2_CACHE_SIZE
,

479 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

480 
	m_SC_LEVEL2_CACHE_ASSOC
,

481 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

482 
	m_SC_LEVEL2_CACHE_LINESIZE
,

483 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

484 
	m_SC_LEVEL3_CACHE_SIZE
,

485 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

486 
	m_SC_LEVEL3_CACHE_ASSOC
,

487 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

488 
	m_SC_LEVEL3_CACHE_LINESIZE
,

489 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

490 
	m_SC_LEVEL4_CACHE_SIZE
,

491 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

492 
	m_SC_LEVEL4_CACHE_ASSOC
,

493 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

494 
	m_SC_LEVEL4_CACHE_LINESIZE
,

495 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

498 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

499 
	#_SC_IPV6
 
_SC_IPV6


	)

500 
	m_SC_RAW_SOCKETS
,

501 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

503 
	m_SC_V7_ILP32_OFF32
,

504 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

505 
	m_SC_V7_ILP32_OFFBIG
,

506 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

507 
	m_SC_V7_LP64_OFF64
,

508 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

509 
	m_SC_V7_LPBIG_OFFBIG
,

510 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

512 
	m_SC_SS_REPL_MAX
,

513 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

515 
	m_SC_TRACE_EVENT_NAME_MAX
,

516 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

517 
	m_SC_TRACE_NAME_MAX
,

518 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

519 
	m_SC_TRACE_SYS_MAX
,

520 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

521 
	m_SC_TRACE_USER_EVENT_MAX
,

522 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

524 
	m_SC_XOPEN_STREAMS
,

525 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

527 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

528 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

529 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


530 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

536 
	m_CS_PATH
,

537 
	#_CS_PATH
 
_CS_PATH


	)

539 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

540 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

541 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

543 
	m_CS_GNU_LIBC_VERSION
,

544 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

545 
	m_CS_GNU_LIBPTHREAD_VERSION
,

546 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

548 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

549 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

550 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

552 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

553 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

554 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

556 
	m_CS_LFS_CFLAGS
 = 1000,

557 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

558 
	m_CS_LFS_LDFLAGS
,

559 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

560 
	m_CS_LFS_LIBS
,

561 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

562 
	m_CS_LFS_LINTFLAGS
,

563 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

564 
	m_CS_LFS64_CFLAGS
,

565 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

566 
	m_CS_LFS64_LDFLAGS
,

567 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

568 
	m_CS_LFS64_LIBS
,

569 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

570 
	m_CS_LFS64_LINTFLAGS
,

571 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

573 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

574 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

575 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

576 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

577 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

578 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

579 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

580 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

581 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

582 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

583 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

584 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

585 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

586 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

587 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

588 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

589 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

590 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

591 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

592 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

593 
	m_CS_XBS5_LP64_OFF64_LIBS
,

594 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

595 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

596 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

597 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

598 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

599 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

600 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

601 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

602 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

603 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

604 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

606 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

607 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

608 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

609 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

610 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

611 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

612 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

613 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

614 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

615 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

616 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

617 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

618 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

619 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

620 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

621 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

622 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

623 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

624 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

625 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

626 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

627 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

628 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

629 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

630 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

631 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

632 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

633 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

634 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

635 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

636 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

637 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

639 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

640 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

641 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

642 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

643 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

644 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

645 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

646 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

647 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

648 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

649 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

650 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

651 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

652 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

653 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

654 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

655 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

656 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

657 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

658 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

659 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

660 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

661 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

662 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

663 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

664 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

665 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

666 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

667 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

668 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

669 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

670 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

672 
	m_CS_V6_ENV
,

673 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

674 
	m_CS_V7_ENV


675 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

	@/usr/include/bits/dlfcn.h

19 #i‚de‡
_DLFCN_H


24 
	#RTLD_LAZY
 0x00001

	)

25 
	#RTLD_NOW
 0x00002

	)

26 
	#RTLD_BINDING_MASK
 0x3

	)

27 
	#RTLD_NOLOAD
 0x00004

	)

28 
	#RTLD_DEEPBIND
 0x00008

	)

33 
	#RTLD_GLOBAL
 0x00100

	)

38 
	#RTLD_LOCAL
 0

	)

41 
	#RTLD_NODELETE
 0x01000

	)

43 #ifde‡
__USE_GNU


54 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

55 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

57 
__BEGIN_DECLS


60 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFF32
 1

	)

70 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

71 
	#_POSIX_V6_ILP32_OFF32
 1

	)

72 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

73 
	#_XBS5_ILP32_OFF32
 1

	)

74 
	#_XBS5_ILP32_OFFBIG
 1

	)

91 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

92 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

93 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

94 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

95 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

96 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚def 
_FCNTL_H


23 
	~<bôs/w‹dsize.h
>

25 
	#__O_DIRECTORY
 040000

	)

26 
	#__O_NOFOLLOW
 0100000

	)

27 
	#__O_DIRECT
 0400000

	)

29 #i‡
__WORDSIZE
 == 64

31 
	#__O_LARGEFILE
 0

	)

33 
	#__O_LARGEFILE
 0200000

	)

36 
	sÊock


38 
	ml_ty≥
;

39 
	ml_whí˚
;

40 #i‚de‡
__USE_FILE_OFFSET64


41 
__off_t
 
	ml_°¨t
;

42 
__off_t
 
	ml_Àn
;

44 
__off64_t
 
	ml_°¨t
;

45 
__off64_t
 
	ml_Àn
;

47 
__pid_t
 
	ml_pid
;

50 #ifde‡
__USE_LARGEFILE64


51 
	sÊock64


53 
	ml_ty≥
;

54 
	ml_whí˚
;

55 
__off64_t
 
	ml_°¨t
;

56 
__off64_t
 
	ml_Àn
;

57 
__pid_t
 
	ml_pid
;

62 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


27 
	#IP_OPTIONS
 4

	)

28 
	#IP_HDRINCL
 3

	)

29 
	#IP_TOS
 1

	)

30 
	#IP_TTL
 2

	)

31 
	#IP_RECVOPTS
 6

	)

33 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

34 
	#IP_RETOPTS
 7

	)

35 
	#IP_MULTICAST_IF
 32

	)

36 
	#IP_MULTICAST_TTL
 33

	)

37 
	#IP_MULTICAST_LOOP
 34

	)

38 
	#IP_ADD_MEMBERSHIP
 35

	)

39 
	#IP_DROP_MEMBERSHIP
 36

	)

40 
	#IP_UNBLOCK_SOURCE
 37

	)

41 
	#IP_BLOCK_SOURCE
 38

	)

42 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

43 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

44 
	#IP_MSFILTER
 41

	)

45 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

53 
	#IP_MULTICAST_ALL
 49

	)

54 
	#IP_UNICAST_IF
 50

	)

56 
	#MCAST_EXCLUDE
 0

	)

57 
	#MCAST_INCLUDE
 1

	)

60 
	#IP_ROUTER_ALERT
 5

	)

61 
	#IP_PKTINFO
 8

	)

62 
	#IP_PKTOPTIONS
 9

	)

63 
	#IP_PMTUDISC
 10

	)

64 
	#IP_MTU_DISCOVER
 10

	)

65 
	#IP_RECVERR
 11

	)

66 
	#IP_RECVTTL
 12

	)

67 
	#IP_RECVTOS
 13

	)

68 
	#IP_MTU
 14

	)

69 
	#IP_FREEBIND
 15

	)

70 
	#IP_IPSEC_POLICY
 16

	)

71 
	#IP_XFRM_POLICY
 17

	)

72 
	#IP_PASSSEC
 18

	)

73 
	#IP_TRANSPARENT
 19

	)

74 
	#IP_MULTICAST_ALL
 49

	)

77 
	#IP_ORIGDSTADDR
 20

	)

78 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

80 
	#IP_MINTTL
 21

	)

84 
	#IP_PMTUDISC_DONT
 0

	)

85 
	#IP_PMTUDISC_WANT
 1

	)

86 
	#IP_PMTUDISC_DO
 2

	)

87 
	#IP_PMTUDISC_PROBE
 3

	)

90 
	#SOL_IP
 0

	)

92 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

93 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

94 
	#IP_MAX_MEMBERSHIPS
 20

	)

96 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


100 
	sù_›ts


102 
ö_addr
 
	mù_d°
;

103 
	mù_›ts
[40];

107 
	sù_mªqn


109 
ö_addr
 
	mimr_mu…üddr
;

110 
ö_addr
 
	mimr_addªss
;

111 
	mimr_ifödex
;

115 
	sö_pktöfo


117 
	mùi_ifödex
;

118 
ö_addr
 
	mùi_•ec_d°
;

119 
ö_addr
 
	mùi_addr
;

126 
	#IPV6_ADDRFORM
 1

	)

127 
	#IPV6_2292PKTINFO
 2

	)

128 
	#IPV6_2292HOPOPTS
 3

	)

129 
	#IPV6_2292DSTOPTS
 4

	)

130 
	#IPV6_2292RTHDR
 5

	)

131 
	#IPV6_2292PKTOPTIONS
 6

	)

132 
	#IPV6_CHECKSUM
 7

	)

133 
	#IPV6_2292HOPLIMIT
 8

	)

135 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

137 
	#IPV6_NEXTHOP
 9

	)

138 
	#IPV6_AUTHHDR
 10

	)

139 
	#IPV6_UNICAST_HOPS
 16

	)

140 
	#IPV6_MULTICAST_IF
 17

	)

141 
	#IPV6_MULTICAST_HOPS
 18

	)

142 
	#IPV6_MULTICAST_LOOP
 19

	)

143 
	#IPV6_JOIN_GROUP
 20

	)

144 
	#IPV6_LEAVE_GROUP
 21

	)

145 
	#IPV6_ROUTER_ALERT
 22

	)

146 
	#IPV6_MTU_DISCOVER
 23

	)

147 
	#IPV6_MTU
 24

	)

148 
	#IPV6_RECVERR
 25

	)

149 
	#IPV6_V6ONLY
 26

	)

150 
	#IPV6_JOIN_ANYCAST
 27

	)

151 
	#IPV6_LEAVE_ANYCAST
 28

	)

152 
	#IPV6_IPSEC_POLICY
 34

	)

153 
	#IPV6_XFRM_POLICY
 35

	)

155 
	#IPV6_RECVPKTINFO
 49

	)

156 
	#IPV6_PKTINFO
 50

	)

157 
	#IPV6_RECVHOPLIMIT
 51

	)

158 
	#IPV6_HOPLIMIT
 52

	)

159 
	#IPV6_RECVHOPOPTS
 53

	)

160 
	#IPV6_HOPOPTS
 54

	)

161 
	#IPV6_RTHDRDSTOPTS
 55

	)

162 
	#IPV6_RECVRTHDR
 56

	)

163 
	#IPV6_RTHDR
 57

	)

164 
	#IPV6_RECVDSTOPTS
 58

	)

165 
	#IPV6_DSTOPTS
 59

	)

167 
	#IPV6_RECVTCLASS
 66

	)

168 
	#IPV6_TCLASS
 67

	)

171 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

172 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

173 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

174 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

177 
	#IPV6_PMTUDISC_DONT
 0

	)

178 
	#IPV6_PMTUDISC_WANT
 1

	)

179 
	#IPV6_PMTUDISC_DO
 2

	)

180 
	#IPV6_PMTUDISC_PROBE
 3

	)

183 
	#SOL_IPV6
 41

	)

184 
	#SOL_ICMPV6
 58

	)

187 
	#IPV6_RTHDR_LOOSE
 0

	)

188 
	#IPV6_RTHDR_STRICT
 1

	)

190 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/locale.h

19 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


23 #i‚de‡
_BITS_LOCALE_H


24 
	#_BITS_LOCALE_H
 1

	)

26 
	#__LC_CTYPE
 0

	)

27 
	#__LC_NUMERIC
 1

	)

28 
	#__LC_TIME
 2

	)

29 
	#__LC_COLLATE
 3

	)

30 
	#__LC_MONETARY
 4

	)

31 
	#__LC_MESSAGES
 5

	)

32 
	#__LC_ALL
 6

	)

33 
	#__LC_PAPER
 7

	)

34 
	#__LC_NAME
 8

	)

35 
	#__LC_ADDRESS
 9

	)

36 
	#__LC_TELEPHONE
 10

	)

37 
	#__LC_MEASUREMENT
 11

	)

38 
	#__LC_IDENTIFICATION
 12

	)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_SAO
 0x10

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x001

	)

44 
	#MAP_PRIVATE
 0x002

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x00‡

	)

50 
	#MAP_FIXED
 0x010

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0x000

	)

53 
	#MAP_ANONYMOUS
 0x020

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

58 #ifde‡
__USE_MISC


59 
	#MAP_GROWSDOWN
 0x00100

	)

60 
	#MAP_DENYWRITE
 0x00800

	)

61 
	#MAP_EXECUTABLE
 0x01000

	)

62 
	#MAP_LOCKED
 0x00080

	)

63 
	#MAP_NORESERVE
 0x00040

	)

64 
	#MAP_POPULATE
 0x08000

	)

65 
	#MAP_NONBLOCK
 0x10000

	)

66 
	#MAP_STACK
 0x20000

	)

67 
	#MAP_HUGETLB
 0x40000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 0x2000

	)

77 
	#MCL_FUTURE
 0x4000

	)

82 #ifde‡
__USE_GNU


83 
	#MREMAP_MAYMOVE
 1

	)

84 
	#MREMAP_FIXED
 2

	)

88 #ifde‡
__USE_BSD


89 
	#MADV_NORMAL
 0

	)

90 
	#MADV_RANDOM
 1

	)

91 
	#MADV_SEQUENTIAL
 2

	)

92 
	#MADV_WILLNEED
 3

	)

93 
	#MADV_DONTNEED
 4

	)

94 
	#MADV_REMOVE
 9

	)

95 
	#MADV_DONTFORK
 10

	)

96 
	#MADV_DOFORK
 11

	)

97 
	#MADV_MERGEABLE
 12

	)

98 
	#MADV_UNMERGEABLE
 13

	)

99 
	#MADV_HUGEPAGE
 14

	)

100 
	#MADV_NOHUGEPAGE
 15

	)

101 
	#MADV_DONTDUMP
 16

	)

103 
	#MADV_DODUMP
 17

	)

104 
	#MADV_HWPOISON
 100

	)

108 #ifde‡
__USE_XOPEN2K


109 
	#POSIX_MADV_NORMAL
 0

	)

110 
	#POSIX_MADV_RANDOM
 1

	)

111 
	#POSIX_MADV_SEQUENTIAL
 2

	)

112 
	#POSIX_MADV_WILLNEED
 3

	)

113 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

192 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	~<bôs/w‹dsize.h
>

24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

49 
	t±hªad_t
;

52 
	u±hªad_©å_t


54 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

55 
	m__Æign
;

57 #i‚de‡
__have_±hªad_©å_t


58 
±hªad_©å_t
 
	t±hªad_©å_t
;

59 
	#__have_±hªad_©å_t
 1

	)

63 #i‡
__WORDSIZE
 == 64

64 
	s__±hªad_öã∫Æ_li°


66 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

67 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

68 } 
	t__±hªad_li°_t
;

70 
	s__±hªad_öã∫Æ_¶i°


72 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

73 } 
	t__±hªad_¶i°_t
;

81 
	s__±hªad_muãx_s


83 
	m__lock
;

84 
	m__cou¡
;

85 
	m__ow√r
;

86 #i‡
__WORDSIZE
 == 64

87 
	m__nu£rs
;

91 
	m__köd
;

92 #i‡
__WORDSIZE
 == 64

93 
	m__•ös
;

94 
__±hªad_li°_t
 
	m__li°
;

95 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

97 
	m__nu£rs
;

98 
__exãnsi⁄__
 union

100 
	m__•ös
;

101 
__±hªad_¶i°_t
 
	m__li°
;

104 } 
	m__d©a
;

105 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

106 
	m__Æign
;

107 } 
	t±hªad_muãx_t
;

111 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

112 
	m__Æign
;

113 } 
	t±hªad_muãx©å_t
;

122 
	m__lock
;

123 
	m__fuãx
;

124 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

125 
__exãnsi⁄__
 
	m__wakeup_£q
;

126 
__exãnsi⁄__
 
	m__wokí_£q
;

127 *
	m__muãx
;

128 
	m__nwaôîs
;

129 
	m__brﬂdˇ°_£q
;

130 } 
	m__d©a
;

131 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

132 
__exãnsi⁄__
 
	m__Æign
;

133 } 
	t±hªad_c⁄d_t
;

137 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

138 
	m__Æign
;

139 } 
	t±hªad_c⁄d©å_t
;

143 
	t±hªad_key_t
;

147 
	t±hªad_⁄˚_t
;

150 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


155 #i‡
__WORDSIZE
 == 64

158 
	m__lock
;

159 
	m__ƒ_ªadîs
;

160 
	m__ªadîs_wakeup
;

161 
	m__wrôî_wakeup
;

162 
	m__ƒ_ªadîs_queued
;

163 
	m__ƒ_wrôîs_queued
;

164 
	m__wrôî
;

165 
	m__sh¨ed
;

166 
	m__∑d1
;

167 
	m__∑d2
;

170 
	m__Êags
;

171 } 
	m__d©a
;

175 
	m__lock
;

176 
	m__ƒ_ªadîs
;

177 
	m__ªadîs_wakeup
;

178 
	m__wrôî_wakeup
;

179 
	m__ƒ_ªadîs_queued
;

180 
	m__ƒ_wrôîs_queued
;

181 
	m__∑d1
;

182 
	m__∑d2
;

183 
	m__sh¨ed
;

186 
	m__Êags
;

187 
	m__wrôî
;

188 } 
	m__d©a
;

190 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

191 
	m__Æign
;

192 } 
	t±hªad_rwlock_t
;

196 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

197 
	m__Æign
;

198 } 
	t±hªad_rwlock©å_t
;

202 #ifde‡
__USE_XOPEN2K


204 vﬁ©ûê
	t±hªad_•ölock_t
;

211 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

212 
	m__Æign
;

213 } 
	t±hªad_b¨rõr_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	#__√ed_timevÆ


	)

179 
	~<bôs/time.h
>

187 
	srußge


190 
timevÆ
 
	mru_utime
;

192 
timevÆ
 
	mru_°ime
;

194 
__exãnsi⁄__
 union

196 
	mru_maxrss
;

197 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

202 
__exãnsi⁄__
 union

204 
	mru_ixrss
;

205 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

208 
__exãnsi⁄__
 union

210 
	mru_idrss
;

211 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

214 
__exãnsi⁄__
 union

216 
	mru_i§ss
;

217 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

221 
__exãnsi⁄__
 union

223 
	mru_möÊt
;

224 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

227 
__exãnsi⁄__
 union

229 
	mru_majÊt
;

230 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

233 
__exãnsi⁄__
 union

235 
	mru_nsw≠
;

236 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

240 
__exãnsi⁄__
 union

242 
	mru_öblock
;

243 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

246 
__exãnsi⁄__
 union

248 
	mru_oublock
;

249 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

252 
__exãnsi⁄__
 union

254 
	mru_msg¢d
;

255 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

258 
__exãnsi⁄__
 union

260 
	mru_msgrcv
;

261 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

264 
__exãnsi⁄__
 union

266 
	mru_nsig«ls
;

267 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

272 
__exãnsi⁄__
 union

274 
	mru_nvcsw
;

275 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

279 
__exãnsi⁄__
 union

281 
	mru_nivcsw
;

282 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

287 
	#PRIO_MIN
 -20

	)

288 
	#PRIO_MAX
 20

	)

292 
	e__¥i‹ôy_which


294 
	mPRIO_PROCESS
 = 0,

295 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

296 
	mPRIO_PGRP
 = 1,

297 
	#PRIO_PGRP
 
PRIO_PGRP


	)

298 
	mPRIO_USER
 = 2

299 
	#PRIO_USER
 
PRIO_USER


	)

303 
	g__BEGIN_DECLS


305 #ifde‡
__USE_GNU


307 #i‚de‡
__USE_FILE_OFFSET64


308 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

309 c⁄° 
æimô
 *
__√w_limô
,

310 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

312 #ifde‡
__REDIRECT_NTH


313 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

314 
__æimô_ªsour˚
 
__ªsour˚
,

315 c⁄° 
æimô
 *
__√w_limô
,

316 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

318 
	#¥limô
 
¥limô64


	)

321 #ifde‡
__USE_LARGEFILE64


322 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

323 c⁄° 
æimô64
 *
__√w_limô
,

324 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


25 
	#__FD_ZERO
(
s
) \

27 
__i
; \

28 
fd_£t
 *
__¨r
 = (
s
); \

29 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

30 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

31 } 0)

	)

32 
	#__FD_SET
(
d
, 
s
) \

33 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] |
	`__FD_MASK
(d)))

	)

34 
	#__FD_CLR
(
d
, 
s
) \

35 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] &~
	`__FD_MASK
(d)))

	)

36 
	#__FD_ISSET
(
d
, 
s
) \

37 ((
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


32 
	~<bôs/w‹dsize.h
>

41 #i‚def 
_ASM


42 #i‡
__WORDSIZE
 == 64

43 
	t__jmp_buf
[64] 
	t__©åibuã__
 ((
	t__Æig√d__
 (16)));

47 
	t__jmp_buf
[64 + (12 * 4)] 
	t__©åibuã__
 ((
	t__Æig√d__
 (16)));

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

52 
	msi_signo
;

53 
	msi_î∫o
;

55 
	msi_code
;

59 
	m_∑d
[
__SI_PAD_SIZE
];

64 
__pid_t
 
	msi_pid
;

65 
__uid_t
 
	msi_uid
;

66 } 
	m_kûl
;

71 
	msi_tid
;

72 
	msi_ovîrun
;

73 
sigvÆ_t
 
	msi_sigvÆ
;

74 } 
	m_timî
;

79 
__pid_t
 
	msi_pid
;

80 
__uid_t
 
	msi_uid
;

81 
sigvÆ_t
 
	msi_sigvÆ
;

82 } 
	m_π
;

87 
__pid_t
 
	msi_pid
;

88 
__uid_t
 
	msi_uid
;

89 
	msi_°©us
;

90 
__˛ock_t
 
	msi_utime
;

91 
__˛ock_t
 
	msi_°ime
;

92 } 
	m_sigchld
;

97 *
	msi_addr
;

98 } 
	m_sigÁu…
;

103 
	msi_b™d
;

104 
	msi_fd
;

105 } 
	m_sigpﬁl
;

110 *
	m_ˇŒ_addr
;

111 
	m_sysˇŒ
;

112 
	m_¨ch
;

113 } 
	m_sigsys
;

114 } 
	m_sifõlds
;

115 } 
	tsigöfo_t
;

119 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

120 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

121 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

122 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

123 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

124 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

125 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

126 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

127 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

128 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

129 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

130 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

131 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

132 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

133 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

134 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

141 
	mSI_ASYNCNL
 = -60,

142 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

143 
	mSI_TKILL
 = -6,

144 
	#SI_TKILL
 
SI_TKILL


	)

145 
	mSI_SIGIO
,

146 
	#SI_SIGIO
 
SI_SIGIO


	)

147 
	mSI_ASYNCIO
,

148 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

149 
	mSI_MESGQ
,

150 
	#SI_MESGQ
 
SI_MESGQ


	)

151 
	mSI_TIMER
,

152 
	#SI_TIMER
 
SI_TIMER


	)

153 
	mSI_QUEUE
,

154 
	#SI_QUEUE
 
SI_QUEUE


	)

155 
	mSI_USER
,

156 
	#SI_USER
 
SI_USER


	)

157 
	mSI_KERNEL
 = 0x80

158 
	#SI_KERNEL
 
SI_KERNEL


	)

165 
	mILL_ILLOPC
 = 1,

166 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

167 
	mILL_ILLOPN
,

168 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

169 
	mILL_ILLADR
,

170 
	#ILL_ILLADR
 
ILL_ILLADR


	)

171 
	mILL_ILLTRP
,

172 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

173 
	mILL_PRVOPC
,

174 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

175 
	mILL_PRVREG
,

176 
	#ILL_PRVREG
 
ILL_PRVREG


	)

177 
	mILL_COPROC
,

178 
	#ILL_COPROC
 
ILL_COPROC


	)

179 
	mILL_BADSTK


180 
	#ILL_BADSTK
 
ILL_BADSTK


	)

186 
	mFPE_INTDIV
 = 1,

187 
	#FPE_INTDIV
 
FPE_INTDIV


	)

188 
	mFPE_INTOVF
,

189 
	#FPE_INTOVF
 
FPE_INTOVF


	)

190 
	mFPE_FLTDIV
,

191 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

192 
	mFPE_FLTOVF
,

193 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

194 
	mFPE_FLTUND
,

195 
	#FPE_FLTUND
 
FPE_FLTUND


	)

196 
	mFPE_FLTRES
,

197 
	#FPE_FLTRES
 
FPE_FLTRES


	)

198 
	mFPE_FLTINV
,

199 
	#FPE_FLTINV
 
FPE_FLTINV


	)

200 
	mFPE_FLTSUB


201 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

207 
	mSEGV_MAPERR
 = 1,

208 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

209 
	mSEGV_ACCERR


210 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

216 
	mBUS_ADRALN
 = 1,

217 
	#BUS_ADRALN
 
BUS_ADRALN


	)

218 
	mBUS_ADRERR
,

219 
	#BUS_ADRERR
 
BUS_ADRERR


	)

220 
	mBUS_OBJERR


221 
	#BUS_OBJERR
 
BUS_OBJERR


	)

227 
	mTRAP_BRKPT
 = 1,

228 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

229 
	mTRAP_TRACE


230 
	#TRAP_TRACE
 
TRAP_TRACE


	)

236 
	mCLD_EXITED
 = 1,

237 
	#CLD_EXITED
 
CLD_EXITED


	)

238 
	mCLD_KILLED
,

239 
	#CLD_KILLED
 
CLD_KILLED


	)

240 
	mCLD_DUMPED
,

241 
	#CLD_DUMPED
 
CLD_DUMPED


	)

242 
	mCLD_TRAPPED
,

243 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

244 
	mCLD_STOPPED
,

245 
	#CLD_STOPPED
 
CLD_STOPPED


	)

246 
	mCLD_CONTINUED


247 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

253 
	mPOLL_IN
 = 1,

254 
	#POLL_IN
 
POLL_IN


	)

255 
	mPOLL_OUT
,

256 
	#POLL_OUT
 
POLL_OUT


	)

257 
	mPOLL_MSG
,

258 
	#POLL_MSG
 
POLL_MSG


	)

259 
	mPOLL_ERR
,

260 
	#POLL_ERR
 
POLL_ERR


	)

261 
	mPOLL_PRI
,

262 
	#POLL_PRI
 
POLL_PRI


	)

263 
	mPOLL_HUP


264 
	#POLL_HUP
 
POLL_HUP


	)

267 #unde‡
__√ed_sigöfo_t


271 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

272 && !
deföed
 
	g__have_sigevít_t


273 
	#__have_sigevít_t
 1

	)

276 
	#__SIGEV_MAX_SIZE
 64

	)

277 #i‡
__WORDSIZE
 == 64

278 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

280 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

284 #i‚de‡
__have_±hªad_©å_t


285 
±hªad_©å_t
 
	t±hªad_©å_t
;

286 
	#__have_±hªad_©å_t
 1

	)

289 
	ssigevít


291 
sigvÆ_t
 
	msigev_vÆue
;

292 
	msigev_signo
;

293 
	msigev_nŸify
;

297 
	m_∑d
[
__SIGEV_PAD_SIZE
];

301 
__pid_t
 
	m_tid
;

305 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

306 
±hªad_©å_t
 *
	m_©åibuã
;

307 } 
	m_sigev_thªad
;

308 } 
	m_sigev_un
;

309 } 
	tsigevít_t
;

312 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

313 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

318 
	mSIGEV_SIGNAL
 = 0,

319 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

320 
	mSIGEV_NONE
,

321 
	#SIGEV_NONE
 
SIGEV_NONE


	)

322 
	mSIGEV_THREAD
,

323 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

325 
	mSIGEV_THREAD_ID
 = 4

326 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‚de‡
_SYS_SOCKET_H


27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	~<sys/ty≥s.h
>

33 #i‚de‡
__sockÀn_t_deföed


34 
__sockÀn_t
 
	tsockÀn_t
;

35 
	#__sockÀn_t_deföed


	)

39 
	~<bôs/sockë_ty≥.h
>

42 
	#PF_UNSPEC
 0

	)

43 
	#PF_LOCAL
 1

	)

44 
	#PF_UNIX
 
PF_LOCAL


	)

45 
	#PF_FILE
 
PF_LOCAL


	)

46 
	#PF_INET
 2

	)

47 
	#PF_AX25
 3

	)

48 
	#PF_IPX
 4

	)

49 
	#PF_APPLETALK
 5

	)

50 
	#PF_NETROM
 6

	)

51 
	#PF_BRIDGE
 7

	)

52 
	#PF_ATMPVC
 8

	)

53 
	#PF_X25
 9

	)

54 
	#PF_INET6
 10

	)

55 
	#PF_ROSE
 11

	)

56 
	#PF_DEC√t
 12

	)

57 
	#PF_NETBEUI
 13

	)

58 
	#PF_SECURITY
 14

	)

59 
	#PF_KEY
 15

	)

60 
	#PF_NETLINK
 16

	)

61 
	#PF_ROUTE
 
PF_NETLINK


	)

62 
	#PF_PACKET
 17

	)

63 
	#PF_ASH
 18

	)

64 
	#PF_ECONET
 19

	)

65 
	#PF_ATMSVC
 20

	)

66 
	#PF_RDS
 21

	)

67 
	#PF_SNA
 22

	)

68 
	#PF_IRDA
 23

	)

69 
	#PF_PPPOX
 24

	)

70 
	#PF_WANPIPE
 25

	)

71 
	#PF_LLC
 26

	)

72 
	#PF_CAN
 29

	)

73 
	#PF_TIPC
 30

	)

74 
	#PF_BLUETOOTH
 31

	)

75 
	#PF_IUCV
 32

	)

76 
	#PF_RXRPC
 33

	)

77 
	#PF_ISDN
 34

	)

78 
	#PF_PHONET
 35

	)

79 
	#PF_IEEE802154
 36

	)

80 
	#PF_CAIF
 37

	)

81 
	#PF_ALG
 38

	)

82 
	#PF_NFC
 39

	)

83 
	#PF_MAX
 40

	)

86 
	#AF_UNSPEC
 
PF_UNSPEC


	)

87 
	#AF_LOCAL
 
PF_LOCAL


	)

88 
	#AF_UNIX
 
PF_UNIX


	)

89 
	#AF_FILE
 
PF_FILE


	)

90 
	#AF_INET
 
PF_INET


	)

91 
	#AF_AX25
 
PF_AX25


	)

92 
	#AF_IPX
 
PF_IPX


	)

93 
	#AF_APPLETALK
 
PF_APPLETALK


	)

94 
	#AF_NETROM
 
PF_NETROM


	)

95 
	#AF_BRIDGE
 
PF_BRIDGE


	)

96 
	#AF_ATMPVC
 
PF_ATMPVC


	)

97 
	#AF_X25
 
PF_X25


	)

98 
	#AF_INET6
 
PF_INET6


	)

99 
	#AF_ROSE
 
PF_ROSE


	)

100 
	#AF_DEC√t
 
PF_DEC√t


	)

101 
	#AF_NETBEUI
 
PF_NETBEUI


	)

102 
	#AF_SECURITY
 
PF_SECURITY


	)

103 
	#AF_KEY
 
PF_KEY


	)

104 
	#AF_NETLINK
 
PF_NETLINK


	)

105 
	#AF_ROUTE
 
PF_ROUTE


	)

106 
	#AF_PACKET
 
PF_PACKET


	)

107 
	#AF_ASH
 
PF_ASH


	)

108 
	#AF_ECONET
 
PF_ECONET


	)

109 
	#AF_ATMSVC
 
PF_ATMSVC


	)

110 
	#AF_RDS
 
PF_RDS


	)

111 
	#AF_SNA
 
PF_SNA


	)

112 
	#AF_IRDA
 
PF_IRDA


	)

113 
	#AF_PPPOX
 
PF_PPPOX


	)

114 
	#AF_WANPIPE
 
PF_WANPIPE


	)

115 
	#AF_LLC
 
PF_LLC


	)

116 
	#AF_CAN
 
PF_CAN


	)

117 
	#AF_TIPC
 
PF_TIPC


	)

118 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

119 
	#AF_IUCV
 
PF_IUCV


	)

120 
	#AF_RXRPC
 
PF_RXRPC


	)

121 
	#AF_ISDN
 
PF_ISDN


	)

122 
	#AF_PHONET
 
PF_PHONET


	)

123 
	#AF_IEEE802154
 
PF_IEEE802154


	)

124 
	#AF_CAIF
 
PF_CAIF


	)

125 
	#AF_ALG
 
PF_ALG


	)

126 
	#AF_NFC
 
PF_NFC


	)

127 
	#AF_MAX
 
PF_MAX


	)

133 
	#SOL_RAW
 255

	)

134 
	#SOL_DECNET
 261

	)

135 
	#SOL_X25
 262

	)

136 
	#SOL_PACKET
 263

	)

137 
	#SOL_ATM
 264

	)

138 
	#SOL_AAL
 265

	)

139 
	#SOL_IRDA
 266

	)

142 
	#SOMAXCONN
 128

	)

145 
	~<bôs/sockaddr.h
>

148 
	ssockaddr


150 
__SOCKADDR_COMMON
 (
ß_
);

151 
	mß_d©a
[14];

157 
	#__ss_Æig¡y≥
 

	)

158 
	#_SS_SIZE
 128

	)

159 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

161 
	ssockaddr_°‹age


163 
__SOCKADDR_COMMON
 (
ss_
);

164 
__ss_Æig¡y≥
 
	m__ss_Æign
;

165 
	m__ss_∑ddög
[
_SS_PADSIZE
];

172 
	mMSG_OOB
 = 0x01,

173 
	#MSG_OOB
 
MSG_OOB


	)

174 
	mMSG_PEEK
 = 0x02,

175 
	#MSG_PEEK
 
MSG_PEEK


	)

176 
	mMSG_DONTROUTE
 = 0x04,

177 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

178 #ifde‡
__USE_GNU


180 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

181 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

183 
	mMSG_CTRUNC
 = 0x08,

184 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

185 
	mMSG_PROXY
 = 0x10,

186 
	#MSG_PROXY
 
MSG_PROXY


	)

187 
	mMSG_TRUNC
 = 0x20,

188 
	#MSG_TRUNC
 
MSG_TRUNC


	)

189 
	mMSG_DONTWAIT
 = 0x40,

190 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

191 
	mMSG_EOR
 = 0x80,

192 
	#MSG_EOR
 
MSG_EOR


	)

193 
	mMSG_WAITALL
 = 0x100,

194 
	#MSG_WAITALL
 
MSG_WAITALL


	)

195 
	mMSG_FIN
 = 0x200,

196 
	#MSG_FIN
 
MSG_FIN


	)

197 
	mMSG_SYN
 = 0x400,

198 
	#MSG_SYN
 
MSG_SYN


	)

199 
	mMSG_CONFIRM
 = 0x800,

200 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

201 
	mMSG_RST
 = 0x1000,

202 
	#MSG_RST
 
MSG_RST


	)

203 
	mMSG_ERRQUEUE
 = 0x2000,

204 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

205 
	mMSG_NOSIGNAL
 = 0x4000,

206 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

207 
	mMSG_MORE
 = 0x8000,

208 
	#MSG_MORE
 
MSG_MORE


	)

209 
	mMSG_WAITFORONE
 = 0x10000,

210 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

212 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

215 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

221 
	smsghdr


223 *
	mmsg_«me
;

224 
sockÀn_t
 
	mmsg_«mñí
;

226 
iovec
 *
	mmsg_iov
;

227 
size_t
 
	mmsg_iovÀn
;

229 *
	mmsg_c⁄åﬁ
;

230 
size_t
 
	mmsg_c⁄åﬁÀn
;

235 
	mmsg_Êags
;

239 
	scmsghdr


241 
size_t
 
	mcmsg_Àn
;

246 
	mcmsg_Àvñ
;

247 
	mcmsg_ty≥
;

248 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

249 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

254 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

255 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

257 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

259 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

260 
	#CMSG_FIRSTHDR
(
mhdr
) \

261 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

262 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

263 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

264 & (
size_t
Ë~( (size_tË- 1))

	)

265 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

266 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

267 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

269 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

270 
cmsghdr
 *
__cmsg
Ë
__THROW
;

271 #ifde‡
__USE_EXTERN_INLINES


272 #i‚de‡
_EXTERN_INLINE


273 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

275 
_EXTERN_INLINE
 
cmsghdr
 *

276 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

278 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

280  (
cmsghdr
 *) 0;

282 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

283 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

284 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


285 + 
__mhdr
->
msg_c⁄åﬁÀn
)

286 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

287 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

289  (
cmsghdr
 *) 0;

290  
__cmsg
;

291 
	}
}

298 
	mSCM_RIGHTS
 = 0x01

299 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

300 #ifde‡
__USE_GNU


301 , 
	mSCM_CREDENTIALS
 = 0x02

302 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

306 #ifde‡
__USE_GNU


308 
	su¸ed


310 
pid_t
 
	mpid
;

311 
uid_t
 
	muid
;

312 
gid_t
 
	mgid
;

317 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


318 #i‚de‡
FIOGETOWN


319 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

321 #i‚de‡
FIOSETOWN


322 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

324 #i‚de‡
SIOCATMARK


325 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

327 #i‚de‡
SIOCGPGRP


328 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

330 #i‚de‡
SIOCGSTAMP


331 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

333 #i‚de‡
SIOCGSTAMPNS


334 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

336 #i‚de‡
SIOCSPGRP


337 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

342 
	~<asm/sockë.h
>

344 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


345 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


346 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


347 #unde‡
FIOGETOWN


349 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


350 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


351 #unde‡
FIOSETOWN


353 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


354 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


355 #unde‡
SIOCATMARK


357 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


358 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


359 #unde‡
SIOCGPGRP


361 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


362 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


363 #unde‡
SIOCGSTAMP


365 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


366 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


367 #unde‡
SIOCGSTAMPNS


369 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


370 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


371 #unde‡
SIOCSPGRP


376 
	slögî


378 
	ml_⁄off
;

379 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

26 
	~<bôs/w‹dsize.h
>

29 
	#_STAT_VER_LINUX_OLD
 1

	)

30 
	#_STAT_VER_KERNEL
 1

	)

31 
	#_STAT_VER_SVR4
 2

	)

32 
	#_STAT_VER_LINUX
 3

	)

33 #i‡
__WORDSIZE
 == 32

34 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

36 
	#_STAT_VER
 
_STAT_VER_KERNEL


	)

40 
	#_MKNOD_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_SVR4
 2

	)

42 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

45 #i‡
__WORDSIZE
 == 32

47 
	s°©


49 
__dev_t
 
	m°_dev
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	m__∑d1
;

52 
__öo_t
 
	m°_öo
;

54 
__öo64_t
 
	m°_öo
;

56 
__mode_t
 
	m°_mode
;

57 
__∆ök_t
 
	m°_∆ök
;

58 
__uid_t
 
	m°_uid
;

59 
__gid_t
 
	m°_gid
;

60 
__dev_t
 
	m°_rdev
;

61 
	m__∑d2
;

62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	m°_size
;

65 
__off64_t
 
	m°_size
;

67 
__blksize_t
 
	m°_blksize
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
__blk˙t_t
 
	m°_blocks
;

72 
__blk˙t64_t
 
	m°_blocks
;

74 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


81 
time•ec
 
	m°_©im
;

82 
time•ec
 
	m°_mtim
;

83 
time•ec
 
	m°_˘im
;

84 
	#°_©ime
 
°_©im
.
tv_£c


	)

85 
	#°_mtime
 
°_mtim
.
tv_£c


	)

86 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

88 
__time_t
 
	m°_©ime
;

89 
	m°_©imí£c
;

90 
__time_t
 
	m°_mtime
;

91 
	m°_mtimí£c
;

92 
__time_t
 
	m°_˘ime
;

93 
	m°_˘imí£c
;

95 
	m__unu£d4
;

96 
	m__unu£d5
;

100 #ifde‡
__USE_LARGEFILE64


101 
	s°©64


103 
__dev_t
 
	m°_dev
;

104 
__öo64_t
 
	m°_öo
;

105 
__mode_t
 
	m°_mode
;

106 
__∆ök_t
 
	m°_∆ök
;

107 
__uid_t
 
	m°_uid
;

108 
__gid_t
 
	m°_gid
;

109 
__dev_t
 
	m°_rdev
;

110 
	m__∑d2
;

111 
__off64_t
 
	m°_size
;

112 
__blksize_t
 
	m°_blksize
;

113 
__blk˙t64_t
 
	m°_blocks
;

114 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


121 
time•ec
 
	m°_©im
;

122 
time•ec
 
	m°_mtim
;

123 
time•ec
 
	m°_˘im
;

124 
	#°_©ime
 
°_©im
.
tv_£c


	)

125 
	#°_mtime
 
°_mtim
.
tv_£c


	)

126 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

128 
__time_t
 
	m°_©ime
;

129 
	m°_©imí£c
;

130 
__time_t
 
	m°_mtime
;

131 
	m°_mtimí£c
;

132 
__time_t
 
	m°_˘ime
;

133 
	m°_˘imí£c
;

135 
	m__unu£d4
;

136 
	m__unu£d5
;

142 
	s°©


144 
__dev_t
 
	m°_dev
;

145 #i‚de‡
__USE_FILE_OFFSET64


146 
__öo_t
 
	m°_öo
;

148 
__öo64_t
 
	m°_öo
;

150 
__∆ök_t
 
	m°_∆ök
;

151 
__mode_t
 
	m°_mode
;

152 
__uid_t
 
	m°_uid
;

153 
__gid_t
 
	m°_gid
;

154 
	m__∑d2
;

155 
__dev_t
 
	m°_rdev
;

156 #i‚de‡
__USE_FILE_OFFSET64


157 
__off_t
 
	m°_size
;

159 
__off64_t
 
	m°_size
;

161 
__blksize_t
 
	m°_blksize
;

163 #i‚de‡
__USE_FILE_OFFSET64


164 
__blk˙t_t
 
	m°_blocks
;

166 
__blk˙t64_t
 
	m°_blocks
;

168 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


175 
time•ec
 
	m°_©im
;

176 
time•ec
 
	m°_mtim
;

177 
time•ec
 
	m°_˘im
;

178 
	#°_©ime
 
°_©im
.
tv_£c


	)

179 
	#°_mtime
 
°_mtim
.
tv_£c


	)

180 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

182 
__time_t
 
	m°_©ime
;

183 
	m°_©imí£c
;

184 
__time_t
 
	m°_mtime
;

185 
	m°_mtimí£c
;

186 
__time_t
 
	m°_˘ime
;

187 
	m°_˘imí£c
;

189 
	m__unu£d4
;

190 
	m__unu£d5
;

191 
	m__unu£d6
;

194 #ifde‡
__USE_LARGEFILE64


195 
	s°©64


197 
__dev_t
 
	m°_dev
;

198 
__öo64_t
 
	m°_öo
;

199 
__∆ök_t
 
	m°_∆ök
;

200 
__mode_t
 
	m°_mode
;

201 
__uid_t
 
	m°_uid
;

202 
__gid_t
 
	m°_gid
;

203 
	m__∑d2
;

204 
__dev_t
 
	m°_rdev
;

205 
__off64_t
 
	m°_size
;

206 
__blksize_t
 
	m°_blksize
;

207 
__blk˙t64_t
 
	m°_blocks
;

208 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


215 
time•ec
 
	m°_©im
;

216 
time•ec
 
	m°_mtim
;

217 
time•ec
 
	m°_˘im
;

218 
	#°_©ime
 
°_©im
.
tv_£c


	)

219 
	#°_mtime
 
°_mtim
.
tv_£c


	)

220 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

222 
__time_t
 
	m°_©ime
;

223 
	m°_©imí£c
;

224 
__time_t
 
	m°_mtime
;

225 
	m°_mtimí£c
;

226 
__time_t
 
	m°_˘ime
;

227 
	m°_˘imí£c
;

229 
	m__unu£d4
;

230 
	m__unu£d5
;

231 
	m__unu£d6
;

238 
	#_STATBUF_ST_BLKSIZE


	)

239 
	#_STATBUF_ST_RDEV


	)

241 
	#_STATBUF_ST_NSEC


	)

245 
	#__S_IFMT
 0170000

	)

248 
	#__S_IFDIR
 0040000

	)

249 
	#__S_IFCHR
 0020000

	)

250 
	#__S_IFBLK
 0060000

	)

251 
	#__S_IFREG
 0100000

	)

252 
	#__S_IFIFO
 0010000

	)

253 
	#__S_IFLNK
 0120000

	)

254 
	#__S_IFSOCK
 0140000

	)

258 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

259 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

260 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

264 
	#__S_ISUID
 04000

	)

265 
	#__S_ISGID
 02000

	)

266 
	#__S_ISVTX
 01000

	)

267 
	#__S_IREAD
 0400

	)

268 
	#__S_IWRITE
 0200

	)

269 
	#__S_IEXEC
 0100

	)

271 #ifde‡
__USE_ATFILE


272 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

273 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statfs.h

18 #i‚de‡
_SYS_STATFS_H


22 
	~<bôs/ty≥s.h
>

24 
	s°©fs


26 
__fsw‹d_t
 
	mf_ty≥
;

27 
__fsw‹d_t
 
	mf_bsize
;

28 #i‚de‡
__USE_FILE_OFFSET64


29 
__fsblk˙t_t
 
	mf_blocks
;

30 
__fsblk˙t_t
 
	mf_b‰ì
;

31 
__fsblk˙t_t
 
	mf_bavaû
;

32 
__fsfû˙t_t
 
	mf_fûes
;

33 
__fsfû˙t_t
 
	mf_f‰ì
;

35 
__fsblk˙t64_t
 
	mf_blocks
;

36 
__fsblk˙t64_t
 
	mf_b‰ì
;

37 
__fsblk˙t64_t
 
	mf_bavaû
;

38 
__fsfû˙t64_t
 
	mf_fûes
;

39 
__fsfû˙t64_t
 
	mf_f‰ì
;

41 
__fsid_t
 
	mf_fsid
;

42 
__fsw‹d_t
 
	mf_«mñí
;

43 
__fsw‹d_t
 
	mf_‰size
;

44 
__fsw‹d_t
 
	mf_Êags
;

45 
__fsw‹d_t
 
	mf_•¨e
[4];

48 #ifde‡
__USE_LARGEFILE64


49 
	s°©fs64


51 
__fsw‹d_t
 
	mf_ty≥
;

52 
__fsw‹d_t
 
	mf_bsize
;

53 
__fsblk˙t64_t
 
	mf_blocks
;

54 
__fsblk˙t64_t
 
	mf_b‰ì
;

55 
__fsblk˙t64_t
 
	mf_bavaû
;

56 
__fsfû˙t64_t
 
	mf_fûes
;

57 
__fsfû˙t64_t
 
	mf_f‰ì
;

58 
__fsid_t
 
	mf_fsid
;

59 
__fsw‹d_t
 
	mf_«mñí
;

60 
__fsw‹d_t
 
	mf_‰size
;

61 
__fsw‹d_t
 
	mf_Êags
;

62 
__fsw‹d_t
 
	mf_•¨e
[4];

67 
	#_STATFS_F_NAMELEN


	)

68 
	#_STATFS_F_FRSIZE


	)

69 
	#_STATFS_F_FLAGS


	)

	@/usr/include/bits/statvfs.h

18 #i‚de‡
_SYS_STATVFS_H


22 
	~<bôs/ty≥s.h
>

24 #i‡(
__WORDSIZE
 == 32 \

25 && (!
deföed
 
	g__SYSCALL_WORDSIZE
 || __SYSCALL_WORDSIZE == 32))

26 
	#_STATVFSBUF_F_UNUSED


	)

29 
	s°©vfs


31 
f_bsize
;

32 
	mf_‰size
;

33 #i‚de‡
__USE_FILE_OFFSET64


34 
__fsblk˙t_t
 
	mf_blocks
;

35 
__fsblk˙t_t
 
	mf_b‰ì
;

36 
__fsblk˙t_t
 
	mf_bavaû
;

37 
__fsfû˙t_t
 
	mf_fûes
;

38 
__fsfû˙t_t
 
	mf_f‰ì
;

39 
__fsfû˙t_t
 
	mf_Ávaû
;

41 
__fsblk˙t64_t
 
	mf_blocks
;

42 
__fsblk˙t64_t
 
	mf_b‰ì
;

43 
__fsblk˙t64_t
 
	mf_bavaû
;

44 
__fsfû˙t64_t
 
	mf_fûes
;

45 
__fsfû˙t64_t
 
	mf_f‰ì
;

46 
__fsfû˙t64_t
 
	mf_Ávaû
;

48 
	mf_fsid
;

49 #ifde‡
_STATVFSBUF_F_UNUSED


50 
	m__f_unu£d
;

52 
	mf_Êag
;

53 
	mf_«memax
;

54 
	m__f_•¨e
[6];

57 #ifde‡
__USE_LARGEFILE64


58 
	s°©vfs64


60 
	mf_bsize
;

61 
	mf_‰size
;

62 
__fsblk˙t64_t
 
	mf_blocks
;

63 
__fsblk˙t64_t
 
	mf_b‰ì
;

64 
__fsblk˙t64_t
 
	mf_bavaû
;

65 
__fsfû˙t64_t
 
	mf_fûes
;

66 
__fsfû˙t64_t
 
	mf_f‰ì
;

67 
__fsfû˙t64_t
 
	mf_Ávaû
;

68 
	mf_fsid
;

69 #ifde‡
_STATVFSBUF_F_UNUSED


70 
	m__f_unu£d
;

72 
	mf_Êag
;

73 
	mf_«memax
;

74 
	m__f_•¨e
[6];

82 
	mST_RDONLY
 = 1,

83 
	#ST_RDONLY
 
ST_RDONLY


	)

84 
	mST_NOSUID
 = 2

85 
	#ST_NOSUID
 
ST_NOSUID


	)

86 #ifde‡
__USE_GNU


88 
	mST_NODEV
 = 4,

89 
	#ST_NODEV
 
ST_NODEV


	)

90 
	mST_NOEXEC
 = 8,

91 
	#ST_NOEXEC
 
ST_NOEXEC


	)

92 
	mST_SYNCHRONOUS
 = 16,

93 
	#ST_SYNCHRONOUS
 
ST_SYNCHRONOUS


	)

94 
	mST_MANDLOCK
 = 64,

95 
	#ST_MANDLOCK
 
ST_MANDLOCK


	)

96 
	mST_WRITE
 = 128,

97 
	#ST_WRITE
 
ST_WRITE


	)

98 
	mST_APPEND
 = 256,

99 
	#ST_APPEND
 
ST_APPEND


	)

100 
	mST_IMMUTABLE
 = 512,

101 
	#ST_IMMUTABLE
 
ST_IMMUTABLE


	)

102 
	mST_NOATIME
 = 1024,

103 
	#ST_NOATIME
 
ST_NOATIME


	)

104 
	mST_NODIRATIME
 = 2048,

105 
	#ST_NODIRATIME
 
ST_NODIRATIME


	)

106 
	mST_RELATIME
 = 4096

107 
	#ST_RELATIME
 
ST_RELATIME


	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_MISC


35 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

8 #i‚de‡
_BITS_STRING_H


9 
	#_BITS_STRING_H
 1

	)

	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

891 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = \

892 (c⁄° *Ë(c⁄° *Ë(
s1
); \

893 
__ªsu…
 = \

894 
__s1
[0] - ((const *) \

895 (c⁄° *Ë(
s2
))[0]; \

896 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

898 
__ªsu…
 = (
__s1
[1] \

900 (c⁄° *Ë(
s2
))[1]); \

901 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

903 
__ªsu…
 = \

904 (
__s1
[2] - ((const *) \

905 (c⁄° *Ë(
s2
))[2]); \

906 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

907 
__ªsu…
 = \

908 (
__s1
[3] \

910 (c⁄° *Ë(
s2
))[3]); \

913 
__ªsu…
; }))

	)

918 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


919 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

920 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

921 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

922 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

923 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

924 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

925 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

931 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


932 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


933 #i‡
__GNUC_PREREQ
 (3, 2)

934 
	#°rc•n
(
s
, 
ªje˘
) \

935 
__exãnsi⁄__
 \

936 ({ 
__r0
, 
__r1
, 
__r2
; \

937 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

938 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

939 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

940 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

941 ? 
	`°æí
 (
s
) \

942 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

943 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

944 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

945 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

946 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

947 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

948 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

951 
	#°rc•n
(
s
, 
ªje˘
) \

952 
__exãnsi⁄__
 \

953 ({ 
__r0
, 
__r1
, 
__r2
; \

954 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

955 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

956 ? 
	`°æí
 (
s
) \

957 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

958 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

959 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

960 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

961 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

962 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

963 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

968 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

972 
size_t
 
__ªsu…
 = 0;

973 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

974 ++
__ªsu…
;

975  
__ªsu…
;

976 
	}
}

978 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

979 
__ªje˘2
);

980 
__STRING_INLINE
 
size_t


981 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

983 
size_t
 
__ªsu…
 = 0;

984 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


985 && 
__s
[
__ªsu…
] !
__ªje˘2
)

986 ++
__ªsu…
;

987  
__ªsu…
;

988 
	}
}

990 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

991 
__ªje˘2
, 
__ªje˘3
);

992 
__STRING_INLINE
 
size_t


993 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

994 
__ªje˘3
)

996 
size_t
 
__ªsu…
 = 0;

997 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


998 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

999 ++
__ªsu…
;

1000  
__ªsu…
;

1001 
	}
}

1007 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1008 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1009 #i‡
__GNUC_PREREQ
 (3, 2)

1010 
	#°r•n
(
s
, 
ac˚±
) \

1011 
__exãnsi⁄__
 \

1012 ({ 
__a0
, 
__a1
, 
__a2
; \

1013 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1014 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1015 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1016 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1017 ? ((Ë(
s
), (
size_t
) 0) \

1018 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1019 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1020 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1021 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1022 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1023 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1024 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1027 
	#°r•n
(
s
, 
ac˚±
) \

1028 
__exãnsi⁄__
 \

1029 ({ 
__a0
, 
__a1
, 
__a2
; \

1030 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1031 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1032 ? ((Ë(
s
), (
size_t
) 0) \

1033 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1034 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1035 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1036 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1037 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1038 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1039 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1045 
__STRING_INLINE
 
size_t


1046 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1048 
size_t
 
__ªsu…
 = 0;

1050 
__s
[
__ªsu…
] =
__ac˚±
)

1051 ++
__ªsu…
;

1052  
__ªsu…
;

1053 
	}
}

1055 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1056 
__ac˚±2
);

1057 
__STRING_INLINE
 
size_t


1058 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1060 
size_t
 
__ªsu…
 = 0;

1062 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1063 ++
__ªsu…
;

1064  
__ªsu…
;

1065 
	}
}

1067 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1068 
__ac˚±2
, 
__ac˚±3
);

1069 
__STRING_INLINE
 
size_t


1070 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1072 
size_t
 
__ªsu…
 = 0;

1074 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1075 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1076 ++
__ªsu…
;

1077  
__ªsu…
;

1078 
	}
}

1083 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1084 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1085 #i‡
__GNUC_PREREQ
 (3, 2)

1086 
	#°Ωbrk
(
s
, 
ac˚±
) \

1087 
__exãnsi⁄__
 \

1088 ({ 
__a0
, 
__a1
, 
__a2
; \

1089 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1090 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1091 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1092 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1093 ? ((Ë(
s
), (*Ë
NULL
) \

1094 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1095 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1096 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1097 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1098 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1099 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1100 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1103 
	#°Ωbrk
(
s
, 
ac˚±
) \

1104 
__exãnsi⁄__
 \

1105 ({ 
__a0
, 
__a1
, 
__a2
; \

1106 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1107 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1108 ? ((Ë(
s
), (*Ë
NULL
) \

1109 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1110 ? 
	`°rchr
 (
s
, 
__a0
) \

1111 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1112 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1113 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1114 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1115 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1120 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1121 
__ac˚±2
);

1122 
__STRING_INLINE
 *

1123 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1126 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1127 ++
__s
;

1128  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1129 
	}
}

1131 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1132 
__ac˚±2
, 
__ac˚±3
);

1133 
__STRING_INLINE
 *

1134 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1137 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1138 && *
__s
 !
__ac˚±3
)

1139 ++
__s
;

1140  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1141 
	}
}

1147 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1148 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1149 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1150 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1151 ? (*Ë(
size_t
Ë(
hay°ack
) \

1152 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1153 ? 
	`°rchr
 (
hay°ack
, \

1154 ((c⁄° *Ë(
√edÀ
))[0]) \

1155 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1156 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1160 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1161 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1162 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1163 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1164 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1165 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1166 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1167 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1170 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1171 
__STRING_INLINE
 *

1172 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1174 *
__ªsu…
;

1175 i‡(
__s
 =
NULL
)

1176 
__s
 = *
__√xç
;

1177 *
__s
 =
__£p
)

1178 ++
__s
;

1179 
__ªsu…
 = 
NULL
;

1180 i‡(*
__s
 != '\0')

1182 
__ªsu…
 = 
__s
++;

1183 *
__s
 != '\0')

1184 i‡(*
__s
++ =
__£p
)

1186 
__s
[-1] = '\0';

1190 *
__√xç
 = 
__s
;

1191  
__ªsu…
;

1192 
	}
}

1193 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1194 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1199 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1200 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1202 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1203 
	#__°r£p
(
s
, 
ªje˘
) \

1204 
__exãnsi⁄__
 \

1205 ({ 
__r0
, 
__r1
, 
__r2
; \

1206 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1207 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1208 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1209 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1210 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1211 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1212 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1213 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1214 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1215 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1216 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1217 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1220 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1221 
__STRING_INLINE
 *

1222 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1224 *
__ªtvÆ
 = *
__s
;

1225 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1226 *(*
__s
)++ = '\0';

1227  
__ªtvÆ
;

1228 
	}
}

1230 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1231 
__STRING_INLINE
 *

1232 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1234 *
__ªtvÆ
 = *
__s
;

1235 i‡(
__ªtvÆ
 !
NULL
)

1237 *
__˝
 = 
__ªtvÆ
;

1240 i‡(*
__˝
 == '\0')

1242 
__˝
 = 
NULL
;

1245 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1247 *
__˝
++ = '\0';

1250 ++
__˝
;

1252 *
__s
 = 
__˝
;

1254  
__ªtvÆ
;

1255 
	}
}

1257 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1258 
__ªje˘3
);

1259 
__STRING_INLINE
 *

1260 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1262 *
__ªtvÆ
 = *
__s
;

1263 i‡(
__ªtvÆ
 !
NULL
)

1265 *
__˝
 = 
__ªtvÆ
;

1268 i‡(*
__˝
 == '\0')

1270 
__˝
 = 
NULL
;

1273 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1275 *
__˝
++ = '\0';

1278 ++
__˝
;

1280 *
__s
 = 
__˝
;

1282  
__ªtvÆ
;

1283 
	}
}

1284 #ifde‡
__USE_BSD


1285 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1292 #ifde‡
__USE_MISC


1294 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1295 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1296 
	~<°dlib.h
>

1299 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1301 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1302 
	#__°rdup
(
s
) \

1303 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1304 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1305 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1306 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1307 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1308 i‡(
__ªtvÆ
 !
NULL
) \

1309 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1310 
__ªtvÆ
; 
	}
})) \

1311 : 
	`__°rdup
 (
s
)))

	)

1313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1314 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1318 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1320 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1321 
__THROW
 
__©åibuã_mÆloc__
;

1322 
	#__°∫dup
(
s
, 
n
) \

1323 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1324 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1325 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1326 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1327 
size_t
 
__n
 = (
n
); \

1328 *
__ªtvÆ
; \

1329 i‡(
__n
 < 
__Àn
) \

1330 
__Àn
 = 
__n
 + 1; \

1331 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1332 i‡(
__ªtvÆ
 !
NULL
) \

1334 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1335 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1336 
__Àn
 - 1); \

1338 
__ªtvÆ
; 
	}
})) \

1339 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1341 #ifde‡
__USE_GNU


1342 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1348 #i‚de‡
_FORCE_INLINES


1349 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

45 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

54 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 
	m__vÆ
[2];

61 } 
	t__quad_t
;

64 
__u_l⁄g
 
	m__vÆ
[2];

65 } 
	t__u_quad_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 
__quad_t
 *
	t__qaddr_t
;

192 *
	t__ˇddr_t
;

195 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

198 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

201 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__powîpc64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

10 #i‡!
deföed
 
__NO_LONG_DOUBLE_MATH
 && !deföed 
__LONG_DOUBLE_MATH_OPTIONAL


15 
	#__LONG_DOUBLE_MATH_OPTIONAL
 1

	)

16 #i‚de‡
__LONG_DOUBLE_128__


17 
	#__NO_LONG_DOUBLE_MATH
 1

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

329 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

331 #ñi‡!
__GNUC_PREREQ
 (4, 1)

332 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


333 #ñi‡
_FORTIFY_SOURCE
 > 1

334 
	#__USE_FORTIFY_LEVEL
 2

	)

336 
	#__USE_FORTIFY_LEVEL
 1

	)

339 #i‚de‡
__USE_FORTIFY_LEVEL


340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 17

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‡
deföed
 
__GNUC__
 \

366 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

367 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

368 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

369 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

373 #i‚de‡
__ASSEMBLER__


374 #i‚de‡
_SYS_CDEFS_H


375 
	~<sys/cdefs.h
>

380 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


381 
	#__USE_LARGEFILE
 1

	)

382 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

389 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

390 && 
deföed
 
	g__exã∫_ölöe


391 
	#__USE_EXTERN_INLINES
 1

	)

399 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

33 
	~<time.h
>

35 #i‚de‡
__pid_t_deföed


36 
__pid_t
 
	tpid_t
;

37 
	#__pid_t_deföed


	)

42 
	~<bôs/sched.h
>

44 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

47 
__BEGIN_DECLS


50 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

51 
__THROW
;

54 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

57 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

58 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

64 
	$sched_yõld
 (Ë
__THROW
;

67 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

70 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

73 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

76 #ifde‡
__USE_GNU


78 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

79 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

86 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

89 
˝u£ç
)

	)

90 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

91 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

93 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

94 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

95 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

96 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

98 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

99 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

100 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

101 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

102 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

106 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

108 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

111 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

112 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

113 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

117 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

118 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

121 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

169 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

171 #ifde‡
__FAVOR_BSD


174 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 #ifde‡
__USE_XOPEN


177 #ifde‡
__GNUC__


178 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

181 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

187 #ifde‡
__USE_BSD


194 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

197 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

200 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

203 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

207 #ifde‡
__USE_MISC


208 
	#NSIG
 
_NSIG


	)

211 #ifde‡
__USE_GNU


212 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

216 #ifde‡
__USE_BSD


217 
__sigh™dÀr_t
 
	tsig_t
;

220 #ifde‡
__USE_POSIX


223 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

229 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

232 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__USE_GNU


240 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

243 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

244 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

247 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

248 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

253 
	~<bôs/siga˘i⁄.h
>

256 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

257 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

264 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

267 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

268 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

271 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

278 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

279 
	`__n⁄nuŒ
 ((1, 2));

281 #ifde‡
__USE_POSIX199309


286 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

294 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

295 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

296 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

297 
	`__n⁄nuŒ
 ((1));

301 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

302 
__THROW
;

307 #ifde‡
__USE_BSD


311 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

312 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

315 
	ssigvec


317 
__sigh™dÀr_t
 
sv_h™dÀr
;

318 
sv_mask
;

320 
sv_Êags
;

321 
	#sv_⁄°ack
 
sv_Êags


	)

325 
	#SV_ONSTACK
 (1 << 0)

	)

326 
	#SV_INTERRUPT
 (1 << 1)

	)

327 
	#SV_RESETHAND
 (1 << 2)

	)

335 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

336 
sigvec
 *
__ovec
Ë
__THROW
;

340 
	~<bôs/sigc⁄ãxt.h
>

343 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


349 
	#__√ed_size_t


	)

350 
	~<°ddef.h
>

355 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

357 
	~<bôs/sig°ack.h
>

358 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


360 
	~<sys/uc⁄ãxt.h
>

366 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

367 
__THROW
 
__©åibuã_dïªˇãd__
;

371 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

372 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

376 #ifde‡
__USE_XOPEN_EXTENDED


380 
	$sighﬁd
 (
__sig
Ë
__THROW
;

383 
	$sigªl£
 (
__sig
Ë
__THROW
;

386 
	$sigign‹e
 (
__sig
Ë
__THROW
;

389 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

392 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


395 
	~<bôs/±hªadty≥s.h
>

396 
	~<bôs/sigthªad.h
>

403 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

405 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

409 
__END_DECLS


	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


43 
	#__LEAF
 , 
__Àaf__


	)

44 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

46 
	#__LEAF


	)

47 
	#__LEAF_ATTR


	)

55 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

56 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

57 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

58 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

65 
	#__THROW


	)

66 
	#__THROWNL


	)

67 
	#__NTH
(
f˘
Ë
	)
fct

73 
	#__ölöe


	)

75 
	#__THROW


	)

76 
	#__THROWNL


	)

77 
	#__NTH
(
f˘
Ë
	)
fct

83 
	#__P
(
¨gs
Ë
	)
args

84 
	#__PMT
(
¨gs
Ë
	)
args

89 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

90 
	#__STRING
(
x
Ë#x

	)

93 
	#__±r_t
 *

	)

94 
	#__l⁄g_doubÀ_t
 

	)

98 #ifdef 
__˝lu•lus


99 
	#__BEGIN_DECLS
 "C" {

	)

100 
	#__END_DECLS
 }

	)

102 
	#__BEGIN_DECLS


	)

103 
	#__END_DECLS


	)

112 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


113 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

114 
	#__END_NAMESPACE_STD
 }

	)

115 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

116 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

117 
	#__END_NAMESPACE_C99
 }

	)

118 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

123 
	#__BEGIN_NAMESPACE_STD


	)

124 
	#__END_NAMESPACE_STD


	)

125 
	#__USING_NAMESPACE_STD
(
«me
)

	)

126 
	#__BEGIN_NAMESPACE_C99


	)

127 
	#__END_NAMESPACE_C99


	)

128 
	#__USING_NAMESPACE_C99
(
«me
)

	)

133 #i‚de‡
__BOUNDED_POINTERS__


134 
	#__bounded


	)

135 
	#__unbounded


	)

136 
	#__±rvÆue


	)

141 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

142 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

144 #i‡
__GNUC_PREREQ
 (4,3)

145 
	#__w¨nde˛
(
«me
, 
msg
) \

146 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

147 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

148 
	#__îr‹de˛
(
«me
, 
msg
) \

149 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

151 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

152 
	#__w¨«âr
(
msg
)

	)

153 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 #i‡
__GNUC_PREREQ
 (2,97)

159 
	#__Êex¨r
 []

	)

161 #ifde‡
__GNUC__


162 
	#__Êex¨r
 [0]

	)

164 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

165 
	#__Êex¨r
 []

	)

168 
	#__Êex¨r
 [1]

	)

184 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

186 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

187 #ifde‡
__˝lu•lus


188 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

189 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

190 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

191 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

198 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

199 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

212 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

213 
	#__©åibuã__
(
xyz
Ë

	)

219 #i‡
__GNUC_PREREQ
 (2,96)

220 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

222 
	#__©åibuã_mÆloc__


	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 
	~<bôs/w‹dsize.h
>

394 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


395 
	#__LDBL_COMPAT
 1

	)

396 #ifde‡
__REDIRECT


397 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

398 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

399 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

400 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

401 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

402 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

403 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

404 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

405 
	#__LDBL_REDIR_DECL
(
«me
) \

406 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

407 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

409 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

410 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

413 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


414 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

415 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

416 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

417 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

418 
	#__LDBL_REDIR_DECL
(
«me
)

	)

419 #ifde‡
__REDIRECT


420 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

421 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

422 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/syslog.h

32 #i‚de‡
_SYS_SYSLOG_H


33 
	#_SYS_SYSLOG_H
 1

	)

35 
	~<„©uªs.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

40 
	~<bôs/sy¶og-∑th.h
>

51 
	#LOG_EMERG
 0

	)

52 
	#LOG_ALERT
 1

	)

53 
	#LOG_CRIT
 2

	)

54 
	#LOG_ERR
 3

	)

55 
	#LOG_WARNING
 4

	)

56 
	#LOG_NOTICE
 5

	)

57 
	#LOG_INFO
 6

	)

58 
	#LOG_DEBUG
 7

	)

60 
	#LOG_PRIMASK
 0x07

	)

62 
	#LOG_PRI
(
p
Ë(’Ë& 
LOG_PRIMASK
)

	)

63 
	#LOG_MAKEPRI
(
Ác
, 
¥i
Ë((ÁcË| (¥i))

	)

65 #ifde‡
SYSLOG_NAMES


66 
	#INTERNAL_NOPRI
 0x10

	)

68 
	#INTERNAL_MARK
 
	`LOG_MAKEPRI
(
LOG_NFACILITIES
 << 3, 0)

	)

69 
	s_code
 {

70 *
	mc_«me
;

71 
	mc_vÆ
;

72 } 
	tCODE
;

74 
CODE
 
	g¥i‹ôy«mes
[] =

76 { "Æît", 
LOG_ALERT
 },

77 { "¸ô", 
LOG_CRIT
 },

78 { "debug", 
LOG_DEBUG
 },

79 { "emîg", 
LOG_EMERG
 },

80 { "îr", 
LOG_ERR
 },

81 { "îr‹", 
LOG_ERR
 },

82 { "öfo", 
LOG_INFO
 },

83 { "n⁄e", 
INTERNAL_NOPRI
 },

84 { "nŸi˚", 
LOG_NOTICE
 },

85 { "∑nic", 
LOG_EMERG
 },

86 { "w¨n", 
LOG_WARNING
 },

87 { "w¨nög", 
LOG_WARNING
 },

88 { 
NULL
, -1 }

93 
	#LOG_KERN
 (0<<3Ë

	)

94 
	#LOG_USER
 (1<<3Ë

	)

95 
	#LOG_MAIL
 (2<<3Ë

	)

96 
	#LOG_DAEMON
 (3<<3Ë

	)

97 
	#LOG_AUTH
 (4<<3Ë

	)

98 
	#LOG_SYSLOG
 (5<<3Ë

	)

99 
	#LOG_LPR
 (6<<3Ë

	)

100 
	#LOG_NEWS
 (7<<3Ë

	)

101 
	#LOG_UUCP
 (8<<3Ë

	)

102 
	#LOG_CRON
 (9<<3Ë

	)

103 
	#LOG_AUTHPRIV
 (10<<3Ë

	)

104 
	#LOG_FTP
 (11<<3Ë

	)

107 
	#LOG_LOCAL0
 (16<<3Ë

	)

108 
	#LOG_LOCAL1
 (17<<3Ë

	)

109 
	#LOG_LOCAL2
 (18<<3Ë

	)

110 
	#LOG_LOCAL3
 (19<<3Ë

	)

111 
	#LOG_LOCAL4
 (20<<3Ë

	)

112 
	#LOG_LOCAL5
 (21<<3Ë

	)

113 
	#LOG_LOCAL6
 (22<<3Ë

	)

114 
	#LOG_LOCAL7
 (23<<3Ë

	)

116 
	#LOG_NFACILITIES
 24

	)

117 
	#LOG_FACMASK
 0x03f8

	)

119 
	#LOG_FAC
(
p
Ë((’Ë& 
LOG_FACMASK
Ë>> 3)

	)

121 #ifde‡
SYSLOG_NAMES


122 
CODE
 
	gÁcûôy«mes
[] =

124 { "auth", 
LOG_AUTH
 },

125 { "auth¥iv", 
LOG_AUTHPRIV
 },

126 { "¸⁄", 
LOG_CRON
 },

127 { "d´m⁄", 
LOG_DAEMON
 },

128 { "·p", 
LOG_FTP
 },

129 { "kîn", 
LOG_KERN
 },

130 { "Õr", 
LOG_LPR
 },

131 { "maû", 
LOG_MAIL
 },

132 { "m¨k", 
INTERNAL_MARK
 },

133 { "√ws", 
LOG_NEWS
 },

134 { "£curôy", 
LOG_AUTH
 },

135 { "sy¶og", 
LOG_SYSLOG
 },

136 { "u£r", 
LOG_USER
 },

137 { "uu˝", 
LOG_UUCP
 },

138 { "loˇl0", 
LOG_LOCAL0
 },

139 { "loˇl1", 
LOG_LOCAL1
 },

140 { "loˇl2", 
LOG_LOCAL2
 },

141 { "loˇl3", 
LOG_LOCAL3
 },

142 { "loˇl4", 
LOG_LOCAL4
 },

143 { "loˇl5", 
LOG_LOCAL5
 },

144 { "loˇl6", 
LOG_LOCAL6
 },

145 { "loˇl7", 
LOG_LOCAL7
 },

146 { 
NULL
, -1 }

153 
	#LOG_MASK
(
¥i
Ë(1 << (¥i)Ë

	)

154 
	#LOG_UPTO
(
¥i
Ë((1 << (’ri)+1)Ë- 1Ë

	)

162 
	#LOG_PID
 0x01

	)

163 
	#LOG_CONS
 0x02

	)

164 
	#LOG_ODELAY
 0x04

	)

165 
	#LOG_NDELAY
 0x08

	)

166 
	#LOG_NOWAIT
 0x10

	)

167 
	#LOG_PERROR
 0x20

	)

169 
__BEGIN_DECLS


175 
˛o£log
 ();

181 
›ílog
 (c⁄° *
__idít
, 
__›ti⁄
, 
__Ácûôy
);

184 
	$£éogmask
 (
__mask
Ë
__THROW
;

190 
	$sy¶og
 (
__¥i
, c⁄° *
__fmt
, ...)

191 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

193 #ifde‡
__USE_BSD


200 
	$vsy¶og
 (
__¥i
, c⁄° *
__fmt
, 
__gnuc_va_li°
 
__≠
)

201 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

206 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


207 
	~<bôs/sy¶og.h
>

209 #ifde‡
__LDBL_COMPAT


210 
	~<bôs/sy¶og-ldbl.h
>

213 
__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__BEGIN_DECLS


31 
__exãnsi⁄__


32 
	$gnu_dev_maj‹
 (
__dev
)

33 
__THROW
 
__©åibuã_c⁄°__
;

34 
__exãnsi⁄__


35 
	$gnu_dev_mö‹
 (
__dev
)

36 
__THROW
 
__©åibuã_c⁄°__
;

37 
__exãnsi⁄__


38 
	$gnu_dev_makedev
 (
__maj‹
,

39 
__mö‹
)

40 
__THROW
 
__©åibuã_c⁄°__
;

42 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


43 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

44 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

46  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

47 
	}
}

49 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

50 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

52  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

53 
	}
}

55 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

56 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

58  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

59 | (((Ë(
__mö‹
 & ~0xff)) << 12)

60 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

61 
	}
}

63 
	g__END_DECLS


66 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

67 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

68 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_POWERPC_SOCKET_H


2 
	#_ASM_POWERPC_SOCKET_H


	)

11 
	~<asm/sockios.h
>

14 
	#SOL_SOCKET
 1

	)

16 
	#SO_DEBUG
 1

	)

17 
	#SO_REUSEADDR
 2

	)

18 
	#SO_TYPE
 3

	)

19 
	#SO_ERROR
 4

	)

20 
	#SO_DONTROUTE
 5

	)

21 
	#SO_BROADCAST
 6

	)

22 
	#SO_SNDBUF
 7

	)

23 
	#SO_RCVBUF
 8

	)

24 
	#SO_SNDBUFFORCE
 32

	)

25 
	#SO_RCVBUFFORCE
 33

	)

26 
	#SO_KEEPALIVE
 9

	)

27 
	#SO_OOBINLINE
 10

	)

28 
	#SO_NO_CHECK
 11

	)

29 
	#SO_PRIORITY
 12

	)

30 
	#SO_LINGER
 13

	)

31 
	#SO_BSDCOMPAT
 14

	)

32 
	#SO_REUSEPORT
 15

	)

33 
	#SO_RCVLOWAT
 16

	)

34 
	#SO_SNDLOWAT
 17

	)

35 
	#SO_RCVTIMEO
 18

	)

36 
	#SO_SNDTIMEO
 19

	)

37 
	#SO_PASSCRED
 20

	)

38 
	#SO_PEERCRED
 21

	)

41 
	#SO_SECURITY_AUTHENTICATION
 22

	)

42 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

43 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

45 
	#SO_BINDTODEVICE
 25

	)

48 
	#SO_ATTACH_FILTER
 26

	)

49 
	#SO_DETACH_FILTER
 27

	)

50 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

52 
	#SO_PEERNAME
 28

	)

53 
	#SO_TIMESTAMP
 29

	)

54 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

56 
	#SO_ACCEPTCONN
 30

	)

58 
	#SO_PEERSEC
 31

	)

59 
	#SO_PASSSEC
 34

	)

60 
	#SO_TIMESTAMPNS
 35

	)

61 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

63 
	#SO_MARK
 36

	)

65 
	#SO_TIMESTAMPING
 37

	)

66 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

68 
	#SO_PROTOCOL
 38

	)

69 
	#SO_DOMAIN
 39

	)

71 
	#SO_RXQ_OVFL
 40

	)

73 
	#SO_WIFI_STATUS
 41

	)

74 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

75 
	#SO_PEEK_OFF
 42

	)

78 
	#SO_NOFCS
 43

	)

80 
	#SO_LOCK_FILTER
 44

	)

82 
	#SO_SELECT_ERR_QUEUE
 45

	)

84 
	#SO_BUSY_POLL
 46

	)

86 
	#SO_MAX_PACING_RATE
 47

	)

88 
	#SO_BPF_EXTENSIONS
 48

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 
	#__bsw≠_16
(
x
) \

25 (
__exãnsi⁄__
 \

26 ({ 
__bsx
 = (Ë(
x
); \

27 
	`__bsw≠_c⁄°™t_16
 (
__bsx
); }))

	)

29 
__ölöe
 

30 
	$__bsw≠_16
 (
__bsx
)

32  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

33 
	}
}

	@/usr/include/bits/endian.h

20 #i‚de‡
_ENDIAN_H


24 #i‡
deföed
 
__BIG_ENDIAN__
 || deföed 
_BIG_ENDIAN


25 #i‡
deföed
 
__LITTLE_ENDIAN__
 || deföed 
_LITTLE_ENDIAN


26 #îr‹ 
BŸh
 
BIG_ENDIAN
 
™d
 
LITTLE_ENDIAN
 
deföed
!

28 
	#__BYTE_ORDER
 
__BIG_ENDIAN


	)

30 #i‡
deföed
 
__LITTLE_ENDIAN__
 || deföed 
_LITTLE_ENDIAN


31 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

33 #w¨nög 
C™nŸ
 
dëîmöe
 
cuºít
 
byã
 
‹dî
, 
assumög
 
big
-
ídün
.

34 
	#__BYTE_ORDER
 
__BIG_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

100 #i‚de‡
F_GETLK


101 #i‚de‡
__USE_FILE_OFFSET64


102 
	#F_GETLK
 5

	)

103 
	#F_SETLK
 6

	)

104 
	#F_SETLKW
 7

	)

106 
	#F_GETLK
 
F_GETLK64


	)

107 
	#F_SETLK
 
F_SETLK64


	)

108 
	#F_SETLKW
 
F_SETLKW64


	)

111 #i‚de‡
F_GETLK64


112 
	#F_GETLK64
 12

	)

113 
	#F_SETLK64
 13

	)

114 
	#F_SETLKW64
 14

	)

117 #ifde‡
__USE_LARGEFILE64


118 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

121 #ifde‡
__USE_XOPEN2K8


122 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

123 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

124 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

127 #ifde‡
__USE_GNU


128 
	#O_DIRECT
 
__O_DIRECT


	)

129 
	#O_NOATIME
 
__O_NOATIME


	)

130 
	#O_PATH
 
__O_PATH


	)

136 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


137 
	#O_DSYNC
 
__O_DSYNC


	)

138 #i‡
deföed
 
__O_RSYNC


139 
	#O_RSYNC
 
__O_RSYNC


	)

141 
	#O_RSYNC
 
O_SYNC


	)

146 
	#F_DUPFD
 0

	)

147 
	#F_GETFD
 1

	)

148 
	#F_SETFD
 2

	)

149 
	#F_GETFL
 3

	)

150 
	#F_SETFL
 4

	)

152 #i‚de‡
__F_SETOWN


153 
	#__F_SETOWN
 8

	)

154 
	#__F_GETOWN
 9

	)

157 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


158 
	#F_SETOWN
 
__F_SETOWN


	)

159 
	#F_GETOWN
 
__F_GETOWN


	)

162 #i‚de‡
__F_SETSIG


163 
	#__F_SETSIG
 10

	)

164 
	#__F_GETSIG
 11

	)

166 #i‚de‡
__F_SETOWN_EX


167 
	#__F_SETOWN_EX
 15

	)

168 
	#__F_GETOWN_EX
 16

	)

171 #ifde‡
__USE_GNU


172 
	#F_SETSIG
 
__F_SETSIG


	)

173 
	#F_GETSIG
 
__F_GETSIG


	)

174 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

175 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

178 #ifde‡
__USE_GNU


179 
	#F_SETLEASE
 1024

	)

180 
	#F_GETLEASE
 1025

	)

181 
	#F_NOTIFY
 1026

	)

182 
	#F_SETPIPE_SZ
 1031

	)

183 
	#F_GETPIPE_SZ
 1032

	)

185 #ifde‡
__USE_XOPEN2K8


186 
	#F_DUPFD_CLOEXEC
 1030

	)

191 
	#FD_CLOEXEC
 1

	)

193 #i‚de‡
F_RDLCK


195 
	#F_RDLCK
 0

	)

196 
	#F_WRLCK
 1

	)

197 
	#F_UNLCK
 2

	)

202 #i‚de‡
F_EXLCK


203 
	#F_EXLCK
 4

	)

204 
	#F_SHLCK
 8

	)

207 #ifde‡
__USE_BSD


209 
	#LOCK_SH
 1

	)

210 
	#LOCK_EX
 2

	)

211 
	#LOCK_NB
 4

	)

213 
	#LOCK_UN
 8

	)

216 #ifde‡
__USE_GNU


217 
	#LOCK_MAND
 32

	)

218 
	#LOCK_READ
 64

	)

219 
	#LOCK_WRITE
 128

	)

220 
	#LOCK_RW
 192

	)

223 #ifde‡
__USE_GNU


225 
	#DN_ACCESS
 0x00000001

	)

226 
	#DN_MODIFY
 0x00000002

	)

227 
	#DN_CREATE
 0x00000004

	)

228 
	#DN_DELETE
 0x00000008

	)

229 
	#DN_RENAME
 0x00000010

	)

230 
	#DN_ATTRIB
 0x00000020

	)

231 
	#DN_MULTISHOT
 0x80000000

	)

235 #ifde‡
__USE_GNU


237 
	e__pid_ty≥


239 
	mF_OWNER_TID
 = 0,

240 
	mF_OWNER_PID
,

241 
	mF_OWNER_PGRP
,

242 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


246 
	sf_ow√r_ex


248 
__pid_ty≥
 
	mty≥
;

249 
__pid_t
 
	mpid
;

255 #ifdef 
__USE_BSD


256 
	#FAPPEND
 
O_APPEND


	)

257 
	#FFSYNC
 
O_FSYNC


	)

258 
	#FASYNC
 
O_ASYNC


	)

259 
	#FNONBLOCK
 
O_NONBLOCK


	)

260 
	#FNDELAY
 
O_NDELAY


	)

263 #i‚de‡
__POSIX_FADV_DONTNEED


264 
	#__POSIX_FADV_DONTNEED
 4

	)

265 
	#__POSIX_FADV_NOREUSE
 5

	)

268 #ifde‡
__USE_XOPEN2K


269 
	#POSIX_FADV_NORMAL
 0

	)

270 
	#POSIX_FADV_RANDOM
 1

	)

271 
	#POSIX_FADV_SEQUENTIAL
 2

	)

272 
	#POSIX_FADV_WILLNEED
 3

	)

273 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

274 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

278 #ifde‡
__USE_GNU


280 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

283 
	#SYNC_FILE_RANGE_WRITE
 2

	)

286 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

291 
	#SPLICE_F_MOVE
 1

	)

292 
	#SPLICE_F_NONBLOCK
 2

	)

295 
	#SPLICE_F_MORE
 4

	)

296 
	#SPLICE_F_GIFT
 8

	)

300 
	sfûe_h™dÀ


302 
	mh™dÀ_byãs
;

303 
	mh™dÀ_ty≥
;

305 
	mf_h™dÀ
[0];

309 
	#MAX_HANDLE_SZ
 128

	)

312 
	g__BEGIN_DECLS


314 #ifde‡
__USE_GNU


317 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

318 
__THROW
;

325 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

326 
__Êags
);

333 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

334 
size_t
 
__cou¡
, 
__Êags
);

340 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

341 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

342 
__Êags
);

348 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

349 
__Êags
);

355 #i‚de‡
__USE_FILE_OFFSET64


356 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

358 #ifde‡
__REDIRECT


359 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

360 
__off64_t
 
__Àn
),

361 
ÁŒoˇã64
);

363 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

366 #ifde‡
__USE_LARGEFILE64


367 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

368 
__off64_t
 
__Àn
);

373 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

374 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

375 
__Êags
Ë
__THROW
;

381 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

382 
__Êags
);

386 
__END_DECLS


	@/usr/include/bits/ioctl-types.h

1 #i‚de‡
_SYS_IOCTL_H


5 
	~<ãrmios.h
>

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

83 
	#PTHREAD_STACK_MIN
 131072

	)

86 
	#DELAYTIMER_MAX
 2147483647

	)

89 
	#TTY_NAME_MAX
 32

	)

92 
	#LOGIN_NAME_MAX
 256

	)

95 
	#HOST_NAME_MAX
 64

	)

98 
	#MQ_PRIO_MAX
 32768

	)

101 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

34 
	#SCHED_IDLE
 5

	)

36 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

39 #ifde‡
__USE_GNU


41 
	#CSIGNAL
 0x000000f‡

	)

42 
	#CLONE_VM
 0x00000100

	)

43 
	#CLONE_FS
 0x00000200

	)

44 
	#CLONE_FILES
 0x00000400

	)

45 
	#CLONE_SIGHAND
 0x00000800

	)

46 
	#CLONE_PTRACE
 0x00002000

	)

47 
	#CLONE_VFORK
 0x00004000

	)

49 
	#CLONE_PARENT
 0x00008000

	)

51 
	#CLONE_THREAD
 0x00010000

	)

52 
	#CLONE_NEWNS
 0x00020000

	)

53 
	#CLONE_SYSVSEM
 0x00040000

	)

54 
	#CLONE_SETTLS
 0x00080000

	)

55 
	#CLONE_PARENT_SETTID
 0x00100000

	)

57 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

59 
	#CLONE_DETACHED
 0x00400000

	)

60 
	#CLONE_UNTRACED
 0x00800000

	)

62 
	#CLONE_CHILD_SETTID
 0x01000000

	)

64 
	#CLONE_NEWUTS
 0x04000000

	)

65 
	#CLONE_NEWIPC
 0x08000000

	)

66 
	#CLONE_NEWUSER
 0x10000000

	)

67 
	#CLONE_NEWPID
 0x20000000

	)

68 
	#CLONE_NEWNET
 0x40000000

	)

69 
	#CLONE_IO
 0x80000000

	)

73 
	ssched_∑øm


75 
	m__sched_¥i‹ôy
;

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

96 
__END_DECLS


100 #i‡!
deföed
 
__deföed_sched∑øm
 \

101 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

102 
	#__deföed_sched∑øm
 1

	)

104 
	s__sched_∑øm


106 
__sched_¥i‹ôy
;

108 #unde‡
__√ed_sched∑øm


112 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


113 
	#__˝u_£t_t_deföed


	)

115 
	#__CPU_SETSIZE
 1024

	)

116 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

119 
	t__˝u_mask
;

122 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

123 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

128 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

129 } 
	t˝u_£t_t
;

132 #i‡
	`__GNUC_PREREQ
 (2, 91)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

134 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

136 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

138 
size_t
 
__i
; \

139 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

140 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

141 
__i
 = 0; __ò< 
__imax
; ++__i) \

142 
__bôs
[
__i
] = 0; \

143 
	}
} 0)

	)

145 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

146 (
__exãnsi⁄__
 \

147 ({ 
size_t
 
__˝u
 = (
˝u
); \

148 
__˝u
 < 8 * (
£tsize
) \

149 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

150 |
	`__CPUMASK
 (
__˝u
)) \

151 : 0; }))

	)

152 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

153 (
__exãnsi⁄__
 \

154 ({ 
size_t
 
__˝u
 = (
˝u
); \

155 
__˝u
 < 8 * (
£tsize
) \

156 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

157 &~
	`__CPUMASK
 (
__˝u
)) \

158 : 0; }))

	)

159 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

160 (
__exãnsi⁄__
 \

161 ({ 
size_t
 
__˝u
 = (
˝u
); \

162 
__˝u
 < 8 * (
£tsize
) \

163 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

164 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

165 : 0; }))

	)

167 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

168 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

170 #i‡
__GNUC_PREREQ
 (2, 91)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

174 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

175 (
__exãnsi⁄__
 \

176 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

177 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

178 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

179 
size_t
 
__i
; \

180 
__i
 = 0; __ò< 
__imax
; ++__i) \

181 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

183 
__i
 =
__imax
; }))

	)

186 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

187 (
__exãnsi⁄__
 \

188 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

189 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

190 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

191 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

192 
size_t
 
__i
; \

193 
__i
 = 0; __ò< 
__imax
; ++__i) \

194 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

195 
__de°
; }))

	)

197 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

198 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

199 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

200 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

202 
__BEGIN_DECLS


204 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

205 
__THROW
;

206 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

207 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

209 
__END_DECLS


	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


22 #i‚de‡
sigc⁄ãxt_°ru˘


25 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

27 
	~<asm/sigc⁄ãxt.h
>

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 4096

	)

45 
	#SIGSTKSZ
 16384

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

24 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

27 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


28 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

29 #ñi‡
	t_IO_MTSAFE_IO


30 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


33 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

34 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

35 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

36 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

47 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


48 
	t_IO_acquúe_lock
(
	t_Â
) \

49 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

50 
	`_IO_Êockfûe
 (
_Â
)

	)

52 
	#_IO_ªÀa£_lock
(
_Â
) \

53 
	`_IO_fu∆ockfûe
 (
_Â
); \

54 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/syslog-ldbl.h

19 #i‚de‡
_SYS_SYSLOG_H


23 
	$__LDBL_REDIR_DECL
 (
sy¶og
)

25 #ifde‡
__USE_BSD


26 
	$__LDBL_REDIR_DECL
 (
vsy¶og
)

29 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


30 
	$__LDBL_REDIR_DECL
 (
__sy¶og_chk
)

32 #ifde‡
__USE_BSD


33 
	$__LDBL_REDIR_DECL
 (
__vsy¶og_chk
)

	@/usr/include/bits/syslog-path.h

19 #i‚de‡
_SYS_SYSLOG_H


23 #i‚de‡
_BITS_SYSLOG_PATH_H


24 
	#_BITS_SYSLOG_PATH_H
 1

	)

26 
	#_PATH_LOG
 "/dev/log"

	)

	@/usr/include/bits/syslog.h

19 #i‚de‡
_SYS_SYSLOG_H


24 
	$__sy¶og_chk
 (
__¥i
, 
__Êag
, c⁄° *
__fmt
, ...)

25 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

27 #ifde‡
__va_¨g_∑ck


28 
__f‹tify_fun˘i⁄
 

29 
	$sy¶og
 (
__¥i
, c⁄° *
__fmt
, ...)

31 
	`__sy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

32 
	}
}

33 #ñi‡!
deföed
 
__˝lu•lus


34 
	#sy¶og
(
¥i
, ...) \

35 
	`__sy¶og_chk
 (
¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

39 #ifde‡
__USE_BSD


40 
	$__vsy¶og_chk
 (
__¥i
, 
__Êag
, c⁄° *
__fmt
,

41 
__gnuc_va_li°
 
__≠
)

42 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

44 
__f‹tify_fun˘i⁄
 

45 
	$vsy¶og
 (
__¥i
, c⁄° *
__fmt
, 
__gnuc_va_li°
 
__≠
)

47 
	`__vsy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

48 
	}
}

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

29 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

30 
	#__UID_T_TYPE
 
__U32_TYPE


	)

31 
	#__GID_T_TYPE
 
__U32_TYPE


	)

32 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

33 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

34 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

35 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

36 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

37 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

38 
	#__PID_T_TYPE
 
__S32_TYPE


	)

39 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

40 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

41 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

42 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

43 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

44 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

45 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

46 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

47 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

55 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

56 
	#__TIMER_T_TYPE
 *

	)

57 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

58 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

59 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

60 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

61 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

63 #ifde‡
__LP64__


67 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

70 
	#__INO_T_MATCHES_INO64_T
 1

	)

74 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

5 
	~<bôs/w‹dsize.h
>

7 #i‡
__WORDSIZE
 == 32

8 
	~<gnu/°ubs-32.h
>

10 #i‡
__WORDSIZE
 =64 && 
_CALL_ELF
 != 2

11 
	~<gnu/°ubs-64-v1.h
>

13 #i‡
__WORDSIZE
 =64 && 
_CALL_ELF
 == 2

14 
	~<gnu/°ubs-64-v2.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	#__STDC_IEC_559__
 1

	)

31 
	#__STDC_IEC_559_COMPLEX__
 1

	)

35 
	#__STDC_ISO_10646__
 201103L

	)

38 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #i‡
__WORDSIZE
 == 32

31 
	#NGREG
 48

	)

34 
	tgªg£t_t
[
NGREG
];

37 
	s_libc_Â°©e


39 
	mÂªgs
[32];

40 
	mÂs¸
;

41 
	m_∑d
[2];

42 } 
	tÂªg£t_t
;

46 
	s_libc_vr°©e


48 
	mvºegs
[32][4];

49 
	mvrßve
;

50 
	m_∑d
[2];

51 
	mvs¸
;

52 } 
	tvºeg£t_t
;

57 
gªg£t_t
 
	mgªgs
;

58 
Âªg£t_t
 
	mÂªgs
;

59 
vºeg£t_t
 
vºegs
 
__©åibuã__
((
__Æig√d__
(16)));

60 } 
	tmc⁄ãxt_t
;

73 
	#NGREG
 48

	)

74 
	#NFPREG
 33

	)

75 
	#NVRREG
 34

	)

77 
	tgªg£t_t
[
NGREG
];

78 
	tÂªg£t_t
[
NFPREG
];

83 
	s_libc_vs¸


85 
	m__∑d
[3];

86 
	mvs¸_w‹d
;

87 } 
	tvs¸_t
;

91 
	s_libc_vr°©e


93 
	mvºegs
[32][4];

94 
vs¸_t
 
	mvs¸
;

95 
	mvrßve
;

96 
	m__∑d
[3];

97 } 
	tvºeg£t_t
 
	t__©åibuã__
((
	t__Æig√d__
(16)));

100 
	m__unu£d
[4];

101 
	msig«l
;

102 
	m__∑d0
;

103 
	mh™dÀr
;

104 
	mﬁdmask
;

105 
±_ªgs
 *
	mªgs
;

106 
gªg£t_t
 
	mgp_ªgs
;

107 
Âªg£t_t
 
	mÂ_ªgs
;

127 
vºeg£t_t
 *
	mv_ªgs
;

128 
	mvmx_ª£rve
[
NVRREG
+NVRREG+1];

129 } 
	tmc⁄ãxt_t
;

134 
	suc⁄ãxt


136 
	muc_Êags
;

137 
uc⁄ãxt
 *
	muc_lök
;

138 
°ack_t
 
	muc_°ack
;

139 #i‡
__WORDSIZE
 == 32

163 
	muc_∑d
[7];

164 
	uuc_ªgs_±r
 {

165 
±_ªgs
 *
	mªgs
;

166 
mc⁄ãxt_t
 *
	muc_ªgs
;

167 } 
	muc_mc⁄ãxt
;

168 
sig£t_t
 
	muc_sigmask
;

169 
	muc_ªg_•a˚
[(
mc⁄ãxt_t
) + 12];

171 
sig£t_t
 
	muc_sigmask
;

172 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

174 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/errno.h

1 #i‚de‡
_ASM_POWERPC_ERRNO_H


2 
	#_ASM_POWERPC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o.h
>

6 #unde‡
EDEADLOCK


7 
	#EDEADLOCK
 58

	)

9 
	#_LAST_ERRNO
 516

	)

	@/usr/include/asm/ioctls.h

1 #i‚de‡
_ASM_POWERPC_IOCTLS_H


2 
	#_ASM_POWERPC_IOCTLS_H


	)

4 
	~<asm/io˘l.h
>

6 
	#FIOCLEX
 
	`_IO
('f', 1)

	)

7 
	#FIONCLEX
 
	`_IO
('f', 2)

	)

8 
	#FIOASYNC
 
	`_IOW
('f', 125, )

	)

9 
	#FIONBIO
 
	`_IOW
('f', 126, )

	)

10 
	#FIONREAD
 
	`_IOR
('f', 127, )

	)

11 
	#TIOCINQ
 
FIONREAD


	)

12 
	#FIOQSIZE
 
	`_IOR
('f', 128, 
loff_t
)

	)

14 
	#TIOCGETP
 
	`_IOR
('t', 8, 
sgâyb
)

	)

15 
	#TIOCSETP
 
	`_IOW
('t', 9, 
sgâyb
)

	)

16 
	#TIOCSETN
 
	`_IOW
('t', 10, 
sgâyb
Ë

	)

18 
	#TIOCSETC
 
	`_IOW
('t', 17, 
tch¨s
)

	)

19 
	#TIOCGETC
 
	`_IOR
('t', 18, 
tch¨s
)

	)

20 
	#TCGETS
 
	`_IOR
('t', 19, 
ãrmios
)

	)

21 
	#TCSETS
 
	`_IOW
('t', 20, 
ãrmios
)

	)

22 
	#TCSETSW
 
	`_IOW
('t', 21, 
ãrmios
)

	)

23 
	#TCSETSF
 
	`_IOW
('t', 22, 
ãrmios
)

	)

25 
	#TCGETA
 
	`_IOR
('t', 23, 
ãrmio
)

	)

26 
	#TCSETA
 
	`_IOW
('t', 24, 
ãrmio
)

	)

27 
	#TCSETAW
 
	`_IOW
('t', 25, 
ãrmio
)

	)

28 
	#TCSETAF
 
	`_IOW
('t', 28, 
ãrmio
)

	)

30 
	#TCSBRK
 
	`_IO
('t', 29)

	)

31 
	#TCXONC
 
	`_IO
('t', 30)

	)

32 
	#TCFLSH
 
	`_IO
('t', 31)

	)

34 
	#TIOCSWINSZ
 
	`_IOW
('t', 103, 
wösize
)

	)

35 
	#TIOCGWINSZ
 
	`_IOR
('t', 104, 
wösize
)

	)

36 
	#TIOCSTART
 
	`_IO
('t', 110Ë

	)

37 
	#TIOCSTOP
 
	`_IO
('t', 111Ë

	)

38 
	#TIOCOUTQ
 
	`_IOR
('t', 115, Ë

	)

40 
	#TIOCGLTC
 
	`_IOR
('t', 116, 
…ch¨s
)

	)

41 
	#TIOCSLTC
 
	`_IOW
('t', 117, 
…ch¨s
)

	)

42 
	#TIOCSPGRP
 
	`_IOW
('t', 118, )

	)

43 
	#TIOCGPGRP
 
	`_IOR
('t', 119, )

	)

45 
	#TIOCEXCL
 0x540C

	)

46 
	#TIOCNXCL
 0x540D

	)

47 
	#TIOCSCTTY
 0x540E

	)

49 
	#TIOCSTI
 0x5412

	)

50 
	#TIOCMGET
 0x5415

	)

51 
	#TIOCMBIS
 0x5416

	)

52 
	#TIOCMBIC
 0x5417

	)

53 
	#TIOCMSET
 0x5418

	)

54 
	#TIOCM_LE
 0x001

	)

55 
	#TIOCM_DTR
 0x002

	)

56 
	#TIOCM_RTS
 0x004

	)

57 
	#TIOCM_ST
 0x008

	)

58 
	#TIOCM_SR
 0x010

	)

59 
	#TIOCM_CTS
 0x020

	)

60 
	#TIOCM_CAR
 0x040

	)

61 
	#TIOCM_RNG
 0x080

	)

62 
	#TIOCM_DSR
 0x100

	)

63 
	#TIOCM_CD
 
TIOCM_CAR


	)

64 
	#TIOCM_RI
 
TIOCM_RNG


	)

65 
	#TIOCM_OUT1
 0x2000

	)

66 
	#TIOCM_OUT2
 0x4000

	)

67 
	#TIOCM_LOOP
 0x8000

	)

69 
	#TIOCGSOFTCAR
 0x5419

	)

70 
	#TIOCSSOFTCAR
 0x541A

	)

71 
	#TIOCLINUX
 0x541C

	)

72 
	#TIOCCONS
 0x541D

	)

73 
	#TIOCGSERIAL
 0x541E

	)

74 
	#TIOCSSERIAL
 0x541F

	)

75 
	#TIOCPKT
 0x5420

	)

76 
	#TIOCPKT_DATA
 0

	)

77 
	#TIOCPKT_FLUSHREAD
 1

	)

78 
	#TIOCPKT_FLUSHWRITE
 2

	)

79 
	#TIOCPKT_STOP
 4

	)

80 
	#TIOCPKT_START
 8

	)

81 
	#TIOCPKT_NOSTOP
 16

	)

82 
	#TIOCPKT_DOSTOP
 32

	)

83 
	#TIOCPKT_IOCTL
 64

	)

86 
	#TIOCNOTTY
 0x5422

	)

87 
	#TIOCSETD
 0x5423

	)

88 
	#TIOCGETD
 0x5424

	)

89 
	#TCSBRKP
 0x5425

	)

90 
	#TIOCSBRK
 0x5427

	)

91 
	#TIOCCBRK
 0x5428

	)

92 
	#TIOCGSID
 0x5429

	)

93 
	#TIOCGRS485
 0x542e

	)

94 
	#TIOCSRS485
 0x542f

	)

95 
	#TIOCGPTN
 
	`_IOR
('T',0x30, Ë

	)

96 
	#TIOCSPTLCK
 
	`_IOW
('T',0x31, Ë

	)

97 
	#TIOCGDEV
 
	`_IOR
('T',0x32, Ë

	)

98 
	#TIOCSIG
 
	`_IOW
('T',0x36, Ë

	)

99 
	#TIOCVHANGUP
 0x5437

	)

100 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

101 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

102 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

104 
	#TIOCSERCONFIG
 0x5453

	)

105 
	#TIOCSERGWILD
 0x5454

	)

106 
	#TIOCSERSWILD
 0x5455

	)

107 
	#TIOCGLCKTRMIOS
 0x5456

	)

108 
	#TIOCSLCKTRMIOS
 0x5457

	)

109 
	#TIOCSERGSTRUCT
 0x5458

	)

110 
	#TIOCSERGETLSR
 0x5459

	)

112 
	#TIOCSER_TEMT
 0x01

	)

113 
	#TIOCSERGETMULTI
 0x545A

	)

114 
	#TIOCSERSETMULTI
 0x545B

	)

116 
	#TIOCMIWAIT
 0x545C

	)

117 
	#TIOCGICOUNT
 0x545D

	)

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASM_POWERPC_SIGCONTEXT_H


2 
	#_ASM_POWERPC_SIGCONTEXT_H


	)

11 
	~<asm/±ø˚.h
>

12 #ifde‡
__powîpc64__


13 
	~<asm/ñf.h
>

16 
	ssigc⁄ãxt
 {

17 
	m_unu£d
[4];

18 
	msig«l
;

19 #ifde‡
__powîpc64__


20 
	m_∑d0
;

22 
	mh™dÀr
;

23 
	mﬁdmask
;

24 
±_ªgs
 *
	mªgs
;

25 #ifde‡
__powîpc64__


26 
ñf_gªg£t_t
 
	mgp_ªgs
;

27 
ñf_Âªg£t_t
 
	mÂ_ªgs
;

82 
ñf_vºeg_t
 *
	mv_ªgs
;

83 
	mvmx_ª£rve
[
ELF_NVRREG
+ELF_NVRREG+32+1];

	@/usr/include/asm/sockios.h

1 #i‚de‡
_ASM_POWERPC_SOCKIOS_H


2 
	#_ASM_POWERPC_SOCKIOS_H


	)

12 
	#FIOSETOWN
 0x8901

	)

13 
	#SIOCSPGRP
 0x8902

	)

14 
	#FIOGETOWN
 0x8903

	)

15 
	#SIOCGPGRP
 0x8904

	)

16 
	#SIOCATMARK
 0x8905

	)

17 
	#SIOCGSTAMP
 0x8906

	)

18 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64-v2.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_ªm_pio2l


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gây


	)

16 
	#__°ub_lchmod


	)

17 
	#__°ub_ªvoke


	)

18 
	#__°ub_£éogö


	)

19 
	#__°ub_sigªtu∫


	)

20 
	#__°ub_s°k


	)

21 
	#__°ub_°ty


	)

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 #i‚de‡
EXEC_PAGESIZE


9 
	#EXEC_PAGESIZE
 4096

	)

12 #i‚de‡
NOGROUP


13 
	#NOGROUP
 (-1)

	)

16 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/elf.h

9 #i‚de‡
_ASM_POWERPC_ELF_H


10 
	#_ASM_POWERPC_ELF_H


	)

13 
	~<löux/ty≥s.h
>

15 
	~<asm/±ø˚.h
>

16 
	~<asm/˝uèbÀ.h
>

17 
	~<asm/auxvec.h
>

20 
	#R_PPC_NONE
 0

	)

21 
	#R_PPC_ADDR32
 1

	)

22 
	#R_PPC_ADDR24
 2

	)

23 
	#R_PPC_ADDR16
 3

	)

24 
	#R_PPC_ADDR16_LO
 4

	)

25 
	#R_PPC_ADDR16_HI
 5

	)

26 
	#R_PPC_ADDR16_HA
 6

	)

27 
	#R_PPC_ADDR14
 7

	)

28 
	#R_PPC_ADDR14_BRTAKEN
 8

	)

29 
	#R_PPC_ADDR14_BRNTAKEN
 9

	)

30 
	#R_PPC_REL24
 10

	)

31 
	#R_PPC_REL14
 11

	)

32 
	#R_PPC_REL14_BRTAKEN
 12

	)

33 
	#R_PPC_REL14_BRNTAKEN
 13

	)

34 
	#R_PPC_GOT16
 14

	)

35 
	#R_PPC_GOT16_LO
 15

	)

36 
	#R_PPC_GOT16_HI
 16

	)

37 
	#R_PPC_GOT16_HA
 17

	)

38 
	#R_PPC_PLTREL24
 18

	)

39 
	#R_PPC_COPY
 19

	)

40 
	#R_PPC_GLOB_DAT
 20

	)

41 
	#R_PPC_JMP_SLOT
 21

	)

42 
	#R_PPC_RELATIVE
 22

	)

43 
	#R_PPC_LOCAL24PC
 23

	)

44 
	#R_PPC_UADDR32
 24

	)

45 
	#R_PPC_UADDR16
 25

	)

46 
	#R_PPC_REL32
 26

	)

47 
	#R_PPC_PLT32
 27

	)

48 
	#R_PPC_PLTREL32
 28

	)

49 
	#R_PPC_PLT16_LO
 29

	)

50 
	#R_PPC_PLT16_HI
 30

	)

51 
	#R_PPC_PLT16_HA
 31

	)

52 
	#R_PPC_SDAREL16
 32

	)

53 
	#R_PPC_SECTOFF
 33

	)

54 
	#R_PPC_SECTOFF_LO
 34

	)

55 
	#R_PPC_SECTOFF_HI
 35

	)

56 
	#R_PPC_SECTOFF_HA
 36

	)

59 
	#R_PPC_TLS
 67

	)

60 
	#R_PPC_DTPMOD32
 68

	)

61 
	#R_PPC_TPREL16
 69

	)

62 
	#R_PPC_TPREL16_LO
 70

	)

63 
	#R_PPC_TPREL16_HI
 71

	)

64 
	#R_PPC_TPREL16_HA
 72

	)

65 
	#R_PPC_TPREL32
 73

	)

66 
	#R_PPC_DTPREL16
 74

	)

67 
	#R_PPC_DTPREL16_LO
 75

	)

68 
	#R_PPC_DTPREL16_HI
 76

	)

69 
	#R_PPC_DTPREL16_HA
 77

	)

70 
	#R_PPC_DTPREL32
 78

	)

71 
	#R_PPC_GOT_TLSGD16
 79

	)

72 
	#R_PPC_GOT_TLSGD16_LO
 80

	)

73 
	#R_PPC_GOT_TLSGD16_HI
 81

	)

74 
	#R_PPC_GOT_TLSGD16_HA
 82

	)

75 
	#R_PPC_GOT_TLSLD16
 83

	)

76 
	#R_PPC_GOT_TLSLD16_LO
 84

	)

77 
	#R_PPC_GOT_TLSLD16_HI
 85

	)

78 
	#R_PPC_GOT_TLSLD16_HA
 86

	)

79 
	#R_PPC_GOT_TPREL16
 87

	)

80 
	#R_PPC_GOT_TPREL16_LO
 88

	)

81 
	#R_PPC_GOT_TPREL16_HI
 89

	)

82 
	#R_PPC_GOT_TPREL16_HA
 90

	)

83 
	#R_PPC_GOT_DTPREL16
 91

	)

84 
	#R_PPC_GOT_DTPREL16_LO
 92

	)

85 
	#R_PPC_GOT_DTPREL16_HI
 93

	)

86 
	#R_PPC_GOT_DTPREL16_HA
 94

	)

89 
	#R_PPC_NUM
 95

	)

92 
	#ELF_NGREG
 48

	)

93 
	#ELF_NFPREG
 33

	)

95 
	tñf_gªg_t64
;

96 
ñf_gªg_t64
 
	tñf_gªg£t_t64
[
ELF_NGREG
];

98 
	tñf_gªg_t32
;

99 
ñf_gªg_t32
 
	tñf_gªg£t_t32
[
ELF_NGREG
];

100 
ñf_gªg£t_t32
 
	tcom∑t_ñf_gªg£t_t
;

105 #ifde‡
__powîpc64__


106 
	#ELF_NVRREG32
 33

	)

107 
	#ELF_NVRREG
 34

	)

108 
	#ELF_NVSRHALFREG
 32

	)

109 
	#ELF_GREG_TYPE
 
ñf_gªg_t64


	)

110 
	#ELF_ARCH
 
EM_PPC64


	)

111 
	#ELF_CLASS
 
ELFCLASS64


	)

112 
ñf_gªg_t64
 
	tñf_gªg_t
;

113 
ñf_gªg£t_t64
 
	tñf_gªg£t_t
;

115 
	#ELF_NEVRREG
 34

	)

116 
	#ELF_NVRREG
 33

	)

117 
	#ELF_GREG_TYPE
 
ñf_gªg_t32


	)

118 
	#ELF_ARCH
 
EM_PPC


	)

119 
	#ELF_CLASS
 
ELFCLASS32


	)

120 
ñf_gªg_t32
 
	tñf_gªg_t
;

121 
ñf_gªg£t_t32
 
	tñf_gªg£t_t
;

124 #ifde‡
__BIG_ENDIAN__


125 
	#ELF_DATA
 
ELFDATA2MSB


	)

127 
	#ELF_DATA
 
ELFDATA2LSB


	)

131 
	tñf_Âªg_t
;

132 
ñf_Âªg_t
 
	tñf_Âªg£t_t
[
ELF_NFPREG
];

153 
__ve˘‹128
 
	tñf_vºeg_t
;

154 
ñf_vºeg_t
 
	tñf_vºeg£t_t
[
ELF_NVRREG
];

155 #ifde‡
__powîpc64__


156 
ñf_vºeg_t
 
	tñf_vºeg£t_t32
[
ELF_NVRREG32
];

157 
ñf_Âªg_t
 
	tñf_v§ªghÆf_t32
[
ELF_NVSRHALFREG
];

171 
	#ARCH_DLINFO
 \

174 
	`NEW_AUX_ENT
(
AT_IGNOREPPC
, AT_IGNOREPPC); \

175 
	`NEW_AUX_ENT
(
AT_IGNOREPPC
, AT_IGNOREPPC); \

177 
	`NEW_AUX_ENT
(
AT_DCACHEBSIZE
, 
dˇche_bsize
); \

178 
	`NEW_AUX_ENT
(
AT_ICACHEBSIZE
, 
iˇche_bsize
); \

179 
	`NEW_AUX_ENT
(
AT_UCACHEBSIZE
, 
uˇche_bsize
); \

180 
	`VDSO_AUX_ENT
(
AT_SYSINFO_EHDR
, 
cuºít
->
mm
->
c⁄ãxt
.
vdso_ba£
); \

181 } 0)

	)

184 
	#R_PPC64_NONE
 
R_PPC_NONE


	)

185 
	#R_PPC64_ADDR32
 
R_PPC_ADDR32


	)

186 
	#R_PPC64_ADDR24
 
R_PPC_ADDR24


	)

187 
	#R_PPC64_ADDR16
 
R_PPC_ADDR16


	)

188 
	#R_PPC64_ADDR16_LO
 
R_PPC_ADDR16_LO


	)

189 
	#R_PPC64_ADDR16_HI
 
R_PPC_ADDR16_HI


	)

190 
	#R_PPC64_ADDR16_HA
 
R_PPC_ADDR16_HA


	)

191 
	#R_PPC64_ADDR14
 
R_PPC_ADDR14


	)

192 
	#R_PPC64_ADDR14_BRTAKEN
 
R_PPC_ADDR14_BRTAKEN


	)

193 
	#R_PPC64_ADDR14_BRNTAKEN
 
R_PPC_ADDR14_BRNTAKEN


	)

194 
	#R_PPC64_REL24
 
R_PPC_REL24


	)

195 
	#R_PPC64_REL14
 
R_PPC_REL14


	)

196 
	#R_PPC64_REL14_BRTAKEN
 
R_PPC_REL14_BRTAKEN


	)

197 
	#R_PPC64_REL14_BRNTAKEN
 
R_PPC_REL14_BRNTAKEN


	)

198 
	#R_PPC64_GOT16
 
R_PPC_GOT16


	)

199 
	#R_PPC64_GOT16_LO
 
R_PPC_GOT16_LO


	)

200 
	#R_PPC64_GOT16_HI
 
R_PPC_GOT16_HI


	)

201 
	#R_PPC64_GOT16_HA
 
R_PPC_GOT16_HA


	)

203 
	#R_PPC64_COPY
 
R_PPC_COPY


	)

204 
	#R_PPC64_GLOB_DAT
 
R_PPC_GLOB_DAT


	)

205 
	#R_PPC64_JMP_SLOT
 
R_PPC_JMP_SLOT


	)

206 
	#R_PPC64_RELATIVE
 
R_PPC_RELATIVE


	)

208 
	#R_PPC64_UADDR32
 
R_PPC_UADDR32


	)

209 
	#R_PPC64_UADDR16
 
R_PPC_UADDR16


	)

210 
	#R_PPC64_REL32
 
R_PPC_REL32


	)

211 
	#R_PPC64_PLT32
 
R_PPC_PLT32


	)

212 
	#R_PPC64_PLTREL32
 
R_PPC_PLTREL32


	)

213 
	#R_PPC64_PLT16_LO
 
R_PPC_PLT16_LO


	)

214 
	#R_PPC64_PLT16_HI
 
R_PPC_PLT16_HI


	)

215 
	#R_PPC64_PLT16_HA
 
R_PPC_PLT16_HA


	)

217 
	#R_PPC64_SECTOFF
 
R_PPC_SECTOFF


	)

218 
	#R_PPC64_SECTOFF_LO
 
R_PPC_SECTOFF_LO


	)

219 
	#R_PPC64_SECTOFF_HI
 
R_PPC_SECTOFF_HI


	)

220 
	#R_PPC64_SECTOFF_HA
 
R_PPC_SECTOFF_HA


	)

221 
	#R_PPC64_ADDR30
 37

	)

222 
	#R_PPC64_ADDR64
 38

	)

223 
	#R_PPC64_ADDR16_HIGHER
 39

	)

224 
	#R_PPC64_ADDR16_HIGHERA
 40

	)

225 
	#R_PPC64_ADDR16_HIGHEST
 41

	)

226 
	#R_PPC64_ADDR16_HIGHESTA
 42

	)

227 
	#R_PPC64_UADDR64
 43

	)

228 
	#R_PPC64_REL64
 44

	)

229 
	#R_PPC64_PLT64
 45

	)

230 
	#R_PPC64_PLTREL64
 46

	)

231 
	#R_PPC64_TOC16
 47

	)

232 
	#R_PPC64_TOC16_LO
 48

	)

233 
	#R_PPC64_TOC16_HI
 49

	)

234 
	#R_PPC64_TOC16_HA
 50

	)

235 
	#R_PPC64_TOC
 51

	)

236 
	#R_PPC64_PLTGOT16
 52

	)

237 
	#R_PPC64_PLTGOT16_LO
 53

	)

238 
	#R_PPC64_PLTGOT16_HI
 54

	)

239 
	#R_PPC64_PLTGOT16_HA
 55

	)

241 
	#R_PPC64_ADDR16_DS
 56

	)

242 
	#R_PPC64_ADDR16_LO_DS
 57

	)

243 
	#R_PPC64_GOT16_DS
 58

	)

244 
	#R_PPC64_GOT16_LO_DS
 59

	)

245 
	#R_PPC64_PLT16_LO_DS
 60

	)

246 
	#R_PPC64_SECTOFF_DS
 61

	)

247 
	#R_PPC64_SECTOFF_LO_DS
 62

	)

248 
	#R_PPC64_TOC16_DS
 63

	)

249 
	#R_PPC64_TOC16_LO_DS
 64

	)

250 
	#R_PPC64_PLTGOT16_DS
 65

	)

251 
	#R_PPC64_PLTGOT16_LO_DS
 66

	)

254 
	#R_PPC64_TLS
 67

	)

255 
	#R_PPC64_DTPMOD64
 68

	)

256 
	#R_PPC64_TPREL16
 69

	)

257 
	#R_PPC64_TPREL16_LO
 70

	)

258 
	#R_PPC64_TPREL16_HI
 71

	)

259 
	#R_PPC64_TPREL16_HA
 72

	)

260 
	#R_PPC64_TPREL64
 73

	)

261 
	#R_PPC64_DTPREL16
 74

	)

262 
	#R_PPC64_DTPREL16_LO
 75

	)

263 
	#R_PPC64_DTPREL16_HI
 76

	)

264 
	#R_PPC64_DTPREL16_HA
 77

	)

265 
	#R_PPC64_DTPREL64
 78

	)

266 
	#R_PPC64_GOT_TLSGD16
 79

	)

267 
	#R_PPC64_GOT_TLSGD16_LO
 80

	)

268 
	#R_PPC64_GOT_TLSGD16_HI
 81

	)

269 
	#R_PPC64_GOT_TLSGD16_HA
 82

	)

270 
	#R_PPC64_GOT_TLSLD16
 83

	)

271 
	#R_PPC64_GOT_TLSLD16_LO
 84

	)

272 
	#R_PPC64_GOT_TLSLD16_HI
 85

	)

273 
	#R_PPC64_GOT_TLSLD16_HA
 86

	)

274 
	#R_PPC64_GOT_TPREL16_DS
 87

	)

275 
	#R_PPC64_GOT_TPREL16_LO_DS
 88

	)

276 
	#R_PPC64_GOT_TPREL16_HI
 89

	)

277 
	#R_PPC64_GOT_TPREL16_HA
 90

	)

278 
	#R_PPC64_GOT_DTPREL16_DS
 91

	)

279 
	#R_PPC64_GOT_DTPREL16_LO_DS
 92

	)

280 
	#R_PPC64_GOT_DTPREL16_HI
 93

	)

281 
	#R_PPC64_GOT_DTPREL16_HA
 94

	)

282 
	#R_PPC64_TPREL16_DS
 95

	)

283 
	#R_PPC64_TPREL16_LO_DS
 96

	)

284 
	#R_PPC64_TPREL16_HIGHER
 97

	)

285 
	#R_PPC64_TPREL16_HIGHERA
 98

	)

286 
	#R_PPC64_TPREL16_HIGHEST
 99

	)

287 
	#R_PPC64_TPREL16_HIGHESTA
 100

	)

288 
	#R_PPC64_DTPREL16_DS
 101

	)

289 
	#R_PPC64_DTPREL16_LO_DS
 102

	)

290 
	#R_PPC64_DTPREL16_HIGHER
 103

	)

291 
	#R_PPC64_DTPREL16_HIGHERA
 104

	)

292 
	#R_PPC64_DTPREL16_HIGHEST
 105

	)

293 
	#R_PPC64_DTPREL16_HIGHESTA
 106

	)

294 
	#R_PPC64_TLSGD
 107

	)

295 
	#R_PPC64_TLSLD
 108

	)

296 
	#R_PPC64_TOCSAVE
 109

	)

298 
	#R_PPC64_REL16
 249

	)

299 
	#R_PPC64_REL16_LO
 250

	)

300 
	#R_PPC64_REL16_HI
 251

	)

301 
	#R_PPC64_REL16_HA
 252

	)

304 
	#R_PPC64_NUM
 253

	)

307 
	sµc64_›d_íåy


309 
	mfunˇddr
;

310 
	mr2
;

	@/usr/include/asm/ioctl.h

1 #i‚de‡
_ASM_POWERPC_IOCTL_H


2 
	#_ASM_POWERPC_IOCTL_H


	)

4 
	#_IOC_SIZEBITS
 13

	)

5 
	#_IOC_DIRBITS
 3

	)

7 
	#_IOC_NONE
 1U

	)

8 
	#_IOC_READ
 2U

	)

9 
	#_IOC_WRITE
 4U

	)

11 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/ptrace.h

23 #i‚de‡
_ASM_POWERPC_PTRACE_H


24 
	#_ASM_POWERPC_PTRACE_H


	)

27 
	~<löux/ty≥s.h
>

29 #i‚de‡
__ASSEMBLY__


31 
	s±_ªgs
 {

32 
	mg¥
[32];

33 
	mnù
;

34 
	mm§
;

35 
	m‹ig_g¥3
;

36 
	m˘r
;

37 
	mlök
;

38 
	mxî
;

39 
	mc¸
;

40 #ifde‡
__powîpc64__


41 
	mso·e
;

43 
	mmq
;

46 
	må≠
;

49 
	md¨
;

50 
	mdsi§
;

51 
	mªsu…
;

62 
	#PT_R0
 0

	)

63 
	#PT_R1
 1

	)

64 
	#PT_R2
 2

	)

65 
	#PT_R3
 3

	)

66 
	#PT_R4
 4

	)

67 
	#PT_R5
 5

	)

68 
	#PT_R6
 6

	)

69 
	#PT_R7
 7

	)

70 
	#PT_R8
 8

	)

71 
	#PT_R9
 9

	)

72 
	#PT_R10
 10

	)

73 
	#PT_R11
 11

	)

74 
	#PT_R12
 12

	)

75 
	#PT_R13
 13

	)

76 
	#PT_R14
 14

	)

77 
	#PT_R15
 15

	)

78 
	#PT_R16
 16

	)

79 
	#PT_R17
 17

	)

80 
	#PT_R18
 18

	)

81 
	#PT_R19
 19

	)

82 
	#PT_R20
 20

	)

83 
	#PT_R21
 21

	)

84 
	#PT_R22
 22

	)

85 
	#PT_R23
 23

	)

86 
	#PT_R24
 24

	)

87 
	#PT_R25
 25

	)

88 
	#PT_R26
 26

	)

89 
	#PT_R27
 27

	)

90 
	#PT_R28
 28

	)

91 
	#PT_R29
 29

	)

92 
	#PT_R30
 30

	)

93 
	#PT_R31
 31

	)

95 
	#PT_NIP
 32

	)

96 
	#PT_MSR
 33

	)

97 
	#PT_ORIG_R3
 34

	)

98 
	#PT_CTR
 35

	)

99 
	#PT_LNK
 36

	)

100 
	#PT_XER
 37

	)

101 
	#PT_CCR
 38

	)

102 #i‚de‡
__powîpc64__


103 
	#PT_MQ
 39

	)

105 
	#PT_SOFTE
 39

	)

107 
	#PT_TRAP
 40

	)

108 
	#PT_DAR
 41

	)

109 
	#PT_DSISR
 42

	)

110 
	#PT_RESULT
 43

	)

111 
	#PT_DSCR
 44

	)

112 
	#PT_REGS_COUNT
 44

	)

114 
	#PT_FPR0
 48

	)

116 #i‚de‡
__powîpc64__


118 
	#PT_FPR31
 (
PT_FPR0
 + 2*31)

	)

119 
	#PT_FPSCR
 (
PT_FPR0
 + 2*32 + 1)

	)

123 
	#PT_FPSCR
 (
PT_FPR0
 + 32Ë

	)

126 
	#PT_VR0
 82

	)

127 
	#PT_VSCR
 (
PT_VR0
 + 32*2 + 1)

	)

128 
	#PT_VRSAVE
 (
PT_VR0
 + 33*2)

	)

134 
	#PT_VSR0
 150

	)

135 
	#PT_VSR31
 (
PT_VSR0
 + 2*31)

	)

150 
	#PTRACE_GETVRREGS
 0x12

	)

151 
	#PTRACE_SETVRREGS
 0x13

	)

155 
	#PTRACE_GETEVRREGS
 0x14

	)

156 
	#PTRACE_SETEVRREGS
 0x15

	)

159 
	#PTRACE_GETVSRREGS
 0x1b

	)

160 
	#PTRACE_SETVSRREGS
 0x1c

	)

166 
	#PTRACE_GET_DEBUGREG
 0x19

	)

167 
	#PTRACE_SET_DEBUGREG
 0x1a

	)

172 
	#PTRACE_GETREGS
 0xc

	)

173 
	#PTRACE_SETREGS
 0xd

	)

174 
	#PTRACE_GETFPREGS
 0xe

	)

175 
	#PTRACE_SETFPREGS
 0xf

	)

176 
	#PTRACE_GETREGS64
 0x16

	)

177 
	#PTRACE_SETREGS64
 0x17

	)

180 
	#PPC_PTRACE_PEEKTEXT_3264
 0x95

	)

181 
	#PPC_PTRACE_PEEKDATA_3264
 0x94

	)

182 
	#PPC_PTRACE_POKETEXT_3264
 0x93

	)

183 
	#PPC_PTRACE_POKEDATA_3264
 0x92

	)

184 
	#PPC_PTRACE_PEEKUSR_3264
 0x91

	)

185 
	#PPC_PTRACE_POKEUSR_3264
 0x90

	)

187 
	#PTRACE_SINGLEBLOCK
 0x100

	)

189 
	#PPC_PTRACE_GETHWDBGINFO
 0x89

	)

190 
	#PPC_PTRACE_SETHWDEBUG
 0x88

	)

191 
	#PPC_PTRACE_DELHWDEBUG
 0x87

	)

193 #i‚de‡
__ASSEMBLY__


195 
	sµc_debug_öfo
 {

196 
__u32
 
	mvîsi⁄
;

197 
__u32
 
	mnum_ö°ru˘i⁄_bps
;

198 
__u32
 
	mnum_d©a_bps
;

199 
__u32
 
	mnum_c⁄dôi⁄_ªgs
;

200 
__u32
 
	md©a_bp_Æignmít
;

201 
__u32
 
	msizeof_c⁄dôi⁄
;

202 
__u64
 
	m„©uªs
;

210 
	#PPC_DEBUG_FEATURE_INSN_BP_RANGE
 0x0000000000000001

	)

211 
	#PPC_DEBUG_FEATURE_INSN_BP_MASK
 0x0000000000000002

	)

212 
	#PPC_DEBUG_FEATURE_DATA_BP_RANGE
 0x0000000000000004

	)

213 
	#PPC_DEBUG_FEATURE_DATA_BP_MASK
 0x0000000000000008

	)

214 
	#PPC_DEBUG_FEATURE_DATA_BP_DAWR
 0x0000000000000010

	)

216 #i‚de‡
__ASSEMBLY__


218 
	sµc_hw_bªakpoöt
 {

219 
__u32
 
	mvîsi⁄
;

220 
__u32
 
	måiggî_ty≥
;

221 
__u32
 
	maddr_mode
;

222 
__u32
 
	mc⁄dôi⁄_mode
;

223 
__u64
 
	maddr
;

224 
__u64
 
	maddr2
;

225 
__u64
 
	mc⁄dôi⁄_vÆue
;

233 
	#PPC_BREAKPOINT_TRIGGER_EXECUTE
 0x00000001

	)

234 
	#PPC_BREAKPOINT_TRIGGER_READ
 0x00000002

	)

235 
	#PPC_BREAKPOINT_TRIGGER_WRITE
 0x00000004

	)

236 
	#PPC_BREAKPOINT_TRIGGER_RW
 \

237 (
PPC_BREAKPOINT_TRIGGER_READ
 | 
PPC_BREAKPOINT_TRIGGER_WRITE
)

	)

242 
	#PPC_BREAKPOINT_MODE_EXACT
 0x00000000

	)

243 
	#PPC_BREAKPOINT_MODE_RANGE_INCLUSIVE
 0x00000001

	)

244 
	#PPC_BREAKPOINT_MODE_RANGE_EXCLUSIVE
 0x00000002

	)

245 
	#PPC_BREAKPOINT_MODE_MASK
 0x00000003

	)

250 
	#PPC_BREAKPOINT_CONDITION_MODE
 0x00000003

	)

251 
	#PPC_BREAKPOINT_CONDITION_NONE
 0x00000000

	)

252 
	#PPC_BREAKPOINT_CONDITION_AND
 0x00000001

	)

253 
	#PPC_BREAKPOINT_CONDITION_EXACT
 
PPC_BREAKPOINT_CONDITION_AND


	)

254 
	#PPC_BREAKPOINT_CONDITION_OR
 0x00000002

	)

255 
	#PPC_BREAKPOINT_CONDITION_AND_OR
 0x00000003

	)

256 
	#PPC_BREAKPOINT_CONDITION_BE_ALL
 0x00ff0000

	)

257 
	#PPC_BREAKPOINT_CONDITION_BE_SHIFT
 16

	)

258 
	#PPC_BREAKPOINT_CONDITION_BE
(
n
) \

259 (1<<((
n
)+
PPC_BREAKPOINT_CONDITION_BE_SHIFT
))

	)

	@/usr/include/bits/termios.h

18 #i‚de‡
_TERMIOS_H


22 
	tcc_t
;

23 
	t•ìd_t
;

24 
	ttcÊag_t
;

32 
	#NCCS
 32

	)

33 
	sãrmios
 {

34 
tcÊag_t
 
	mc_iÊag
;

35 
tcÊag_t
 
	mc_oÊag
;

36 
tcÊag_t
 
	mc_cÊag
;

37 
tcÊag_t
 
	mc_lÊag
;

38 
cc_t
 
	mc_löe
;

39 
cc_t
 
	mc_cc
[
NCCS
];

40 
•ìd_t
 
	mc_i•ìd
;

41 
•ìd_t
 
	mc_o•ìd
;

42 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

43 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

47 
	#VINTR
 0

	)

48 
	#VQUIT
 1

	)

49 
	#VERASE
 2

	)

50 
	#VKILL
 3

	)

51 
	#VEOF
 4

	)

52 
	#VMIN
 5

	)

53 
	#VEOL
 6

	)

54 
	#VTIME
 7

	)

55 
	#VEOL2
 8

	)

56 
	#VSWTC
 9

	)

58 
	#VWERASE
 10

	)

59 
	#VREPRINT
 11

	)

60 
	#VSUSP
 12

	)

61 
	#VSTART
 13

	)

62 
	#VSTOP
 14

	)

63 
	#VLNEXT
 15

	)

64 
	#VDISCARD
 16

	)

67 
	#IGNBRK
 0000001

	)

68 
	#BRKINT
 0000002

	)

69 
	#IGNPAR
 0000004

	)

70 
	#PARMRK
 0000010

	)

71 
	#INPCK
 0000020

	)

72 
	#ISTRIP
 0000040

	)

73 
	#INLCR
 0000100

	)

74 
	#IGNCR
 0000200

	)

75 
	#ICRNL
 0000400

	)

76 
	#IXON
 0001000

	)

77 
	#IXOFF
 0002000

	)

78 
	#IXANY
 0004000

	)

79 
	#IUCLC
 0010000

	)

80 
	#IMAXBEL
 0020000

	)

81 
	#IUTF8
 0040000

	)

84 
	#OPOST
 0000001

	)

85 
	#ONLCR
 0000002

	)

86 
	#OLCUC
 0000004

	)

88 
	#OCRNL
 0000010

	)

89 
	#ONOCR
 0000020

	)

90 
	#ONLRET
 0000040

	)

92 
	#OFILL
 00000100

	)

93 
	#OFDEL
 00000200

	)

94 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


95 
	#NLDLY
 00001400

	)

96 
	#NL0
 00000000

	)

97 
	#NL1
 00000400

	)

98 
	#NL2
 00001000

	)

99 
	#NL3
 00001400

	)

100 
	#TABDLY
 00006000

	)

101 
	#TAB0
 00000000

	)

102 
	#TAB1
 00002000

	)

103 
	#TAB2
 00004000

	)

104 
	#TAB3
 00006000

	)

105 
	#CRDLY
 00030000

	)

106 
	#CR0
 00000000

	)

107 
	#CR1
 00010000

	)

108 
	#CR2
 00020000

	)

109 
	#CR3
 00030000

	)

110 
	#FFDLY
 00040000

	)

111 
	#FF0
 00000000

	)

112 
	#FF1
 00040000

	)

113 
	#BSDLY
 00100000

	)

114 
	#BS0
 00000000

	)

115 
	#BS1
 00100000

	)

117 
	#VTDLY
 00200000

	)

118 
	#VT0
 00000000

	)

119 
	#VT1
 00200000

	)

121 #ifde‡
__USE_MISC


122 
	#XTABS
 00006000

	)

126 #ifde‡
__USE_MISC


127 
	#CBAUD
 0000377

	)

129 
	#B0
 0000000

	)

130 
	#B50
 0000001

	)

131 
	#B75
 0000002

	)

132 
	#B110
 0000003

	)

133 
	#B134
 0000004

	)

134 
	#B150
 0000005

	)

135 
	#B200
 0000006

	)

136 
	#B300
 0000007

	)

137 
	#B600
 0000010

	)

138 
	#B1200
 0000011

	)

139 
	#B1800
 0000012

	)

140 
	#B2400
 0000013

	)

141 
	#B4800
 0000014

	)

142 
	#B9600
 0000015

	)

143 
	#B19200
 0000016

	)

144 
	#B38400
 0000017

	)

145 #ifde‡
__USE_MISC


146 
	#EXTA
 
B19200


	)

147 
	#EXTB
 
B38400


	)

148 
	#CBAUDEX
 0000020

	)

150 
	#B57600
 00020

	)

151 
	#B115200
 00021

	)

152 
	#B230400
 00022

	)

153 
	#B460800
 00023

	)

154 
	#B500000
 00024

	)

155 
	#B576000
 00025

	)

156 
	#B921600
 00026

	)

157 
	#B1000000
 00027

	)

158 
	#B1152000
 00030

	)

159 
	#B1500000
 00031

	)

160 
	#B2000000
 00032

	)

161 
	#B2500000
 00033

	)

162 
	#B3000000
 00034

	)

163 
	#B3500000
 00035

	)

164 
	#B4000000
 00036

	)

165 
	#__MAX_BAUD
 
B4000000


	)

167 
	#CSIZE
 00001400

	)

168 
	#CS5
 00000000

	)

169 
	#CS6
 00000400

	)

170 
	#CS7
 00001000

	)

171 
	#CS8
 00001400

	)

173 
	#CSTOPB
 00002000

	)

174 
	#CREAD
 00004000

	)

175 
	#PARENB
 00010000

	)

176 
	#PARODD
 00020000

	)

177 
	#HUPCL
 00040000

	)

179 
	#CLOCAL
 00100000

	)

180 #ifde‡
__USE_MISC


181 
	#CMSPAR
 010000000000

	)

182 
	#CRTSCTS
 020000000000

	)

186 
	#ISIG
 0x00000080

	)

187 
	#ICANON
 0x00000100

	)

188 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


189 
	#XCASE
 0x00004000

	)

191 
	#ECHO
 0x00000008

	)

192 
	#ECHOE
 0x00000002

	)

193 
	#ECHOK
 0x00000004

	)

194 
	#ECHONL
 0x00000010

	)

195 
	#NOFLSH
 0x80000000

	)

196 
	#TOSTOP
 0x00400000

	)

197 #ifde‡
__USE_MISC


198 
	#ECHOCTL
 0x00000040

	)

199 
	#ECHOPRT
 0x00000020

	)

200 
	#ECHOKE
 0x00000001

	)

201 
	#FLUSHO
 0x00800000

	)

202 
	#PENDIN
 0x20000000

	)

204 
	#IEXTEN
 0x00000400

	)

205 #ifde‡
__USE_BSD


206 
	#EXTPROC
 0x10000000

	)

210 
	#TCOOFF
 0

	)

211 
	#TCOON
 1

	)

212 
	#TCIOFF
 2

	)

213 
	#TCION
 3

	)

216 
	#TCIFLUSH
 0

	)

217 
	#TCOFLUSH
 1

	)

218 
	#TCIOFLUSH
 2

	)

221 
	#TCSANOW
 0

	)

222 
	#TCSADRAIN
 1

	)

223 
	#TCSAFLUSH
 2

	)

225 
	ssgâyb
 {

226 
	msg_i•ìd
;

227 
	msg_o•ìd
;

228 
	msg_îa£
;

229 
	msg_kûl
;

230 
	msg_Êags
;

233 
	stch¨s
 {

234 
	mt_öåc
;

235 
	mt_quôc
;

236 
	mt_°¨tc
;

237 
	mt_°›c
;

238 
	mt_eofc
;

239 
	mt_brkc
;

242 
	s…ch¨s
 {

243 
	mt_su•c
;

244 
	mt_dsu•c
;

245 
	mt_Ω∫tc
;

246 
	mt_Êushc
;

247 
	mt_wîasc
;

248 
	mt_ extc
;

252 
	#TIOCPKT_DATA
 0

	)

253 
	#TIOCPKT_FLUSHREAD
 1

	)

254 
	#TIOCPKT_FLUSHWRITE
 2

	)

255 
	#TIOCPKT_STOP
 4

	)

256 
	#TIOCPKT_START
 8

	)

257 
	#TIOCPKT_NOSTOP
 16

	)

258 
	#TIOCPKT_DOSTOP
 32

	)

260 
	swösize
 {

261 
	mws_row
;

262 
	mws_cﬁ
;

263 
	mws_xpixñ
;

264 
	mws_ypixñ
;

267 
	#NCC
 10

	)

268 
	sãrmio
 {

269 
	mc_iÊag
;

270 
	mc_oÊag
;

271 
	mc_cÊag
;

272 
	mc_lÊag
;

273 
	mc_löe
;

274 
	mc_cc
[
NCC
];

278 
	#_VINTR
 0

	)

279 
	#_VQUIT
 1

	)

280 
	#_VERASE
 2

	)

281 
	#_VKILL
 3

	)

282 
	#_VEOF
 4

	)

283 
	#_VMIN
 5

	)

284 
	#_VEOL
 6

	)

285 
	#_VTIME
 7

	)

286 
	#_VEOL2
 8

	)

287 
	#_VSWTC
 9

	)

290 
	#TIOCM_LE
 0x001

	)

291 
	#TIOCM_DTR
 0x002

	)

292 
	#TIOCM_RTS
 0x004

	)

293 
	#TIOCM_ST
 0x008

	)

294 
	#TIOCM_SR
 0x010

	)

295 
	#TIOCM_CTS
 0x020

	)

296 
	#TIOCM_CAR
 0x040

	)

297 
	#TIOCM_RNG
 0x080

	)

298 
	#TIOCM_DSR
 0x100

	)

299 
	#TIOCM_CD
 
TIOCM_CAR


	)

300 
	#TIOCM_RI
 
TIOCM_RNG


	)

303 
	#TIOCSER_TEMT
 0x01

	)

306 
	#N_TTY
 0

	)

307 
	#N_SLIP
 1

	)

308 
	#N_MOUSE
 2

	)

309 
	#N_PPP
 3

	)

310 
	#N_STRIP
 4

	)

311 
	#N_AX25
 5

	)

312 
	#N_X25
 6

	)

313 
	#N_6PACK
 7

	)

314 
	#N_MASC
 8

	)

315 
	#N_R3964
 9

	)

316 
	#N_PROFIBUS_FDL
 10

	)

317 
	#N_IRDA
 11

	)

318 
	#N_SMSBLOCK
 12

	)

319 
	#N_HDLC
 13

	)

320 
	#N_SYNC_PPP
 14

	)

321 
	#N_HCI
 15

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/auxvec.h

1 #i‚de‡
_ASM_POWERPC_AUXVEC_H


2 
	#_ASM_POWERPC_AUXVEC_H


	)

8 
	#AT_DCACHEBSIZE
 19

	)

9 
	#AT_ICACHEBSIZE
 20

	)

10 
	#AT_UCACHEBSIZE
 21

	)

12 
	#AT_IGNOREPPC
 22

	)

17 
	#AT_SYSINFO_EHDR
 33

	)

19 
	#AT_VECTOR_SIZE_ARCH
 6

	)

	@/usr/include/asm/cputable.h

1 #i‚de‡
__ASM_POWERPC_CPUTABLE_H


2 
	#__ASM_POWERPC_CPUTABLE_H


	)

5 
	#PPC_FEATURE_32
 0x80000000

	)

6 
	#PPC_FEATURE_64
 0x40000000

	)

7 
	#PPC_FEATURE_601_INSTR
 0x20000000

	)

8 
	#PPC_FEATURE_HAS_ALTIVEC
 0x10000000

	)

9 
	#PPC_FEATURE_HAS_FPU
 0x08000000

	)

10 
	#PPC_FEATURE_HAS_MMU
 0x04000000

	)

11 
	#PPC_FEATURE_HAS_4xxMAC
 0x02000000

	)

12 
	#PPC_FEATURE_UNIFIED_CACHE
 0x01000000

	)

13 
	#PPC_FEATURE_HAS_SPE
 0x00800000

	)

14 
	#PPC_FEATURE_HAS_EFP_SINGLE
 0x00400000

	)

15 
	#PPC_FEATURE_HAS_EFP_DOUBLE
 0x00200000

	)

16 
	#PPC_FEATURE_NO_TB
 0x00100000

	)

17 
	#PPC_FEATURE_POWER4
 0x00080000

	)

18 
	#PPC_FEATURE_POWER5
 0x00040000

	)

19 
	#PPC_FEATURE_POWER5_PLUS
 0x00020000

	)

20 
	#PPC_FEATURE_CELL
 0x00010000

	)

21 
	#PPC_FEATURE_BOOKE
 0x00008000

	)

22 
	#PPC_FEATURE_SMT
 0x00004000

	)

23 
	#PPC_FEATURE_ICACHE_SNOOP
 0x00002000

	)

24 
	#PPC_FEATURE_ARCH_2_05
 0x00001000

	)

25 
	#PPC_FEATURE_PA6T
 0x00000800

	)

26 
	#PPC_FEATURE_HAS_DFP
 0x00000400

	)

27 
	#PPC_FEATURE_POWER6_EXT
 0x00000200

	)

28 
	#PPC_FEATURE_ARCH_2_06
 0x00000100

	)

29 
	#PPC_FEATURE_HAS_VSX
 0x00000080

	)

31 
	#PPC_FEATURE_PSERIES_PERFMON_COMPAT
 \

32 0x00000040

	)

34 
	#PPC_FEATURE_TRUE_LE
 0x00000002

	)

35 
	#PPC_FEATURE_PPC_LE
 0x00000001

	)

38 
	#PPC_FEATURE2_ARCH_2_07
 0x80000000

	)

39 
	#PPC_FEATURE2_HTM
 0x40000000

	)

40 
	#PPC_FEATURE2_DSCR
 0x20000000

	)

41 
	#PPC_FEATURE2_EBB
 0x10000000

	)

42 
	#PPC_FEATURE2_ISEL
 0x08000000

	)

43 
	#PPC_FEATURE2_TAR
 0x04000000

	)

44 
	#PPC_FEATURE2_VEC_CRYPTO
 0x02000000

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/asm/types.h

13 #i‚de‡
_ASM_POWERPC_TYPES_H


14 
	#_ASM_POWERPC_TYPES_H


	)

24 #i‡!
deföed
(
__SANE_USERSPACE_TYPES__
Ë&& deföed(
__powîpc64__
Ë&& !deföed(
__KERNEL__
)

25 
	~<asm-gíîic/öt-l64.h
>

27 
	~<asm-gíîic/öt-Œ64.h
>

30 #i‚de‡
__ASSEMBLY__


34 
__u32
 
	mu
[4];

35 } 
	t__©åibuã__
((
	tÆig√d
(16))Ë
	t__ve˘‹128
;

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/asm-generic/int-l64.h

8 #i‚de‡
_ASM_GENERIC_INT_L64_H


9 
	#_ASM_GENERIC_INT_L64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 
__sig√d__
 
	t__s64
;

29 
	t__u64
;

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm/posix_types.h

1 #i‚de‡
_ASM_POWERPC_POSIX_TYPES_H


2 
	#_ASM_POWERPC_POSIX_TYPES_H


	)

10 #ifde‡
__powîpc64__


11 
	t__kî√l_ﬁd_dev_t
;

12 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

14 
	t__kî√l_size_t
;

15 
	t__kî√l_ssize_t
;

16 
	t__kî√l_±rdiff_t
;

17 
	#__kî√l_size_t
 
__kî√l_size_t


	)

19 
	t__kî√l_ùc_pid_t
;

20 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

23 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/linux/stddef.h

	@/usr/include/asm-generic/posix_types.h

1 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


2 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

4 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__kî√l_l⁄g_t


14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

18 #i‚de‡
__kî√l_öo_t


19 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

22 #i‚de‡
__kî√l_mode_t


23 
	t__kî√l_mode_t
;

26 #i‚de‡
__kî√l_pid_t


27 
	t__kî√l_pid_t
;

30 #i‚de‡
__kî√l_ùc_pid_t


31 
	t__kî√l_ùc_pid_t
;

34 #i‚de‡
__kî√l_uid_t


35 
	t__kî√l_uid_t
;

36 
	t__kî√l_gid_t
;

39 #i‚de‡
__kî√l_su£c⁄ds_t


40 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

43 #i‚de‡
__kî√l_daddr_t


44 
	t__kî√l_daddr_t
;

47 #i‚de‡
__kî√l_uid32_t


48 
	t__kî√l_uid32_t
;

49 
	t__kî√l_gid32_t
;

52 #i‚de‡
__kî√l_ﬁd_uid_t


53 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

54 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

57 #i‚de‡
__kî√l_ﬁd_dev_t


58 
	t__kî√l_ﬁd_dev_t
;

65 #i‚de‡
__kî√l_size_t


66 #i‡
__BITS_PER_LONG
 != 64

67 
	t__kî√l_size_t
;

68 
	t__kî√l_ssize_t
;

69 
	t__kî√l_±rdiff_t
;

71 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

72 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

77 #i‚de‡
__kî√l_fsid_t


79 
	mvÆ
[2];

80 } 
	t__kî√l_fsid_t
;

86 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

87 
	t__kî√l_loff_t
;

88 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

90 
	t__kî√l_timî_t
;

91 
	t__kî√l_˛ockid_t
;

92 * 
	t__kî√l_ˇddr_t
;

93 
	t__kî√l_uid16_t
;

94 
	t__kî√l_gid16_t
;

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_POWERPC_BITSPERLONG_H


2 
	#__ASM_POWERPC_BITSPERLONG_H


	)

4 #i‡
deföed
(
__powîpc64__
)

5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
324
8173
buffer_ops/buffer_ops.h
buffer_ops/copy.c
buffer_ops/internal.h
buffer_ops/internal_functions.c
buffer_ops/open_close.c
buffer_ops/pack.c
buffer_ops/print.c
buffer_ops/types.h
buffer_ops/unpack.c
class/pmix_hash_table.c
class/pmix_hash_table.h
class/pmix_hotel.c
class/pmix_hotel.h
class/pmix_list.c
class/pmix_list.h
class/pmix_object.c
class/pmix_object.h
class/pmix_pointer_array.c
class/pmix_pointer_array.h
class/pmix_ring_buffer.c
class/pmix_ring_buffer.h
class/pmix_value_array.c
class/pmix_value_array.h
client/pmi1.c
client/pmi2.c
client/pmix_client.c
client/pmix_client_connect.c
client/pmix_client_fence.c
client/pmix_client_get.c
client/pmix_client_ops.h
client/pmix_client_pub.c
client/pmix_client_spawn.c
common/pmix_log.c
common/pmix_query.c
common/pmix_strings.c
dstore/pmix_dstore.c
dstore/pmix_dstore.h
dstore/pmix_esh.c
dstore/pmix_esh.h
event/pmix_event.h
event/pmix_event_notification.c
event/pmix_event_registration.c
include/align.h
include/frameworks.h
include/hash_string.h
include/pmix_config.h
include/pmix_config_bottom.h
include/pmix_config_top.h
include/pmix_globals.c
include/pmix_globals.h
include/pmix_socket_errno.h
include/pmix_stdint.h
include/prefetch.h
include/rename.h
include/types.h
mca/base/base.h
mca/base/pmix_mca_base_close.c
mca/base/pmix_mca_base_component_compare.c
mca/base/pmix_mca_base_component_find.c
mca/base/pmix_mca_base_component_repository.c
mca/base/pmix_mca_base_component_repository.h
mca/base/pmix_mca_base_components_close.c
mca/base/pmix_mca_base_components_open.c
mca/base/pmix_mca_base_components_register.c
mca/base/pmix_mca_base_components_select.c
mca/base/pmix_mca_base_framework.c
mca/base/pmix_mca_base_framework.h
mca/base/pmix_mca_base_list.c
mca/base/pmix_mca_base_open.c
mca/base/pmix_mca_base_parse_paramfile.c
mca/base/pmix_mca_base_var.c
mca/base/pmix_mca_base_var.h
mca/base/pmix_mca_base_var_enum.c
mca/base/pmix_mca_base_var_enum.h
mca/base/pmix_mca_base_var_group.c
mca/base/pmix_mca_base_var_group.h
mca/base/pmix_mca_base_vari.h
mca/mca.h
mca/pdl/base/base.h
mca/pdl/base/pdl_base_close.c
mca/pdl/base/pdl_base_fns.c
mca/pdl/base/pdl_base_open.c
mca/pdl/base/pdl_base_select.c
mca/pdl/base/static-components.h
mca/pdl/pdl.h
mca/pdl/pdlopen/pdl_pdlopen.h
mca/pdl/pdlopen/pdl_pdlopen_component.c
mca/pdl/pdlopen/pdl_pdlopen_module.c
mca/pinstalldirs/base/base.h
mca/pinstalldirs/base/pinstalldirs_base_components.c
mca/pinstalldirs/base/pinstalldirs_base_expand.c
mca/pinstalldirs/base/static-components.h
mca/pinstalldirs/config/pinstall_dirs.h
mca/pinstalldirs/config/pmix_pinstalldirs_config.c
mca/pinstalldirs/env/pmix_pinstalldirs_env.c
mca/pinstalldirs/pinstalldirs.h
runtime/pmix_finalize.c
runtime/pmix_init.c
runtime/pmix_params.c
runtime/pmix_progress_threads.c
runtime/pmix_progress_threads.h
runtime/pmix_rte.h
sec/pmix_munge.c
sec/pmix_munge.h
sec/pmix_native.c
sec/pmix_native.h
sec/pmix_sasl.c
sec/pmix_sasl.h
sec/pmix_sec.c
sec/pmix_sec.h
server/pmix_server.c
server/pmix_server_get.c
server/pmix_server_listener.c
server/pmix_server_ops.c
server/pmix_server_ops.h
server/pmix_server_regex.c
sm/pmix_mmap.c
sm/pmix_mmap.h
sm/pmix_sm.c
sm/pmix_sm.h
tool/pmix_tool.c
usock/usock.c
usock/usock.h
usock/usock_sendrecv.c
util/argv.c
util/argv.h
util/basename.c
util/basename.h
util/crc.c
util/crc.h
util/error.c
util/error.h
util/fd.c
util/fd.h
util/getid.c
util/getid.h
util/hash.c
util/hash.h
util/keyval/keyval_lex.c
util/keyval/keyval_lex.h
util/keyval/keyval_lex.l
util/keyval_parse.c
util/keyval_parse.h
util/os_path.c
util/os_path.h
util/output.c
util/output.h
util/path.c
util/path.h
util/pmix_environ.c
util/pmix_environ.h
util/printf.c
util/printf.h
util/show_help.c
util/show_help.h
util/show_help_lex.c
util/show_help_lex.h
util/show_help_lex.l
util/strnlen.h
util/timings.c
util/timings.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/mntent.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/paths.h
/usr/include/pthread.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/file.h
/usr/include/sys/mman.h
/usr/include/sys/mount.h
/usr/include/sys/param.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/statfs.h
/usr/include/sys/statvfs.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/un.h
/usr/include/sys/vfs.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/in.h
/usr/include/bits/locale.h
/usr/include/bits/mman.h
/usr/include/bits/netdb.h
/usr/include/bits/param.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/setjmp.h
/usr/include/bits/siginfo.h
/usr/include/bits/sigset.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/statfs.h
/usr/include/bits/statvfs.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/sys/cdefs.h
/usr/include/sys/ioctl.h
/usr/include/sys/syslog.h
/usr/include/sys/sysmacros.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/sched.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket_type.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syslog-ldbl.h
/usr/include/bits/syslog-path.h
/usr/include/bits/syslog.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/stdc-predef.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/asm/errno.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/asm/sigcontext.h
/usr/include/asm/sockios.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64-v2.h
/usr/include/termios.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/param.h
/usr/include/asm/elf.h
/usr/include/asm/ioctl.h
/usr/include/asm/ptrace.h
/usr/include/bits/termios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/auxvec.h
/usr/include/asm/cputable.h
/usr/include/linux/types.h
/usr/include/asm/types.h
/usr/include/linux/posix_types.h
/usr/include/asm-generic/int-l64.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/posix_types.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
